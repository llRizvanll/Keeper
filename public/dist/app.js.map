{"version":3,"sources":["webpack:///app.js","webpack:///./src/main.ts","webpack:///./src/app/app.module.ts","webpack:///./~/@angular/forms/bundles/forms.umd.js","webpack:///./~/@ngui/datetime-picker/dist/datetime-picker.umd.js","webpack:///./~/angular2-notifications/components.js","webpack:///./~/angular2-notifications/src/simple-notifications.module.ts","webpack:///./~/angular2-notifications/src/notifications.service.ts","webpack:///./~/angular2-notifications/src/icons.ts","webpack:///./~/angular2-notifications/src/simple-notifications.component.ts","webpack:///./~/angular2-notifications/src/notification.component.ts","webpack:///./~/angular2-notifications/src/max.pipe.ts","webpack:///./~/angular2-notifications/src/push-notifications.module.ts","webpack:///./~/angular2-notifications/src/push-notifications.service.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/index.ts","webpack:///./src/app/components/spinner/spinner.ts","webpack:///./src/app/components/bin/bin.component.ts","webpack:///./src/app/services/index.ts","webpack:///./src/app/services/notes_table.ts","webpack:///./src/app/services/notes_service.ts","webpack:///./~/pouchdb/lib/index-browser.js","webpack:///./~/uuid/index.js","webpack:///./~/uuid/v1.js","webpack:///./~/uuid/lib/rng-browser.js","webpack:///./~/uuid/lib/bytesToUuid.js","webpack:///./~/uuid/v4.js","webpack:///./~/lie/lib/browser.js","webpack:///./~/immediate/lib/browser.js","webpack:///./~/argsarray/index.js","webpack:///./~/events/events.js","webpack:///./~/inherits/inherits_browser.js","webpack:///./~/pouchdb/~/debug/src/browser.js","webpack:///./~/pouchdb/~/debug/src/debug.js","webpack:///./~/ms/index.js","webpack:///./~/spark-md5/spark-md5.js","webpack:///./~/vuvuzela/index.js","webpack:///./src/app/services/dragula_service.ts","webpack:///./~/dragula/dragula.js","webpack:///./~/contra/emitter.js","webpack:///./~/atoa/atoa.js","webpack:///./~/contra/debounce.js","webpack:///./~/ticky/ticky-browser.js","webpack:///./~/crossvent/src/crossvent.js","webpack:///./~/custom-event/index.js","webpack:///./~/crossvent/src/eventmap.js","webpack:///./~/dragula/classes.js","webpack:///./~/lodash/lodash.js","webpack:///(webpack)/buildin/module.js","webpack:///./src/app/components/bin/bin.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/about/about.component.ts","webpack:///./src/app/components/about/about.component.html","webpack:///./src/app/components/about/about.component.css","webpack:///./src/app/components/archive/archive.component.ts","webpack:///./src/app/components/archive/archive.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/directives/dragula.ts","webpack:///./src/app/directives/fluid-height.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","platform_browser_dynamic_1","core_1","app_module_1","enableProdMode","platformBrowserDynamic","bootstrapModule","AppModule","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","forms_1","platform_browser_1","datetime_picker_1","angular2_notifications_1","app_routing_1","app_component_1","components_1","dragula_1","fluid_height_1","services_1","NgModule","imports","FormsModule","BrowserModule","AppRoutingModule","NguiDatetimePickerModule","PushNotificationsModule","SimpleNotificationsModule","forRoot","declarations","Spinner","Dragula","AppComponent","BinComponent","HomeComponent","AboutComponent","ArchiveComponent","FluidHeightDirective","providers","DragulaService","NotesTable","NotesTableService","bootstrap","global","factory","_angular_core","rxjs_operator_toPromise","rxjs_Subject","rxjs_Observable","rxjs_observable_fromPromise","isPresent","obj","isBlank","looseIdentical","a","b","isNaN","isJsObject","o","isPrimitive","isEmptyInputValue","value","_convertToPromise","isPromise","toPromise","call","_executeValidators","control","validators","map","_executeAsyncValidators","_mergeErrors","arrayOfErrors","res","reduce","errors","StringMapWrapper","merge","keys","normalizeValidator","validator","validate","normalizeAsyncValidator","unimplemented","Error","_buildValueString","id","slice","_extractId","valueString","split","_buildValueString$1","_extractId$1","controlPath","name","parent","path","concat","setUpControl","dir","_throwError","valueAccessor","Validators","compose","asyncValidator","composeAsync","writeValue","registerOnChange","newValue","viewToModelUpdate","markAsDirty","setValue","emitModelToViewChange","registerOnTouched","markAsTouched","emitModelEvent","setDisabledState","registerOnDisabledChange","isDisabled","_rawValidators","forEach","registerOnValidatorChange","updateValueAndValidity","_rawAsyncValidators","cleanUpControl","_noControlError","_clearChangeFns","setUpFormContainer","message","messageEnd","join","composeValidators","composeAsyncValidators","isPropertyUpdated","changes","viewModel","hasOwnProperty","change","isFirstChange","currentValue","isBuiltInAccessor","BUILTIN_ACCESSORS","some","constructor","selectValueAccessor","valueAccessors","defaultAccessor","builtinAccessor","customAccessor","DefaultValueAccessor","_find","delimiter","Array","FormGroup","controls","FormArray","at","toObservable","fromPromise","coerceToValidator","isArray","coerceToAsyncValidator","_hasInvalidParent","FormGroupName","FormGroupDirective","FormArrayName","AbstractControlDirective","prototype","get","enumerable","configurable","valid","invalid","pending","pristine","dirty","touched","untouched","disabled","enabled","statusChanges","valueChanges","reset","undefined","hasError","errorCode","getError","__extends$1","__extends","__","p","create","ControlContainer","_super","apply","m1","m2","m","_i","_a","_b","_c","equals","k1","k2","ListWrapper","findLast","arr","condition","removeAll","list","items","index","indexOf","splice","remove","el","flatten","flat","item","flatItem","__core_private__","isObservable","NG_VALIDATORS","OpaqueToken","NG_ASYNC_VALIDATORS","required","requiredTrue","minLength","minlength","requiredLength","actualLength","maxLength","maxlength","pattern","nullValidator","regex","regexStr","RegExp","toString","test","requiredPattern","actualValue","presentValidators","filter","promises","Promise","all","then","NG_VALUE_ACCESSOR","CHECKBOX_VALUE_ACCESSOR","provide","useExisting","forwardRef","CheckboxControlValueAccessor","multi","_renderer","_elementRef","onChange","_","onTouched","setElementProperty","nativeElement","fn","type","Directive","args","selector","host","(change)","(blur)","ctorParameters","Renderer","ElementRef","DEFAULT_VALUE_ACCESSOR","normalizedValue","(input)","NUMBER_VALUE_ACCESSOR","NumberValueAccessor","parseFloat","__extends$2","NgControl","_parent","RADIO_VALUE_ACCESSOR","RadioControlValueAccessor","RadioControlRegistry","_accessors","add","accessor","push","select","_this","_isSameGroup","fireUncheck","controlPair","_control","Injectable","_registry","_injector","ngOnInit","_checkName","ngOnDestroy","_state","_fn","formControlName","_throwNameError","Injector","propDecorators","Input","RANGE_VALUE_ACCESSOR","RangeValueAccessor","SELECT_VALUE_ACCESSOR","SelectControlValueAccessor","_optionMap","Map","_idCounter","_getOptionId","_getOptionValue","_registerOption","from","has","NgSelectOption","_element","_select","set","_setElementValue","delete","Optional","Host","ngValue","SELECT_MULTIPLE_VALUE_ACCESSOR","SelectMultipleControlValueAccessor","optionSelectedStateSetter","ids_1","opt","_setSelected","selected","options","selectedOptions","val","_value","NgSelectMultipleOption","AbstractFormGroupDirective","_checkParentType","formDirective","addFormGroup","removeFormGroup","getFormGroup","_validators","_asyncValidators","__extends$3","AbstractControlStatus","cd","_cd","ngControlStatusHost","[class.ng-untouched]","[class.ng-touched]","[class.ng-pristine]","[class.ng-dirty]","[class.ng-valid]","[class.ng-invalid]","[class.ng-pending]","NgControlStatus","Self","NgControlStatusGroup","__extends$5","EventEmitter","isAsync","__isAsync","emit","next","subscribe","generatorOrNext","error","complete","schedulerFn","errorFn","err","completeFn","setTimeout","Subject","__extends$6","VALID","INVALID","PENDING","DISABLED","AbstractControl","_onCollectionChange","_pristine","_touched","_onDisabledChange","_status","_errors","_valueChanges","_statusChanges","setValidators","newValidator","setAsyncValidators","clearValidators","clearAsyncValidators","onlySelf","markAsUntouched","_forEachChild","_updateTouched","markAsPristine","_updatePristine","markAsPending","disable","emitEvent","_updateValue","_updateAncestors","changeFn","enable","setParent","patchValue","_setInitialStatus","_runValidator","_calculateStatus","_runAsyncValidator","_updateTreeValidity","ctrl","_allControlsDisabled","_cancelExistingSubscription","obs","_asyncValidationSubscription","setErrors","unsubscribe","_updateControlsErrors","x","_initObservables","_anyControlsHaveStatus","cb","_anyControls","status","_anyControlsDirty","_anyControlsTouched","_isBoxedValue","formState","_registerOnCollectionChange","FormControl","_onChange","_applyFormState","emitViewToModelChange","_setUpControls","registerControl","addControl","removeControl","setControl","contains","controlName","_checkAllValuesPresent","_throwIfControlMissing","getRawValue","_reduceChildren","acc","_reduceValue","initValue","_registerControl","insert","removeAt","__extends$4","formDirectiveProvider","NgForm","resolvedPromise","resolve","asyncValidators","_submitted","ngSubmit","form","container","_findContainer","getControl","group","updateModel","onSubmit","$event","onReset","resetForm","pop","(submit)","(reset)","outputs","exportAs","Inject","Examples","formGroupName","formArrayName","ngModelGroup","ngModelWithFormGroup","TemplateDrivenErrors","modelParentException","formGroupNameException","missingNameException","modelGroupParentException","__extends$8","modelGroupProvider","NgModelGroup","SkipSelf","__extends$7","formControlBinding","NgModel","resolvedPromise$1","_registered","update","ngOnChanges","_checkForErrors","_setUpControl","_updateDisabled","model","_isStandalone","_setUpStandalone","standalone","disabledValue","Output","ReactiveErrors","controlParentException","ngModelGroupException","missingFormException","groupParentException","arrayParentException","disabledAttrWarning","console","warn","__extends$9","formControlBinding$1","FormControlDirective","_isControlChanged","__extends$11","formDirectiveProvider$1","directives","_checkFormPresent","_updateValidators","_updateDomValue","_updateRegistrations","addFormArray","removeFormArray","getFormArray","newCtrl","_oldForm","sync","async","__extends$12","formGroupNameProvider","formArrayNameProvider","__extends$10","controlNameBinding","FormControlName","_added","__extends$13","REQUIRED_VALIDATOR","RequiredValidator","CHECKBOX_REQUIRED_VALIDATOR","CheckboxRequiredValidator","_required","[attr.required]","MIN_LENGTH_VALIDATOR","MinLengthValidator","_createValidator","_validator","parseInt","[attr.minlength]","MAX_LENGTH_VALIDATOR","MaxLengthValidator","[attr.maxlength]","PATTERN_VALIDATOR","PatternValidator","[attr.pattern]","FormBuilder","controlsConfig","extra","_reduceControls","array","_createControl","controlConfig","VERSION","Version","SHARED_FORM_DIRECTIVES","TEMPLATE_DRIVEN_DIRECTIVES","REACTIVE_DRIVEN_DIRECTIVES","InternalFormsSharedModule","ReactiveFormsModule","root","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_5__","__WEBPACK_EXTERNAL_MODULE_7__","modules","moduleId","installedModules","loaded","datetime_1","NguiDatetime","datetime_picker_component_1","NguiDatetimePickerComponent","datetime_picker_directive_1","NguiDatetimePickerDirective","datetime_picker_module_1","formatDate","format","dateOnly","ret","pad0","number","getFullYear","getMonth","getDate","getHours","getMinutes","moment","parseDate","dateStr","parseFormat","dateFormat","removeTimezone","addDSTOffset","parseFromDefaultFormat","formats","date","toDate","isValid","ISO_8601","Date","getWeekNumber","nDay","getDay","setDate","n1stThursday","valueOf","setMonth","Math","ceil","matches","match","replace","jan","jul","stdTimezoneOffset","max","getTimezoneOffset","isDST","offset","diff","abs","tmp","getMonthData","year","month","firstDayOfMonth","lastDayOfMonth","lastDayOfPreviousMonth","daysInMonth","daysInLastMonth","dayOfWeek","leadingDays","firstDayOfWeek","trailingDays","days","firstDay","firstWeekNumber","numWeeks","weekNumbers","fill","ndx","weekNum","localizedDaysOfWeek","daysOfWeek","monthData","weekends","fullName","months","shortName","locale","time","day","hour","minute","currentTime","weekdays","weekdaysShort","substr","localeData","elementRef","nguiDatetime","cdRef","minuteStep","showWeekNumbers","showTodayShortcut","showAmPm","selected$","closing$","showYearSelector","startYear","endYear","years","selectedDate","_monthData","dt","setHours","setMinutes","setSeconds","setMilliseconds","today","defaultValue","getTime","hours","isWeekend","dayNum","weekday","selectYear","toDateOnly","selectCurrentTime","selectDateTime","isDateDisabled","minutes","updateMonthData","num","dateInTime","disabledDatesInTime","disabledDates","minDate","maxDate","close","selectToday","convertHours","timeSuffix","String","Boolean","Number","ViewChild","Component","template","styles","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","isInteger","isFinite","floor","__param","paramIndex","decorator","resolver","viewContainerRef","closeOnSelect","isDraggable","ngModelChange","valueChanged$","popupClosed$","userModifyingValue","handleKeyDown","event","inputElValueChanged","setInputElDateValue","ngModel","showDatetimePicker","componentRef","resolveComponentFactory","createComponent","nguiDatetimePickerEl","location","setAttribute","addEventListener","clickedDatetimePicker","stopPropagation","hideDatetimePicker","drag_start","document","body","drag_over","drop","component","instance","timeOnly","minHour","maxHour","showCloseButton","showCloseLayer","styleDatetimePicker","dateSelected","tagName","focus","destroy","arg","activeElement","preventDefault","style","window","getComputedStyle","dataTransfer","setData","getPropertyValue","clientX","clientY","getData","left","top","bottom","element","normalizeInput","formDir","sub","updateDatepicker","wrapper","createElement","className","parentElement","insertBefore","nextSibling","appendChild","ngAfterViewInit","inputEl","querySelector","elementIn","containerEl","parentNode","getBoundingClientRect","position","zIndex","transition","visibility","thisElBcr","nguiDatetimePickerElBcr","height","innerHeight","ComponentFactoryResolver","ViewContainerRef","common_1","CommonModule","entryComponents","simple_notifications_module_1","simple_notifications_component_1","SimpleNotificationsComponent","notification_component_1","NotificationComponent","notifications_service_1","NotificationsService","max_pipe_1","MaxPipe","push_notifications_module_1","push_notifications_service_1","PushNotificationsService","ngModule","Subject_1","icons_1","emitter","icons","defaultIcons","notification","to","override","random","substring","click","command","getChangeEmitter","success","title","content","icon","alert","info","bare","html","options_type_1","_service","onCreate","onDestroy","notifications","lastOnBottom","maxStack","preventLastDuplicates","preventDuplicates","timeOut","clickToClose","showProgressBar","pauseOnHover","theClass","rtl","animate","attachChanges","listener","cleanSingle","defaultBehavior","buildEmit","createdOn","toBlock","block","lastNotificationCreated","toCheck","checkHtml","checkStandard","comp","checker","toEmit","destroyedOn","indexOfDelete","doDelete","idx","Options","notification_type_1","notificationService","domSanitizer","zone","progressWidth","stopTime","count","runOutsideAngular","run","start","speed","steps","timer","state","attachOverrides","startTimeOut","safeSvg","bypassSecurityTrustHtml","onEnter","onLeave","setPosition","onClick","$e","clearTimeout","Notification","animations","trigger","opacity","transform","DomSanitizer","_d","NgZone","allowed","received","toCut","Pipe","Observable_1","permission","isSupported","requestPermission","Observable","n","onshow","e","onclick","onerror","onclose","router_1","routes","redirectTo","pathMatch","RouterModule","__export","_notesService","_notificationsService","spinner","displayList","emptyHtmlMsg","notes_table","NOTES_TABLE","notes","toDeleteNote","notificationOptions","localStorage","getItem","subscription","notes_tables$","refreshNotesTables","getNotes","alldoc","rows","isEmpty","deleteNote","toDeleteNoteRow","doc","setDeleteNote","note","noteRow","restoreNote","restore_note","_rev","restore","saveNote","updateArchiveNotesOrder","updateNotesOrder","displayTypeChange","setItem","newOrder","JSON","parse","unshift","_id","stringify","draft","BehaviorSubject_1","PouchDB","NOTES_TABLES","localDB","notesOrder","archiveNotes","archiveNotesOrder","binNotes","_pushNotifications","notes_tables_source","BehaviorSubject","asObservable","reminderTable","audio","Audio","schema","docs","allDocs","include_docs","put","updateNote","getOrder","order","saveOrder","updateReminderTable","row","reminder","reminderTickStart","setInterval","checkForReminder","todayDate","checkForReminderRepeatation","reminderDate","repeatText","repeat","pushNotification","play","_interopDefault","ex","isBinaryObject","object","ArrayBuffer","Blob","cloneArrayBuffer","buff","byteLength","targetArray","Uint8Array","sourceArray","cloneBinaryObject","size","webkitSlice","isPlainObject","proto","getPrototypeOf","Ctor","funcToString","objectCtorString","clone","newObject","len","toISOString","once","fun","called","getArguments","func","self","usedCB","promise","PouchPromise","fulfill","reject","resp","callback","mesg","result","logApiCall","listeners","logArgs","origCallback","responseArgs","adapterFun","_closed","_destroyed","taskqueue","isReady","addTask","failed","mangle","unmangle","Map$1","_store","Set$1","supportsMapAndSet","Symbol","Set","prop","species","pick","identityFunction","formatResultForOpenRevsGet","ok","bulkGet","db","opts","collapseResultsAndFinish","results","perDocResults","checkDone","numDone","numDocs","gotResult","docIndex","nextBatch","allRequests","upTo","min","MAX_NUM_CONCURRENT_REQUESTS","batch","processBatch","docId","j","docIdx","docRequests","requestsById","docOpts","open_revs","request","rev","formatResult","param","requests","ExportedMap","isChromeApp","chrome","storage","local","hasLocalStorage","hasLocal","attachBrowserEvents","onChanged","addListener","db_name","dbName","attachEvent","Changes","events","_listeners","guardedConsole","method","randomNumber","maxTimeout","ratio","range","defaultBackOff","explainError","str","PouchError","reason","createError","CustomPouchError","generateErrorFromResponse","data","UNKNOWN_ERROR","tryFilter","req","msg","BAD_REQUEST","filterChange","hasFilter","query","query_params","filterReturn","attachments","att","_attachments","stub","arrs","invalidIdError","INVALID_ID","RESERVED_ID","MISSING_ID","isRemote","_remote","listenerCount","ee","parseDesignDocFunctionName","s","parts","normalizeDesignDocFunctionName","normalized","parseUri","parser","exec","uri","encoded","decodeURIComponent","qName","qParser","$0","$1","$2","scopeEval","source","scope","values","Function","upsert","diffFun","docRev","newDoc","tryAndPut","updated","uuidV4","v4","toLowerCase","winningRev","winningId","winningPos","winningDeleted","node","toVisit","rev_tree","tree","ids","branches","pos","deleted","traverseRevTree","revs","newCtx","ctx","sortByPos","collectLeaves","leaves","isLeaf","sort","reverse","collectConflicts","win","conflicts","leaf","compactTree","revHash","rootToLeaf","paths","history","sortByPos$1","binarySearch","comparator","mid","low","high","insertSorted","pathToTree","numStemmed","currentLeaf","compareTree","mergeTree","in_tree1","in_tree2","queue","tree1","tree2","merged","doMerge","dontExpand","restree","branch","t1","t2","candidateParents","trees","parentIdx","elements","elementsLen","stem","depth","stemmedRevs","stemmed","newTree","revExists","splitRev","targetPos","targetId","getTrees","isDeleted","isLocalId","latest","historyNode","historyRev","l","tryCatchInChangeListener","lastSeq","Changes$2","cancel","removeAllListeners","removeListener","on","isCancelled","bind","validateChanges","processChange","changeList","_conflicts","compare","right","yankError","cleanDocs","_deleted","atts","compareByIdThenRev","idCompare","aStart","_revisions","bStart","computeHeight","edges","prnt","rev$$1","edge","allDocsKeysParse","skip","limit","descending","doNextCompaction","task","_compactionQueue","catch","last_seq","_compact","nextTick","shift","attachmentNameError","charAt","AbstractPouchDB","TaskQueue$1","parseAdapter","adapter","adapters","PouchDB$5","preferredAdapters","prefix","adapterName","usePrefix","use_prefix","prepareForDestruction","onDestroyed","from_constructor","onClosed","__opts","auto_compaction","prefixedName","backend","_adapter","fail","ready","setUpEventEmitter","Pouch","eventEmitter","destructListeners","_destructionListeners","dbList","debugPouch","debug","logs","logId","getFieldFromDoc","parsedField","compare$1","parseField","fieldName","fields","current","ch","isCombinationalField","field","combinationFields","getKey","getValue","mergeAndedSelectors","selectors","matcher","$eq","fieldMatchers","operator","mergeGtGte","mergeLtLte","mergeNe","mergeEq","$gte","$gt","$lte","$lt","$ne","massageSelector","input","wasAnded","orOrNor","subSelector","pad","padWith","upToLength","padding","targetLength","padLeft","collate","normalizeKey","ai","collationIndex","bi","stringCollate","arrayCollate","objectCollate","Infinity","origKey","toJSON","indexify","numToIndexableString","toIndexableString","objKey","zero","SEP","parseNumber","originalIdx","neg","numAsString","magAsString","MAGNITUDE_DIGITS","magnitude","MIN_MAGNITUDE","stack","metaStack","lastMetaElement","lastElementIndex","parseIndexableString","parsedNum","parsedStr","arrayElement","objElement","ak","bk","expFormat","toExponential","magForComparison","magString","factor","factorStr","toFixed","createFieldSorter","getFieldValuesAsArray","sorting","docFieldValue","aRow","bRow","aFieldValues","bFieldValues","collation","filterInMemoryFields","requestDef","inMemoryFields","rowFilter","fieldSorter","every","matchCominationalSelector","matchSelector","userOperator","userValue","orMatchers","find","matchers","fieldExists","fieldIsNotUndefined","modField","divisor","mod","arrayContainsValue","arrayContainsAllValues","arraySize","regexMatch","re","typeMatch","matchesSelector","rowsMatched","evalFilter","evalView","code","filterName","normalize","view","shouldFilter","changesHandler","doc_ids","viewName","ddoc","mapFun","views","doChanges","MISSING_DOC","filterFun","filters","applyChangesFilterPlugin","_changesFilterPlugin","toObject","parseRevisionInfo","INVALID_REV","makeRevTreeFromRevisions","revisions","revisionIds","parseDoc","newEdits","nRevNum","newRevId","revInfo","uuid","_rev_tree","specialKey","reservedWords","DOC_VALIDATION","dataWords","createBlob","properties","Builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","builder","append","getBlob","binaryStringToArrayBuffer","bin","buf","charCodeAt","binStringToBluffer","binString","b64ToBluffer","b64","thisAtob","arrayBufferToBinaryString","buffer","binary","bytes","fromCharCode","readAsBinaryString","blob","FileReader","FileReaderSync","readAsArrayBuffer","reader","hasBinaryString","onloadend","blobToBinaryString","blobOrBuffer","blobToBase64","base64","thisBtoa","rawToBase64","raw","sliceBlob","end","appendBlob","arrayBuffer","appendString","string","appendBinary","binaryMd5","setImmediateShim","loadNextChunk","done","currentChunk","chunkSize","chunks","inputIsString","MD5_CHUNK_SIZE","Md5","stringMd5","hash","parseBase64","BAD_ARG","preprocessString","blobType","asBinary","content_type","digest","preprocessBlob","md5","preprocessAttachment","preprocessAttachments","docInfos","docv","overallErr","docInfo","processedAttachment","recv","updateDoc","revLimit","prev","writeDoc","previousWinningRev","previouslyDeleted","isRoot","inConflict","REV_CONFLICT","newRev","rev_map","newRevIsDeleted","winningRev$$1","winningRevIsDeleted","delta","rootIsMissing","processDocs","api","fetchedDocs","tx","overallCallback","insertDoc","resultsIdx","checkAllDocsDone","docsDone","docsToDo","new_edits","idsToDocs","currentDoc","docWritten","nextDoc","safeJsonParse","vuvuzela","safeJsonStringify","json","idbError","evt","IDB_ERROR","encodeMetadata","deletedOrLocal","seq","decodeMetadata","storedObject","decodeDoc","_doc_id_rev","lastIndexOf","readBlobData","asBlob","fetchAttachmentsIfNecessary","txn","fetchAttachment","attObj","objectStore","ATTACH_STORE","onsuccess","postProcessAttachments","attNames","$inject_Object_assign","compactRevs","deleteOrphanedAttachments","possiblyOrphanedDigests","countReq","attAndSeqStore","IDBKeyRange","bound","attStore","seqStore","BY_SEQ_STORE","ATTACH_AND_SEQ_STORE","cursor","openCursor","only","digestSeq","primaryKey","continue","openTransactionSafely","idb","stores","mode","transaction","idbBulkDocs","dbOpts","startTransaction","DOC_STORE","LOCAL_STORE","META_STORE","txnResult","onabort","ontimeout","oncomplete","docStore","bySeqStore","attachStore","attachAndSeqStore","metaStore","metaDoc","updateDocCountIfReady","verifyAttachments","preconditionErrored","fetchExistingDocs","onAllDocsProcessed","allDocsProcessed","idbProcessDocs","revs_limit","docCount","docCountDelta","numFetched","readMetadata","changesHandler$$1","notify","_meta","verifyAttachment","MISSING_STUB","finish","digests","filename","attErr","isUpdate","hasAttachments","writeAttachments","finishDoc","afterPutDoc","revsToDelete","metadataToStore","metaDataReq","afterPutMetadata","afterPutDocError","getKeyReq","putReq","insertAttachmentMappings","collectResults","attachmentSaved","revpos","saveAttachment","attsAdded","attsToAdd","newAtt","docInfoError","blobSupport","runBatchedCursor","keyRange","batchSize","onBatch","onGetAll","valuesBatch","keysBatch","pseudoCursor","onGetAllKeys","continuePseudoCursor","newKeyRange","lastKey","upper","upperOpen","lowerBound","getAll","getAllKeys","onCursor","useGetAll","onSuccess","allDocsKeys","createKeyRange","inclusiveEnd","upperBound","idbAllDocs","getMaxUpdateSeq","maxKey","fetchDocAsynchronously","docIdRevIndex","allDocsInner","batchValues","batchValue","batchKeys","onResultsReady","returnVal","total_rows","update_seq","updateSeq","onTxnComplete","keyRangeError","startkey","endkey","inclusive_end","checkBlobSupport","blob$$1","DETECT_BLOB_SUPPORT_STORE","matchedChrome","navigator","userAgent","matchedEdge","countDocs","tryCode","applyNext","running","enqueueTask","action","processMetadataAndWinningDoc","winningDoc","filtered","numResults","returnDocs","onBatchDone","winningDocs","metadatas","fetchWinningDocAndMetadata","onGetMetadata","docIdRev","docIds","docIdsToMetadata","continuous","ExportedSet","since","return_docs","objectStores","IdbPouch","thisCallback","init","createSchema","createObjectStore","keyPath","autoIncrement","createIndex","unique","addDeletedOrLocalIndex","createLocalStoreSchema","migrateLocalStore","localStore","seqCursor","addAttachAndSeqStore","migrateAttsAndSeqs","digestMap","migrateMetadata","decodeMetadataCompat","fetchMetadataSeq","metadataSeq","onGetMetadataSeq","instanceId","_bulkDocs","reqOpts","_get","_getAttachment","attachId","attachment","blobData","_info","doc_count","idb_attachment_format","_allDocs","_changes","_close","cachedDBs","_getRevisionTree","_doCompaction","_getLocal","_putLocal","oldRev","oStore","oldDoc","_removeLocal","_destroy","openReq","openReqList","indexedDB","deleteDatabase","cached","tryStorageOption","open","ADAPTER_VERSION","onupgradeneeded","migration","migrations","oldVersion","currentTarget","completeSetup","storedMetaDoc","storeMetaDocIfReady","instanceKey","onversionchange","blobSupportPromise","version","IDBPouch","decodeUtf8","escape","hexToInt","charCode","parseHexUtf8","parseHexUtf16","parseHexString","encoding","quote","escapeBlob","unescapeBlob","stringifyDoc","unstringifyDoc","qMarks","table","joiner","where","orderBy","compactRevs$1","deleteOrphans","seqs","sql","ATTACH_AND_SEQ_STORE$1","executeSql","digestsToCheck","nonOrphanedDigests","ATTACH_STORE$1","BY_SEQ_STORE$1","websqlError","errorNameMatch","errorName","errorReason","WSQ_ERROR","getSize","isAndroid","websqlBulkDocs","websqlChanges","_name","cnt","sqlArgs","deletedInt","insertId","dataWritten","fetchSql","attachmentErr","revsToCompact","DOC_STORE$1","metadataStr","params","websqlProcessDocs","userDocs","docInfoErrors","openDatabaseWithOpts","websql","description","openDBSafely","openDB$1","cachedResult","cachedDatabases","fetchAttachmentsIfNecessary$1","attOpts","WebSqlPouch$1","dbCreated","runMigration2","DOC_STORE_WINNINGSEQ_INDEX_SQL","BY_SEQ_STORE_DELETED_INDEX_SQL","runMigration3","LOCAL_STORE$1","doNext","runMigration4","updateRows","doc_id_rev","hex","doc_id","BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL","runMigration5","nextPage","SELECT_DOCS","DOC_STORE_AND_BY_SEQ_JOINER","pageSize","addDigestSeq","digestSeqs","digestSeqPairs","pair","attachAndRev","ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL","ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL","runMigration6","runMigration7","checkEncoding","onGetInstanceId","idRequests","idCallback","onGetVersion","dbVersion","meta","META_STORE$1","attach","initSeq","initSeqArgs","ADAPTER_VERSION$1","setupDone","migrated","dbid","tasks","nextMigration","setup","fetchVersion","db_version","getMaxSeq","latest$$1","websqlOpts","POUCH_VERSION","openDBResult","readTransaction","theSeq","theDocCount","websql_encoding","latestRev","missingErr","deletedErr","totalRows","criteria","destinctKeys","bindingStr","fetchChanges","selectStmt","reportChange","maxSeq","escaped","putLocal","rowsAffected","removeLocal","store","canOpenTestDB","openDatabase","isValidWebSQL","hasLS","localStorageKey","openedTestDB","openDB","WebSQLPouch","_opts","WebSqlPouch","wrappedFetch","wrappedPromise","fetch","response","fetchRequest","headers","Headers","fetchOptions","credentials","processData","url","timeout","fetchResponse","statusCode","text","abort","xhRequest","xhr","timedout","abortReq","cleanUp","timeoutReq","onprogress","upload","onreadystatechange","XMLHttpRequest","exception","withCredentials","Accept","responseType","setRequestHeader","readyState","getResponseHeader","responseText","send","testXhr","ajax$1","hasXhr","defaultBody","ajaxCore$1","missing","defaultOptions","cache","ajax","ua","isSafari","isIE","isTrident","isEdge","shouldCacheBust","isBlobUrl","hasArgs","now","pool","promiseFactories","runNext","onError","runNextBatch","thisErr","readAttachmentsAsBlobOrBuffer","encodeDocId","encodeURIComponent","preprocessAttachments$2","hasUrlPrefix","protocol","getHost","user","password","auth","username","genDBUrl","genUrl","pathDel","port","paramsToStr","HttpPouch","ajax$$1","userOpts","reqAjax","ajaxOpts","defaultHeaders","_ajax","ajaxPromise","adapterFun$$1","skipSetup","skip_setup","setupPromise","checkExists","dbUrl","encodeAttachmentId","attachmentId","nAuth","token","unescape","Authorization","uuid$$1","compact","ping","compact_running","interval","doBulkGet","doBulkGetShim","onResult","batchNum","numBatches","MAX_SIMULTANEOUS_REVS","subOpts","supportsBulkGet","supportsBulkGetMap","fetchAttachments","filenames","fetchAllAttachments","docOrDocs","revs_info","docOrId","optsOrRev","getAttachment","removeAttachment","putAttachment","Content-Type","_put","start_key","end_key","paramStr","batch_size","CHANGES_BATCH_SIZE","heartbeat","DEFAULT_HEARTBEAT","requestTimeout","CHANGES_TIMEOUT_BUFFER","leftToFetch","feed","seq_interval","param_name","lastFetchedSeq","aborted","xhrOpts","fetched","raw_results_length","finished","revsDiff","HttpPouch$1","QueryParseError","captureStackTrace","NotFoundError","BuiltInError","promisedCallback","callbackify","fin","finalPromiseFactory","sequentialize","promiseFactory","that","uniq","theSet","mapToKeysArray","createBuiltInError","sum","jLen","jNum","evalFunctionWithEval","log","TaskQueue$2","createViewSignature","reduceFun","createView","sourceDB","temporary","localDocName","cachedViews","viewSignature","_cachedViews","promiseForView","diffFunction","fullViewName","depDbs","depDbName","registerDependentDatabase","lastSeqDoc","parseViewName","isGenOne","emitError","createAbstractMapReduce","mapper","reducer","ddocValidator","tryMap","tryReduce","rereduce","output","sortByKeyThenValue","y","keyCompare","sliceResults","rowToDocId","postprocessAttachments","addHttpParam","paramName","asJson","coerceInteger","integerCandidate","asNumber","coerceOptions","group_level","checkPositiveInteger","checkQueryParseError","startkeyName","endkeyName","optionName","httpQuery","MAX_URL_LENGTH","keysAsString","customQuery","_query","customViewCleanup","_viewCleanup","defaultsTo","getDocsToPersist","docIdsToChangesAndEmits","getMetaDoc","defaultMetaDoc","metaDocId","getKeyValueDocs","processKeyValueDocs","kvDocsRes","kvDocs","oldKeys","indexableKeysToKeyValues","keyValue","newKeys","kvDoc","docData","saveKeyValues","seqDocId","listOfDocsToPersist","docsToPersist","bulkDocs","getQueue","persistentQueues","updateView","updateViewInQueue","mapResults","processNextBatch","currentSeq","CHANGES_BATCH_SIZE$1","createDocIdsToChangesAndEmits","createIndexableKeysToKeyValues","emittedKeyValue","complexKey","reduceView","shouldGroup","groups","lvl","POSITIVE_INFINITY","last","groupKey","reduceTry","queryView","queryViewInQueue","fetchFromView","viewOpts","expectedKeys","parsedKeyAndDocId","onMapResultsReady","finalResults","shouldReduce","allDocsRes","docIdsToDocs","fetchPromises","keyStart","keyEnd","httpViewCleanup","localViewCleanup","docsToViews","designDocName","viewsToStatus","ddocName","viewDBNames","statusIsGood","viewDBName","dbsToDelete","destroyPromises","queryPromised","tempViewQueue","createViewPromise","stale","abstractQuery","abstractViewCleanup","viewCleanup","getBuiltIn","reduceFunString","builtInReduce","_sum","_count","_stats","origMap","builtIn","abstract","isGenOne$1","fileHasChanged","localDoc","remoteDoc","getDocAttachments","getDocAttachmentsFromTargetOrSource","src","doCheckForLocalAttachments","createBulkGetOpts","diffs","missingRevs","missingRev","getDocs","getAllDocs","bulkGetOpts","bulkGetResponse","cancelled","bulkGetInfo","resultDocs","hasConflicts","fetchRevisionOneDocs","getRevisionOneDocs","returnResult","updateCheckpoint","checkpoint","session","returnValue","session_id","replicator","REPLICATOR","CHECKPOINT_VERSION","CHECKPOINT_HISTORY_SIZE","Checkpointer","compareReplicationLogs","srcDoc","tgtDoc","compareReplicationHistory","sourceHistory","targetHistory","S","sourceRest","T","targetRest","LOWEST_SEQ","sourceId","hasSessionId","sessionId","props","rest","isForbiddenError","backOff","retry","back_off_function","backOffSet","current_back_off","STARTING_BACK_OFF","removeBackOffSetter","sortObjectPropertiesByKey","queryParams","generateReplicationId","filterViewName","queryData","md5sum","replicate","initCheckpointer","checkpointer","repId","checkpointOpts","writeSourceCheckpoint","writeTargetCheckpoint","writeDocs","changedDocs","currentBatch","bulkOpts","completeReplication","errorsById","errorsNo","doc_write_failures","docs_written","finishBatch","outResult","writingCheckpoint","writeCheckpoint","getChanges","onCheckpointError","getDiffs","getBatchDocs","got","docs_read","startNextBatch","batches","processPendingBatch","abortReplication","immediate","pendingBatch","changesOpts","live","changesCompleted","replicationCompleted","fatalError","end_time","onChangesComplete","changesPending","onChangesError","abortChanges","batches_limit","_abortChanges","startChanges","getCheckpoint","start_time","_addedListeners","Replication","toPouch","PouchConstructor","replicateWrapper","replicateRet","srcPouch","targetPouch","sync$1","Sync","pullChange","direction","pushChange","pushDenied","pullDenied","pushPaused","pullPaused","pushActive","pullActive","isChange","isDenied","isPaused","isActive","removed","addOneListener","canceled","optsPush","optsPull","pull","out","replication","replicateMethods","other","lie","inherits","mangled","eventFunction","inprogress","notifyLocalWindows","assign","nextSource","nextKey","MISSING_BULK_DOCS","QUERY_PARSE_ERROR","NOT_AN_OBJECT","newPromise","post","transformForceOptionToNewEditsOption","oldRevId","oldRevNum","newRevNum","putDoc","force","createAttachment","prevrevpos","was_delete","addToMissing","revId","processDoc","missingForId","missingObj","compactDocument","maxHeight","revTree","candidates","onComplete","finishOpenRevs","existing","splittedRev","revNo","currentPath","hashIndex","hashFoundAtRevPos","indexOfRev","howMany","_revs_info","TypeError","incompatibleOpt","_type","attachmentError","dependentDb","dependentDbs","depDB","destroyDb","deletedMap","trueName","execute","addToPreferredAdapters","plugin","__defaults","defaults","defaultOpts","PouchAlt","$elemMatch","$allMatch","$exists","$mod","neValue","$in","$nin","$size","$all","$regex","$type","atob","btoa","setImmediate","platform","sumsqr","_sumsqr","mapreduce","updateTarget","updateSource","comparisons","targetDoc","sourceDoc","1","cleanup","_readyCalled","v1","clockseq","_clockseq","msecs","nsecs","_lastNSecs","_lastMSecs","tl","tmh","_nodeId","bytesToUuid","rng","_seedBytes","crypto","msCrypto","getRandomValues","rnds8","rnds","bth","byteToHex","ii","INTERNAL","outcome","safelyResolveThenable","QueueItem","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","handlers","getThen","thenable","tryToUnwrap","tryCatch","iterable","allResolver","resolveFromAll","outValue","resolved","race","REJECTED","FULFILLED","draining","oldQueue","scheduleDrain","Mutation","MutationObserver","WebKitMutationObserver","observer","createTextNode","observe","characterData","MessageChannel","scriptEl","removeChild","documentElement","channel","port1","onmessage","port2","postMessage","argsArray","_events","_maxListeners","isFunction","isNumber","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","handler","context","newListener","warned","trace","g","fired","evlistener","ctor","superCtor","super_","writable","TempCtor","process","useColors","WebkitAppearance","firebug","formatArgs","namespace","humanize","color","lastC","save","namespaces","removeItem","load","ENV","DEBUG","localstorage","colors","formatters","selectColor","createDebug","curr","ms","prevTime","coerce","formatter","logFn","instances","names","skips","h","fmtShort","round","fmtLong","plural","long","md5cycle","md5blk","md5blks","md5blk_array","md51","tail","lo","hi","md51_array","subarray","rhex","hex_chr","toUtf8","utf8Str2ArrayBuffer","returnUInt8Array","arrayBuffer2Utf8Str","concatenateArrayBuffers","first","second","hexToBinaryString","SparkMD5","add32","lsw","msw","clamp","begin","contents","_buff","_length","_hash","_finish","getState","setState","hashBinary","arrayPrefix","objPrefix","numChar","parsedString","lastCh","numConsecutiveSlashes","dragula","cloned","drag","dragend","over","shadow","dropModel","removeModel","bags","drake","bag","models","handleModels","initEvents","setupEvents","setOptions","dragElm","dragIndex","dropIndex","sourceModel","containers","domIndexOf","dropElm","notCopy","targetModel","dropElmModel","child","children","initialContainers","isContainer","op","touchy","grab","release","eventualMovements","startBecauseMouseMoved","movements","crossvent","preventGrabbed","_grabbed","_moveX","_moveY","ignore","whichMouseButton","metaKey","ctrlKey","canStart","isInput","ignoreInputTextSelection","getCoord","elementBehindCursor","elementFromPoint","grabbed","getOffset","_item","_offsetX","_offsetY","classes","_copy","renderMirrorImage","dragging","_mirror","handle","getParent","movable","moves","nextEl","canMove","manualStart","isCopy","cloneNode","_source","_initialSibling","_currentSibling","invalidTarget","ungrab","getElementBehindPoint","dropTarget","findDropTarget","copySortSource","removeOnSpill","isInitialPlacement","revert","reverts","revertOnSpill","initial","removeMirrorImage","rm","_renderTimer","_lastDropTarget","sibling","accepted","droppable","getImmediateChild","reference","getReference","accepts","moved","changed","spillOver","spillOut","rect","width","getRectWidth","getRectHeight","mirrorContainer","outside","horizontal","inside","after","copy","always","never","touch","mouseup","mousedown","mousemove","pointers","microsoft","pointerEnabled","msPointerEnabled","touches","which","buttons","button","getScroll","scrollProp","offsetProp","clientHeight","point","isEditable","contentEditable","manually","nodeType","nextElementSibling","getEventHost","targetTouches","changedTouches","coord","missMap","pageX","pageY","atoa","debounce","thing","_once","off","et","emitterSnapshot","throws","listen","ticky","tick","si","addEventEasy","capturing","addEventHard","wrap","removeEventEasy","removeEventListener","removeEventHard","detachEvent","fabricateEvent","makeClassicEvent","createEvent","initEvent","createEventObject","makeCustomEvent","customEvent","detail","eventmap","dispatchEvent","fireEvent","wrapperFactory","originalEvent","srcElement","cancelBubble","keyCode","hardCache","addEvent","removeEvent","fabricate","useNative","NativeCustomEvent","foo","CustomEvent","initCustomEvent","bubbles","cancelable","eventname","ron","lookupClass","lastIndex","addClass","rmClass","trim","__WEBPACK_AMD_DEFINE_RESULT__","addMapEntry","addSetEntry","thisArg","arrayAggregator","setter","iteratee","accumulator","arrayEach","arrayEachRight","arrayEvery","predicate","arrayFilter","resIndex","arrayIncludes","baseIndexOf","arrayIncludesWith","arrayMap","arrayPush","arrayReduce","initAccum","arrayReduceRight","arraySome","asciiToArray","asciiWords","reAsciiWord","baseFindKey","collection","eachFunc","baseFindIndex","fromIndex","fromRight","strictIndexOf","baseIsNaN","baseIndexOfWith","baseMean","baseSum","NAN","baseProperty","basePropertyOf","baseReduce","baseSortBy","comparer","baseTimes","baseToPairs","baseUnary","baseValues","cacheHas","charsStartIndex","strSymbols","chrSymbols","charsEndIndex","countHolders","placeholder","escapeStringChar","chr","stringEscapes","hasUnicode","reHasUnicode","hasUnicodeWord","reHasUnicodeWord","iteratorToArray","iterator","mapToArray","overArg","replaceHolders","PLACEHOLDER","setToArray","setToPairs","strictLastIndexOf","stringSize","unicodeSize","asciiSize","stringToArray","unicodeToArray","reUnicode","unicodeWords","reUnicodeWord","LARGE_ARRAY_SIZE","CORE_ERROR_TEXT","FUNC_ERROR_TEXT","HASH_UNDEFINED","MAX_MEMOIZE_SIZE","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","WRAP_BIND_FLAG","WRAP_BIND_KEY_FLAG","WRAP_CURRY_BOUND_FLAG","WRAP_CURRY_FLAG","WRAP_CURRY_RIGHT_FLAG","WRAP_PARTIAL_FLAG","WRAP_PARTIAL_RIGHT_FLAG","WRAP_ARY_FLAG","WRAP_REARG_FLAG","WRAP_FLIP_FLAG","DEFAULT_TRUNC_LENGTH","DEFAULT_TRUNC_OMISSION","HOT_COUNT","HOT_SPAN","LAZY_FILTER_FLAG","LAZY_MAP_FLAG","LAZY_WHILE_FLAG","INFINITY","MAX_SAFE_INTEGER","MAX_INTEGER","MAX_ARRAY_LENGTH","MAX_ARRAY_INDEX","HALF_MAX_ARRAY_LENGTH","wrapFlags","argsTag","arrayTag","asyncTag","boolTag","dateTag","domExcTag","errorTag","funcTag","genTag","mapTag","numberTag","nullTag","objectTag","promiseTag","proxyTag","regexpTag","setTag","stringTag","symbolTag","undefinedTag","weakMapTag","weakSetTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","reEmptyStringLeading","reEmptyStringMiddle","reEmptyStringTrailing","reEscapedHtml","reUnescapedHtml","reHasEscapedHtml","reHasUnescapedHtml","reEscape","reEvaluate","reInterpolate","reIsDeepProp","reIsPlainProp","reLeadingDot","rePropName","reRegExpChar","reHasRegExpChar","reTrim","reTrimStart","reTrimEnd","reWrapComment","reWrapDetails","reSplitDetails","reEscapeChar","reEsTemplate","reFlags","reIsBadHex","reIsBinary","reIsHostCtor","reIsOctal","reIsUint","reLatin","reNoMatch","reUnescapedString","rsAstralRange","rsComboMarksRange","reComboHalfMarksRange","rsComboSymbolsRange","rsComboRange","rsDingbatRange","rsLowerRange","rsMathOpRange","rsNonCharRange","rsPunctuationRange","rsSpaceRange","rsUpperRange","rsVarRange","rsBreakRange","rsApos","rsAstral","rsBreak","rsCombo","rsDigits","rsDingbat","rsLower","rsMisc","rsFitz","rsModifier","rsNonAstral","rsRegional","rsSurrPair","rsUpper","rsZWJ","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsOptVar","rsOptJoin","rsOrdLower","rsOrdUpper","rsSeq","rsEmoji","rsSymbol","reApos","reComboMark","contextProps","templateCounter","typedArrayTags","cloneableTags","deburredLetters","À","Á","Â","Ã","Ä","Å","à","á","â","ã","ä","å","Ç","ç","Ð","ð","È","É","Ê","Ë","è","é","ê","ë","Ì","Í","Î","Ï","ì","í","î","ï","Ñ","ñ","Ò","Ó","Ô","Õ","Ö","Ø","ò","ó","ô","õ","ö","ø","Ù","Ú","Û","Ü","ù","ú","û","ü","Ý","ý","ÿ","Æ","æ","Þ","þ","ß","Ā","Ă","Ą","ā","ă","ą","Ć","Ĉ","Ċ","Č","ć","ĉ","ċ","č","Ď","Đ","ď","đ","Ē","Ĕ","Ė","Ę","Ě","ē","ĕ","ė","ę","ě","Ĝ","Ğ","Ġ","Ģ","ĝ","ğ","ġ","ģ","Ĥ","Ħ","ĥ","ħ","Ĩ","Ī","Ĭ","Į","İ","ĩ","ī","ĭ","į","ı","Ĵ","ĵ","Ķ","ķ","ĸ","Ĺ","Ļ","Ľ","Ŀ","Ł","ĺ","ļ","ľ","ŀ","ł","Ń","Ņ","Ň","Ŋ","ń","ņ","ň","ŋ","Ō","Ŏ","Ő","ō","ŏ","ő","Ŕ","Ŗ","Ř","ŕ","ŗ","ř","Ś","Ŝ","Ş","Š","ś","ŝ","ş","š","Ţ","Ť","Ŧ","ţ","ť","ŧ","Ũ","Ū","Ŭ","Ů","Ű","Ų","ũ","ū","ŭ","ů","ű","ų","Ŵ","ŵ","Ŷ","ŷ","Ÿ","Ź","Ż","Ž","ź","ż","ž","Ĳ","ĳ","Œ","œ","ŉ","ſ","htmlEscapes","&","<",">","\"","'","htmlUnescapes","&amp;","&lt;","&gt;","&quot;","&#39;","\\","\n","\r"," "," ","freeParseFloat","freeParseInt","freeGlobal","freeSelf","freeExports","freeModule","moduleExports","freeProcess","nodeUtil","binding","nodeIsArrayBuffer","isArrayBuffer","nodeIsDate","isDate","nodeIsMap","isMap","nodeIsRegExp","isRegExp","nodeIsSet","isSet","nodeIsTypedArray","isTypedArray","deburrLetter","escapeHtmlChar","unescapeHtmlChar","runInContext","lodash","isObjectLike","LazyWrapper","LodashWrapper","wrapperClone","baseLodash","chainAll","__wrapped__","__actions__","__chain__","__index__","__values__","__dir__","__filtered__","__iteratees__","__takeCount__","__views__","lazyClone","copyArray","lazyReverse","lazyValue","isArr","isRight","arrLength","getView","iteratees","iterLength","takeCount","nativeMin","baseWrapperValue","outer","iterIndex","computed","Hash","entries","clear","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","SetCache","setCacheAdd","setCacheHas","Stack","stackClear","stackDelete","stackGet","stackHas","stackSet","pairs","arrayLikeKeys","inherited","isArg","isArguments","isBuff","isBuffer","isType","skipIndexes","isIndex","arraySample","baseRandom","arraySampleSize","shuffleSelf","baseClamp","arrayShuffle","assignMergeValue","eq","baseAssignValue","assignValue","objValue","baseAggregator","baseEach","baseAssign","copyObject","baseAssignIn","keysIn","baseAt","lower","baseClone","bitmask","customizer","isDeep","isFlat","isFull","initCloneArray","tag","getTag","isFunc","cloneBuffer","initCloneObject","copySymbolsIn","copySymbols","initCloneByTag","stacked","keysFunc","getAllKeysIn","subValue","baseConforms","baseConformsTo","baseDelay","wait","baseDifference","includes","isCommon","valuesLength","valuesIndex","baseEvery","baseExtremum","isSymbol","baseFill","toInteger","toLength","baseFilter","baseFlatten","isStrict","isFlattenable","baseForOwn","baseFor","baseForOwnRight","baseForRight","baseFunctions","baseGet","castPath","toKey","baseGetAllKeys","symbolsFunc","baseGetTag","symToStringTag","getRawTag","objectToString","baseGt","baseHas","baseHasIn","baseInRange","nativeMax","baseIntersection","arrays","othLength","othIndex","caches","seen","baseInverter","baseInvoke","baseIsArguments","baseIsArrayBuffer","baseIsDate","baseIsEqual","baseIsEqualDeep","equalFunc","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","equalArrays","equalByTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","equalObjects","baseIsMap","baseIsMatch","matchData","noCustomizer","srcValue","baseIsNative","isMasked","reIsNative","toSource","baseIsRegExp","baseIsSet","baseIsTypedArray","isLength","baseIteratee","identity","baseMatchesProperty","baseMatches","property","baseKeys","isPrototype","nativeKeys","baseKeysIn","nativeKeysIn","isProto","baseLt","baseMap","isArrayLike","getMatchData","matchesStrictComparable","isKey","isStrictComparable","hasIn","baseMerge","srcIndex","baseMergeDeep","mergeFunc","isTyped","isArrayLikeObject","cloneTypedArray","toPlainObject","baseNth","baseOrderBy","orders","getIteratee","compareMultiple","basePick","basePickBy","baseSet","basePropertyDeep","basePullAll","basePullAt","indexes","previous","baseUnset","nativeFloor","nativeRandom","baseRange","step","nativeCeil","baseRepeat","baseRest","setToString","overRest","baseSample","baseSampleSize","nested","baseShuffle","baseSlice","baseSome","baseSortedIndex","retHighest","baseSortedIndexBy","valIsNaN","valIsNull","valIsSymbol","valIsUndefined","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","setLow","baseSortedUniq","baseToNumber","baseToString","symbolToString","baseUniq","createSet","seenIndex","baseUpdate","updater","baseWhile","isDrop","actions","baseXor","baseZipObject","assignFunc","valsLength","castArrayLikeObject","castFunction","stringToPath","castSlice","allocUnsafe","cloneDataView","dataView","byteOffset","cloneMap","cloneFunc","cloneRegExp","regexp","cloneSet","cloneSymbol","symbol","symbolValueOf","typedArray","compareAscending","valIsDefined","valIsReflexive","objCriteria","othCriteria","ordersLength","composeArgs","partials","holders","isCurried","argsIndex","argsLength","holdersLength","leftIndex","leftLength","rangeLength","isUncurried","composeArgsRight","holdersIndex","rightIndex","rightLength","isNew","getSymbols","getSymbolsIn","createAggregator","initializer","createAssigner","assigner","sources","guard","isIterateeCall","createBaseEach","createBaseFor","createBind","isBind","createCtor","createCaseFirst","methodName","trailing","createCompounder","words","deburr","thisBinding","baseCreate","createCurry","arity","getHolder","createRecurry","createHybrid","createFind","findIndexFunc","createFlow","flatRest","funcs","prereq","thru","getFuncName","funcName","isLaziable","plant","partialsRight","holdersRight","argPos","ary","holdersCount","newHolders","isBindKey","reorder","isFlip","isAry","createInverter","toIteratee","createMathOperation","createOver","arrayFunc","createPadding","chars","charsLength","createPartial","createRange","toFinite","createRelationalOperation","toNumber","wrapFunc","isCurry","newHoldersRight","newPartials","newPartialsRight","newData","setWrapToString","createRound","precision","createToPairs","createWrap","mergeData","baseSetData","customDefaultsAssignIn","objectProto","customDefaultsMerge","customOmitClone","isPartial","arrValue","othValue","compared","convert","objProps","objLength","othProps","skipCtor","objCtor","othCtor","realNames","otherFunc","isKeyable","getNative","isOwn","unmasked","nativeObjectToString","transforms","getWrapDetails","hasPath","hasFunc","getPrototype","insertWrapDetails","details","spreadableSymbol","maskSrcKey","memoizeCapped","memoize","srcBitmask","newBitmask","isCombo","otherArgs","oldArray","updateWrapDetails","shortOut","lastCalled","stamp","nativeNow","remaining","rand","chunk","dropRight","dropRightWhile","dropWhile","findIndex","findLastIndex","flattenDeep","flattenDepth","fromPairs","head","separator","nativeJoin","nth","pullAll","pullAllBy","pullAllWith","nativeReverse","sortedIndex","sortedIndexBy","sortedIndexOf","sortedLastIndex","sortedLastIndexBy","sortedLastIndexOf","sortedUniq","sortedUniqBy","take","takeRight","takeRightWhile","takeWhile","uniqBy","uniqWith","unzip","unzipWith","zipObject","zipObjectDeep","chain","tap","interceptor","wrapperChain","wrapperCommit","wrapperNext","toArray","wrapperToIterator","wrapperPlant","wrapperReverse","wrapped","wrapperValue","flatMap","flatMapDeep","flatMapDepth","forEachRight","baseEachRight","isString","reduceRight","negate","sample","sampleSize","shuffle","before","curry","curryRight","invokeFunc","lastArgs","lastThis","lastInvokeTime","leadingEdge","timerId","timerExpired","leading","remainingWait","timeSinceLastCall","lastCallTime","timeSinceLastInvoke","maxing","maxWait","shouldInvoke","trailingEdge","flush","debounced","isInvoking","flip","memoized","Cache","spread","throttle","unary","partial","castArray","cloneWith","cloneDeep","cloneDeepWith","conformsTo","isBoolean","isElement","isEqual","isEqualWith","isError","nativeIsFinite","isMatch","isMatchWith","isNative","isMaskable","isNull","isNil","isSafeInteger","isWeakMap","isWeakSet","symIterator","sign","remainder","isBinary","toSafeInteger","findKey","findLastKey","forIn","forInRight","forOwn","forOwnRight","functions","functionsIn","mapKeys","mapValues","omitBy","pickBy","setWith","isArrLike","unset","updateWith","valuesIn","inRange","floating","temp","capitalize","upperFirst","endsWith","escapeRegExp","strLength","padEnd","padStart","radix","nativeParseInt","startsWith","settings","templateSettings","assignInWith","isEscaping","isEvaluating","importsKeys","importsValues","interpolate","reDelimiters","evaluate","sourceURL","escapeValue","interpolateValue","esTemplateValue","evaluateValue","variable","attempt","toLower","toUpper","toUpperCase","trimEnd","trimStart","truncate","omission","search","newEnd","cond","conforms","constant","defaultTo","matchesProperty","mixin","methodNames","noConflict","oldDash","noop","nthArg","propertyOf","stubArray","stubFalse","stubObject","stubString","stubTrue","times","toPath","uniqueId","idCounter","maxBy","mean","meanBy","minBy","sumBy","arrayProto","funcProto","coreJsData","uid","IE_PROTO","Buffer","objectCreate","propertyIsEnumerable","isConcatSpreadable","toStringTag","ctxClearTimeout","ctxNow","ctxSetTimeout","nativeGetSymbols","getOwnPropertySymbols","nativeIsBuffer","DataView","WeakMap","metaMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","symbolProto","baseSetToString","castRest","ctorString","difference","differenceBy","differenceWith","intersection","mapped","intersectionBy","intersectionWith","pullAt","union","unionBy","unionWith","without","xor","xorBy","xorWith","zip","zipWith","wrapperAt","countBy","groupBy","invokeMap","keyBy","partition","sortBy","bindKey","defer","delay","overArgs","funcsLength","partialRight","rearg","gt","gte","lt","lte","assignIn","assignWith","defaultsDeep","mergeWith","invert","invertBy","invoke","omit","toPairs","toPairsIn","camelCase","word","kebabCase","lowerCase","lowerFirst","snakeCase","startCase","upperCase","bindAll","flow","flowRight","methodOf","overEvery","overSome","rangeRight","augend","addend","divide","dividend","multiply","multiplier","multiplicand","subtract","minuend","subtrahend","entriesIn","extend","extendWith","each","eachRight","isFilter","takeName","dropName","checkIteratee","isTaker","lodashFunc","retUnwrapped","isLazy","useLazy","isHybrid","isUnwrapped","onlyLazy","chainName","commit","webpackPolyfill","deprecate","_dragulaService","inputFocusClass","editNoteDraft","toEditNote","remindMe","noteToSet","orderNotes","yesterday","date2MinDate","onDropModel","_setInputFocus","isFocus","testNotes","notetextarea","label","updateOrder","deleteFromOrder","binNote","setNoteColor","setRemindMeNote","setReminderClick","removeReminder","updateModalNote","editModalNoteClick","makeArchive","archive_note","updateArchiveOrder","newArchiveOrder","unArchive","$","material","dragulaService","checkModel","dragulaModel","modelIndex","previousValue","onInput","textArea","adjust","overflow","scrollHeight","HostListener"],"mappings":"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AAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,IAAAC,IAAA,IAAAC,IAAA,IACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KACAC,IAAA,KAAAC,IAAA,KAIAC,IACAC,I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","file":"app.js","sourcesContent":["webpackJsonp([0],[\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar platform_browser_dynamic_1 = __webpack_require__(1);\n\tvar core_1 = __webpack_require__(3);\n\tvar app_module_1 = __webpack_require__(23);\n\tif (true) {\n\t    core_1.enableProdMode();\n\t}\n\tplatform_browser_dynamic_1.platformBrowserDynamic().bootstrapModule(app_module_1.AppModule);\n\n\n/***/ }),\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar forms_1 = __webpack_require__(24);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar datetime_picker_1 = __webpack_require__(28);\n\tvar angular2_notifications_1 = __webpack_require__(29);\n\tvar app_routing_1 = __webpack_require__(40);\n\tvar app_component_1 = __webpack_require__(116);\n\tvar components_1 = __webpack_require__(71);\n\tvar dragula_1 = __webpack_require__(117);\n\tvar fluid_height_1 = __webpack_require__(118);\n\tvar services_1 = __webpack_require__(74);\n\tvar AppModule = (function () {\n\t    function AppModule() {\n\t    }\n\t    AppModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [\n\t                forms_1.FormsModule,\n\t                platform_browser_1.BrowserModule,\n\t                app_routing_1.AppRoutingModule,\n\t                datetime_picker_1.NguiDatetimePickerModule,\n\t                angular2_notifications_1.PushNotificationsModule,\n\t                angular2_notifications_1.SimpleNotificationsModule.forRoot()\n\t            ],\n\t            declarations: [\n\t                components_1.Spinner,\n\t                dragula_1.Dragula,\n\t                app_component_1.AppComponent,\n\t                components_1.BinComponent,\n\t                components_1.HomeComponent,\n\t                components_1.AboutComponent,\n\t                components_1.ArchiveComponent,\n\t                fluid_height_1.FluidHeightDirective\n\t            ],\n\t            providers: [services_1.DragulaService, services_1.NotesTable, services_1.NotesTableService],\n\t            bootstrap: [app_component_1.AppComponent]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppModule);\n\t    return AppModule;\n\t}());\n\texports.AppModule = AppModule;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/**\n\t * @license Angular v2.4.10\n\t * (c) 2010-2017 Google, Inc. https://angular.io/\n\t * License: MIT\n\t */\n\t(function (global, factory) {\n\t     true ? factory(exports, __webpack_require__(3), __webpack_require__(25), __webpack_require__(6), __webpack_require__(7), __webpack_require__(26)) :\n\t    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n\t    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n\t}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * Base class for control directives.\n\t     *\n\t     * Only used internally in the forms module.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AbstractControlDirective = (function () {\n\t        function AbstractControlDirective() {\n\t        }\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { throw new Error('unimplemented'); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.value : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.valid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.invalid : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.pending : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.errors : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.pristine : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.dirty : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.touched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.untouched : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.disabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.enabled : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.statusChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.control ? this.control.valueChanges : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.reset = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            if (this.control)\n\t                this.control.reset(value);\n\t        };\n\t        /**\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.hasError(errorCode, path) : false;\n\t        };\n\t        /**\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return this.control ? this.control.getError(errorCode, path) : null;\n\t        };\n\t        return AbstractControlDirective;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$1 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * A directive that contains multiple {\\@link NgControl}s.\n\t     *\n\t     * Only used by the forms module.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var ControlContainer = (function (_super) {\n\t        __extends$1(ControlContainer, _super);\n\t        function ControlContainer() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the form to which this container belongs.\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(ControlContainer.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this container.\n\t             * @return {?}\n\t             */\n\t            get: function () { return null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return ControlContainer;\n\t    }(AbstractControlDirective));\n\t\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPresent(obj) {\n\t        return obj != null;\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isBlank(obj) {\n\t        return obj == null;\n\t    }\n\t    /**\n\t     * @param {?} a\n\t     * @param {?} b\n\t     * @return {?}\n\t     */\n\t    function looseIdentical(a, b) {\n\t        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n\t    }\n\t    /**\n\t     * @param {?} o\n\t     * @return {?}\n\t     */\n\t    function isJsObject(o) {\n\t        return o !== null && (typeof o === 'function' || typeof o === 'object');\n\t    }\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function isPrimitive(obj) {\n\t        return !isJsObject(obj);\n\t    }\n\t\n\t    /**\n\t     * Wraps Javascript Objects\n\t     */\n\t    var StringMapWrapper = (function () {\n\t        function StringMapWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.merge = function (m1, m2) {\n\t            var /** @type {?} */ m = {};\n\t            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n\t                var k = _a[_i];\n\t                m[k] = m1[k];\n\t            }\n\t            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n\t                var k = _c[_b];\n\t                m[k] = m2[k];\n\t            }\n\t            return m;\n\t        };\n\t        /**\n\t         * @param {?} m1\n\t         * @param {?} m2\n\t         * @return {?}\n\t         */\n\t        StringMapWrapper.equals = function (m1, m2) {\n\t            var /** @type {?} */ k1 = Object.keys(m1);\n\t            var /** @type {?} */ k2 = Object.keys(m2);\n\t            if (k1.length != k2.length) {\n\t                return false;\n\t            }\n\t            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n\t                var /** @type {?} */ key = k1[i];\n\t                if (m1[key] !== m2[key]) {\n\t                    return false;\n\t                }\n\t            }\n\t            return true;\n\t        };\n\t        return StringMapWrapper;\n\t    }());\n\t    var ListWrapper = (function () {\n\t        function ListWrapper() {\n\t        }\n\t        /**\n\t         * @param {?} arr\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        ListWrapper.findLast = function (arr, condition) {\n\t            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n\t                if (condition(arr[i])) {\n\t                    return arr[i];\n\t                }\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} items\n\t         * @return {?}\n\t         */\n\t        ListWrapper.removeAll = function (list, items) {\n\t            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n\t                var /** @type {?} */ index = list.indexOf(items[i]);\n\t                if (index > -1) {\n\t                    list.splice(index, 1);\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @param {?} el\n\t         * @return {?}\n\t         */\n\t        ListWrapper.remove = function (list, el) {\n\t            var /** @type {?} */ index = list.indexOf(el);\n\t            if (index > -1) {\n\t                list.splice(index, 1);\n\t                return true;\n\t            }\n\t            return false;\n\t        };\n\t        /**\n\t         * @param {?} a\n\t         * @param {?} b\n\t         * @return {?}\n\t         */\n\t        ListWrapper.equals = function (a, b) {\n\t            if (a.length != b.length)\n\t                return false;\n\t            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n\t                if (a[i] !== b[i])\n\t                    return false;\n\t            }\n\t            return true;\n\t        };\n\t        /**\n\t         * @param {?} list\n\t         * @return {?}\n\t         */\n\t        ListWrapper.flatten = function (list) {\n\t            return list.reduce(function (flat, item) {\n\t                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n\t                return ((flat)).concat(flatItem);\n\t            }, []);\n\t        };\n\t        return ListWrapper;\n\t    }());\n\t\n\t    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n\t    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\t\n\t    /**\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function isEmptyInputValue(value) {\n\t        // we don't check for string here so it also works with arrays\n\t        return value == null || value.length === 0;\n\t    }\n\t    /**\n\t     * Providers for validators to be used for {@link FormControl}s in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n\t    /**\n\t     * Providers for asynchronous validators to be used for {@link FormControl}s\n\t     * in a form.\n\t     *\n\t     * Provide this using `multi: true` to add validators.\n\t     *\n\t     * See {@link NG_VALIDATORS} for more details.\n\t     *\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n\t    /**\n\t     * Provides a set of validators used by form controls.\n\t     *\n\t     * A validator is a function that processes a {\\@link FormControl} or collection of\n\t     * controls and returns a map of errors. A null map means that validation has passed.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```typescript\n\t     * var loginControl = new FormControl(\"\", Validators.required)\n\t     * ```\n\t     *\n\t     * \\@stable\n\t     */\n\t    var Validators = (function () {\n\t        function Validators() {\n\t        }\n\t        /**\n\t         * Validator that requires controls to have a non-empty value.\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        Validators.required = function (control) {\n\t            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n\t        };\n\t        /**\n\t         * Validator that requires control value to be true.\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        Validators.requiredTrue = function (control) {\n\t            return control.value === true ? null : { 'required': true };\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a minimum length.\n\t         * @param {?} minLength\n\t         * @return {?}\n\t         */\n\t        Validators.minLength = function (minLength) {\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var /** @type {?} */ length = control.value ? control.value.length : 0;\n\t                return length < minLength ?\n\t                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires controls to have a value of a maximum length.\n\t         * @param {?} maxLength\n\t         * @return {?}\n\t         */\n\t        Validators.maxLength = function (maxLength) {\n\t            return function (control) {\n\t                var /** @type {?} */ length = control.value ? control.value.length : 0;\n\t                return length > maxLength ?\n\t                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n\t                    null;\n\t            };\n\t        };\n\t        /**\n\t         * Validator that requires a control to match a regex to its value.\n\t         * @param {?} pattern\n\t         * @return {?}\n\t         */\n\t        Validators.pattern = function (pattern) {\n\t            if (!pattern)\n\t                return Validators.nullValidator;\n\t            var /** @type {?} */ regex;\n\t            var /** @type {?} */ regexStr;\n\t            if (typeof pattern === 'string') {\n\t                regexStr = \"^\" + pattern + \"$\";\n\t                regex = new RegExp(regexStr);\n\t            }\n\t            else {\n\t                regexStr = pattern.toString();\n\t                regex = pattern;\n\t            }\n\t            return function (control) {\n\t                if (isEmptyInputValue(control.value)) {\n\t                    return null; // don't validate empty values to allow optional controls\n\t                }\n\t                var /** @type {?} */ value = control.value;\n\t                return regex.test(value) ? null :\n\t                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n\t            };\n\t        };\n\t        /**\n\t         * No-op validator.\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        Validators.nullValidator = function (c) { return null; };\n\t        /**\n\t         * Compose multiple validators into a single function that returns the union\n\t         * of the individual error maps.\n\t         * @param {?} validators\n\t         * @return {?}\n\t         */\n\t        Validators.compose = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                return _mergeErrors(_executeValidators(control, presentValidators));\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} validators\n\t         * @return {?}\n\t         */\n\t        Validators.composeAsync = function (validators) {\n\t            if (!validators)\n\t                return null;\n\t            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n\t            if (presentValidators.length == 0)\n\t                return null;\n\t            return function (control) {\n\t                var /** @type {?} */ promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n\t                return Promise.all(promises).then(_mergeErrors);\n\t            };\n\t        };\n\t        return Validators;\n\t    }());\n\t    /**\n\t     * @param {?} obj\n\t     * @return {?}\n\t     */\n\t    function _convertToPromise(obj) {\n\t        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function _executeValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function _executeAsyncValidators(control, validators) {\n\t        return validators.map(function (v) { return v(control); });\n\t    }\n\t    /**\n\t     * @param {?} arrayOfErrors\n\t     * @return {?}\n\t     */\n\t    function _mergeErrors(arrayOfErrors) {\n\t        var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n\t            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n\t        }, {});\n\t        return Object.keys(res).length === 0 ? null : res;\n\t    }\n\t\n\t    /**\n\t     * Used to provide a {@link ControlValueAccessor} for form controls.\n\t     *\n\t     * See {@link DefaultValueAccessor} for how to implement one.\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\t\n\t    var /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n\t        multi: true,\n\t    };\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a checkbox input element.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n\t     *  ```\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var CheckboxControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        CheckboxControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n\t                        providers: [CHECKBOX_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return CheckboxControlValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ DEFAULT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The default accessor for writing a value and listening to changes that is used by the\n\t     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n\t     *  ```\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var DefaultValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function DefaultValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.writeValue = function (value) {\n\t            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        DefaultValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n\t                        // TODO: vsavkin replace the above selector with the one below it once\n\t                        // https://github.com/angular/angular/issues/3011 is implemented\n\t                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n\t                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [DEFAULT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        DefaultValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return DefaultValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function normalizeValidator(validator) {\n\t        if (((validator)).validate) {\n\t            return function (c) { return ((validator)).validate(c); };\n\t        }\n\t        else {\n\t            return (validator);\n\t        }\n\t    }\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function normalizeAsyncValidator(validator) {\n\t        if (((validator)).validate) {\n\t            return function (c) { return ((validator)).validate(c); };\n\t        }\n\t        else {\n\t            return (validator);\n\t        }\n\t    }\n\t\n\t    var /** @type {?} */ NUMBER_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a number value and listening to changes that is used by the\n\t     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"number\" [(ngModel)]=\"age\">\n\t     *  ```\n\t     */\n\t    var NumberValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function NumberValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.writeValue = function (value) {\n\t            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n\t            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        NumberValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [NUMBER_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NumberValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return NumberValueAccessor;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$2 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * @return {?}\n\t     */\n\t    function unimplemented() {\n\t        throw new Error('unimplemented');\n\t    }\n\t    /**\n\t     * A base class that all control directive extend.\n\t     * It binds a {\\@link FormControl} object to a DOM element.\n\t     *\n\t     * Used internally by Angular forms.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var NgControl = (function (_super) {\n\t        __extends$2(NgControl, _super);\n\t        function NgControl() {\n\t            _super.apply(this, arguments);\n\t            /** @internal */\n\t            this._parent = null;\n\t            this.name = null;\n\t            this.valueAccessor = null;\n\t            /** @internal */\n\t            this._rawValidators = [];\n\t            /** @internal */\n\t            this._rawAsyncValidators = [];\n\t        }\n\t        Object.defineProperty(NgControl.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (unimplemented()); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return (unimplemented()); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @abstract\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        NgControl.prototype.viewToModelUpdate = function (newValue) { };\n\t        return NgControl;\n\t    }(AbstractControlDirective));\n\t\n\t    var /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * Internal class used by Angular to uncheck radio buttons with the matching name.\n\t     */\n\t    var RadioControlRegistry = (function () {\n\t        function RadioControlRegistry() {\n\t            this._accessors = [];\n\t        }\n\t        /**\n\t         * @param {?} control\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.add = function (control, accessor) {\n\t            this._accessors.push([control, accessor]);\n\t        };\n\t        /**\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.remove = function (accessor) {\n\t            for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n\t                if (this._accessors[i][1] === accessor) {\n\t                    this._accessors.splice(i, 1);\n\t                    return;\n\t                }\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype.select = function (accessor) {\n\t            var _this = this;\n\t            this._accessors.forEach(function (c) {\n\t                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n\t                    c[1].fireUncheck(accessor.value);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} controlPair\n\t         * @param {?} accessor\n\t         * @return {?}\n\t         */\n\t        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n\t            if (!controlPair[0].control)\n\t                return false;\n\t            return controlPair[0]._parent === accessor._control._parent &&\n\t                controlPair[1].name === accessor.name;\n\t        };\n\t        RadioControlRegistry.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlRegistry.ctorParameters = function () { return []; };\n\t        return RadioControlRegistry;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Writes radio control values and listens to radio control changes.\n\t     *\n\t     * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n\t     * to keep the view synced with the {\\@link FormControl} model.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any radio control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use radio buttons with form directives\n\t     *\n\t     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n\t     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n\t     * attributes do not affect each other.\n\t     *\n\t     * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n\t     *\n\t     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n\t     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n\t     *\n\t     * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n\t     *\n\t     *  * **npm package**: `\\@angular/forms`\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var RadioControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         * @param {?} _registry\n\t         * @param {?} _injector\n\t         */\n\t        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this._registry = _registry;\n\t            this._injector = _injector;\n\t            this.onChange = function () { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.ngOnInit = function () {\n\t            this._control = this._injector.get(NgControl);\n\t            this._checkName();\n\t            this._registry.add(this._control, this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.writeValue = function (value) {\n\t            this._state = value === this.value;\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this._fn = fn;\n\t            this.onChange = function () {\n\t                fn(_this.value);\n\t                _this._registry.select(_this);\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype._checkName = function () {\n\t            if (this.name && this.formControlName && this.name !== this.formControlName) {\n\t                this._throwNameError();\n\t            }\n\t            if (!this.name && this.formControlName)\n\t                this.name = this.formControlName;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        RadioControlValueAccessor.prototype._throwNameError = function () {\n\t            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n\t        };\n\t        RadioControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n\t                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n\t                        providers: [RADIO_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RadioControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t            { type: RadioControlRegistry, },\n\t            { type: _angular_core.Injector, },\n\t        ]; };\n\t        RadioControlValueAccessor.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'formControlName': [{ type: _angular_core.Input },],\n\t            'value': [{ type: _angular_core.Input },],\n\t        };\n\t        return RadioControlValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ RANGE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * The accessor for writing a range value and listening to changes that is used by the\n\t     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n\t     *\n\t     *  ### Example\n\t     *  ```\n\t     *  <input type=\"range\" [(ngModel)]=\"age\" >\n\t     *  ```\n\t     */\n\t    var RangeValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function RangeValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.writeValue = function (value) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n\t            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        RangeValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n\t                        host: {\n\t                            '(change)': 'onChange($event.target.value)',\n\t                            '(input)': 'onChange($event.target.value)',\n\t                            '(blur)': 'onTouched()'\n\t                        },\n\t                        providers: [RANGE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RangeValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return RangeValueAccessor;\n\t    }());\n\t\n\t    var /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * @param {?} id\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function _buildValueString(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    /**\n\t     * @param {?} valueString\n\t     * @return {?}\n\t     */\n\t    function _extractId(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * \\@whatItDoes Writes values and listens to changes on a select element.\n\t     *\n\t     * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n\t     * to keep the view synced with the {\\@link FormControl} model.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n\t     * value accessor will be active on any select control that has a form directive. You do\n\t     * **not** need to add a special selector to activate it.\n\t     *\n\t     * ### How to use select controls with form directives\n\t     *\n\t     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n\t     * attribute to the main `<select>` tag.\n\t     *\n\t     * If your option values are simple strings, you can bind to the normal `value` property\n\t     * on the option.  If your option values happen to be objects (and you'd like to save the\n\t     * selection in your form as an object), use `ngValue` instead:\n\t     *\n\t     * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n\t     *\n\t     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n\t     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n\t     * choice of binding to the  `value` or `ngValue` property on the select's options.\n\t     *\n\t     * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n\t     *\n\t     * Note: We listen to the 'change' event because 'input' events aren't fired\n\t     * for selects in Firefox and IE:\n\t     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n\t     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var SelectControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function SelectControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.writeValue = function (value) {\n\t            this.value = value;\n\t            var /** @type {?} */ id = this._getOptionId(value);\n\t            if (id == null) {\n\t                this._renderer.setElementProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n\t            }\n\t            var /** @type {?} */ valueString = _buildValueString(id, value);\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (valueString) {\n\t                _this.value = valueString;\n\t                fn(_this._getOptionValue(valueString));\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id), value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} valueString\n\t         * @return {?}\n\t         */\n\t        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var /** @type {?} */ id = _extractId(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n\t        };\n\t        SelectControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n\t                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return SelectControlValueAccessor;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgSelectOption = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         * @param {?} _renderer\n\t         * @param {?} _select\n\t         */\n\t        function NgSelectOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select)\n\t                this.id = this._select._registerOption();\n\t        }\n\t        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._select._optionMap.set(this.id, value);\n\t                this._setElementValue(_buildValueString(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._setElementValue(value);\n\t                if (this._select)\n\t                    this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSelectOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSelectOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectOption.ctorParameters = function () { return [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSelectOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectOption;\n\t    }());\n\t\n\t    var /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR = {\n\t        provide: NG_VALUE_ACCESSOR,\n\t        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * @param {?} id\n\t     * @param {?} value\n\t     * @return {?}\n\t     */\n\t    function _buildValueString$1(id, value) {\n\t        if (id == null)\n\t            return \"\" + value;\n\t        if (typeof value === 'string')\n\t            value = \"'\" + value + \"'\";\n\t        if (!isPrimitive(value))\n\t            value = 'Object';\n\t        return (id + \": \" + value).slice(0, 50);\n\t    }\n\t    /**\n\t     * @param {?} valueString\n\t     * @return {?}\n\t     */\n\t    function _extractId$1(valueString) {\n\t        return valueString.split(':')[0];\n\t    }\n\t    /**\n\t     * The accessor for writing a value and listening to changes on a select element.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var SelectMultipleControlValueAccessor = (function () {\n\t        /**\n\t         * @param {?} _renderer\n\t         * @param {?} _elementRef\n\t         */\n\t        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n\t            this._renderer = _renderer;\n\t            this._elementRef = _elementRef;\n\t            /** @internal */\n\t            this._optionMap = new Map();\n\t            /** @internal */\n\t            this._idCounter = 0;\n\t            this.onChange = function (_) { };\n\t            this.onTouched = function () { };\n\t        }\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n\t            var _this = this;\n\t            this.value = value;\n\t            var /** @type {?} */ optionSelectedStateSetter;\n\t            if (Array.isArray(value)) {\n\t                // convert values to ids\n\t                var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n\t                optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n\t            }\n\t            else {\n\t                optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n\t            }\n\t            this._optionMap.forEach(optionSelectedStateSetter);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n\t            var _this = this;\n\t            this.onChange = function (_) {\n\t                var /** @type {?} */ selected = [];\n\t                if (_.hasOwnProperty('selectedOptions')) {\n\t                    var /** @type {?} */ options = _.selectedOptions;\n\t                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n\t                        var /** @type {?} */ opt = options.item(i);\n\t                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n\t                        selected.push(val);\n\t                    }\n\t                }\n\t                else {\n\t                    var /** @type {?} */ options = (_.options);\n\t                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n\t                        var /** @type {?} */ opt = options.item(i);\n\t                        if (opt.selected) {\n\t                            var /** @type {?} */ val = _this._getOptionValue(opt.value);\n\t                            selected.push(val);\n\t                        }\n\t                    }\n\t                }\n\t                _this.value = selected;\n\t                fn(selected);\n\t            };\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n\t        /**\n\t         * @param {?} isDisabled\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n\t            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n\t            var /** @type {?} */ id = (this._idCounter++).toString();\n\t            this._optionMap.set(id, value);\n\t            return id;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n\t            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n\t                var id = _a[_i];\n\t                if (looseIdentical(this._optionMap.get(id)._value, value))\n\t                    return id;\n\t            }\n\t            return null;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} valueString\n\t         * @return {?}\n\t         */\n\t        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n\t            var /** @type {?} */ id = _extractId$1(valueString);\n\t            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n\t        };\n\t        SelectMultipleControlValueAccessor.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n\t                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n\t                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n\t            { type: _angular_core.Renderer, },\n\t            { type: _angular_core.ElementRef, },\n\t        ]; };\n\t        return SelectMultipleControlValueAccessor;\n\t    }());\n\t    /**\n\t     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <select multiple name=\"city\" ngModel>\n\t     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n\t     * </select>\n\t     * ```\n\t     */\n\t    var NgSelectMultipleOption = (function () {\n\t        /**\n\t         * @param {?} _element\n\t         * @param {?} _renderer\n\t         * @param {?} _select\n\t         */\n\t        function NgSelectMultipleOption(_element, _renderer, _select) {\n\t            this._element = _element;\n\t            this._renderer = _renderer;\n\t            this._select = _select;\n\t            if (this._select) {\n\t                this.id = this._select._registerOption(this);\n\t            }\n\t        }\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select == null)\n\t                    return;\n\t                this._value = value;\n\t                this._setElementValue(_buildValueString$1(this.id, value));\n\t                this._select.writeValue(this._select.value);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                if (this._select) {\n\t                    this._value = value;\n\t                    this._setElementValue(_buildValueString$1(this.id, value));\n\t                    this._select.writeValue(this._select.value);\n\t                }\n\t                else {\n\t                    this._setElementValue(value);\n\t                }\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} selected\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n\t            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n\t            if (this._select) {\n\t                this._select._optionMap.delete(this.id);\n\t                this._select.writeValue(this._select.value);\n\t            }\n\t        };\n\t        NgSelectMultipleOption.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgSelectMultipleOption.ctorParameters = function () { return [\n\t            { type: _angular_core.ElementRef, },\n\t            { type: _angular_core.Renderer, },\n\t            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t        ]; };\n\t        NgSelectMultipleOption.propDecorators = {\n\t            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n\t            'value': [{ type: _angular_core.Input, args: ['value',] },],\n\t        };\n\t        return NgSelectMultipleOption;\n\t    }());\n\t\n\t    /**\n\t     * @param {?} name\n\t     * @param {?} parent\n\t     * @return {?}\n\t     */\n\t    function controlPath(name, parent) {\n\t        return parent.path.concat([name]);\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function setUpControl(control, dir) {\n\t        if (!control)\n\t            _throwError(dir, 'Cannot find control with');\n\t        if (!dir.valueAccessor)\n\t            _throwError(dir, 'No value accessor for form control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t        dir.valueAccessor.writeValue(control.value);\n\t        // view -> model\n\t        dir.valueAccessor.registerOnChange(function (newValue) {\n\t            dir.viewToModelUpdate(newValue);\n\t            control.markAsDirty();\n\t            control.setValue(newValue, { emitModelToViewChange: false });\n\t        });\n\t        // touched\n\t        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n\t        control.registerOnChange(function (newValue, emitModelEvent) {\n\t            // control -> view\n\t            dir.valueAccessor.writeValue(newValue);\n\t            // control -> ngModel\n\t            if (emitModelEvent)\n\t                dir.viewToModelUpdate(newValue);\n\t        });\n\t        if (dir.valueAccessor.setDisabledState) {\n\t            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n\t        }\n\t        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (((validator)).registerOnValidatorChange)\n\t                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (((validator)).registerOnValidatorChange)\n\t                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n\t        });\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function cleanUpControl(control, dir) {\n\t        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n\t        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n\t        dir._rawValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        dir._rawAsyncValidators.forEach(function (validator) {\n\t            if (validator.registerOnValidatorChange) {\n\t                validator.registerOnValidatorChange(null);\n\t            }\n\t        });\n\t        if (control)\n\t            control._clearChangeFns();\n\t    }\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function setUpFormContainer(control, dir) {\n\t        if (isBlank(control))\n\t            _throwError(dir, 'Cannot find control with');\n\t        control.validator = Validators.compose([control.validator, dir.validator]);\n\t        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @return {?}\n\t     */\n\t    function _noControlError(dir) {\n\t        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @param {?} message\n\t     * @return {?}\n\t     */\n\t    function _throwError(dir, message) {\n\t        var /** @type {?} */ messageEnd;\n\t        if (dir.path.length > 1) {\n\t            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n\t        }\n\t        else if (dir.path[0]) {\n\t            messageEnd = \"name: '\" + dir.path + \"'\";\n\t        }\n\t        else {\n\t            messageEnd = 'unspecified name attribute';\n\t        }\n\t        throw new Error(message + \" \" + messageEnd);\n\t    }\n\t    /**\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function composeValidators(validators) {\n\t        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n\t    }\n\t    /**\n\t     * @param {?} validators\n\t     * @return {?}\n\t     */\n\t    function composeAsyncValidators(validators) {\n\t        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n\t            null;\n\t    }\n\t    /**\n\t     * @param {?} changes\n\t     * @param {?} viewModel\n\t     * @return {?}\n\t     */\n\t    function isPropertyUpdated(changes, viewModel) {\n\t        if (!changes.hasOwnProperty('model'))\n\t            return false;\n\t        var /** @type {?} */ change = changes['model'];\n\t        if (change.isFirstChange())\n\t            return true;\n\t        return !looseIdentical(viewModel, change.currentValue);\n\t    }\n\t    var /** @type {?} */ BUILTIN_ACCESSORS = [\n\t        CheckboxControlValueAccessor,\n\t        RangeValueAccessor,\n\t        NumberValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t    ];\n\t    /**\n\t     * @param {?} valueAccessor\n\t     * @return {?}\n\t     */\n\t    function isBuiltInAccessor(valueAccessor) {\n\t        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n\t    }\n\t    /**\n\t     * @param {?} dir\n\t     * @param {?} valueAccessors\n\t     * @return {?}\n\t     */\n\t    function selectValueAccessor(dir, valueAccessors) {\n\t        if (!valueAccessors)\n\t            return null;\n\t        var /** @type {?} */ defaultAccessor;\n\t        var /** @type {?} */ builtinAccessor;\n\t        var /** @type {?} */ customAccessor;\n\t        valueAccessors.forEach(function (v) {\n\t            if (v.constructor === DefaultValueAccessor) {\n\t                defaultAccessor = v;\n\t            }\n\t            else if (isBuiltInAccessor(v)) {\n\t                if (builtinAccessor)\n\t                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n\t                builtinAccessor = v;\n\t            }\n\t            else {\n\t                if (customAccessor)\n\t                    _throwError(dir, 'More than one custom value accessor matches form control with');\n\t                customAccessor = v;\n\t            }\n\t        });\n\t        if (customAccessor)\n\t            return customAccessor;\n\t        if (builtinAccessor)\n\t            return builtinAccessor;\n\t        if (defaultAccessor)\n\t            return defaultAccessor;\n\t        _throwError(dir, 'No valid value accessor for form control with');\n\t        return null;\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var AbstractFormGroupDirective = (function (_super) {\n\t        __extends(AbstractFormGroupDirective, _super);\n\t        function AbstractFormGroupDirective() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormGroup(this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormGroup(this);\n\t            }\n\t        };\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * Get the {\\@link FormGroup} backing this binding.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.formDirective.getFormGroup(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * Get the path to this control group.\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * Get the {\\@link Form} to which this group belongs.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n\t        return AbstractFormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$3 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var AbstractControlStatus = (function () {\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function AbstractControlStatus(cd) {\n\t            this._cd = cd;\n\t        }\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        return AbstractControlStatus;\n\t    }());\n\t    var /** @type {?} */ ngControlStatusHost = {\n\t        '[class.ng-untouched]': 'ngClassUntouched',\n\t        '[class.ng-touched]': 'ngClassTouched',\n\t        '[class.ng-pristine]': 'ngClassPristine',\n\t        '[class.ng-dirty]': 'ngClassDirty',\n\t        '[class.ng-valid]': 'ngClassValid',\n\t        '[class.ng-invalid]': 'ngClassInvalid',\n\t        '[class.ng-pending]': 'ngClassPending',\n\t    };\n\t    /**\n\t     * Directive automatically applied to Angular form controls that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgControlStatus = (function (_super) {\n\t        __extends$3(NgControlStatus, _super);\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function NgControlStatus(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatus.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatus.ctorParameters = function () { return [\n\t            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n\t        ]; };\n\t        return NgControlStatus;\n\t    }(AbstractControlStatus));\n\t    /**\n\t     * Directive automatically applied to Angular form groups that sets CSS classes\n\t     * based on control status (valid/invalid/dirty/etc).\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgControlStatusGroup = (function (_super) {\n\t        __extends$3(NgControlStatusGroup, _super);\n\t        /**\n\t         * @param {?} cd\n\t         */\n\t        function NgControlStatusGroup(cd) {\n\t            _super.call(this, cd);\n\t        }\n\t        NgControlStatusGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n\t                        host: ngControlStatusHost\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgControlStatusGroup.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n\t        ]; };\n\t        return NgControlStatusGroup;\n\t    }(AbstractControlStatus));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$5 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Use by directives and components to emit custom Events.\n\t     *\n\t     * ### Examples\n\t     *\n\t     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n\t     * title gets clicked:\n\t     *\n\t     * ```\n\t     * \\@Component({\n\t     *   selector: 'zippy',\n\t     *   template: `\n\t     *   <div class=\"zippy\">\n\t     *     <div (click)=\"toggle()\">Toggle</div>\n\t     *     <div [hidden]=\"!visible\">\n\t     *       <ng-content></ng-content>\n\t     *     </div>\n\t     *  </div>`})\n\t     * export class Zippy {\n\t     *   visible: boolean = true;\n\t     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n\t     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n\t     *\n\t     *   toggle() {\n\t     *     this.visible = !this.visible;\n\t     *     if (this.visible) {\n\t     *       this.open.emit(null);\n\t     *     } else {\n\t     *       this.close.emit(null);\n\t     *     }\n\t     *   }\n\t     * }\n\t     * ```\n\t     *\n\t     * The events payload can be accessed by the parameter `$event` on the components output event\n\t     * handler:\n\t     *\n\t     * ```\n\t     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n\t     * ```\n\t     *\n\t     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n\t     * https://github.com/jhusain/observable-spec\n\t     *\n\t     * Once a reference implementation of the spec is available, switch to it.\n\t     * \\@stable\n\t     */\n\t    var EventEmitter = (function (_super) {\n\t        __extends$5(EventEmitter, _super);\n\t        /**\n\t         * Creates an instance of [EventEmitter], which depending on [isAsync],\n\t         * delivers events synchronously or asynchronously.\n\t         * @param {?=} isAsync\n\t         */\n\t        function EventEmitter(isAsync) {\n\t            if (isAsync === void 0) { isAsync = false; }\n\t            _super.call(this);\n\t            this.__isAsync = isAsync;\n\t        }\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n\t        /**\n\t         * @param {?=} generatorOrNext\n\t         * @param {?=} error\n\t         * @param {?=} complete\n\t         * @return {?}\n\t         */\n\t        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n\t            var /** @type {?} */ schedulerFn;\n\t            var /** @type {?} */ errorFn = function (err) { return null; };\n\t            var /** @type {?} */ completeFn = function () { return null; };\n\t            if (generatorOrNext && typeof generatorOrNext === 'object') {\n\t                schedulerFn = this.__isAsync ? function (value) {\n\t                    setTimeout(function () { return generatorOrNext.next(value); });\n\t                } : function (value) { generatorOrNext.next(value); };\n\t                if (generatorOrNext.error) {\n\t                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n\t                        function (err) { generatorOrNext.error(err); };\n\t                }\n\t                if (generatorOrNext.complete) {\n\t                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n\t                        function () { generatorOrNext.complete(); };\n\t                }\n\t            }\n\t            else {\n\t                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n\t                    function (value) { generatorOrNext(value); };\n\t                if (error) {\n\t                    errorFn =\n\t                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n\t                }\n\t                if (complete) {\n\t                    completeFn =\n\t                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n\t                }\n\t            }\n\t            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n\t        };\n\t        return EventEmitter;\n\t    }(rxjs_Subject.Subject));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$6 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    /**\n\t     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n\t     */\n\t    var /** @type {?} */ VALID = 'VALID';\n\t    /**\n\t     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n\t     */\n\t    var /** @type {?} */ INVALID = 'INVALID';\n\t    /**\n\t     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n\t     * errors are not yet available for the input value.\n\t     */\n\t    var /** @type {?} */ PENDING = 'PENDING';\n\t    /**\n\t     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n\t     * calculations of validity or value.\n\t     */\n\t    var /** @type {?} */ DISABLED = 'DISABLED';\n\t    /**\n\t     * @param {?} control\n\t     * @param {?} path\n\t     * @param {?} delimiter\n\t     * @return {?}\n\t     */\n\t    function _find(control, path, delimiter) {\n\t        if (path == null)\n\t            return null;\n\t        if (!(path instanceof Array)) {\n\t            path = ((path)).split(delimiter);\n\t        }\n\t        if (path instanceof Array && (path.length === 0))\n\t            return null;\n\t        return ((path)).reduce(function (v, name) {\n\t            if (v instanceof FormGroup) {\n\t                return v.controls[name] || null;\n\t            }\n\t            if (v instanceof FormArray) {\n\t                return v.at(/** @type {?} */ (name)) || null;\n\t            }\n\t            return null;\n\t        }, control);\n\t    }\n\t    /**\n\t     * @param {?} r\n\t     * @return {?}\n\t     */\n\t    function toObservable(r) {\n\t        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n\t    }\n\t    /**\n\t     * @param {?} validator\n\t     * @return {?}\n\t     */\n\t    function coerceToValidator(validator) {\n\t        return Array.isArray(validator) ? composeValidators(validator) : validator;\n\t    }\n\t    /**\n\t     * @param {?} asyncValidator\n\t     * @return {?}\n\t     */\n\t    function coerceToAsyncValidator(asyncValidator) {\n\t        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n\t    }\n\t    /**\n\t     * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n\t     * {\\@link FormArray}.\n\t     *\n\t     * It provides some of the shared behavior that all controls and groups of controls have, like\n\t     * running validators, calculating status, and resetting state. It also defines the properties\n\t     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n\t     * instantiated directly.\n\t     *\n\t     * \\@stable\n\t     * @abstract\n\t     */\n\t    var AbstractControl = (function () {\n\t        /**\n\t         * @param {?} validator\n\t         * @param {?} asyncValidator\n\t         */\n\t        function AbstractControl(validator, asyncValidator) {\n\t            this.validator = validator;\n\t            this.asyncValidator = asyncValidator;\n\t            /** @internal */\n\t            this._onCollectionChange = function () { };\n\t            this._pristine = true;\n\t            this._touched = false;\n\t            /** @internal */\n\t            this._onDisabledChange = [];\n\t        }\n\t        Object.defineProperty(AbstractControl.prototype, \"value\", {\n\t            /**\n\t             * The value of the control.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._value; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n\t            /**\n\t             * The parent control.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"status\", {\n\t            /**\n\t             * The validation status of the control. There are four possible\n\t             * validation statuses:\n\t             *\n\t             * * **VALID**:  control has passed all validation checks\n\t             * * **INVALID**: control has failed at least one validation check\n\t             * * **PENDING**: control is in the midst of conducting a validation check\n\t             * * **DISABLED**: control is exempt from validation checks\n\t             *\n\t             * These statuses are mutually exclusive, so a control cannot be\n\t             * both valid AND invalid or invalid AND disabled.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n\t            /**\n\t             * A control is `valid` when its `status === VALID`.\n\t             *\n\t             * In order to have this status, the control must have passed all its\n\t             * validation checks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === VALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n\t            /**\n\t             * A control is `invalid` when its `status === INVALID`.\n\t             *\n\t             * In order to have this status, the control must have failed\n\t             * at least one of its validation checks.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === INVALID; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n\t            /**\n\t             * A control is `pending` when its `status === PENDING`.\n\t             *\n\t             * In order to have this status, the control must be in the\n\t             * middle of conducting a validation check.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status == PENDING; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n\t            /**\n\t             * A control is `disabled` when its `status === DISABLED`.\n\t             *\n\t             * Disabled controls are exempt from validation checks and\n\t             * are not included in the aggregate value of their ancestor\n\t             * controls.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status === DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n\t            /**\n\t             * A control is `enabled` as long as its `status !== DISABLED`.\n\t             *\n\t             * In other words, it has a status of `VALID`, `INVALID`, or\n\t             * `PENDING`.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._status !== DISABLED; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n\t            /**\n\t             * Returns any errors generated by failing validation. If there\n\t             * are no errors, it will return null.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._errors; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n\t            /**\n\t             * A control is `pristine` if the user has not yet changed\n\t             * the value in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n\t            /**\n\t             * A control is `dirty` if the user has changed the value\n\t             * in the UI.\n\t             *\n\t             * Note that programmatic changes to a control's value will\n\t             * *not* mark it dirty.\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this.pristine; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n\t            /**\n\t             * A control is marked `touched` once the user has triggered\n\t             * a `blur` event on it.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n\t            /**\n\t             * A control is `untouched` if the user has not yet triggered\n\t             * a `blur` event on it.\n\t             * @return {?}\n\t             */\n\t            get: function () { return !this._touched; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n\t            /**\n\t             * Emits an event every time the value of the control changes, in\n\t             * the UI or programmatically.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._valueChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n\t            /**\n\t             * Emits an event every time the validation status of the control\n\t             * is re-calculated.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._statusChanges; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * Sets the synchronous validators that are active on this control.  Calling\n\t         * this will overwrite any existing sync validators.\n\t         * @param {?} newValidator\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setValidators = function (newValidator) {\n\t            this.validator = coerceToValidator(newValidator);\n\t        };\n\t        /**\n\t         * Sets the async validators that are active on this control. Calling this\n\t         * will overwrite any existing async validators.\n\t         * @param {?} newValidator\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n\t            this.asyncValidator = coerceToAsyncValidator(newValidator);\n\t        };\n\t        /**\n\t         * Empties out the sync validator list.\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n\t        /**\n\t         * Empties out the async validator list.\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n\t        /**\n\t         * Marks the control as `touched`.\n\t         *\n\t         * This will also mark all direct ancestors as `touched` to maintain\n\t         * the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = true;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `untouched`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `untouched`\n\t         * to maintain the model, and re-calculate the `touched` status of all parent\n\t         * controls.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsUntouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = false;\n\t            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `dirty`.\n\t         *\n\t         * This will also mark all direct ancestors as `dirty` to maintain\n\t         * the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsDirty = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = false;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsDirty({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pristine`.\n\t         *\n\t         * If the control has any children, it will also mark all children as `pristine`\n\t         * to maintain the model, and re-calculate the `pristine` status of all parent\n\t         * controls.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsPristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = true;\n\t            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Marks the control as `pending`.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.markAsPending = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._status = PENDING;\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.markAsPending({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * Disables the control. This means the control will be exempt from validation checks and\n\t         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n\t         *\n\t         * If the control has children, all children will be disabled to maintain the model.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.disable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = DISABLED;\n\t            this._errors = null;\n\t            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n\t            this._updateValue();\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n\t        };\n\t        /**\n\t         * Enables the control. This means the control will be included in validation checks and\n\t         * the aggregate value of its parent. Its status is re-calculated based on its value and\n\t         * its validators.\n\t         *\n\t         * If the control has children, all children will be enabled.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.enable = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._status = VALID;\n\t            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t            this._updateAncestors(onlySelf);\n\t            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n\t        };\n\t        /**\n\t         * @param {?} onlySelf\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity();\n\t                this._parent._updatePristine();\n\t                this._parent._updateTouched();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} parent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n\t        /**\n\t         * Sets the value of the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setValue = function (value, options) { };\n\t        /**\n\t         * Patches the value of the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.patchValue = function (value, options) { };\n\t        /**\n\t         * Resets the control. Abstract method (implemented in sub-classes).\n\t         * @abstract\n\t         * @param {?=} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.reset = function (value, options) { };\n\t        /**\n\t         * Re-calculates the value and validation status of the control.\n\t         *\n\t         * By default, it will also update the value and validity of its ancestors.\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._setInitialStatus();\n\t            this._updateValue();\n\t            if (this.enabled) {\n\t                this._errors = this._runValidator();\n\t                this._status = this._calculateStatus();\n\t                if (this._status === VALID || this._status === PENDING) {\n\t                    this._runAsyncValidator(emitEvent);\n\t                }\n\t            }\n\t            if (emitEvent !== false) {\n\t                this._valueChanges.emit(this._value);\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent && !onlySelf) {\n\t                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateTreeValidity = function (_a) {\n\t            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n\t            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._runValidator = function () {\n\t            return this.validator ? this.validator(this) : null;\n\t        };\n\t        /**\n\t         * @param {?} emitEvent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n\t            var _this = this;\n\t            if (this.asyncValidator) {\n\t                this._status = PENDING;\n\t                this._cancelExistingSubscription();\n\t                var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n\t                if (!(isObservable(obs))) {\n\t                    throw new Error(\"expected the following validator to return Promise or Observable: \" + this.asyncValidator + \". If you are using FormBuilder; did you forget to brace your validators in an array?\");\n\t                }\n\t                this._asyncValidationSubscription =\n\t                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._cancelExistingSubscription = function () {\n\t            if (this._asyncValidationSubscription) {\n\t                this._asyncValidationSubscription.unsubscribe();\n\t            }\n\t        };\n\t        /**\n\t         * Sets errors on a form control.\n\t         *\n\t         * This is used when validations are run manually by the user, rather than automatically.\n\t         *\n\t         * Calling `setErrors` will also update the validity of the parent control.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```\n\t         * const login = new FormControl(\"someLogin\");\n\t         * login.setErrors({\n\t         *   \"notUnique\": true\n\t         * });\n\t         *\n\t         * expect(login.valid).toEqual(false);\n\t         * expect(login.errors).toEqual({\"notUnique\": true});\n\t         *\n\t         * login.setValue(\"someOtherLogin\");\n\t         *\n\t         * expect(login.valid).toEqual(true);\n\t         * ```\n\t         * @param {?} errors\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.setErrors = function (errors, _a) {\n\t            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n\t            this._errors = errors;\n\t            this._updateControlsErrors(emitEvent !== false);\n\t        };\n\t        /**\n\t         * Retrieves a child control given the control's name or path.\n\t         *\n\t         * Paths can be passed in as an array or a string delimited by a dot.\n\t         *\n\t         * To get a control nested within a `person` sub-group:\n\t         *\n\t         * * `this.form.get('person.name');`\n\t         *\n\t         * -OR-\n\t         *\n\t         * * `this.form.get(['person', 'name']);`\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns null or undefined.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.getError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            var /** @type {?} */ control = path ? this.get(path) : this;\n\t            return control && control._errors ? control._errors[errorCode] : null;\n\t        };\n\t        /**\n\t         * Returns true if the control with the given path has the error specified. Otherwise\n\t         * returns false.\n\t         *\n\t         * If no path is given, it checks for the error on the present control.\n\t         * @param {?} errorCode\n\t         * @param {?=} path\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype.hasError = function (errorCode, path) {\n\t            if (path === void 0) { path = null; }\n\t            return !!this.getError(errorCode, path);\n\t        };\n\t        Object.defineProperty(AbstractControl.prototype, \"root\", {\n\t            /**\n\t             * Retrieves the top-level ancestor of this control.\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                var /** @type {?} */ x = this;\n\t                while (x._parent) {\n\t                    x = x._parent;\n\t                }\n\t                return x;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * \\@internal\n\t         * @param {?} emitEvent\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n\t            this._status = this._calculateStatus();\n\t            if (emitEvent) {\n\t                this._statusChanges.emit(this._status);\n\t            }\n\t            if (this._parent) {\n\t                this._parent._updateControlsErrors(emitEvent);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._initObservables = function () {\n\t            this._valueChanges = new EventEmitter();\n\t            this._statusChanges = new EventEmitter();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._calculateStatus = function () {\n\t            if (this._allControlsDisabled())\n\t                return DISABLED;\n\t            if (this._errors)\n\t                return INVALID;\n\t            if (this._anyControlsHaveStatus(PENDING))\n\t                return PENDING;\n\t            if (this._anyControlsHaveStatus(INVALID))\n\t                return INVALID;\n\t            return VALID;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateValue = function () { };\n\t        /**\n\t         * \\@internal\n\t         * @abstract\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._forEachChild = function (cb) { };\n\t        /**\n\t         * \\@internal\n\t         * @abstract\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControls = function (condition) { };\n\t        /**\n\t         * \\@internal\n\t         * @abstract\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._allControlsDisabled = function () { };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} status\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n\t            return this._anyControls(function (control) { return control.status === status; });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsDirty = function () {\n\t            return this._anyControls(function (control) { return control.dirty; });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._anyControlsTouched = function () {\n\t            return this._anyControls(function (control) { return control.touched; });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updatePristine = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._pristine = !this._anyControlsDirty();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updatePristine({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?=} __0\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._updateTouched = function (_a) {\n\t            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n\t            this._touched = this._anyControlsTouched();\n\t            if (this._parent && !onlySelf) {\n\t                this._parent._updateTouched({ onlySelf: onlySelf });\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} formState\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._isBoxedValue = function (formState) {\n\t            return typeof formState === 'object' && formState !== null &&\n\t                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n\t        return AbstractControl;\n\t    }());\n\t    /**\n\t     * \\@whatItDoes Tracks the value and validation status of an individual form control.\n\t     *\n\t     * It is one of the three fundamental building blocks of Angular forms, along with\n\t     * {\\@link FormGroup} and {\\@link FormArray}.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n\t     * first argument. Example:\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('some value');\n\t     * console.log(ctrl.value);     // 'some value'\n\t     * ```\n\t     *\n\t     * You can also initialize the control with a form state object on instantiation,\n\t     * which includes both the value and whether or not the control is disabled.\n\t     * You can't use the value key without the disabled key; both are required\n\t     * to use this way of initialization.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n\t     * console.log(ctrl.value);     // 'n/a'\n\t     * console.log(ctrl.status);   // 'DISABLED'\n\t     * ```\n\t     *\n\t     * To include a sync validator (or an array of sync validators) with the control,\n\t     * pass it in as the second argument. Async validators are also supported, but\n\t     * have to be passed in separately as the third arg.\n\t     *\n\t     * ```ts\n\t     * const ctrl = new FormControl('', Validators.required);\n\t     * console.log(ctrl.value);     // ''\n\t     * console.log(ctrl.status);   // 'INVALID'\n\t     * ```\n\t     *\n\t     * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormControl = (function (_super) {\n\t        __extends$6(FormControl, _super);\n\t        /**\n\t         * @param {?=} formState\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormControl(formState, validator, asyncValidator) {\n\t            if (formState === void 0) { formState = null; }\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n\t            /** @internal */\n\t            this._onChange = [];\n\t            this._applyFormState(formState);\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t            this._initObservables();\n\t        }\n\t        /**\n\t         * Set the value of the form control to `value`.\n\t         *\n\t         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n\t         * and not its parent component. This defaults to false.\n\t         *\n\t         * If `emitEvent` is `true`, this\n\t         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n\t         * to true (as it falls through to `updateValueAndValidity`).\n\t         *\n\t         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n\t         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n\t         * specified.\n\t         *\n\t         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n\t         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n\t            this._value = value;\n\t            if (this._onChange.length && emitModelToViewChange !== false) {\n\t                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n\t            }\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Patches the value of a control.\n\t         *\n\t         * This function is functionally the same as {\\@link FormControl.setValue} at this level.\n\t         * It exists for symmetry with {\\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n\t         * where it does behave differently.\n\t         * @param {?} value\n\t         * @param {?=} options\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.patchValue = function (value, options) {\n\t            if (options === void 0) { options = {}; }\n\t            this.setValue(value, options);\n\t        };\n\t        /**\n\t         * Resets the form control. This means by default:\n\t         *\n\t         * * it is marked as `pristine`\n\t         * * it is marked as `untouched`\n\t         * * value is set to null\n\t         *\n\t         * You can also reset to a specific form state by passing through a standalone\n\t         * value or a form state object that contains both a value and a disabled state\n\t         * (these are the only two properties that cannot be calculated).\n\t         *\n\t         * Ex:\n\t         *\n\t         * ```ts\n\t         * this.control.reset('Nancy');\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * ```\n\t         *\n\t         * OR\n\t         *\n\t         * ```\n\t         * this.control.reset({value: 'Nancy', disabled: true});\n\t         *\n\t         * console.log(this.control.value);  // 'Nancy'\n\t         * console.log(this.control.status);  // 'DISABLED'\n\t         * ```\n\t         * @param {?=} formState\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.reset = function (formState, _a) {\n\t            if (formState === void 0) { formState = null; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._applyFormState(formState);\n\t            this.markAsPristine({ onlySelf: onlySelf });\n\t            this.markAsUntouched({ onlySelf: onlySelf });\n\t            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._updateValue = function () { };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._anyControls = function (condition) { return false; };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n\t        /**\n\t         * Register a listener for change events.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._clearChangeFns = function () {\n\t            this._onChange = [];\n\t            this._onDisabledChange = [];\n\t            this._onCollectionChange = function () { };\n\t        };\n\t        /**\n\t         * Register a listener for disabled events.\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype.registerOnDisabledChange = function (fn) {\n\t            this._onDisabledChange.push(fn);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._forEachChild = function (cb) { };\n\t        /**\n\t         * @param {?} formState\n\t         * @return {?}\n\t         */\n\t        FormControl.prototype._applyFormState = function (formState) {\n\t            if (this._isBoxedValue(formState)) {\n\t                this._value = formState.value;\n\t                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n\t                    this.enable({ onlySelf: true, emitEvent: false });\n\t            }\n\t            else {\n\t                this._value = formState;\n\t            }\n\t        };\n\t        return FormControl;\n\t    }(AbstractControl));\n\t    /**\n\t     * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n\t     * instances.\n\t     *\n\t     * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n\t     * with each control name as the key.  It calculates its status by reducing the statuses\n\t     * of its children. For example, if one of the controls in a group is invalid, the entire\n\t     * group becomes invalid.\n\t     *\n\t     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {\\@link FormControl} and {\\@link FormArray}.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n\t     * argument. The key for each child will be the name under which it is registered.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   first: new FormControl('Nancy', Validators.minLength(2)),\n\t     *   last: new FormControl('Drew'),\n\t     * });\n\t     *\n\t     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n\t     * console.log(form.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include group-level validators as the second arg, or group-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const form = new FormGroup({\n\t     *   password: new FormControl('', Validators.minLength(2)),\n\t     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n\t     * }, passwordMatchValidator);\n\t     *\n\t     *\n\t     * function passwordMatchValidator(g: FormGroup) {\n\t     *    return g.get('password').value === g.get('passwordConfirm').value\n\t     *       ? null : {'mismatch': true};\n\t     * }\n\t     * ```\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormGroup = (function (_super) {\n\t        __extends$6(FormGroup, _super);\n\t        /**\n\t         * @param {?} controls\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormGroup(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Registers a control with the group's list of controls.\n\t         *\n\t         * This method does not update value or validity of the control, so for\n\t         * most cases you'll want to use {\\@link FormGroup.addControl} instead.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.registerControl = function (name, control) {\n\t            if (this.controls[name])\n\t                return this.controls[name];\n\t            this.controls[name] = control;\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t            return control;\n\t        };\n\t        /**\n\t         * Add a control to this group.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.addControl = function (name, control) {\n\t            this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove a control from this group.\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.removeControl = function (name) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         * @param {?} name\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.setControl = function (name, control) {\n\t            if (this.controls[name])\n\t                this.controls[name]._registerOnCollectionChange(function () { });\n\t            delete (this.controls[name]);\n\t            if (control)\n\t                this.registerControl(name, control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Check whether there is an enabled control with the given name in the group.\n\t         *\n\t         * It will return false for disabled controls. If you'd like to check for\n\t         * existence in the group only, use {\\@link AbstractControl.get} instead.\n\t         * @param {?} controlName\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.contains = function (controlName) {\n\t            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n\t        };\n\t        /**\n\t         *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n\t         *  the structure of the group, with control names as keys.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.setValue({first: 'Nancy', last: 'Drew'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n\t         *\n\t         *  ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            Object.keys(value).forEach(function (name) {\n\t                _this._throwIfControlMissing(name);\n\t                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n\t         *  names as keys, and will do its best to match the values to the correct controls\n\t         *  in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const form = new FormGroup({\n\t         *     first: new FormControl(),\n\t         *     last: new FormControl()\n\t         *  });\n\t         *  console.log(form.value);   // {first: null, last: null}\n\t         *\n\t         *  form.patchValue({first: 'Nancy'});\n\t         *  console.log(form.value);   // {first: 'Nancy', last: null}\n\t         *\n\t         *  ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            Object.keys(value).forEach(function (name) {\n\t                if (_this.controls[name]) {\n\t                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {\\@link FormGroup}. This means by default:\n\t         *\n\t         * * The group and all descendants are marked `pristine`\n\t         * * The group and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in a map of states\n\t         * that matches the structure of your form, with control names as keys. The state\n\t         * can be a standalone value or a form state object with both a value and a disabled\n\t         * status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.form.reset({first: 'name', last: 'last name'});\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.form.reset({\n\t         *   first: {value: 'name', disabled: true},\n\t         *   last: 'last'\n\t         * });\n\t         *\n\t         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n\t         * console.log(this.form.get('first').status);  // 'DISABLED'\n\t         * ```\n\t         * @param {?=} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = {}; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, name) {\n\t                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the group.\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype.getRawValue = function () {\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n\t                return acc;\n\t            });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} name\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._throwIfControlMissing = function (name) {\n\t            if (!Object.keys(this.controls).length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.controls[name]) {\n\t                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._forEachChild = function (cb) {\n\t            var _this = this;\n\t            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) {\n\t                control.setParent(_this);\n\t                control._registerOnCollectionChange(_this._onCollectionChange);\n\t            });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._anyControls = function (condition) {\n\t            var _this = this;\n\t            var /** @type {?} */ res = false;\n\t            this._forEachChild(function (control, name) {\n\t                res = res || (_this.contains(name) && condition(control));\n\t            });\n\t            return res;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._reduceValue = function () {\n\t            var _this = this;\n\t            return this._reduceChildren({}, function (acc, control, name) {\n\t                if (control.enabled || _this.disabled) {\n\t                    acc[name] = control.value;\n\t                }\n\t                return acc;\n\t            });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} initValue\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n\t            var /** @type {?} */ res = initValue;\n\t            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n\t            return res;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n\t                var controlName = _a[_i];\n\t                if (this.controls[controlName].enabled) {\n\t                    return false;\n\t                }\n\t            }\n\t            return Object.keys(this.controls).length > 0 || this.disabled;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormGroup.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, name) {\n\t                if (value[name] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n\t                }\n\t            });\n\t        };\n\t        return FormGroup;\n\t    }(AbstractControl));\n\t    /**\n\t     * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n\t     * {\\@link FormGroup} or {\\@link FormArray} instances.\n\t     *\n\t     * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n\t     * It calculates its status by reducing the statuses of its children. For example, if one of\n\t     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n\t     *\n\t     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n\t     * along with {\\@link FormControl} and {\\@link FormGroup}.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n\t     * argument.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * const arr = new FormArray([\n\t     *   new FormControl('Nancy', Validators.minLength(2)),\n\t     *   new FormControl('Drew'),\n\t     * ]);\n\t     *\n\t     * console.log(arr.value);   // ['Nancy', 'Drew']\n\t     * console.log(arr.status);  // 'VALID'\n\t     * ```\n\t     *\n\t     * You can also include array-level validators as the second arg, or array-level async\n\t     * validators as the third arg. These come in handy when you want to perform validation\n\t     * that considers the value of more than one child control.\n\t     *\n\t     * ### Adding or removing controls\n\t     *\n\t     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n\t     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n\t     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n\t     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n\t     * as broken change detection.\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormArray = (function (_super) {\n\t        __extends$6(FormArray, _super);\n\t        /**\n\t         * @param {?} controls\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         */\n\t        function FormArray(controls, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            _super.call(this, validator, asyncValidator);\n\t            this.controls = controls;\n\t            this._initObservables();\n\t            this._setUpControls();\n\t            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n\t        }\n\t        /**\n\t         * Get the {\\@link AbstractControl} at the given `index` in the array.\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.at = function (index) { return this.controls[index]; };\n\t        /**\n\t         * Insert a new {\\@link AbstractControl} at the end of the array.\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.push = function (control) {\n\t            this.controls.push(control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n\t         * @param {?} index\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.insert = function (index, control) {\n\t            this.controls.splice(index, 0, control);\n\t            this._registerControl(control);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Remove the control at the given `index` in the array.\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.removeAt = function (index) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        /**\n\t         * Replace an existing control.\n\t         * @param {?} index\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.setControl = function (index, control) {\n\t            if (this.controls[index])\n\t                this.controls[index]._registerOnCollectionChange(function () { });\n\t            this.controls.splice(index, 1);\n\t            if (control) {\n\t                this.controls.splice(index, 0, control);\n\t                this._registerControl(control);\n\t            }\n\t            this.updateValueAndValidity();\n\t            this._onCollectionChange();\n\t        };\n\t        Object.defineProperty(FormArray.prototype, \"length\", {\n\t            /**\n\t             * Length of the control array.\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.controls.length; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n\t         *  the structure of the control.\n\t         *\n\t         * This method performs strict checks, so it will throw an error if you try\n\t         * to set the value of a control that doesn't exist or if you exclude the\n\t         * value of a control.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.setValue(['Nancy', 'Drew']);\n\t         *  console.log(arr.value);   // ['Nancy', 'Drew']\n\t         *  ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.setValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._checkAllValuesPresent(value);\n\t            value.forEach(function (newValue, index) {\n\t                _this._throwIfControlMissing(index);\n\t                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n\t         *  structure of the control, and will do its best to match the values to the correct\n\t         *  controls in the group.\n\t         *\n\t         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n\t         *\n\t         *  ### Example\n\t         *\n\t         *  ```\n\t         *  const arr = new FormArray([\n\t         *     new FormControl(),\n\t         *     new FormControl()\n\t         *  ]);\n\t         *  console.log(arr.value);   // [null, null]\n\t         *\n\t         *  arr.patchValue(['Nancy']);\n\t         *  console.log(arr.value);   // ['Nancy', null]\n\t         *  ```\n\t         * @param {?} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.patchValue = function (value, _a) {\n\t            var _this = this;\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            value.forEach(function (newValue, index) {\n\t                if (_this.at(index)) {\n\t                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n\t                }\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t        };\n\t        /**\n\t         * Resets the {\\@link FormArray}. This means by default:\n\t         *\n\t         * * The array and all descendants are marked `pristine`\n\t         * * The array and all descendants are marked `untouched`\n\t         * * The value of all descendants will be null or null maps\n\t         *\n\t         * You can also reset to a specific form state by passing in an array of states\n\t         * that matches the structure of the control. The state can be a standalone value\n\t         * or a form state object with both a value and a disabled status.\n\t         *\n\t         * ### Example\n\t         *\n\t         * ```ts\n\t         * this.arr.reset(['name', 'last name']);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * ```\n\t         *\n\t         * - OR -\n\t         *\n\t         * ```\n\t         * this.arr.reset([\n\t         *   {value: 'name', disabled: true},\n\t         *   'last'\n\t         * ]);\n\t         *\n\t         * console.log(this.arr.value);  // ['name', 'last name']\n\t         * console.log(this.arr.get(0).status);  // 'DISABLED'\n\t         * ```\n\t         * @param {?=} value\n\t         * @param {?=} __1\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.reset = function (value, _a) {\n\t            if (value === void 0) { value = []; }\n\t            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n\t            this._forEachChild(function (control, index) {\n\t                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n\t            });\n\t            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n\t            this._updatePristine({ onlySelf: onlySelf });\n\t            this._updateTouched({ onlySelf: onlySelf });\n\t        };\n\t        /**\n\t         * The aggregate value of the array, including any disabled controls.\n\t         *\n\t         * If you'd like to include all values regardless of disabled status, use this method.\n\t         * Otherwise, the `value` property is the best way to get the value of the array.\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype.getRawValue = function () {\n\t            return this.controls.map(function (control) {\n\t                return control instanceof FormControl ? control.value : ((control)).getRawValue();\n\t            });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} index\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._throwIfControlMissing = function (index) {\n\t            if (!this.controls.length) {\n\t                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n\t            }\n\t            if (!this.at(index)) {\n\t                throw new Error(\"Cannot find form control at index \" + index);\n\t            }\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} cb\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._forEachChild = function (cb) {\n\t            this.controls.forEach(function (control, index) { cb(control, index); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._updateValue = function () {\n\t            var _this = this;\n\t            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n\t                .map(function (control) { return control.value; });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} condition\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._anyControls = function (condition) {\n\t            return this.controls.some(function (control) { return control.enabled && condition(control); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._setUpControls = function () {\n\t            var _this = this;\n\t            this._forEachChild(function (control) { return _this._registerControl(control); });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._checkAllValuesPresent = function (value) {\n\t            this._forEachChild(function (control, i) {\n\t                if (value[i] === undefined) {\n\t                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._allControlsDisabled = function () {\n\t            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n\t                var control = _a[_i];\n\t                if (control.enabled)\n\t                    return false;\n\t            }\n\t            return this.controls.length > 0 || this.disabled;\n\t        };\n\t        /**\n\t         * @param {?} control\n\t         * @return {?}\n\t         */\n\t        FormArray.prototype._registerControl = function (control) {\n\t            control.setParent(this);\n\t            control._registerOnCollectionChange(this._onCollectionChange);\n\t        };\n\t        return FormArray;\n\t    }(AbstractControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$4 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formDirectiveProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n\t    };\n\t    var /** @type {?} */ resolvedPromise = Promise.resolve(null);\n\t    /**\n\t     * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n\t     * to track aggregate form value and validation status.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * As soon as you import the `FormsModule`, this directive becomes active by default on\n\t     * all `<form>` tags.  You don't need to add a special selector.\n\t     *\n\t     * You can export the directive into a local template variable using `ngForm` as the key\n\t     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n\t     * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n\t     * will give you access to the aggregate value and validity status of the form, as well as\n\t     * user interaction properties like `dirty` and `touched`.\n\t     *\n\t     * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n\t     * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n\t     * sub-groups within the form.\n\t     *\n\t     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var NgForm = (function (_super) {\n\t        __extends$4(NgForm, _super);\n\t        /**\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function NgForm(validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._submitted = false;\n\t            this.ngSubmit = new EventEmitter();\n\t            this.form =\n\t                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n\t        }\n\t        Object.defineProperty(NgForm.prototype, \"submitted\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgForm.prototype, \"controls\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form.controls; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.addControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                dir._control = (container.registerControl(dir.name, dir.control));\n\t                setUpControl(dir.control, dir);\n\t                dir.control.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.removeControl = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.addFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                var /** @type {?} */ group = new FormGroup({});\n\t                setUpFormContainer(group, dir);\n\t                container.registerControl(dir.name, group);\n\t                group.updateValueAndValidity({ emitEvent: false });\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.removeFormGroup = function (dir) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ container = _this._findContainer(dir.path);\n\t                if (container) {\n\t                    container.removeControl(dir.name);\n\t                }\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.updateModel = function (dir, value) {\n\t            var _this = this;\n\t            resolvedPromise.then(function () {\n\t                var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n\t                ctrl.setValue(value);\n\t            });\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n\t        /**\n\t         * @param {?} $event\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.onReset = function () { this.resetForm(); };\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} path\n\t         * @return {?}\n\t         */\n\t        NgForm.prototype._findContainer = function (path) {\n\t            path.pop();\n\t            return path.length ? (this.form.get(path)) : this.form;\n\t        };\n\t        NgForm.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n\t                        providers: [formDirectiveProvider],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        outputs: ['ngSubmit'],\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgForm.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        return NgForm;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var /** @type {?} */ Examples = {\n\t        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n\t        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n\t        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n\t        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n\t        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n\t    };\n\t\n\t    var TemplateDrivenErrors = (function () {\n\t        function TemplateDrivenErrors() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.modelParentException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.formGroupNameException = function () {\n\t            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.missingNameException = function () {\n\t            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        TemplateDrivenErrors.modelGroupParentException = function () {\n\t            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n\t        };\n\t        return TemplateDrivenErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$8 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ modelGroupProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n\t     * within `<form>` tags).\n\t     *\n\t     * Use this directive if you'd like to create a sub-group within a form. This can\n\t     * come in handy if you want to validate a sub-group of your form separately from\n\t     * the rest of your form, or if some values in your domain model make more sense to\n\t     * consume together in a nested object.\n\t     *\n\t     * Pass in the name you'd like this sub-group to have and it will become the key\n\t     * for the sub-group in the form's full value. You can also export the directive into\n\t     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n\t     *\n\t     * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * * **NgModule**: `FormsModule`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var NgModelGroup = (function (_super) {\n\t        __extends$8(NgModelGroup, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function NgModelGroup(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        NgModelGroup.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelGroupParentException();\n\t            }\n\t        };\n\t        NgModelGroup.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModelGroup.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        NgModelGroup.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n\t        };\n\t        return NgModelGroup;\n\t    }(AbstractFormGroupDirective));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$7 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formControlBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n\t    };\n\t    /**\n\t     * `ngModel` forces an additional change detection run when its inputs change:\n\t     * E.g.:\n\t     * ```\n\t     * <div>{{myModel.valid}}</div>\n\t     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n\t     * ```\n\t     * I.e. `ngModel` can export itself on the element and then be used in the template.\n\t     * Normally, this would result in expressions before the `input` that use the exported directive\n\t     * to have and old value as they have been\n\t     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n\t     * detection run.\n\t     *\n\t     * Notes:\n\t     * - this is just one extra run no matter how many `ngModel` have been changed.\n\t     * - this is a general problem when using `exportAs` for directives!\n\t     */\n\t    var /** @type {?} */ resolvedPromise$1 = Promise.resolve(null);\n\t    /**\n\t     * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n\t     * to a form control element.\n\t     *\n\t     * The {\\@link FormControl} instance will track the value, user interaction, and\n\t     * validation status of the control and keep the view synced with the model. If used\n\t     * within a parent form, the directive will also register itself with the form as a child\n\t     * control.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive can be used by itself or as part of a larger form. All you need is the\n\t     * `ngModel` selector to activate it.\n\t     *\n\t     * It accepts a domain model as an optional {\\@link \\@Input}. If you have a one-way binding\n\t     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n\t     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n\t     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n\t     * the domain model in your class as well.\n\t     *\n\t     * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n\t     * validity state), you can also export the directive into a local template variable using\n\t     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n\t     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n\t     * will fall through to the control anyway, so you can access them directly. You can see a\n\t     * full list of properties directly available in {\\@link AbstractControlDirective}.\n\t     *\n\t     * The following is an example of a simple standalone control using `ngModel`:\n\t     *\n\t     * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n\t     *\n\t     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n\t     * so that the control can be registered with the parent form under that name.\n\t     *\n\t     * It's worth noting that in the context of a parent form, you often can skip one-way or\n\t     * two-way binding because the parent form will sync the value for you. You can access\n\t     * its properties by exporting it into a local template variable using `ngForm` (ex:\n\t     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n\t     *\n\t     * If you do need to populate initial values into your form, using a one-way binding for\n\t     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n\t     * than the domain model's value on submit.\n\t     *\n\t     * Take a look at an example of using `ngModel` within a form:\n\t     *\n\t     * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n\t     *\n\t     * To see `ngModel` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {\\@link RadioControlValueAccessor}\n\t     * * Selects: {\\@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `\\@angular/forms`\n\t     *\n\t     * **NgModule**: `FormsModule`\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var NgModel = (function (_super) {\n\t        __extends$7(NgModel, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            /** @internal */\n\t            this._control = new FormControl();\n\t            /** @internal */\n\t            this._registered = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.ngOnChanges = function (changes) {\n\t            this._checkForErrors();\n\t            if (!this._registered)\n\t                this._setUpControl();\n\t            if ('isDisabled' in changes) {\n\t                this._updateDisabled(changes);\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this._updateValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n\t        Object.defineProperty(NgModel.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._setUpControl = function () {\n\t            this._isStandalone() ? this._setUpStandalone() :\n\t                this.formDirective.addControl(this);\n\t            this._registered = true;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._isStandalone = function () {\n\t            return !this._parent || (this.options && this.options.standalone);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._setUpStandalone = function () {\n\t            setUpControl(this._control, this);\n\t            this._control.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkForErrors = function () {\n\t            if (!this._isStandalone()) {\n\t                this._checkParentType();\n\t            }\n\t            this._checkName();\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof NgModelGroup) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                TemplateDrivenErrors.formGroupNameException();\n\t            }\n\t            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n\t                TemplateDrivenErrors.modelParentException();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._checkName = function () {\n\t            if (this.options && this.options.name)\n\t                this.name = this.options.name;\n\t            if (!this._isStandalone() && !this.name) {\n\t                TemplateDrivenErrors.missingNameException();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._updateValue = function (value) {\n\t            var _this = this;\n\t            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        NgModel.prototype._updateDisabled = function (changes) {\n\t            var _this = this;\n\t            var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n\t            var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n\t            resolvedPromise$1.then(function () {\n\t                if (isDisabled && !_this.control.disabled) {\n\t                    _this.control.disable();\n\t                }\n\t                else if (!isDisabled && _this.control.disabled) {\n\t                    _this.control.enable();\n\t                }\n\t            });\n\t        };\n\t        NgModel.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n\t                        providers: [formControlBinding],\n\t                        exportAs: 'ngModel'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        NgModel.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        NgModel.propDecorators = {\n\t            'name': [{ type: _angular_core.Input },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t        };\n\t        return NgModel;\n\t    }(NgControl));\n\t\n\t    var ReactiveErrors = (function () {\n\t        function ReactiveErrors() {\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.controlParentException = function () {\n\t            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.ngModelGroupException = function () {\n\t            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.missingFormException = function () {\n\t            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.groupParentException = function () {\n\t            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.arrayParentException = function () {\n\t            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        ReactiveErrors.disabledAttrWarning = function () {\n\t            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n\t        };\n\t        return ReactiveErrors;\n\t    }());\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$9 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formControlBinding$1 = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {\\@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {\\@link FormControl} instance (view -> model).\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n\t     * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n\t     * {\\@link FormControlDirective}.\n\t     *\n\t     * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n\t     * it does not require that your {\\@link FormControl} instance be part of any parent\n\t     * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n\t     * exists above it.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {\\@link FormControl} instance. See a full list of available properties in\n\t     * {\\@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n\t     * or you can set it programmatically later using {\\@link AbstractControl.setValue} or\n\t     * {\\@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var FormControlDirective = (function (_super) {\n\t        __extends$9(FormControlDirective, _super);\n\t        /**\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this.update = new EventEmitter();\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n\t            /**\n\t             * @param {?} isDisabled\n\t             * @return {?}\n\t             */\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype.ngOnChanges = function (changes) {\n\t            if (this._isControlChanged(changes)) {\n\t                setUpControl(this.form, this);\n\t                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                    this.valueAccessor.setDisabledState(true);\n\t                }\n\t                this.form.updateValueAndValidity({ emitEvent: false });\n\t            }\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.form.setValue(this.model);\n\t                this.viewModel = this.model;\n\t            }\n\t        };\n\t        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlDirective.prototype._isControlChanged = function (changes) {\n\t            return changes.hasOwnProperty('form');\n\t        };\n\t        FormControlDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlDirective.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        FormControlDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlDirective;\n\t    }(NgControl));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$11 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formDirectiveProvider$1 = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n\t     * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n\t     * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n\t     * and {\\@link FormArrayName} directives.\n\t     *\n\t     * **Set value**: You can set the form's initial value when instantiating the\n\t     * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n\t     * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n\t     * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n\t     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n\t     * submission event.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * **npm package**: `\\@angular/forms`\n\t     *\n\t     * **NgModule**: {\\@link ReactiveFormsModule}\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var FormGroupDirective = (function (_super) {\n\t        __extends$11(FormGroupDirective, _super);\n\t        /**\n\t         * @param {?} _validators\n\t         * @param {?} _asyncValidators\n\t         */\n\t        function FormGroupDirective(_validators, _asyncValidators) {\n\t            _super.call(this);\n\t            this._validators = _validators;\n\t            this._asyncValidators = _asyncValidators;\n\t            this._submitted = false;\n\t            this.directives = [];\n\t            this.form = null;\n\t            this.ngSubmit = new EventEmitter();\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n\t            this._checkFormPresent();\n\t            if (changes.hasOwnProperty('form')) {\n\t                this._updateValidators();\n\t                this._updateDomValue();\n\t                this._updateRegistrations();\n\t            }\n\t        };\n\t        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._submitted; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.form; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return []; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addControl = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpControl(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t            this.directives.push(dir);\n\t            return ctrl;\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addFormGroup = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.addFormArray = function (dir) {\n\t            var /** @type {?} */ ctrl = this.form.get(dir.path);\n\t            setUpFormContainer(ctrl, dir);\n\t            ctrl.updateValueAndValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n\t        /**\n\t         * @param {?} dir\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n\t        /**\n\t         * @param {?} dir\n\t         * @param {?} value\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.updateModel = function (dir, value) {\n\t            var /** @type {?} */ ctrl = (this.form.get(dir.path));\n\t            ctrl.setValue(value);\n\t        };\n\t        /**\n\t         * @param {?} $event\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.onSubmit = function ($event) {\n\t            this._submitted = true;\n\t            this.ngSubmit.emit($event);\n\t            return false;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n\t        /**\n\t         * @param {?=} value\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype.resetForm = function (value) {\n\t            if (value === void 0) { value = undefined; }\n\t            this.form.reset(value);\n\t            this._submitted = false;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateDomValue = function () {\n\t            var _this = this;\n\t            this.directives.forEach(function (dir) {\n\t                var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n\t                if (dir._control !== newCtrl) {\n\t                    cleanUpControl(dir._control, dir);\n\t                    if (newCtrl)\n\t                        setUpControl(newCtrl, dir);\n\t                    dir._control = newCtrl;\n\t                }\n\t            });\n\t            this.form._updateTreeValidity({ emitEvent: false });\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateRegistrations = function () {\n\t            var _this = this;\n\t            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n\t            if (this._oldForm)\n\t                this._oldForm._registerOnCollectionChange(function () { });\n\t            this._oldForm = this.form;\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._updateValidators = function () {\n\t            var /** @type {?} */ sync = composeValidators(this._validators);\n\t            this.form.validator = Validators.compose([this.form.validator, sync]);\n\t            var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n\t            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormGroupDirective.prototype._checkFormPresent = function () {\n\t            if (!this.form) {\n\t                ReactiveErrors.missingFormException();\n\t            }\n\t        };\n\t        FormGroupDirective.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[formGroup]',\n\t                        providers: [formDirectiveProvider$1],\n\t                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n\t                        exportAs: 'ngForm'\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupDirective.ctorParameters = function () { return [\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormGroupDirective.propDecorators = {\n\t            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n\t            'ngSubmit': [{ type: _angular_core.Output },],\n\t        };\n\t        return FormGroupDirective;\n\t    }(ControlContainer));\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$12 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ formGroupNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n\t     * will look for a {\\@link FormGroup} registered with that name in the parent\n\t     * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n\t     *\n\t     * Nested form groups can come in handy when you want to validate a sub-group of a\n\t     * form separately from the rest or when you'd like to group the values of certain\n\t     * controls into their own nested object.\n\t     *\n\t     * **Access the group**: You can access the associated {\\@link FormGroup} using the\n\t     * {\\@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n\t     *\n\t     * You can also access individual controls within the group using dot syntax.\n\t     * Ex: `this.form.get('name.first')`\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {\\@link FormGroup}, or you can set it programmatically later using\n\t     * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n\t     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormGroupName = (function (_super) {\n\t        __extends$12(FormGroupName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function FormGroupName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * \\@internal\n\t         * @return {?}\n\t         */\n\t        FormGroupName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.groupParentException();\n\t            }\n\t        };\n\t        FormGroupName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormGroupName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormGroupName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n\t        };\n\t        return FormGroupName;\n\t    }(AbstractFormGroupDirective));\n\t    var /** @type {?} */ formArrayNameProvider = {\n\t        provide: ControlContainer,\n\t        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n\t     * will look for a {\\@link FormArray} registered with that name in the parent\n\t     * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n\t     *\n\t     * Nested form arrays can come in handy when you have a group of form controls but\n\t     * you're not sure how many there will be. Form arrays allow you to create new\n\t     * form controls dynamically.\n\t     *\n\t     * **Access the array**: You can access the associated {\\@link FormArray} using the\n\t     * {\\@link AbstractControl.get} method on the parent {\\@link FormGroup}.\n\t     * Ex: `this.form.get('cities')`.\n\t     *\n\t     * **Get the value**: the `value` property is always synced and available on the\n\t     * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n\t     *\n\t     * **Set the value**: You can set an initial value for each child control when instantiating\n\t     * the {\\@link FormArray}, or you can set the value programmatically later using the\n\t     * {\\@link FormArray}'s {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}\n\t     * methods.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n\t     * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl.valueChanges} event.  You can also\n\t     * listen to its {\\@link AbstractControl.statusChanges} event to be notified when the validation\n\t     * status is re-calculated.\n\t     *\n\t     * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n\t     * calling its {\\@link FormArray.push} method.\n\t     *  Ex: `this.form.get('cities').push(new FormControl());`\n\t     *\n\t     * ### Example\n\t     *\n\t     * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n\t     *\n\t     * * **npm package**: `\\@angular/forms`\n\t     *\n\t     * * **NgModule**: `ReactiveFormsModule`\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormArrayName = (function (_super) {\n\t        __extends$12(FormArrayName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         */\n\t        function FormArrayName(parent, validators, asyncValidators) {\n\t            _super.call(this);\n\t            this._parent = parent;\n\t            this._validators = validators;\n\t            this._asyncValidators = asyncValidators;\n\t        }\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype.ngOnInit = function () {\n\t            this._checkParentType();\n\t            this.formDirective.addFormArray(this);\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeFormArray(this);\n\t            }\n\t        };\n\t        Object.defineProperty(FormArrayName.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this.formDirective.getFormArray(this); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return this._parent ? (this._parent.formDirective) : null;\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._validators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeAsyncValidators(this._asyncValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormArrayName.prototype._checkParentType = function () {\n\t            if (_hasInvalidParent(this._parent)) {\n\t                ReactiveErrors.arrayParentException();\n\t            }\n\t        };\n\t        FormArrayName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormArrayName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t        ]; };\n\t        FormArrayName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n\t        };\n\t        return FormArrayName;\n\t    }(ControlContainer));\n\t    /**\n\t     * @param {?} parent\n\t     * @return {?}\n\t     */\n\t    function _hasInvalidParent(parent) {\n\t        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n\t            !(parent instanceof FormArrayName);\n\t    }\n\t\n\t    /**\n\t     * @license\n\t     * Copyright Google Inc. All Rights Reserved.\n\t     *\n\t     * Use of this source code is governed by an MIT-style license that can be\n\t     * found in the LICENSE file at https://angular.io/license\n\t     */\n\t    var __extends$10 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ controlNameBinding = {\n\t        provide: NgControl,\n\t        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n\t    };\n\t    /**\n\t     * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n\t     * element by name.\n\t     *\n\t     * In other words, this directive ensures that any values written to the {\\@link FormControl}\n\t     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n\t     * any values written to the DOM element through user input will be reflected in the\n\t     * {\\@link FormControl} instance (view -> model).\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n\t     * `[formGroup]`).\n\t     *\n\t     * It accepts the string name of the {\\@link FormControl} instance you want to\n\t     * link, and will look for a {\\@link FormControl} registered with that name in the\n\t     * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n\t     *\n\t     * **Access the control**: You can access the {\\@link FormControl} associated with\n\t     * this directive by using the {\\@link AbstractControl.get} method.\n\t     * Ex: `this.form.get('first');`\n\t     *\n\t     * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n\t     * See a full list of available properties in {\\@link AbstractControl}.\n\t     *\n\t     *  **Set value**: You can set an initial value for the control when instantiating the\n\t     *  {\\@link FormControl}, or you can set it programmatically later using\n\t     *  {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n\t     *\n\t     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n\t     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n\t     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n\t     * re-calculated.\n\t     *\n\t     * ### Example\n\t     *\n\t     * In this example, we create form controls for first name and last name.\n\t     *\n\t     * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n\t     *\n\t     * To see `formControlName` examples with different form control types, see:\n\t     *\n\t     * * Radio buttons: {\\@link RadioControlValueAccessor}\n\t     * * Selects: {\\@link SelectControlValueAccessor}\n\t     *\n\t     * **npm package**: `\\@angular/forms`\n\t     *\n\t     * **NgModule**: {\\@link ReactiveFormsModule}\n\t     *\n\t     *  \\@stable\n\t     */\n\t    var FormControlName = (function (_super) {\n\t        __extends$10(FormControlName, _super);\n\t        /**\n\t         * @param {?} parent\n\t         * @param {?} validators\n\t         * @param {?} asyncValidators\n\t         * @param {?} valueAccessors\n\t         */\n\t        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n\t            _super.call(this);\n\t            this._added = false;\n\t            this.update = new EventEmitter();\n\t            this._parent = parent;\n\t            this._rawValidators = validators || [];\n\t            this._rawAsyncValidators = asyncValidators || [];\n\t            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n\t        }\n\t        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n\t            /**\n\t             * @param {?} isDisabled\n\t             * @return {?}\n\t             */\n\t            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.ngOnChanges = function (changes) {\n\t            if (!this._added)\n\t                this._setUpControl();\n\t            if (isPropertyUpdated(changes, this.viewModel)) {\n\t                this.viewModel = this.model;\n\t                this.formDirective.updateModel(this, this.model);\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.ngOnDestroy = function () {\n\t            if (this.formDirective) {\n\t                this.formDirective.removeControl(this);\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} newValue\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n\t            this.viewModel = newValue;\n\t            this.update.emit(newValue);\n\t        };\n\t        Object.defineProperty(FormControlName.prototype, \"path\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return controlPath(this.name, this._parent); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._parent ? this._parent.formDirective : null; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"validator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return composeValidators(this._rawValidators); },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () {\n\t                return composeAsyncValidators(this._rawAsyncValidators);\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        Object.defineProperty(FormControlName.prototype, \"control\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._control; },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype._checkParentType = function () {\n\t            if (!(this._parent instanceof FormGroupName) &&\n\t                this._parent instanceof AbstractFormGroupDirective) {\n\t                ReactiveErrors.ngModelGroupException();\n\t            }\n\t            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n\t                !(this._parent instanceof FormArrayName)) {\n\t                ReactiveErrors.controlParentException();\n\t            }\n\t        };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        FormControlName.prototype._setUpControl = function () {\n\t            this._checkParentType();\n\t            this._control = this.formDirective.addControl(this);\n\t            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n\t                this.valueAccessor.setDisabledState(true);\n\t            }\n\t            this._added = true;\n\t        };\n\t        FormControlName.decorators = [\n\t            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormControlName.ctorParameters = function () { return [\n\t            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n\t            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n\t        ]; };\n\t        FormControlName.propDecorators = {\n\t            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n\t            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n\t            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n\t            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n\t        };\n\t        return FormControlName;\n\t    }(NgControl));\n\t\n\t    var __extends$13 = (this && this.__extends) || function (d, b) {\n\t        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t        function __() { this.constructor = d; }\n\t        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t    };\n\t    var /** @type {?} */ REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n\t        multi: true\n\t    };\n\t    var /** @type {?} */ CHECKBOX_REQUIRED_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return CheckboxRequiredValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `required` validator to any controls marked with the\n\t     * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input name=\"fullName\" ngModel required>\n\t     * ```\n\t     *\n\t     * \\@stable\n\t     */\n\t    var RequiredValidator = (function () {\n\t        function RequiredValidator() {\n\t        }\n\t        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n\t            /**\n\t             * @return {?}\n\t             */\n\t            get: function () { return this._required; },\n\t            /**\n\t             * @param {?} value\n\t             * @return {?}\n\t             */\n\t            set: function (value) {\n\t                this._required = value != null && value !== false && \"\" + value !== 'false';\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            },\n\t            enumerable: true,\n\t            configurable: true\n\t        });\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        RequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.required(c) : null;\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        RequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n\t                        providers: [REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required ? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        RequiredValidator.ctorParameters = function () { return []; };\n\t        RequiredValidator.propDecorators = {\n\t            'required': [{ type: _angular_core.Input },],\n\t        };\n\t        return RequiredValidator;\n\t    }());\n\t    /**\n\t     * A Directive that adds the `required` validator to checkbox controls marked with the\n\t     * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input type=\"checkbox\" name=\"active\" ngModel required>\n\t     * ```\n\t     *\n\t     * \\@experimental\n\t     */\n\t    var CheckboxRequiredValidator = (function (_super) {\n\t        __extends$13(CheckboxRequiredValidator, _super);\n\t        function CheckboxRequiredValidator() {\n\t            _super.apply(this, arguments);\n\t        }\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        CheckboxRequiredValidator.prototype.validate = function (c) {\n\t            return this.required ? Validators.requiredTrue(c) : null;\n\t        };\n\t        CheckboxRequiredValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n\t                        providers: [CHECKBOX_REQUIRED_VALIDATOR],\n\t                        host: { '[attr.required]': 'required ? \"\" : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        CheckboxRequiredValidator.ctorParameters = function () { return []; };\n\t        return CheckboxRequiredValidator;\n\t    }(RequiredValidator));\n\t    /**\n\t     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='min'}\n\t     */\n\t    var /** @type {?} */ MIN_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n\t     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var MinLengthValidator = (function () {\n\t        function MinLengthValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('minlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.validate = function (c) {\n\t            return this.minlength == null ? null : this._validator(c);\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        MinLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n\t        };\n\t        MinLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n\t                        providers: [MIN_LENGTH_VALIDATOR],\n\t                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MinLengthValidator.ctorParameters = function () { return []; };\n\t        MinLengthValidator.propDecorators = {\n\t            'minlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MinLengthValidator;\n\t    }());\n\t    /**\n\t     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n\t     *\n\t     * ## Example:\n\t     *\n\t     * {@example common/forms/ts/validators/validators.ts region='max'}\n\t     */\n\t    var /** @type {?} */ MAX_LENGTH_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n\t     * `formControl`,\n\t     * or control with `ngModel` that also has a `maxlength` attribute.\n\t     *\n\t     * \\@stable\n\t     */\n\t    var MaxLengthValidator = (function () {\n\t        function MaxLengthValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('maxlength' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.validate = function (c) {\n\t            return this.maxlength != null ? this._validator(c) : null;\n\t        };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        MaxLengthValidator.prototype._createValidator = function () {\n\t            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n\t        };\n\t        MaxLengthValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n\t                        providers: [MAX_LENGTH_VALIDATOR],\n\t                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        MaxLengthValidator.ctorParameters = function () { return []; };\n\t        MaxLengthValidator.propDecorators = {\n\t            'maxlength': [{ type: _angular_core.Input },],\n\t        };\n\t        return MaxLengthValidator;\n\t    }());\n\t    var /** @type {?} */ PATTERN_VALIDATOR = {\n\t        provide: NG_VALIDATORS,\n\t        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n\t        multi: true\n\t    };\n\t    /**\n\t     * A Directive that adds the `pattern` validator to any controls marked with the\n\t     * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n\t     * as the regex to validate Control value against.  Follows pattern attribute\n\t     * semantics; i.e. regex must match entire Control value.\n\t     *\n\t     * ### Example\n\t     *\n\t     * ```\n\t     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n\t     * ```\n\t     * \\@stable\n\t     */\n\t    var PatternValidator = (function () {\n\t        function PatternValidator() {\n\t        }\n\t        /**\n\t         * @param {?} changes\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.ngOnChanges = function (changes) {\n\t            if ('pattern' in changes) {\n\t                this._createValidator();\n\t                if (this._onChange)\n\t                    this._onChange();\n\t            }\n\t        };\n\t        /**\n\t         * @param {?} c\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n\t        /**\n\t         * @param {?} fn\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n\t        /**\n\t         * @return {?}\n\t         */\n\t        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n\t        PatternValidator.decorators = [\n\t            { type: _angular_core.Directive, args: [{\n\t                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n\t                        providers: [PATTERN_VALIDATOR],\n\t                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        PatternValidator.ctorParameters = function () { return []; };\n\t        PatternValidator.propDecorators = {\n\t            'pattern': [{ type: _angular_core.Input },],\n\t        };\n\t        return PatternValidator;\n\t    }());\n\t\n\t    /**\n\t     * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n\t     *\n\t     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n\t     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n\t     * forms.\n\t     *\n\t     * \\@howToUse\n\t     *\n\t     * To use, inject `FormBuilder` into your component class. You can then call its methods\n\t     * directly.\n\t     *\n\t     * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n\t     *\n\t     *  * **npm package**: `\\@angular/forms`\n\t     *\n\t     *  * **NgModule**: {\\@link ReactiveFormsModule}\n\t     *\n\t     * \\@stable\n\t     */\n\t    var FormBuilder = (function () {\n\t        function FormBuilder() {\n\t        }\n\t        /**\n\t         * Construct a new {\\@link FormGroup} with the given map of configuration.\n\t         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n\t         *\n\t         * See the {\\@link FormGroup} constructor for more details.\n\t         * @param {?} controlsConfig\n\t         * @param {?=} extra\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.group = function (controlsConfig, extra) {\n\t            if (extra === void 0) { extra = null; }\n\t            var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n\t            var /** @type {?} */ validator = isPresent(extra) ? extra['validator'] : null;\n\t            var /** @type {?} */ asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n\t            return new FormGroup(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n\t         * `asyncValidator`.\n\t         *\n\t         * `formState` can either be a standalone value for the form control or an object\n\t         * that contains both a value and a disabled status.\n\t         *\n\t         * @param {?} formState\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            return new FormControl(formState, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n\t         * configuration, with the given optional `validator` and `asyncValidator`.\n\t         * @param {?} controlsConfig\n\t         * @param {?=} validator\n\t         * @param {?=} asyncValidator\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n\t            var _this = this;\n\t            if (validator === void 0) { validator = null; }\n\t            if (asyncValidator === void 0) { asyncValidator = null; }\n\t            var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n\t            return new FormArray(controls, validator, asyncValidator);\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} controlsConfig\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n\t            var _this = this;\n\t            var /** @type {?} */ controls = {};\n\t            Object.keys(controlsConfig).forEach(function (controlName) {\n\t                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n\t            });\n\t            return controls;\n\t        };\n\t        /**\n\t         * \\@internal\n\t         * @param {?} controlConfig\n\t         * @return {?}\n\t         */\n\t        FormBuilder.prototype._createControl = function (controlConfig) {\n\t            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n\t                controlConfig instanceof FormArray) {\n\t                return controlConfig;\n\t            }\n\t            else if (Array.isArray(controlConfig)) {\n\t                var /** @type {?} */ value = controlConfig[0];\n\t                var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n\t                var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n\t                return this.control(value, validator, asyncValidator);\n\t            }\n\t            else {\n\t                return this.control(controlConfig);\n\t            }\n\t        };\n\t        FormBuilder.decorators = [\n\t            { type: _angular_core.Injectable },\n\t        ];\n\t        /** @nocollapse */\n\t        FormBuilder.ctorParameters = function () { return []; };\n\t        return FormBuilder;\n\t    }());\n\t\n\t    /**\n\t     * @stable\n\t     */\n\t    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\t\n\t    var /** @type {?} */ SHARED_FORM_DIRECTIVES = [\n\t        NgSelectOption,\n\t        NgSelectMultipleOption,\n\t        DefaultValueAccessor,\n\t        NumberValueAccessor,\n\t        RangeValueAccessor,\n\t        CheckboxControlValueAccessor,\n\t        SelectControlValueAccessor,\n\t        SelectMultipleControlValueAccessor,\n\t        RadioControlValueAccessor,\n\t        NgControlStatus,\n\t        NgControlStatusGroup,\n\t        RequiredValidator,\n\t        MinLengthValidator,\n\t        MaxLengthValidator,\n\t        PatternValidator,\n\t        CheckboxRequiredValidator,\n\t    ];\n\t    var /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n\t    var /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n\t    /**\n\t     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n\t     */\n\t    var InternalFormsSharedModule = (function () {\n\t        function InternalFormsSharedModule() {\n\t        }\n\t        InternalFormsSharedModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: SHARED_FORM_DIRECTIVES,\n\t                        exports: SHARED_FORM_DIRECTIVES,\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        InternalFormsSharedModule.ctorParameters = function () { return []; };\n\t        return InternalFormsSharedModule;\n\t    }());\n\t\n\t    /**\n\t     * The ng module for forms.\n\t     * \\@stable\n\t     */\n\t    var FormsModule = (function () {\n\t        function FormsModule() {\n\t        }\n\t        FormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n\t                        providers: [RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        FormsModule.ctorParameters = function () { return []; };\n\t        return FormsModule;\n\t    }());\n\t    /**\n\t     * The ng module for reactive forms.\n\t     * \\@stable\n\t     */\n\t    var ReactiveFormsModule = (function () {\n\t        function ReactiveFormsModule() {\n\t        }\n\t        ReactiveFormsModule.decorators = [\n\t            { type: _angular_core.NgModule, args: [{\n\t                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n\t                        providers: [FormBuilder, RadioControlRegistry],\n\t                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n\t                    },] },\n\t        ];\n\t        /** @nocollapse */\n\t        ReactiveFormsModule.ctorParameters = function () { return []; };\n\t        return ReactiveFormsModule;\n\t    }());\n\t\n\t    exports.AbstractControlDirective = AbstractControlDirective;\n\t    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n\t    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n\t    exports.ControlContainer = ControlContainer;\n\t    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n\t    exports.DefaultValueAccessor = DefaultValueAccessor;\n\t    exports.NgControl = NgControl;\n\t    exports.NgControlStatus = NgControlStatus;\n\t    exports.NgControlStatusGroup = NgControlStatusGroup;\n\t    exports.NgForm = NgForm;\n\t    exports.NgModel = NgModel;\n\t    exports.NgModelGroup = NgModelGroup;\n\t    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n\t    exports.FormControlDirective = FormControlDirective;\n\t    exports.FormControlName = FormControlName;\n\t    exports.FormGroupDirective = FormGroupDirective;\n\t    exports.FormArrayName = FormArrayName;\n\t    exports.FormGroupName = FormGroupName;\n\t    exports.NgSelectOption = NgSelectOption;\n\t    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n\t    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n\t    exports.CheckboxRequiredValidator = CheckboxRequiredValidator;\n\t    exports.MaxLengthValidator = MaxLengthValidator;\n\t    exports.MinLengthValidator = MinLengthValidator;\n\t    exports.PatternValidator = PatternValidator;\n\t    exports.RequiredValidator = RequiredValidator;\n\t    exports.FormBuilder = FormBuilder;\n\t    exports.AbstractControl = AbstractControl;\n\t    exports.FormArray = FormArray;\n\t    exports.FormControl = FormControl;\n\t    exports.FormGroup = FormGroup;\n\t    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n\t    exports.NG_VALIDATORS = NG_VALIDATORS;\n\t    exports.Validators = Validators;\n\t    exports.VERSION = VERSION;\n\t    exports.FormsModule = FormsModule;\n\t    exports.ReactiveFormsModule = ReactiveFormsModule;\n\t\n\t}));\n\n/***/ }),\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory(__webpack_require__(3), __webpack_require__(24), __webpack_require__(22));\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"datetime-picker\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\t\telse\n\t\t\troot[\"datetime-picker\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n\t})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar datetime_1 = __webpack_require__(1);\n\t\texports.NguiDatetime = datetime_1.NguiDatetime;\n\t\tvar datetime_picker_component_1 = __webpack_require__(3);\n\t\texports.NguiDatetimePickerComponent = datetime_picker_component_1.NguiDatetimePickerComponent;\n\t\tvar datetime_picker_directive_1 = __webpack_require__(4);\n\t\texports.NguiDatetimePickerDirective = datetime_picker_directive_1.NguiDatetimePickerDirective;\n\t\tvar datetime_picker_module_1 = __webpack_require__(6);\n\t\texports.NguiDatetimePickerModule = datetime_picker_module_1.NguiDatetimePickerModule;\n\t\n\t\n\t/***/ },\n\t/* 1 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\t/**\n\t\t * Static variables that you can override\n\t\t *   1. days.           default 1,2,....31\n\t\t *   2. daysOfWeek,     default Sunday, Monday, .....\n\t\t *   3. firstDayOfWeek, default 0 as in Sunday\n\t\t *   4. months,         default January, February\n\t\t *   5. formatDate(d)   default returns YYYY-MM-DD HH:MM\n\t\t *   6. parseDate(str)  default returns date from YYYY-MM-DD HH:MM\n\t\t */\n\t\tvar NguiDatetime = (function () {\n\t\t    function NguiDatetime() {\n\t\t    }\n\t\t    NguiDatetime.formatDate = function (d, format, dateOnly) {\n\t\t        var ret;\n\t\t        if (d && !format) {\n\t\t            // return d.toLocaleString('en-us', hash); // IE11 does not understand this\n\t\t            var pad0 = function (number) { return (\"0\" + number).slice(-2); };\n\t\t            ret = d.getFullYear() + '-' + pad0(d.getMonth() + 1) + '-' + pad0(d.getDate());\n\t\t            ret += dateOnly ? '' : ' ' + pad0(d.getHours()) + ':' + pad0(d.getMinutes());\n\t\t            return ret;\n\t\t        }\n\t\t        else if (d && typeof moment !== 'undefined') {\n\t\t            return moment(d).format(format);\n\t\t        }\n\t\t        else {\n\t\t            return '';\n\t\t        }\n\t\t    };\n\t\t    NguiDatetime.parseDate = function (dateStr, parseFormat, dateFormat) {\n\t\t        if (typeof moment === 'undefined') {\n\t\t            dateStr = NguiDatetime.removeTimezone(dateStr);\n\t\t            dateStr = dateStr + NguiDatetime.addDSTOffset(dateStr);\n\t\t            return NguiDatetime.parseFromDefaultFormat(dateStr);\n\t\t        }\n\t\t        else if (dateFormat || parseFormat) {\n\t\t            // try parse using each format because changing format programmatically calls this twice,\n\t\t            // once with string in parse format and once in date format\n\t\t            var formats = [];\n\t\t            if (parseFormat) {\n\t\t                formats.push(parseFormat);\n\t\t            }\n\t\t            if (dateFormat) {\n\t\t                formats.push(dateFormat);\n\t\t            }\n\t\t            var m = moment(dateStr, formats);\n\t\t            var date = m.toDate();\n\t\t            if (!m.isValid()) {\n\t\t                date = moment(dateStr, moment.ISO_8601).toDate(); // parse as ISO format\n\t\t            }\n\t\t            return date;\n\t\t        }\n\t\t        else if (dateStr.length > 4) {\n\t\t            var date = moment(dateStr, 'YYYY-MM-DD HH:mm').toDate();\n\t\t            return date;\n\t\t        }\n\t\t        else {\n\t\t            return new Date();\n\t\t        }\n\t\t    };\n\t\t    NguiDatetime.getWeekNumber = function (date) {\n\t\t        if (!(date instanceof Date))\n\t\t            date = new Date();\n\t\t        // ISO week date weeks start on Monday, so correct the day number\n\t\t        var nDay = (date.getDay() + 6) % 7;\n\t\t        // ISO 8601 states that week 1 is the week with the first Thursday of that year\n\t\t        // Set the target date to the Thursday in the target week\n\t\t        date.setDate(date.getDate() - nDay + 3);\n\t\t        // Store the millisecond value of the target date\n\t\t        var n1stThursday = date.valueOf();\n\t\t        // Set the target to the first Thursday of the year\n\t\t        // First, set the target to January 1st\n\t\t        date.setMonth(0, 1);\n\t\t        // Not a Thursday? Correct the date to the next Thursday\n\t\t        if (date.getDay() !== 4) {\n\t\t            date.setMonth(0, 1 + ((4 - date.getDay()) + 7) % 7);\n\t\t        }\n\t\t        // The week number is the number of weeks between the first Thursday of the year\n\t\t        // and the Thursday in the target week (604800000 = 7 * 24 * 3600 * 1000)\n\t\t        return 1 + Math.ceil((n1stThursday - date) / 604800000);\n\t\t    };\n\t\t    //remove timezone\n\t\t    NguiDatetime.removeTimezone = function (dateStr) {\n\t\t        // if no time is given, add 00:00:00 at the end\n\t\t        var matches = dateStr.match(/[0-9]{2}:/);\n\t\t        dateStr += matches ? '' : ' 00:00:00';\n\t\t        return dateStr.replace(/([0-9]{2}-[0-9]{2})-([0-9]{4})/, '$2-$1') //mm-dd-yyyy to yyyy-mm-dd\n\t\t            .replace(/([\\/-][0-9]{2,4})\\ ([0-9]{2}\\:[0-9]{2}\\:)/, '$1T$2') //reformat for FF\n\t\t            .replace(/EDT|EST|CDT|CST|MDT|PDT|PST|UT|GMT/g, '') //remove timezone\n\t\t            .replace(/\\s*\\(\\)\\s*/, '') //remove timezone\n\t\t            .replace(/[\\-\\+][0-9]{2}:?[0-9]{2}$/, '') //remove timezone\n\t\t            .replace(/000Z$/, '00'); //remove timezone\n\t\t    };\n\t\t    NguiDatetime.addDSTOffset = function (dateStr) {\n\t\t        var date = NguiDatetime.parseFromDefaultFormat(dateStr);\n\t\t        var jan = new Date(date.getFullYear(), 0, 1);\n\t\t        var jul = new Date(date.getFullYear(), 6, 1);\n\t\t        var stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t\t        var isDST = date.getTimezoneOffset() < stdTimezoneOffset;\n\t\t        var offset = isDST ? stdTimezoneOffset - 60 : stdTimezoneOffset;\n\t\t        var diff = offset >= 0 ? '-' : '+';\n\t\t        offset = Math.abs(offset);\n\t\t        return diff +\n\t\t            ('0' + (offset / 60)).slice(-2) + ':' +\n\t\t            ('0' + (offset % 60)).slice(-2);\n\t\t    };\n\t\t    ;\n\t\t    NguiDatetime.parseFromDefaultFormat = function (dateStr) {\n\t\t        var tmp = dateStr.split(/[\\+\\-:\\ T]/); // split by dash, colon or space\n\t\t        return new Date(parseInt(tmp[0], 10), parseInt(tmp[1], 10) - 1, parseInt(tmp[2], 10), parseInt(tmp[3] || '0', 10), parseInt(tmp[4] || '0', 10), parseInt(tmp[5] || '0', 10));\n\t\t    };\n\t\t    NguiDatetime.prototype.getMonthData = function (year, month) {\n\t\t        year = month > 11 ? year + 1 :\n\t\t            month < 0 ? year - 1 : year;\n\t\t        month = (month + 12) % 12;\n\t\t        var firstDayOfMonth = new Date(year, month, 1);\n\t\t        var lastDayOfMonth = new Date(year, month + 1, 0);\n\t\t        var lastDayOfPreviousMonth = new Date(year, month, 0);\n\t\t        var daysInMonth = lastDayOfMonth.getDate();\n\t\t        var daysInLastMonth = lastDayOfPreviousMonth.getDate();\n\t\t        var dayOfWeek = firstDayOfMonth.getDay();\n\t\t        // Ensure there are always leading days to give context\n\t\t        var leadingDays = (dayOfWeek - NguiDatetime.firstDayOfWeek + 7) % 7 || 7;\n\t\t        var trailingDays = NguiDatetime.days.slice(0, 6 * 7 - (leadingDays + daysInMonth));\n\t\t        if (trailingDays.length > 7) {\n\t\t            trailingDays = trailingDays.slice(0, trailingDays.length - 7);\n\t\t        }\n\t\t        var firstDay = new Date(firstDayOfMonth);\n\t\t        firstDay.setDate(firstDayOfMonth.getDate() - (leadingDays % 7));\n\t\t        var firstWeekNumber = NguiDatetime.getWeekNumber(firstDay);\n\t\t        var numWeeks = Math.ceil((daysInMonth + leadingDays % 7) / 7);\n\t\t        var weekNumbers = Array(numWeeks).fill(0).map(function (el, ndx) {\n\t\t            var weekNum = (ndx + firstWeekNumber + 52) % 52;\n\t\t            return weekNum === 0 ? 52 : weekNum;\n\t\t        });\n\t\t        var localizedDaysOfWeek = NguiDatetime.daysOfWeek\n\t\t            .concat(NguiDatetime.daysOfWeek)\n\t\t            .splice(NguiDatetime.firstDayOfWeek, 7);\n\t\t        var monthData = {\n\t\t            year: year,\n\t\t            month: month,\n\t\t            weekends: NguiDatetime.weekends,\n\t\t            firstDayOfWeek: NguiDatetime.firstDayOfWeek,\n\t\t            fullName: NguiDatetime.months[month].fullName,\n\t\t            shortName: NguiDatetime.months[month].shortName,\n\t\t            localizedDaysOfWeek: localizedDaysOfWeek,\n\t\t            days: NguiDatetime.days.slice(0, daysInMonth),\n\t\t            leadingDays: NguiDatetime.days.slice(-leadingDays - (31 - daysInLastMonth), daysInLastMonth),\n\t\t            trailingDays: trailingDays,\n\t\t            weekNumbers: weekNumbers\n\t\t        };\n\t\t        return monthData;\n\t\t    };\n\t\t    NguiDatetime.locale = {\n\t\t        date: 'date',\n\t\t        time: 'time',\n\t\t        year: 'year',\n\t\t        month: 'month',\n\t\t        day: 'day',\n\t\t        hour: 'hour',\n\t\t        minute: 'minute',\n\t\t        currentTime: \"current time\"\n\t\t    };\n\t\t    NguiDatetime.days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\t\t    NguiDatetime.weekends = [0, 6];\n\t\t    NguiDatetime.daysOfWeek = typeof moment === 'undefined' ? [\n\t\t        { fullName: 'Sunday', shortName: 'Su' },\n\t\t        { fullName: 'Monday', shortName: 'Mo' },\n\t\t        { fullName: 'Tuesday', shortName: 'Tu' },\n\t\t        { fullName: 'Wednesday', shortName: 'We' },\n\t\t        { fullName: 'Thursday', shortName: 'Th' },\n\t\t        { fullName: 'Friday', shortName: 'Fr' },\n\t\t        { fullName: 'Saturday', shortName: 'Sa' }\n\t\t    ] : moment.weekdays().map(function (el, index) {\n\t\t        return {\n\t\t            fullName: el,\n\t\t            shortName: moment.weekdaysShort()[index].substr(0, 2)\n\t\t        };\n\t\t    });\n\t\t    NguiDatetime.firstDayOfWeek = typeof moment === 'undefined' ? 0 : moment.localeData().firstDayOfWeek();\n\t\t    NguiDatetime.months = typeof moment === 'undefined' ? [\n\t\t        { fullName: 'January', shortName: 'Jan' },\n\t\t        { fullName: 'February', shortName: 'Feb' },\n\t\t        { fullName: 'March', shortName: 'Mar' },\n\t\t        { fullName: 'April', shortName: 'Apr' },\n\t\t        { fullName: 'May', shortName: 'May' },\n\t\t        { fullName: 'June', shortName: 'Jun' },\n\t\t        { fullName: 'July', shortName: 'Jul' },\n\t\t        { fullName: 'August', shortName: 'Aug' },\n\t\t        { fullName: 'September', shortName: 'Sep' },\n\t\t        { fullName: 'October', shortName: 'Oct' },\n\t\t        { fullName: 'November', shortName: 'Nov' },\n\t\t        { fullName: 'December', shortName: 'Dec' }\n\t\t    ] : moment.months().map(function (el, index) {\n\t\t        return {\n\t\t            fullName: el,\n\t\t            shortName: moment['monthsShort']()[index]\n\t\t        };\n\t\t    });\n\t\t    NguiDatetime = __decorate([\n\t\t        core_1.Injectable(), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], NguiDatetime);\n\t\t    return NguiDatetime;\n\t\t}());\n\t\texports.NguiDatetime = NguiDatetime;\n\t\n\t\n\t/***/ },\n\t/* 2 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\t\n\t/***/ },\n\t/* 3 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar datetime_1 = __webpack_require__(1);\n\t\t//@TODO\n\t\t// . display currently selected day\n\t\t/**\n\t\t * show a selected date in monthly calendar\n\t\t */\n\t\tvar NguiDatetimePickerComponent = (function () {\n\t\t    function NguiDatetimePickerComponent(elementRef, nguiDatetime, cdRef) {\n\t\t        this.nguiDatetime = nguiDatetime;\n\t\t        this.cdRef = cdRef;\n\t\t        this.minuteStep = 1;\n\t\t        this.showWeekNumbers = false;\n\t\t        this.showTodayShortcut = false;\n\t\t        this.showAmPm = false;\n\t\t        this.selected$ = new core_1.EventEmitter();\n\t\t        this.closing$ = new core_1.EventEmitter();\n\t\t        this.locale = datetime_1.NguiDatetime.locale;\n\t\t        this.showYearSelector = false;\n\t\t        this.el = elementRef.nativeElement;\n\t\t    }\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"yearsSelectable\", {\n\t\t        get: function () {\n\t\t            var startYear = this.year - 100;\n\t\t            var endYear = this.year + 50;\n\t\t            var years = [];\n\t\t            for (var year = startYear; year < endYear; year++) {\n\t\t                years.push(year);\n\t\t            }\n\t\t            return years;\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"year\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getFullYear();\n\t\t        },\n\t\t        set: function (year) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"month\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getMonth();\n\t\t        },\n\t\t        set: function (month) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"day\", {\n\t\t        get: function () {\n\t\t            return this.selectedDate.getDate();\n\t\t        },\n\t\t        set: function (day) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"monthData\", {\n\t\t        get: function () {\n\t\t            return this._monthData;\n\t\t        },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"today\", {\n\t\t        get: function () {\n\t\t            var dt = new Date();\n\t\t            dt.setHours(0);\n\t\t            dt.setMinutes(0);\n\t\t            dt.setSeconds(0);\n\t\t            dt.setMilliseconds(0);\n\t\t            return dt;\n\t\t        },\n\t\t        set: function (today) { },\n\t\t        enumerable: true,\n\t\t        configurable: true\n\t\t    });\n\t\t    NguiDatetimePickerComponent.prototype.ngOnInit = function () {\n\t\t        if (!this.defaultValue || isNaN(this.defaultValue.getTime())) {\n\t\t            this.defaultValue = new Date();\n\t\t        }\n\t\t        this.selectedDate = this.defaultValue;\n\t\t        // set hour and minute using moment if available to avoid having Javascript change timezones\n\t\t        if (typeof moment === 'undefined') {\n\t\t            this.hour = this.selectedDate.getHours();\n\t\t            this.minute = this.selectedDate.getMinutes();\n\t\t        }\n\t\t        else {\n\t\t            var m = moment(this.selectedDate);\n\t\t            this.hour = m.hours();\n\t\t            this.minute = m.minute();\n\t\t        }\n\t\t        this._monthData = this.nguiDatetime.getMonthData(this.year, this.month);\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.isWeekend = function (dayNum, month) {\n\t\t        if (typeof month === 'undefined') {\n\t\t            return datetime_1.NguiDatetime.weekends.indexOf(dayNum % 7) !== -1; //weekday index\n\t\t        }\n\t\t        else {\n\t\t            var weekday = this.toDate(dayNum, month).getDay();\n\t\t            return datetime_1.NguiDatetime.weekends.indexOf(weekday) !== -1;\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.selectYear = function (year) {\n\t\t        this._monthData = this.nguiDatetime.getMonthData(year, this._monthData.month);\n\t\t        this.showYearSelector = false;\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.toDate = function (day, month) {\n\t\t        return new Date(this._monthData.year, month || this._monthData.month, day);\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.toDateOnly = function (date) {\n\t\t        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.selectCurrentTime = function () {\n\t\t        this.hour = (new Date()).getHours();\n\t\t        this.minute = (new Date()).getMinutes();\n\t\t        this.selectDateTime();\n\t\t    };\n\t\t    /**\n\t\t     * set the selected date and close it when closeOnSelect is true\n\t\t     * @param date {Date}\n\t\t     */\n\t\t    NguiDatetimePickerComponent.prototype.selectDateTime = function (date) {\n\t\t        var _this = this;\n\t\t        this.selectedDate = date || this.selectedDate;\n\t\t        if (this.isDateDisabled(this.selectedDate)) {\n\t\t            return false;\n\t\t        }\n\t\t        // editing hours and minutes via javascript date methods causes date to lose timezone info,\n\t\t        // so edit using moment if available\n\t\t        var hour = parseInt('' + this.hour || '0', 10);\n\t\t        var minute = parseInt('' + this.minute || '0', 10);\n\t\t        if (typeof moment !== 'undefined') {\n\t\t            // here selected date has a time of 00:00 in local time,\n\t\t            // so build moment by getting year/month/day separately\n\t\t            // to avoid it saving as a day earlier\n\t\t            var m = moment([this.selectedDate.getFullYear(), this.selectedDate.getMonth(), this.selectedDate.getDate()]);\n\t\t            m.hours(hour);\n\t\t            m.minutes(minute);\n\t\t            this.selectedDate = m.toDate();\n\t\t        }\n\t\t        else {\n\t\t            this.selectedDate.setHours(hour);\n\t\t            this.selectedDate.setMinutes(minute);\n\t\t        }\n\t\t        //console.log('this.selectedDate', this.selectedDate)\n\t\t        this.selectedDate.toString = function () {\n\t\t            return datetime_1.NguiDatetime.formatDate(_this.selectedDate, _this.dateFormat, _this.dateOnly);\n\t\t        };\n\t\t        this.selected$.emit(this.selectedDate);\n\t\t    };\n\t\t    ;\n\t\t    /**\n\t\t     * show prev/next month calendar\n\t\t     */\n\t\t    NguiDatetimePickerComponent.prototype.updateMonthData = function (num) {\n\t\t        this._monthData = this.nguiDatetime.getMonthData(this._monthData.year, this._monthData.month + num);\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.isDateDisabled = function (date) {\n\t\t        var dateInTime = date.getTime();\n\t\t        this.disabledDatesInTime =\n\t\t            this.disabledDatesInTime || (this.disabledDates || []).map(function (d) { return d.getTime(); });\n\t\t        if (this.minDate && (dateInTime < this.minDate.getTime())) {\n\t\t            return true;\n\t\t        }\n\t\t        else if (this.maxDate && (dateInTime > this.maxDate.getTime())) {\n\t\t            return true;\n\t\t        }\n\t\t        else if (this.disabledDatesInTime.indexOf(dateInTime) >= 0) {\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.close = function () {\n\t\t        this.closing$.emit(true);\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.selectToday = function () {\n\t\t        this.selectDateTime(new Date());\n\t\t    };\n\t\t    NguiDatetimePickerComponent.prototype.convertHours = function (hours) {\n\t\t        if (this.showAmPm) {\n\t\t            this.timeSuffix = (hours >= 12) ? 'PM' : 'AM';\n\t\t            hours = (hours == 0) ? 12 : (hours > 12) ? hours - 12 : hours;\n\t\t        }\n\t\t        else {\n\t\t            this.timeSuffix = null;\n\t\t        }\n\t\t        return (\"0\" + hours).slice(-2);\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('date-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"dateFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('date-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"dateOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('time-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"timeOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('selected-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"selectedDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"hour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minute'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"minute\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minuteStep'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"minuteStep\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('default-value'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"defaultValue\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"minDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-date'), \n\t\t        __metadata('design:type', Date)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"maxDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"minHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-hour'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"maxHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('disabled-dates'), \n\t\t        __metadata('design:type', Array)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"disabledDates\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-close-button'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"showCloseButton\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-close-layer'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"showCloseLayer\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-week-numbers'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"showWeekNumbers\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-today-shortcut'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"showTodayShortcut\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-am-pm'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"showAmPm\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('selected$'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"selected$\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('closing$'), \n\t\t        __metadata('design:type', core_1.EventEmitter)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"closing$\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('hours'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"hours\", void 0);\n\t\t    __decorate([\n\t\t        core_1.ViewChild('minutes'), \n\t\t        __metadata('design:type', core_1.ElementRef)\n\t\t    ], NguiDatetimePickerComponent.prototype, \"minutes\", void 0);\n\t\t    NguiDatetimePickerComponent = __decorate([\n\t\t        core_1.Component({\n\t\t            providers: [datetime_1.NguiDatetime],\n\t\t            selector: 'ngui-datetime-picker',\n\t\t            template: \"\\n  <div class=\\\"closing-layer\\\" (click)=\\\"close()\\\" *ngIf=\\\"showCloseLayer\\\" ></div>\\n  <div class=\\\"ngui-datetime-picker\\\">\\n    <div class=\\\"close-button\\\" *ngIf=\\\"showCloseButton\\\" (click)=\\\"close()\\\"></div>\\n    \\n    <!-- Month - Year  -->\\n    <div class=\\\"month\\\" *ngIf=\\\"!timeOnly\\\">\\n      <b class=\\\"prev_next prev year\\\" (click)=\\\"updateMonthData(-12)\\\">&laquo;</b>\\n      <b class=\\\"prev_next prev month\\\" (click)=\\\"updateMonthData(-1)\\\">&lsaquo;</b>\\n       <span title=\\\"{{monthData?.fullName}}\\\">\\n         {{monthData?.shortName}}\\n       </span>\\n       <span (click)=\\\"showYearSelector = true\\\">\\n        {{monthData.year}}\\n       </span>\\n      <b class=\\\"prev_next next year\\\" (click)=\\\"updateMonthData(+12)\\\">&raquo;</b>\\n      <b class=\\\"prev_next next month\\\" (click)=\\\"updateMonthData(+1)\\\">&rsaquo;</b>\\n    </div>\\n\\n    <!-- Week number / Days  -->\\n    <div class=\\\"week-numbers-and-days\\\"\\n      [ngClass]=\\\"{'show-week-numbers': !timeOnly && showWeekNumbers}\\\">\\n      <!-- Week -->\\n      <div class=\\\"week-numbers\\\" *ngIf=\\\"!timeOnly && showWeekNumbers\\\">\\n        <div class=\\\"week-number\\\" *ngFor=\\\"let weekNumber of monthData.weekNumbers\\\">\\n          {{weekNumber}}\\n        </div>\\n      </div>\\n      \\n      <!-- Date -->\\n      <div class=\\\"days\\\" *ngIf=\\\"!timeOnly\\\">\\n\\n        <!-- Su Mo Tu We Th Fr Sa -->\\n        <div class=\\\"day-of-week\\\"\\n             *ngFor=\\\"let dayOfWeek of monthData.localizedDaysOfWeek; let ndx=index\\\"\\n             [class.weekend]=\\\"isWeekend(ndx + monthData.firstDayOfWeek)\\\"\\n             title=\\\"{{dayOfWeek.fullName}}\\\">\\n          {{dayOfWeek.shortName}}\\n        </div>\\n\\n        <!-- Fill up blank days for this month -->\\n        <div *ngIf=\\\"monthData.leadingDays.length < 7\\\">\\n          <div class=\\\"day\\\"\\n              (click)=\\\"updateMonthData(-1)\\\"\\n               *ngFor=\\\"let dayNum of monthData.leadingDays\\\">\\n            {{dayNum}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"day\\\"\\n             *ngFor=\\\"let dayNum of monthData.days\\\"\\n             (click)=\\\"selectDateTime(toDate(dayNum))\\\"\\n             title=\\\"{{monthData.year}}-{{monthData.month+1}}-{{dayNum}}\\\"\\n             [ngClass]=\\\"{\\n               selectable: !isDateDisabled(toDate(dayNum)),\\n               selected: toDate(dayNum).getTime() === toDateOnly(selectedDate).getTime(),\\n               today: toDate(dayNum).getTime() === today.getTime(),\\n               weekend: isWeekend(dayNum, monthData.month)\\n             }\\\">\\n          {{dayNum}}\\n        </div>\\n\\n        <!-- Fill up blank days for this month -->\\n        <div *ngIf=\\\"monthData.trailingDays.length < 7\\\">\\n          <div class=\\\"day\\\"\\n               (click)=\\\"updateMonthData(+1)\\\"\\n               *ngFor=\\\"let dayNum of monthData.trailingDays\\\">\\n            {{dayNum}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"shortcuts\\\" *ngIf=\\\"showTodayShortcut\\\">\\n      <a href=\\\"#\\\" (click)=\\\"selectToday()\\\">Today</a>\\n    </div>\\n\\n    <!-- Hour Minute -->\\n    <div class=\\\"time\\\" id=\\\"time\\\" *ngIf=\\\"!dateOnly\\\">\\n      <div class=\\\"select-current-time\\\" (click)=\\\"selectCurrentTime()\\\">{{locale.currentTime}}</div>\\n      <label class=\\\"timeLabel\\\">{{locale.time}}</label>\\n      <span class=\\\"timeValue\\\">\\n        {{convertHours(hour)}} : {{(\\\"0\\\"+minute).slice(-2)}} {{timeSuffix}}\\n      </span><br/>\\n      <div>\\n        <label class=\\\"hourLabel\\\">{{locale.hour}}:</label>\\n        <input #hours class=\\\"hourInput\\\"\\n               tabindex=\\\"90000\\\"\\n               (change)=\\\"selectDateTime()\\\"\\n               type=\\\"range\\\"\\n               min=\\\"{{minHour || 0}}\\\"\\n               max=\\\"{{maxHour || 23}}\\\"\\n               [(ngModel)]=\\\"hour\\\" />\\n      </div>\\n      <div>\\n        <label class=\\\"minutesLabel\\\">{{locale.minute}}:</label>\\n        <input #minutes class=\\\"minutesInput\\\"\\n               tabindex=\\\"90000\\\"\\n               step=\\\"{{minuteStep}}\\\"\\n               (change)=\\\"selectDateTime()\\\"\\n               type=\\\"range\\\" min=\\\"0\\\" max=\\\"59\\\" range=\\\"10\\\" [(ngModel)]=\\\"minute\\\"/>\\n      </div>\\n    </div>\\n\\n    <!-- Year Selector -->\\n    <div class=\\\"year-selector\\\" *ngIf=\\\"showYearSelector\\\">\\n      <div class=\\\"locale\\\">\\n        <b>{{locale.year}}</b>\\n      </div>\\n      <span class=\\\"year\\\" \\n        *ngFor=\\\"let year of yearsSelectable\\\"\\n        (click)=\\\"selectYear(year)\\\">\\n        {{year}}\\n      </span>\\n    </div>\\n  </div>\\n  \",\n\t\t            styles: [\n\t\t                \"\\n@keyframes slideDown {\\n  0% {\\n    transform:  translateY(-10px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n  }\\n}\\n\\n@keyframes slideUp {\\n  0% {\\n    transform: translateY(100%);\\n  }\\n  100% {\\n    transform: translateY(0%);\\n  }\\n}\\n\\n.ngui-datetime-picker-wrapper {\\n  position: relative;\\n}\\n\\n.ngui-datetime-picker {\\n  color: #333;\\n  outline-width: 0;\\n  font: normal 14px sans-serif;\\n  border: 1px solid #ddd;\\n  display: inline-block;\\n  background: #fff;\\n  animation: slideDown 0.1s ease-in-out;\\n  animation-fill-mode: both;\\n}\\n.ngui-datetime-picker .days {\\n  width: 210px; /* 30 x 7 days */\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .close-button {\\n  position: absolute;\\n  width: 1em;\\n  height: 1em;\\n  right: 0;\\n  z-index: 1;\\n  padding: 0 5px;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .close-button:before {\\n  content: 'X';\\n  cursor: pointer;\\n  color: #ff0000;\\n}\\n.ngui-datetime-picker > .month {\\n  text-align: center;\\n  line-height: 22px;\\n  padding: 10px;\\n  background: #fcfcfc;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  border-bottom: 1px solid #ddd;\\n  position: relative;\\n}\\n\\n.ngui-datetime-picker > .month > .prev_next {\\n  color: #555;\\n  display: block;\\n  font: normal 24px sans-serif;\\n  outline: none;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  width: 25px;\\n  text-align: center;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker > .month > .prev_next:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n.ngui-datetime-picker > .month > .prev_next.prev {\\n  float: left;\\n}\\n.ngui-datetime-picker > .month > .prev_next.next {\\n  float: right;\\n}\\n\\n.ngui-datetime-picker .week-numbers-and-days {\\n  text-align: center;\\n}\\n.ngui-datetime-picker .week-numbers {\\n  line-height: 30px;\\n  display: inline-block;\\n  padding: 30px 0 0 0;\\n  color: #ddd;\\n  text-align: right;\\n  width: 21px;\\n  vertical-align: top;\\n  box-sizing: content-box;\\n}\\n\\n.ngui-datetime-picker  .days {\\n  display: inline-block;\\n  width: 210px; /* 30 x 7 */\\n  text-align: center;\\n  padding: 0 10px;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .days .day-of-week,\\n.ngui-datetime-picker .days .day {\\n  box-sizing: border-box;\\n  border: 1px solid transparent;\\n  width: 30px;\\n  line-height: 28px;\\n  float: left;\\n}\\n.ngui-datetime-picker .days .day-of-week {\\n  font-weight: bold;\\n}\\n.ngui-datetime-picker .days .day-of-week.weekend {\\n  color: #ccc;\\n  background-color: inherit;\\n}\\n.ngui-datetime-picker .days .day:not(.selectable) {\\n  color: #ccc;\\n  cursor: default;\\n}\\n.ngui-datetime-picker .days .weekend {\\n  color: #ccc;\\n  background-color: #eee;\\n}\\n.ngui-datetime-picker .days .day.selectable  {\\n  cursor: pointer;\\n}\\n.ngui-datetime-picker .days .day.selected {\\n  background: gray;\\n  color: #fff;\\n}\\n.ngui-datetime-picker .days .day:not(.selected).selectable:hover {\\n  background: #eee;\\n}\\n.ngui-datetime-picker .days:after {\\n  content: '';\\n  display: block;\\n  clear: left;\\n  height: 0;\\n}\\n.ngui-datetime-picker .time {\\n  position: relative;\\n  padding: 10px;\\n  text-transform: Capitalize;\\n}\\n.ngui-datetime-picker .year-selector {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background: #fff;\\n  height: 100%;\\n  overflow: auto; \\n  padding: 5px;\\n  z-index: 2;\\n}\\n.ngui-datetime-picker .year-selector .locale{\\n  text-align: center;\\n}\\n.ngui-datetime-picker .year-selector .year {\\n  display: inline-block;\\n  cursor: pointer;\\n  padding: 2px 5px;\\n}\\n.ngui-datetime-picker .year-selector .year:hover {\\n  background-color: #ddd;\\n}\\n.ngui-datetime-picker .select-current-time {\\n  position: absolute;\\n  top: 1em;\\n  right: 5px;\\n  z-index: 1;\\n  cursor: pointer;\\n  color: #0000ff;\\n}\\n.ngui-datetime-picker .hourLabel,\\n.ngui-datetime-picker .minutesLabel {\\n  display: inline-block;\\n  width: 45px;\\n  vertical-align: top;\\n  box-sizing: content-box;\\n}\\n.closing-layer {\\n  display: block;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  background: rgba(0,0,0,0);\\n}\\n\\n.ngui-datetime-picker .shortcuts {\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.ngui-datetime-picker .shortcuts a {\\n  font-family: Sans-serif;\\n  margin: 0 0.5em;\\n  text-decoration: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .ngui-datetime-picker {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;    \\n    width: auto !important;\\n    animation: slideUp 0.1s ease-in-out;\\n  }\\n\\n  .ngui-datetime-picker > .days {\\n    display: block;\\n    margin: 0 auto;\\n  }\\n\\n  .closing-layer {\\n    display: block;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    background: rgba(0,0,0,0.2);\\n  }\\n}\\n  \"\n\t\t            ],\n\t\t            encapsulation: core_1.ViewEncapsulation.None\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [core_1.ElementRef, datetime_1.NguiDatetime, core_1.ChangeDetectorRef])\n\t\t    ], NguiDatetimePickerComponent);\n\t\t    return NguiDatetimePickerComponent;\n\t\t}());\n\t\texports.NguiDatetimePickerComponent = NguiDatetimePickerComponent;\n\t\n\t\n\t/***/ },\n\t/* 4 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar datetime_picker_component_1 = __webpack_require__(3);\n\t\tvar datetime_1 = __webpack_require__(1);\n\t\tfunction isInteger(value) {\n\t\t    if (Number.isInteger) {\n\t\t        return Number.isInteger(value);\n\t\t    }\n\t\t    return typeof value === \"number\" &&\n\t\t        isFinite(value) &&\n\t\t        Math.floor(value) === value;\n\t\t}\n\t\t;\n\t\tfunction isNaN(value) {\n\t\t    if (Number.isNaN) {\n\t\t        return Number.isNaN(value);\n\t\t    }\n\t\t    return value !== value;\n\t\t}\n\t\t;\n\t\t/**\n\t\t * If the given string is not a valid date, it defaults back to today\n\t\t */\n\t\tvar NguiDatetimePickerDirective = (function () {\n\t\t    function NguiDatetimePickerDirective(resolver, viewContainerRef, parent) {\n\t\t        var _this = this;\n\t\t        this.resolver = resolver;\n\t\t        this.viewContainerRef = viewContainerRef;\n\t\t        this.parent = parent;\n\t\t        this.closeOnSelect = true;\n\t\t        this.showTodayShortcut = false;\n\t\t        this.isDraggable = true;\n\t\t        this.ngModelChange = new core_1.EventEmitter();\n\t\t        this.valueChanged$ = new core_1.EventEmitter();\n\t\t        this.popupClosed$ = new core_1.EventEmitter();\n\t\t        this.userModifyingValue = false;\n\t\t        this.handleKeyDown = function (event) {\n\t\t            _this.userModifyingValue = true;\n\t\t        };\n\t\t        /* input element string value is changed */\n\t\t        this.inputElValueChanged = function (date) {\n\t\t            _this.setInputElDateValue(date);\n\t\t            _this.el.value = date.toString();\n\t\t            if (_this.ctrl) {\n\t\t                _this.ctrl.patchValue(_this.el.value);\n\t\t            }\n\t\t            _this.ngModel = _this.el['dateValue'];\n\t\t            if (_this.ngModel) {\n\t\t                _this.ngModel.toString = function () { return _this.el.value; };\n\t\t                _this.ngModelChange.emit(_this.ngModel);\n\t\t            }\n\t\t        };\n\t\t        //show datetimePicker element below the current element\n\t\t        this.showDatetimePicker = function (event) {\n\t\t            if (_this.componentRef) {\n\t\t                return;\n\t\t            }\n\t\t            var factory = _this.resolver.resolveComponentFactory(datetime_picker_component_1.NguiDatetimePickerComponent);\n\t\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t\t            _this.nguiDatetimePickerEl = _this.componentRef.location.nativeElement;\n\t\t            _this.nguiDatetimePickerEl.setAttribute('tabindex', '32767');\n\t\t            _this.nguiDatetimePickerEl.setAttribute('draggable', String(_this.isDraggable));\n\t\t            _this.nguiDatetimePickerEl.addEventListener('mousedown', function (event) {\n\t\t                _this.clickedDatetimePicker = true;\n\t\t            });\n\t\t            _this.nguiDatetimePickerEl.addEventListener('mouseup', function (event) {\n\t\t                _this.clickedDatetimePicker = false;\n\t\t            });\n\t\t            //This is for material design. MD has click event to make blur to happen\n\t\t            _this.nguiDatetimePickerEl.addEventListener('click', function (event) {\n\t\t                event.stopPropagation();\n\t\t            });\n\t\t            _this.nguiDatetimePickerEl.addEventListener('blur', function (event) {\n\t\t                _this.hideDatetimePicker();\n\t\t            });\n\t\t            _this.nguiDatetimePickerEl.addEventListener('dragstart', _this.drag_start, false);\n\t\t            document.body.addEventListener('dragover', _this.drag_over, false);\n\t\t            document.body.addEventListener('drop', _this.drop, false);\n\t\t            var component = _this.componentRef.instance;\n\t\t            component.defaultValue = _this.defaultValue || _this.el['dateValue'];\n\t\t            component.dateFormat = _this.dateFormat;\n\t\t            component.dateOnly = _this.dateOnly;\n\t\t            component.timeOnly = _this.timeOnly;\n\t\t            component.minuteStep = _this.minuteStep;\n\t\t            component.minDate = _this.minDate;\n\t\t            component.maxDate = _this.maxDate;\n\t\t            component.minHour = _this.minHour;\n\t\t            component.maxHour = _this.maxHour;\n\t\t            component.disabledDates = _this.disabledDates;\n\t\t            component.showCloseButton = _this.closeOnSelect === false;\n\t\t            component.showCloseLayer = _this.showCloseLayer;\n\t\t            component.showTodayShortcut = _this.showTodayShortcut;\n\t\t            component.showWeekNumbers = _this.showWeekNumbers;\n\t\t            _this.styleDatetimePicker();\n\t\t            component.selected$.subscribe(_this.dateSelected);\n\t\t            component.closing$.subscribe(function () {\n\t\t                _this.hideDatetimePicker();\n\t\t            });\n\t\t            //Hack not to fire tab keyup event\n\t\t            // this.justShown = true;\n\t\t            // setTimeout(() => this.justShown = false, 100);\n\t\t        };\n\t\t        this.dateSelected = function (date) {\n\t\t            _this.el.tagName === 'INPUT' && _this.inputElValueChanged(date);\n\t\t            _this.valueChanged$.emit(date);\n\t\t            if (_this.closeOnSelect !== false) {\n\t\t                _this.hideDatetimePicker();\n\t\t            }\n\t\t            else {\n\t\t                _this.nguiDatetimePickerEl.focus();\n\t\t            }\n\t\t        };\n\t\t        this.hideDatetimePicker = function (event) {\n\t\t            if (_this.clickedDatetimePicker) {\n\t\t                return false;\n\t\t            }\n\t\t            else {\n\t\t                setTimeout(function () {\n\t\t                    if (_this.componentRef) {\n\t\t                        _this.componentRef.destroy();\n\t\t                        _this.componentRef = undefined;\n\t\t                    }\n\t\t                    _this.popupClosed$.emit(true);\n\t\t                });\n\t\t            }\n\t\t            event && event.stopPropagation();\n\t\t        };\n\t\t        this.getDate = function (arg) {\n\t\t            var date = arg;\n\t\t            if (typeof arg === 'string') {\n\t\t                date = datetime_1.NguiDatetime.parseDate(arg, _this.parseFormat, _this.dateFormat);\n\t\t            }\n\t\t            return date;\n\t\t        };\n\t\t        this.drag_start = function (event) {\n\t\t            if (document.activeElement.tagName == 'INPUT') {\n\t\t                event.preventDefault();\n\t\t                return false; // block dragging\n\t\t            }\n\t\t            var style = window.getComputedStyle(event.target, null);\n\t\t            event.dataTransfer.setData(\"text/plain\", (parseInt(style.getPropertyValue(\"left\"), 10) - event.clientX)\n\t\t                + ','\n\t\t                + (parseInt(style.getPropertyValue(\"top\"), 10) - event.clientY));\n\t\t        };\n\t\t        this.drop = function (event) {\n\t\t            var offset = event.dataTransfer.getData(\"text/plain\").split(',');\n\t\t            _this.nguiDatetimePickerEl.style.left = (event.clientX + parseInt(offset[0], 10)) + 'px';\n\t\t            _this.nguiDatetimePickerEl.style.top = (event.clientY + parseInt(offset[1], 10)) + 'px';\n\t\t            _this.nguiDatetimePickerEl.style.bottom = '';\n\t\t            event.preventDefault();\n\t\t            return false;\n\t\t        };\n\t\t        this.el = this.viewContainerRef.element.nativeElement;\n\t\t    }\n\t\t    /**\n\t\t     * convert defaultValue, minDate, maxDate, minHour, and maxHour to proper types\n\t\t     */\n\t\t    NguiDatetimePickerDirective.prototype.normalizeInput = function () {\n\t\t        if (this.defaultValue && typeof this.defaultValue === 'string') {\n\t\t            var d = datetime_1.NguiDatetime.parseDate(this.defaultValue);\n\t\t            this.defaultValue = isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.minDate && typeof this.minDate == 'string') {\n\t\t            var d = datetime_1.NguiDatetime.parseDate(this.minDate);\n\t\t            this.minDate = isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.maxDate && typeof this.maxDate == 'string') {\n\t\t            var d = datetime_1.NguiDatetime.parseDate(this.maxDate);\n\t\t            this.maxDate = isNaN(d.getTime()) ? new Date() : d;\n\t\t        }\n\t\t        if (this.minHour) {\n\t\t            if (this.minHour instanceof Date) {\n\t\t                this.minHour = this.minHour.getHours();\n\t\t            }\n\t\t            else {\n\t\t                var hour = Number(this.minHour.toString());\n\t\t                if (!isInteger(hour) || hour > 23 || hour < 0) {\n\t\t                    this.minHour = undefined;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        if (this.maxHour) {\n\t\t            if (this.maxHour instanceof Date) {\n\t\t                this.maxHour = this.maxHour.getHours();\n\t\t            }\n\t\t            else {\n\t\t                var hour = Number(this.maxHour.toString());\n\t\t                if (!isInteger(hour) || hour > 23 || hour < 0) {\n\t\t                    this.maxHour = undefined;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.ngOnInit = function () {\n\t\t        var _this = this;\n\t\t        if (this.parent && this.formControlName) {\n\t\t            if (this.parent[\"form\"]) {\n\t\t                this.ctrl = this.parent[\"form\"].get(this.formControlName);\n\t\t            }\n\t\t            else if (this.parent[\"name\"]) {\n\t\t                var formDir = this.parent.formDirective;\n\t\t                if (formDir instanceof forms_1.FormGroupDirective && formDir.form.get(this.parent[\"name\"])) {\n\t\t                    this.ctrl = formDir.form.get(this.parent[\"name\"]).get(this.formControlName);\n\t\t                }\n\t\t            }\n\t\t            if (this.ctrl) {\n\t\t                this.sub = this.ctrl.valueChanges.subscribe(function (date) {\n\t\t                    _this.setInputElDateValue(date);\n\t\t                    _this.updateDatepicker();\n\t\t                });\n\t\t            }\n\t\t        }\n\t\t        this.normalizeInput();\n\t\t        //wrap this element with a <div> tag, so that we can position dynamic element correctly\n\t\t        var wrapper = document.createElement(\"div\");\n\t\t        wrapper.className = 'ngui-datetime-picker-wrapper';\n\t\t        this.el.parentElement.insertBefore(wrapper, this.el.nextSibling);\n\t\t        wrapper.appendChild(this.el);\n\t\t        if (this.ngModel && this.ngModel.getTime) {\n\t\t            this.ngModel.toString = function () { return datetime_1.NguiDatetime.formatDate(_this.ngModel, _this.dateFormat, _this.dateOnly); };\n\t\t        }\n\t\t        setTimeout(function () {\n\t\t            if (_this.el.tagName === 'INPUT') {\n\t\t                _this.inputElValueChanged(_this.el.value); //set this.el.dateValue and reformat this.el.value\n\t\t            }\n\t\t            if (_this.ctrl) {\n\t\t                _this.ctrl.markAsPristine();\n\t\t            }\n\t\t        });\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.ngAfterViewInit = function () {\n\t\t        // if this element is not an input tag, move dropdown after input tag\n\t\t        // so that it displays correctly\n\t\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t\t            this.el : this.el.querySelector(\"input\");\n\t\t        if (this.inputEl) {\n\t\t            this.inputEl.addEventListener('focus', this.showDatetimePicker);\n\t\t            this.inputEl.addEventListener('blur', this.hideDatetimePicker);\n\t\t            this.inputEl.addEventListener('keydown', this.handleKeyDown);\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.ngOnChanges = function (changes) {\n\t\t        var _this = this;\n\t\t        var date;\n\t\t        if (changes && changes['ngModel']) {\n\t\t            date = changes['ngModel'].currentValue;\n\t\t            if (date && typeof date !== 'string') {\n\t\t                date.toString = function () { return datetime_1.NguiDatetime.formatDate(date, _this.dateFormat, _this.dateOnly); };\n\t\t                this.setInputElDateValue(date);\n\t\t                this.updateDatepicker();\n\t\t            }\n\t\t            else if (date && typeof date === 'string') {\n\t\t                /** if program assigns a string value, then format to date later */\n\t\t                if (!this.userModifyingValue) {\n\t\t                    setTimeout(function () {\n\t\t                        var dt = _this.getDate(date);\n\t\t                        dt.toString = function () { return datetime_1.NguiDatetime.formatDate(dt, _this.dateFormat, _this.dateOnly); };\n\t\t                        _this.ngModel = dt;\n\t\t                        _this.inputEl.value = '' + dt;\n\t\t                    });\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        this.userModifyingValue = false;\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.updateDatepicker = function () {\n\t\t        if (this.componentRef) {\n\t\t            var component = this.componentRef.instance;\n\t\t            component.defaultValue = this.el['dateValue'];\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.setInputElDateValue = function (date) {\n\t\t        if (typeof date === 'string' && date) {\n\t\t            this.el['dateValue'] = this.getDate(date);\n\t\t        }\n\t\t        else if (typeof date === 'object') {\n\t\t            this.el['dateValue'] = date;\n\t\t        }\n\t\t        else if (typeof date === 'undefined') {\n\t\t            this.el['dateValue'] = null;\n\t\t        }\n\t\t        if (this.ctrl) {\n\t\t            this.ctrl.markAsDirty();\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.ngOnDestroy = function () {\n\t\t        if (this.sub) {\n\t\t            this.sub.unsubscribe();\n\t\t        }\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.elementIn = function (el, containerEl) {\n\t\t        while (el = el.parentNode) {\n\t\t            if (el === containerEl)\n\t\t                return true;\n\t\t        }\n\t\t        return false;\n\t\t    };\n\t\t    NguiDatetimePickerDirective.prototype.styleDatetimePicker = function () {\n\t\t        var _this = this;\n\t\t        // setting position, width, and height of auto complete dropdown\n\t\t        var thisElBCR = this.el.getBoundingClientRect();\n\t\t        // this.nguiDatetimePickerEl.style.minWidth      = thisElBCR.width + 'px';\n\t\t        this.nguiDatetimePickerEl.style.position = 'absolute';\n\t\t        this.nguiDatetimePickerEl.style.zIndex = '1000';\n\t\t        this.nguiDatetimePickerEl.style.left = '0';\n\t\t        this.nguiDatetimePickerEl.style.transition = 'height 0.3s ease-in';\n\t\t        this.nguiDatetimePickerEl.style.visibility = 'hidden';\n\t\t        setTimeout(function () {\n\t\t            var thisElBcr = _this.el.getBoundingClientRect();\n\t\t            var nguiDatetimePickerElBcr = _this.nguiDatetimePickerEl.getBoundingClientRect();\n\t\t            if (thisElBcr.bottom + nguiDatetimePickerElBcr.height > window.innerHeight) {\n\t\t                _this.nguiDatetimePickerEl.style.bottom =\n\t\t                    (thisElBcr.bottom - window.innerHeight + 15) + 'px';\n\t\t            }\n\t\t            else {\n\t\t                // otherwise, show below\n\t\t                _this.nguiDatetimePickerEl.style.top = thisElBcr.height + 'px';\n\t\t            }\n\t\t            _this.nguiDatetimePickerEl.style.visibility = 'visible';\n\t\t        });\n\t\t    };\n\t\t    ;\n\t\t    NguiDatetimePickerDirective.prototype.drag_over = function (event) {\n\t\t        event.preventDefault();\n\t\t        return false;\n\t\t    };\n\t\t    __decorate([\n\t\t        core_1.Input('date-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"dateFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('parse-format'), \n\t\t        __metadata('design:type', String)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"parseFormat\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('date-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"dateOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('time-only'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"timeOnly\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('close-on-select'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"closeOnSelect\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('default-value'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"defaultValue\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('minute-step'), \n\t\t        __metadata('design:type', Number)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"minuteStep\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-date'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"minDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-date'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"maxDate\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('min-hour'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"minHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('max-hour'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"maxHour\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('disabled-dates'), \n\t\t        __metadata('design:type', Array)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"disabledDates\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-close-layer'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"showCloseLayer\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-today-shortcut'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"showTodayShortcut\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('show-week-numbers'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"showWeekNumbers\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input(), \n\t\t        __metadata('design:type', String)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"formControlName\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('is-draggable'), \n\t\t        __metadata('design:type', Boolean)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"isDraggable\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Input('ngModel'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"ngModel\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('ngModelChange'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"ngModelChange\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('valueChanged'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"valueChanged$\", void 0);\n\t\t    __decorate([\n\t\t        core_1.Output('popupClosed'), \n\t\t        __metadata('design:type', Object)\n\t\t    ], NguiDatetimePickerDirective.prototype, \"popupClosed$\", void 0);\n\t\t    NguiDatetimePickerDirective = __decorate([\n\t\t        core_1.Directive({\n\t\t            selector: '[ngui-datetime-picker]',\n\t\t            providers: [datetime_1.NguiDatetime]\n\t\t        }),\n\t\t        __param(2, core_1.Optional()),\n\t\t        __param(2, core_1.Host()),\n\t\t        __param(2, core_1.SkipSelf()), \n\t\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t\t    ], NguiDatetimePickerDirective);\n\t\t    return NguiDatetimePickerDirective;\n\t\t}());\n\t\texports.NguiDatetimePickerDirective = NguiDatetimePickerDirective;\n\t\n\t\n\t/***/ },\n\t/* 5 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\t\n\t/***/ },\n\t/* 6 */\n\t/***/ function(module, exports, __webpack_require__) {\n\t\n\t\t\"use strict\";\n\t\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t\t};\n\t\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t\t};\n\t\tvar core_1 = __webpack_require__(2);\n\t\tvar forms_1 = __webpack_require__(5);\n\t\tvar common_1 = __webpack_require__(7);\n\t\tvar datetime_1 = __webpack_require__(1);\n\t\tvar datetime_picker_component_1 = __webpack_require__(3);\n\t\tvar datetime_picker_directive_1 = __webpack_require__(4);\n\t\tvar NguiDatetimePickerModule = (function () {\n\t\t    function NguiDatetimePickerModule() {\n\t\t    }\n\t\t    NguiDatetimePickerModule = __decorate([\n\t\t        core_1.NgModule({\n\t\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t\t            declarations: [datetime_picker_component_1.NguiDatetimePickerComponent, datetime_picker_directive_1.NguiDatetimePickerDirective],\n\t\t            exports: [datetime_picker_component_1.NguiDatetimePickerComponent, datetime_picker_directive_1.NguiDatetimePickerDirective],\n\t\t            entryComponents: [datetime_picker_component_1.NguiDatetimePickerComponent],\n\t\t            providers: [datetime_1.NguiDatetime]\n\t\t        }), \n\t\t        __metadata('design:paramtypes', [])\n\t\t    ], NguiDatetimePickerModule);\n\t\t    return NguiDatetimePickerModule;\n\t\t}());\n\t\texports.NguiDatetimePickerModule = NguiDatetimePickerModule;\n\t\n\t\n\t/***/ },\n\t/* 7 */\n\t/***/ function(module, exports) {\n\t\n\t\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\t//# sourceMappingURL=datetime-picker.umd.js.map\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar simple_notifications_module_1 = __webpack_require__(30);\r\n\texports.SimpleNotificationsModule = simple_notifications_module_1.SimpleNotificationsModule;\r\n\tvar simple_notifications_component_1 = __webpack_require__(33);\r\n\texports.SimpleNotificationsComponent = simple_notifications_component_1.SimpleNotificationsComponent;\r\n\tvar notification_component_1 = __webpack_require__(35);\r\n\texports.NotificationComponent = notification_component_1.NotificationComponent;\r\n\tvar notifications_service_1 = __webpack_require__(31);\r\n\texports.NotificationsService = notifications_service_1.NotificationsService;\r\n\tvar max_pipe_1 = __webpack_require__(37);\r\n\texports.MaxPipe = max_pipe_1.MaxPipe;\r\n\tvar push_notifications_module_1 = __webpack_require__(38);\r\n\texports.PushNotificationsModule = push_notifications_module_1.PushNotificationsModule;\r\n\tvar push_notifications_service_1 = __webpack_require__(39);\r\n\texports.PushNotificationsService = push_notifications_service_1.PushNotificationsService;\r\n\t//# sourceMappingURL=components.js.map\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar common_1 = __webpack_require__(22);\n\tvar notifications_service_1 = __webpack_require__(31);\n\tvar simple_notifications_component_1 = __webpack_require__(33);\n\tvar notification_component_1 = __webpack_require__(35);\n\tvar max_pipe_1 = __webpack_require__(37);\n\tvar SimpleNotificationsModule = (function () {\n\t    function SimpleNotificationsModule() {\n\t    }\n\t    SimpleNotificationsModule.forRoot = function () {\n\t        return {\n\t            ngModule: SimpleNotificationsModule,\n\t            providers: [\n\t                notifications_service_1.NotificationsService\n\t            ]\n\t        };\n\t    };\n\t    SimpleNotificationsModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [common_1.CommonModule],\n\t            declarations: [simple_notifications_component_1.SimpleNotificationsComponent, notification_component_1.NotificationComponent, max_pipe_1.MaxPipe],\n\t            providers: [],\n\t            exports: [simple_notifications_component_1.SimpleNotificationsComponent]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], SimpleNotificationsModule);\n\t    return SimpleNotificationsModule;\n\t}());\n\texports.SimpleNotificationsModule = SimpleNotificationsModule;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar Subject_1 = __webpack_require__(6);\n\tvar icons_1 = __webpack_require__(32);\n\tvar NotificationsService = (function () {\n\t    function NotificationsService() {\n\t        this.emitter = new Subject_1.Subject();\n\t        this.icons = icons_1.defaultIcons;\n\t    }\n\t    NotificationsService.prototype.set = function (notification, to) {\n\t        notification.id = notification.override && notification.override.id ? notification.override.id : Math.random().toString(36).substring(3);\n\t        notification.click = new core_1.EventEmitter();\n\t        this.emitter.next({ command: 'set', notification: notification, add: to });\n\t        return notification;\n\t    };\n\t    ;\n\t    NotificationsService.prototype.getChangeEmitter = function () {\n\t        return this.emitter;\n\t    };\n\t    //// Access methods\n\t    NotificationsService.prototype.success = function (title, content, override) {\n\t        return this.set({\n\t            title: title,\n\t            content: content,\n\t            type: 'success',\n\t            icon: this.icons.success,\n\t            override: override\n\t        }, true);\n\t    };\n\t    NotificationsService.prototype.error = function (title, content, override) {\n\t        return this.set({ title: title, content: content, type: 'error', icon: this.icons.error, override: override }, true);\n\t    };\n\t    NotificationsService.prototype.alert = function (title, content, override) {\n\t        return this.set({ title: title, content: content, type: 'alert', icon: this.icons.alert, override: override }, true);\n\t    };\n\t    NotificationsService.prototype.info = function (title, content, override) {\n\t        return this.set({ title: title, content: content, type: 'info', icon: this.icons.info, override: override }, true);\n\t    };\n\t    NotificationsService.prototype.bare = function (title, content, override) {\n\t        return this.set({ title: title, content: content, type: 'bare', icon: 'bare', override: override }, true);\n\t    };\n\t    // With type method\n\t    NotificationsService.prototype.create = function (title, content, type, override) {\n\t        return this.set({ title: title, content: content, type: type, icon: 'bare', override: override }, true);\n\t    };\n\t    // HTML Notification method\n\t    NotificationsService.prototype.html = function (html, type, override) {\n\t        return this.set({ html: html, type: type, icon: 'bare', override: override }, true);\n\t    };\n\t    // Remove all notifications method\n\t    NotificationsService.prototype.remove = function (id) {\n\t        if (id)\n\t            this.emitter.next({ command: 'clean', id: id });\n\t        else\n\t            this.emitter.next({ command: 'cleanAll' });\n\t    };\n\t    NotificationsService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], NotificationsService);\n\t    return NotificationsService;\n\t}());\n\texports.NotificationsService = NotificationsService;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\texports.defaultIcons = {\n\t    alert: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\\\"/>\\n        </svg>\",\n\t    error: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0V0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\\\"/>\\n        </svg>\\n    \",\n\t    info: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\\\"/>\\n        </svg>\\n    \",\n\t    success: \"\\n        <svg class=\\\"simple-notification-svg\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" fill=\\\"#000000\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n            <path d=\\\"M0 0h24v24H0z\\\" fill=\\\"none\\\"/>\\n            <path d=\\\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\\\"/>\\n        </svg>\\n    \"\n\t};\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar notifications_service_1 = __webpack_require__(31);\n\tvar options_type_1 = __webpack_require__(34);\n\tvar SimpleNotificationsComponent = (function () {\n\t    function SimpleNotificationsComponent(_service) {\n\t        this._service = _service;\n\t        this.onCreate = new core_1.EventEmitter();\n\t        this.onDestroy = new core_1.EventEmitter();\n\t        this.notifications = [];\n\t        this.position = ['bottom', 'right'];\n\t        // Received values\n\t        this.lastOnBottom = true;\n\t        this.maxStack = 8;\n\t        this.preventLastDuplicates = false;\n\t        this.preventDuplicates = false;\n\t        // Sent values\n\t        this.timeOut = 0;\n\t        this.maxLength = 0;\n\t        this.clickToClose = true;\n\t        this.showProgressBar = true;\n\t        this.pauseOnHover = true;\n\t        this.theClass = '';\n\t        this.rtl = false;\n\t        this.animate = 'fromRight';\n\t    }\n\t    Object.defineProperty(SimpleNotificationsComponent.prototype, \"options\", {\n\t        set: function (opt) {\n\t            this.attachChanges(opt);\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    SimpleNotificationsComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        // Listen for changes in the service\n\t        this.listener = this._service.getChangeEmitter()\n\t            .subscribe(function (item) {\n\t            switch (item.command) {\n\t                case 'cleanAll':\n\t                    _this.notifications = [];\n\t                    break;\n\t                case 'clean':\n\t                    _this.cleanSingle(item.id);\n\t                    break;\n\t                case 'set':\n\t                    if (item.add)\n\t                        _this.add(item.notification);\n\t                    else\n\t                        _this.defaultBehavior(item);\n\t                    break;\n\t                default:\n\t                    _this.defaultBehavior(item);\n\t                    break;\n\t            }\n\t        });\n\t    };\n\t    // Default behavior on event\n\t    SimpleNotificationsComponent.prototype.defaultBehavior = function (value) {\n\t        this.notifications.splice(this.notifications.indexOf(value.notification), 1);\n\t        this.onDestroy.emit(this.buildEmit(value.notification, false));\n\t    };\n\t    // Add the new notification to the notification array\n\t    SimpleNotificationsComponent.prototype.add = function (item) {\n\t        item.createdOn = new Date();\n\t        var toBlock = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\n\t        // Save this as the last created notification\n\t        this.lastNotificationCreated = item;\n\t        if (!toBlock) {\n\t            // Check if the notification should be added at the start or the end of the array\n\t            if (this.lastOnBottom) {\n\t                if (this.notifications.length >= this.maxStack)\n\t                    this.notifications.splice(0, 1);\n\t                this.notifications.push(item);\n\t            }\n\t            else {\n\t                if (this.notifications.length >= this.maxStack)\n\t                    this.notifications.splice(this.notifications.length - 1, 1);\n\t                this.notifications.splice(0, 0, item);\n\t            }\n\t            this.onCreate.emit(this.buildEmit(item, true));\n\t        }\n\t    };\n\t    // Check if notifications should be prevented\n\t    SimpleNotificationsComponent.prototype.block = function (item) {\n\t        var toCheck = item.html ? this.checkHtml : this.checkStandard;\n\t        if (this.preventDuplicates && this.notifications.length > 0) {\n\t            for (var i = 0; i < this.notifications.length; i++) {\n\t                if (toCheck(this.notifications[i], item)) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        if (this.preventLastDuplicates) {\n\t            var comp = void 0;\n\t            if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\n\t                if (this.lastOnBottom) {\n\t                    comp = this.notifications[this.notifications.length - 1];\n\t                }\n\t                else {\n\t                    comp = this.notifications[0];\n\t                }\n\t            }\n\t            else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\n\t                comp = this.lastNotificationCreated;\n\t            }\n\t            else {\n\t                return false;\n\t            }\n\t            return toCheck(comp, item);\n\t        }\n\t        return false;\n\t    };\n\t    SimpleNotificationsComponent.prototype.checkStandard = function (checker, item) {\n\t        return checker.type === item.type && checker.title === item.title && checker.content === item.content;\n\t    };\n\t    SimpleNotificationsComponent.prototype.checkHtml = function (checker, item) {\n\t        return checker.html ? checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html : false;\n\t    };\n\t    // Attach all the changes received in the options object\n\t    SimpleNotificationsComponent.prototype.attachChanges = function (options) {\n\t        var _this = this;\n\t        Object.keys(options).forEach(function (a) {\n\t            if (_this.hasOwnProperty(a)) {\n\t                _this[a] = options[a];\n\t            }\n\t        });\n\t    };\n\t    SimpleNotificationsComponent.prototype.buildEmit = function (notification, to) {\n\t        var toEmit = {\n\t            createdOn: notification.createdOn,\n\t            type: notification.type,\n\t            icon: notification.icon,\n\t            id: notification.id\n\t        };\n\t        if (notification.html) {\n\t            toEmit.html = notification.html;\n\t        }\n\t        else {\n\t            toEmit.title = notification.title;\n\t            toEmit.content = notification.content;\n\t        }\n\t        if (!to) {\n\t            toEmit.destroyedOn = new Date();\n\t        }\n\t        return toEmit;\n\t    };\n\t    SimpleNotificationsComponent.prototype.cleanSingle = function (id) {\n\t        var indexOfDelete = 0;\n\t        var doDelete = false;\n\t        this.notifications.forEach(function (notification, idx) {\n\t            if (notification.id === id) {\n\t                indexOfDelete = idx;\n\t                doDelete = true;\n\t            }\n\t        });\n\t        if (doDelete) {\n\t            this.notifications.splice(indexOfDelete, 1);\n\t        }\n\t    };\n\t    SimpleNotificationsComponent.prototype.ngOnDestroy = function () {\n\t        if (this.listener) {\n\t            this.listener.unsubscribe();\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', (typeof (_a = typeof options_type_1.Options !== 'undefined' && options_type_1.Options) === 'function' && _a) || Object), \n\t        __metadata('design:paramtypes', [(typeof (_b = typeof options_type_1.Options !== 'undefined' && options_type_1.Options) === 'function' && _b) || Object])\n\t    ], SimpleNotificationsComponent.prototype, \"options\", null);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], SimpleNotificationsComponent.prototype, \"onCreate\", void 0);\n\t    __decorate([\n\t        core_1.Output(), \n\t        __metadata('design:type', Object)\n\t    ], SimpleNotificationsComponent.prototype, \"onDestroy\", void 0);\n\t    SimpleNotificationsComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'simple-notifications',\n\t            encapsulation: core_1.ViewEncapsulation.None,\n\t            template: \"\\n        <div class=\\\"simple-notification-wrapper\\\" [ngClass]=\\\"position\\\">\\n            <simple-notification\\n                *ngFor=\\\"let a of notifications; let i = index\\\"\\n                [item]=\\\"a\\\"\\n                [timeOut]=\\\"timeOut\\\"\\n                [clickToClose]=\\\"clickToClose\\\"\\n                [maxLength]=\\\"maxLength\\\"\\n                [showProgressBar]=\\\"showProgressBar\\\"\\n                [pauseOnHover]=\\\"pauseOnHover\\\"\\n                [theClass]=\\\"theClass\\\"\\n                [rtl]=\\\"rtl\\\"\\n                [animate]=\\\"animate\\\"\\n                [position]=\\\"i\\\"\\n                >\\n            </simple-notification>\\n        </div>\\n    \",\n\t            styles: [\"\\n        .simple-notification-wrapper {\\n            position: fixed;\\n            width: 300px;\\n            z-index: 1000;\\n        }\\n        \\n        .simple-notification-wrapper.left { left: 20px; }\\n        .simple-notification-wrapper.top { top: 20px; }\\n        .simple-notification-wrapper.right { right: 20px; }\\n        .simple-notification-wrapper.bottom { bottom: 20px; }\\n        \\n        @media (max-width: 340px) {\\n            .simple-notification-wrapper {\\n                width: auto;\\n                left: 20px;\\n                right: 20px;\\n            }\\n        }\\n    \"]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_c = typeof notifications_service_1.NotificationsService !== 'undefined' && notifications_service_1.NotificationsService) === 'function' && _c) || Object])\n\t    ], SimpleNotificationsComponent);\n\t    return SimpleNotificationsComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.SimpleNotificationsComponent = SimpleNotificationsComponent;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar platform_browser_1 = __webpack_require__(21);\n\tvar notification_type_1 = __webpack_require__(36);\n\tvar notifications_service_1 = __webpack_require__(31);\n\tvar NotificationComponent = (function () {\n\t    function NotificationComponent(notificationService, domSanitizer, zone) {\n\t        var _this = this;\n\t        this.notificationService = notificationService;\n\t        this.domSanitizer = domSanitizer;\n\t        this.zone = zone;\n\t        // Progress bar variables\n\t        this.progressWidth = 0;\n\t        this.stopTime = false;\n\t        this.count = 0;\n\t        this.instance = function () {\n\t            _this.zone.runOutsideAngular(function () {\n\t                _this.zone.run(function () { return _this.diff = (new Date().getTime() - _this.start) - (_this.count * _this.speed); });\n\t                if (_this.count++ === _this.steps)\n\t                    _this.zone.run(function () { return _this.remove(); });\n\t                else if (!_this.stopTime) {\n\t                    if (_this.showProgressBar)\n\t                        _this.zone.run(function () { return _this.progressWidth += 100 / _this.steps; });\n\t                    _this.timer = setTimeout(_this.instance, (_this.speed - _this.diff));\n\t                }\n\t            });\n\t        };\n\t    }\n\t    NotificationComponent.prototype.ngOnInit = function () {\n\t        if (this.animate) {\n\t            this.item.state = this.animate;\n\t        }\n\t        if (this.item.override) {\n\t            this.attachOverrides();\n\t        }\n\t        if (this.timeOut !== 0) {\n\t            this.startTimeOut();\n\t        }\n\t        this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.item.icon);\n\t    };\n\t    NotificationComponent.prototype.startTimeOut = function () {\n\t        var _this = this;\n\t        this.steps = this.timeOut / 10;\n\t        this.speed = this.timeOut / this.steps;\n\t        this.start = new Date().getTime();\n\t        this.zone.runOutsideAngular(function () { return _this.timer = setTimeout(_this.instance, _this.speed); });\n\t    };\n\t    NotificationComponent.prototype.onEnter = function () {\n\t        if (this.pauseOnHover) {\n\t            this.stopTime = true;\n\t        }\n\t    };\n\t    NotificationComponent.prototype.onLeave = function () {\n\t        if (this.pauseOnHover) {\n\t            this.stopTime = false;\n\t            setTimeout(this.instance, (this.speed - this.diff));\n\t        }\n\t    };\n\t    NotificationComponent.prototype.setPosition = function () {\n\t        return this.position !== 0 ? this.position * 90 : 0;\n\t    };\n\t    NotificationComponent.prototype.onClick = function ($e) {\n\t        this.item.click.emit($e);\n\t        if (this.clickToClose) {\n\t            this.remove();\n\t        }\n\t    };\n\t    // Attach all the overrides\n\t    NotificationComponent.prototype.attachOverrides = function () {\n\t        var _this = this;\n\t        Object.keys(this.item.override).forEach(function (a) {\n\t            if (_this.hasOwnProperty(a)) {\n\t                _this[a] = _this.item.override[a];\n\t            }\n\t        });\n\t    };\n\t    NotificationComponent.prototype.ngOnDestroy = function () {\n\t        clearTimeout(this.timer);\n\t    };\n\t    NotificationComponent.prototype.remove = function () {\n\t        var _this = this;\n\t        if (this.animate) {\n\t            this.item.state = this.animate + 'Out';\n\t            this.zone.runOutsideAngular(function () {\n\t                setTimeout(function () {\n\t                    _this.zone.run(function () { return _this.notificationService.set(_this.item, false); });\n\t                }, 310);\n\t            });\n\t        }\n\t        else {\n\t            this.notificationService.set(this.item, false);\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], NotificationComponent.prototype, \"timeOut\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], NotificationComponent.prototype, \"showProgressBar\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], NotificationComponent.prototype, \"pauseOnHover\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], NotificationComponent.prototype, \"clickToClose\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], NotificationComponent.prototype, \"maxLength\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], NotificationComponent.prototype, \"theClass\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Boolean)\n\t    ], NotificationComponent.prototype, \"rtl\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], NotificationComponent.prototype, \"animate\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Number)\n\t    ], NotificationComponent.prototype, \"position\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', (typeof (_a = typeof notification_type_1.Notification !== 'undefined' && notification_type_1.Notification) === 'function' && _a) || Object)\n\t    ], NotificationComponent.prototype, \"item\", void 0);\n\t    NotificationComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'simple-notification',\n\t            encapsulation: core_1.ViewEncapsulation.None,\n\t            animations: [\n\t                core_1.trigger('enterLeave', [\n\t                    // Enter from right\n\t                    core_1.state('fromRight', core_1.style({ opacity: 1, transform: 'translateX(0)' })),\n\t                    core_1.transition('* => fromRight', [\n\t                        core_1.style({ opacity: 0, transform: 'translateX(5%)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ]),\n\t                    core_1.state('fromRightOut', core_1.style({ opacity: 0, transform: 'translateX(-5%)' })),\n\t                    core_1.transition('fromRight => fromRightOut', [\n\t                        core_1.style({ opacity: 1, transform: 'translateX(0)' }),\n\t                        core_1.animate('300ms ease-in-out')\n\t                    ]),\n\t                    // Enter from left\n\t                    core_1.state('fromLeft', core_1.style({ opacity: 1, transform: 'translateX(0)' })),\n\t                    core_1.transition('* => fromLeft', [\n\t                        core_1.style({ opacity: 0, transform: 'translateX(-5%)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ]),\n\t                    core_1.state('fromLeftOut', core_1.style({ opacity: 0, transform: 'translateX(5%)' })),\n\t                    core_1.transition('fromLeft => fromLeftOut', [\n\t                        core_1.style({ opacity: 1, transform: 'translateX(0)' }),\n\t                        core_1.animate('300ms ease-in-out')\n\t                    ]),\n\t                    // Rotate\n\t                    core_1.state('scale', core_1.style({ opacity: 1, transform: 'scale(1)' })),\n\t                    core_1.transition('* => scale', [\n\t                        core_1.style({ opacity: 0, transform: 'scale(0)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ]),\n\t                    core_1.state('scaleOut', core_1.style({ opacity: 0, transform: 'scale(0)' })),\n\t                    core_1.transition('scale => scaleOut', [\n\t                        core_1.style({ opacity: 1, transform: 'scale(1)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ]),\n\t                    // Scale\n\t                    core_1.state('rotate', core_1.style({ opacity: 1, transform: 'rotate(0deg)' })),\n\t                    core_1.transition('* => rotate', [\n\t                        core_1.style({ opacity: 0, transform: 'rotate(5deg)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ]),\n\t                    core_1.state('rotateOut', core_1.style({ opacity: 0, transform: 'rotate(-5deg)' })),\n\t                    core_1.transition('rotate => rotateOut', [\n\t                        core_1.style({ opacity: 1, transform: 'rotate(0deg)' }),\n\t                        core_1.animate('400ms ease-in-out')\n\t                    ])\n\t                ])\n\t            ],\n\t            template: \"\\n        <div class=\\\"simple-notification\\\"\\n            [@enterLeave]=\\\"item.state\\\"\\n            (click)=\\\"onClick($event)\\\"\\n            [class]=\\\"theClass\\\"\\n\\n            [ngClass]=\\\"{\\n                'alert': item.type === 'alert',\\n                'error': item.type === 'error',\\n                'success': item.type === 'success',\\n                'info': item.type === 'info',\\n                'bare': item.type === 'bare',\\n                'rtl-mode': rtl\\n            }\\\"\\n\\n            (mouseenter)=\\\"onEnter()\\\"\\n            (mouseleave)=\\\"onLeave()\\\">\\n\\n            <div *ngIf=\\\"!item.html\\\">\\n                <div class=\\\"sn-title\\\">{{item.title}}</div>\\n                <div class=\\\"sn-content\\\">{{item.content | max:maxLength}}</div>\\n\\n                <div *ngIf=\\\"item.type !== 'bare'\\\" [innerHTML]=\\\"safeSvg\\\"></div>\\n            </div>\\n            <div *ngIf=\\\"item.html\\\" [innerHTML]=\\\"item.html\\\"></div>\\n\\n            <div class=\\\"sn-progress-loader\\\" *ngIf=\\\"showProgressBar\\\">\\n                <span [ngStyle]=\\\"{'width': progressWidth + '%'}\\\"></span>\\n            </div>\\n\\n        </div>\\n    \",\n\t            styles: [\"\\n        .simple-notification {\\n            width: 100%;\\n            padding: 10px 20px;\\n            box-sizing: border-box;\\n            position: relative;\\n            float: left;\\n            margin-bottom: 10px;\\n            color: #fff;\\n            cursor: pointer;\\n            transition: all 0.5s;\\n        }\\n\\n        .simple-notification .sn-title {\\n            margin: 0;\\n            padding: 0 50px 0 0;\\n            line-height: 30px;\\n            font-size: 20px;\\n        }\\n\\n        .simple-notification .sn-content {\\n            margin: 0;\\n            font-size: 16px;\\n            padding: 0 50px 0 0;\\n            line-height: 20px;\\n        }\\n\\n        .simple-notification svg {\\n            position: absolute;\\n            box-sizing: border-box;\\n            top: 0;\\n            right: 0;\\n            width: 70px;\\n            height: 70px;\\n            padding: 10px;\\n            fill: #fff;\\n        }\\n\\n        .simple-notification.rtl-mode {\\n            direction: rtl;\\n        }\\n\\n        .simple-notification.rtl-mode .sn-content {\\n            padding: 0 0 0 50px;\\n        }\\n\\n        .simple-notification.rtl-mode svg {\\n            left: 0;\\n            right: auto;\\n        }\\n\\n        .simple-notification.error { background: #F44336; }\\n        .simple-notification.success { background: #8BC34A; }\\n        .simple-notification.alert { background: #ffdb5b; }\\n        .simple-notification.info { background: #03A9F4; }\\n\\n        .simple-notification .sn-progress-loader {\\n            position: absolute;\\n            top: 0;\\n            left: 0;\\n            width: 100%;\\n            height: 5px;\\n        }\\n\\n        .simple-notification .sn-progress-loader span {\\n            float: left;\\n            height: 100%;\\n        }\\n\\n        .simple-notification.success .sn-progress-loader span { background: #689F38; }\\n        .simple-notification.error .sn-progress-loader span { background: #D32F2F; }\\n        .simple-notification.alert .sn-progress-loader span { background: #edc242; }\\n        .simple-notification.info .sn-progress-loader span { background: #0288D1; }\\n        .simple-notification.bare .sn-progress-loader span { background: #ccc; }\\n    \"]\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_b = typeof notifications_service_1.NotificationsService !== 'undefined' && notifications_service_1.NotificationsService) === 'function' && _b) || Object, (typeof (_c = typeof platform_browser_1.DomSanitizer !== 'undefined' && platform_browser_1.DomSanitizer) === 'function' && _c) || Object, (typeof (_d = typeof core_1.NgZone !== 'undefined' && core_1.NgZone) === 'function' && _d) || Object])\n\t    ], NotificationComponent);\n\t    return NotificationComponent;\n\t    var _a, _b, _c, _d;\n\t}());\n\texports.NotificationComponent = NotificationComponent;\n\n\n/***/ }),\n/* 36 */\n34,\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar MaxPipe = (function () {\n\t    function MaxPipe() {\n\t    }\n\t    MaxPipe.prototype.transform = function (value) {\n\t        var args = [];\n\t        for (var _i = 1; _i < arguments.length; _i++) {\n\t            args[_i - 1] = arguments[_i];\n\t        }\n\t        if (!value)\n\t            return value;\n\t        var allowed = args[0];\n\t        var received = value.length;\n\t        if (received > allowed && allowed !== 0) {\n\t            var toCut = allowed - received;\n\t            return value.slice(0, toCut);\n\t        }\n\t        return value;\n\t    };\n\t    MaxPipe = __decorate([\n\t        core_1.Pipe({ name: 'max' }), \n\t        __metadata('design:paramtypes', [])\n\t    ], MaxPipe);\n\t    return MaxPipe;\n\t}());\n\texports.MaxPipe = MaxPipe;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar push_notifications_service_1 = __webpack_require__(39);\n\tvar PushNotificationsModule = (function () {\n\t    function PushNotificationsModule() {\n\t    }\n\t    PushNotificationsModule = __decorate([\n\t        core_1.NgModule({\n\t            providers: [push_notifications_service_1.PushNotificationsService]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], PushNotificationsModule);\n\t    return PushNotificationsModule;\n\t}());\n\texports.PushNotificationsModule = PushNotificationsModule;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar Observable_1 = __webpack_require__(7);\n\tvar PushNotificationsService = (function () {\n\t    function PushNotificationsService() {\n\t        this.permission = this.isSupported() ? Notification.permission : 'denied';\n\t    }\n\t    PushNotificationsService.prototype.requestPermission = function () {\n\t        var _this = this;\n\t        if ('Notification' in window)\n\t            Notification.requestPermission(function (status) { return _this.permission = status; });\n\t    };\n\t    PushNotificationsService.prototype.isSupported = function () {\n\t        return 'Notification' in window;\n\t    };\n\t    PushNotificationsService.prototype.create = function (title, options) {\n\t        var _this = this;\n\t        return new Observable_1.Observable(function (obs) {\n\t            if (!('Notification' in window)) {\n\t                obs.error('Notifications are not available in this environment');\n\t                obs.complete();\n\t            }\n\t            if (_this.permission !== 'granted') {\n\t                obs.error(\"The user hasn't granted you permission to send push notifications\");\n\t                obs.complete();\n\t            }\n\t            var n = new Notification(title, options);\n\t            n.onshow = function (e) { return obs.next({ notification: n, event: e }); };\n\t            n.onclick = function (e) { return obs.next({ notification: n, event: e }); };\n\t            n.onerror = function (e) { return obs.error({ notification: n, event: e }); };\n\t            n.onclose = function () { return obs.complete(); };\n\t        });\n\t    };\n\t    PushNotificationsService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], PushNotificationsService);\n\t    return PushNotificationsService;\n\t}());\n\texports.PushNotificationsService = PushNotificationsService;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar router_1 = __webpack_require__(41);\n\tvar components_1 = __webpack_require__(71);\n\texports.routes = [\n\t    { path: '', redirectTo: '/notes', pathMatch: 'full' },\n\t    { path: 'notes', component: components_1.HomeComponent },\n\t    // { path: 'archive-notes', component: ArchiveComponent },\n\t    // { path: 'recycle-bin', component: BinComponent },\n\t    { path: 'about', component: components_1.AboutComponent }\n\t];\n\tvar AppRoutingModule = (function () {\n\t    function AppRoutingModule() {\n\t    }\n\t    AppRoutingModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [router_1.RouterModule.forRoot(exports.routes)],\n\t            exports: [router_1.RouterModule]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AppRoutingModule);\n\t    return AppRoutingModule;\n\t}());\n\texports.AppRoutingModule = AppRoutingModule;\n\n\n/***/ }),\n/* 41 */,\n/* 42 */,\n/* 43 */,\n/* 44 */,\n/* 45 */,\n/* 46 */,\n/* 47 */,\n/* 48 */,\n/* 49 */,\n/* 50 */,\n/* 51 */,\n/* 52 */,\n/* 53 */,\n/* 54 */,\n/* 55 */,\n/* 56 */,\n/* 57 */,\n/* 58 */,\n/* 59 */,\n/* 60 */,\n/* 61 */,\n/* 62 */,\n/* 63 */,\n/* 64 */,\n/* 65 */,\n/* 66 */,\n/* 67 */,\n/* 68 */,\n/* 69 */,\n/* 70 */,\n/* 71 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(72));\n\t__export(__webpack_require__(73));\n\t__export(__webpack_require__(109));\n\t__export(__webpack_require__(111));\n\t__export(__webpack_require__(114));\n\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar Spinner = (function () {\n\t    function Spinner() {\n\t    }\n\t    Spinner = __decorate([\n\t        core_1.Component({\n\t            selector: 'spinner',\n\t            template: \"\\n    <div class=\\\"loaders-container\\\">\\n      <div class=\\\"spinner\\\">\\n        <div class=\\\"circle\\\"></div>\\n      </div>\\n    </div>\\n  \",\n\t            styles: [\n\t                \".loaders-container {\\n        width: 100%;\\n        height: 100%;\\n      }\\n      .loaders-container .spinner {\\n        box-sizing: border-box;\\n        width: 40px;\\n        height: 40px;\\n        position: absolute;\\n        left: 50%;\\n        top: 50%;\\n        z-index: 1;\\n        margin-top: -20px;\\n        margin-left: -20px;\\n      }\\n      .circle {\\n        box-sizing: border-box;\\n        width: 40px;\\n        height: 40px;\\n        border-radius: 100%;\\n        border: 3px solid #bdc5c5;\\n        border-top-color: #009688;\\n        -webkit-animation: spin 1s infinite linear;\\n        animation: spin 1s infinite linear;\\n      }\\n      @-webkit-keyframes spin {\\n        100% {\\n          -webkit-transform: rotate(360deg);\\n          transform: rotate(360deg);\\n        }\\n      }\\n      @keyframes spin {\\n        100% {\\n          -webkit-transform: rotate(360deg);\\n          transform: rotate(360deg);\\n        }\\n      }\"\n\t            ]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], Spinner);\n\t    return Spinner;\n\t}());\n\texports.Spinner = Spinner;\n\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar angular2_notifications_1 = __webpack_require__(29);\n\tvar services_1 = __webpack_require__(74);\n\tvar _ = __webpack_require__(106);\n\tvar BinComponent = (function () {\n\t    function BinComponent(_notesService, _notificationsService) {\n\t        this._notesService = _notesService;\n\t        this._notificationsService = _notificationsService;\n\t        this.spinner = true;\n\t        this.displayList = false;\n\t        this.emptyHtmlMsg = false;\n\t        this.notes_table = NOTES_TABLE;\n\t        this.notes = [];\n\t        this.toDeleteNote = {};\n\t        this.notificationOptions = {\n\t            timeOut: 2000,\n\t            lastOnBottom: true,\n\t            clickToClose: true,\n\t            showProgressBar: false,\n\t            pauseOnHover: true,\n\t            preventDuplicates: false,\n\t            theClass: \"notes-notifications bin\",\n\t            rtl: false\n\t        };\n\t        this.displayList = localStorage.getItem(\"displayBinTypeList\") == 'true' ? true : false;\n\t    }\n\t    BinComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.subscription = this._notesService.notes_tables$.subscribe(function (notes_table) { return _this.notes_table = notes_table; });\n\t        this.refreshNotesTables();\n\t    };\n\t    BinComponent.prototype.refreshNotesTables = function () {\n\t        var _this = this;\n\t        this._notesService.getNotes('binNotes').then(function (alldoc) {\n\t            _this.notes_table = alldoc.rows;\n\t            _this.notes = _this.notes_table;\n\t            if (_.isEmpty(_this.notes)) {\n\t                _this.emptyHtmlMsg = true;\n\t            }\n\t            else {\n\t                _this.emptyHtmlMsg = false;\n\t            }\n\t            _this.spinner = false;\n\t        }, function (err) {\n\t            _this.spinner = false;\n\t        });\n\t    };\n\t    BinComponent.prototype.deleteNote = function () {\n\t        var _this = this;\n\t        if (this.toDeleteNote) {\n\t            this.toDeleteNoteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n\t            setTimeout(function () {\n\t                _this._notesService.deleteNote('binNotes', _this.toDeleteNote.doc)\n\t                    .then(function (res) {\n\t                    _this._notificationsService.error(\"Done\", \"Note deleted forever\");\n\t                    _this.refreshNotesTables();\n\t                    _this.toDeleteNote = {};\n\t                });\n\t            }, 200);\n\t        }\n\t    };\n\t    BinComponent.prototype.setDeleteNote = function (note, noteRow) {\n\t        this.toDeleteNote = note;\n\t        this.toDeleteNoteRow = noteRow;\n\t    };\n\t    BinComponent.prototype.restoreNote = function (note, noteRow) {\n\t        var _this = this;\n\t        noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n\t        setTimeout(function () {\n\t            _this._notesService.deleteNote('binNotes', note.doc)\n\t                .then(function (res) {\n\t                _this._notificationsService.success(\"Done\", \"Note restored\");\n\t                _this.refreshNotesTables();\n\t            });\n\t            var restore_note = note;\n\t            delete restore_note.doc._rev;\n\t            if (restore_note.doc.restore === \"archive\") {\n\t                _this._notesService.saveNote('archiveNotes', restore_note.doc)\n\t                    .then(function (res) {\n\t                    _this.updateArchiveNotesOrder(restore_note.doc);\n\t                });\n\t            }\n\t            else if (restore_note.doc.restore === \"note\") {\n\t                _this._notesService.saveNote('notes', restore_note.doc)\n\t                    .then(function (res) {\n\t                    _this.updateNotesOrder(restore_note.doc);\n\t                });\n\t            }\n\t        }, 300);\n\t    };\n\t    BinComponent.prototype.displayTypeChange = function () {\n\t        this.displayList = this.displayList ? false : true;\n\t        localStorage.setItem(\"displayBinTypeList\", String(this.displayList));\n\t    };\n\t    BinComponent.prototype.updateArchiveNotesOrder = function (note) {\n\t        var newOrder = [];\n\t        if (localStorage.getItem('archiveOrder')) {\n\t            newOrder = JSON.parse(localStorage.getItem('archiveOrder'));\n\t            newOrder.unshift(note._id);\n\t        }\n\t        else {\n\t            newOrder.push(note._id);\n\t        }\n\t        localStorage.setItem(\"archiveOrder\", JSON.stringify(newOrder));\n\t    };\n\t    BinComponent.prototype.updateNotesOrder = function (draft) {\n\t        var newOrder = [];\n\t        if (localStorage.getItem('order')) {\n\t            newOrder = JSON.parse(localStorage.getItem('order'));\n\t            newOrder.unshift(draft._id);\n\t        }\n\t        else {\n\t            newOrder.push(draft._id);\n\t        }\n\t        localStorage.setItem(\"order\", JSON.stringify(newOrder));\n\t    };\n\t    BinComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'bin',\n\t            template: __webpack_require__(108),\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof services_1.NotesTableService !== 'undefined' && services_1.NotesTableService) === 'function' && _a) || Object, (typeof (_b = typeof angular2_notifications_1.NotificationsService !== 'undefined' && angular2_notifications_1.NotificationsService) === 'function' && _b) || Object])\n\t    ], BinComponent);\n\t    return BinComponent;\n\t    var _a, _b;\n\t}());\n\texports.BinComponent = BinComponent;\n\tvar NOTES_TABLE = [];\n\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tfunction __export(m) {\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n\t}\n\t__export(__webpack_require__(75));\n\t__export(__webpack_require__(76));\n\t__export(__webpack_require__(94));\n\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\tvar NotesTable = (function () {\n\t    function NotesTable() {\n\t    }\n\t    return NotesTable;\n\t}());\n\texports.NotesTable = NotesTable;\n\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar BehaviorSubject_1 = __webpack_require__(42);\n\tvar PouchDB = __webpack_require__(77);\n\tvar angular2_notifications_1 = __webpack_require__(29);\n\texports.NOTES_TABLES = [];\n\tvar localDB = {\n\t    notes: new PouchDB('notes_table'),\n\t    notesOrder: new PouchDB('notes_order_table'),\n\t    archiveNotes: new PouchDB('archive_notes_table'),\n\t    archiveNotesOrder: new PouchDB('archive_notes_order'),\n\t    binNotes: new PouchDB('bin_notes_table')\n\t};\n\tvar NotesTableService = (function () {\n\t    function NotesTableService(_pushNotifications) {\n\t        this._pushNotifications = _pushNotifications;\n\t        this.notes_tables_source = new BehaviorSubject_1.BehaviorSubject([]);\n\t        this.notes_tables$ = this.notes_tables_source.asObservable();\n\t        this.reminderTable = {\n\t            notes: [],\n\t            archiveNotes: []\n\t        };\n\t        this._pushNotifications.requestPermission();\n\t        this.audio = new Audio('sound/notification.mp3');\n\t    }\n\t    NotesTableService.prototype.getNotes = function (schema) {\n\t        var docs = localDB[schema].allDocs({\n\t            include_docs: true\n\t        });\n\t        return docs;\n\t    };\n\t    NotesTableService.prototype.saveNote = function (schema, note) {\n\t        return localDB[schema].put(note);\n\t    };\n\t    NotesTableService.prototype.deleteNote = function (schema, note) {\n\t        return localDB[schema].remove(note);\n\t    };\n\t    NotesTableService.prototype.updateNote = function (schema, note) {\n\t        return localDB[schema].put(note);\n\t    };\n\t    NotesTableService.prototype.getOrder = function (schema, order) {\n\t        var docs = order[schema].allDocs({\n\t            include_docs: true\n\t        });\n\t        return docs;\n\t    };\n\t    NotesTableService.prototype.saveOrder = function (schema, order) {\n\t        return order[schema].put(order);\n\t    };\n\t    NotesTableService.prototype.updateReminderTable = function (schema) {\n\t        var _this = this;\n\t        this.getNotes(schema).then(function (alldoc) {\n\t            var rows = alldoc.rows;\n\t            _this.reminderTable[schema] = [];\n\t            rows.forEach(function (row) {\n\t                if (row.doc.reminder) {\n\t                    _this.reminderTable[schema].push(row);\n\t                }\n\t            });\n\t        });\n\t    };\n\t    NotesTableService.prototype.reminderTickStart = function () {\n\t        var _this = this;\n\t        setInterval(function () {\n\t            _this.checkForReminder();\n\t        }, 60000);\n\t    };\n\t    NotesTableService.prototype.checkForReminder = function () {\n\t        var _this = this;\n\t        var todayDate = new Date();\n\t        this.reminderTable.notes.forEach(function (row) {\n\t            _this.checkForReminderRepeatation(row, todayDate, 'notes');\n\t        });\n\t        this.reminderTable.archiveNotes.forEach(function (row) {\n\t            _this.checkForReminderRepeatation(row, todayDate, 'archiveNotes');\n\t        });\n\t    };\n\t    NotesTableService.prototype.checkForReminderRepeatation = function (row, todayDate, schema) {\n\t        var reminderDate = new Date(row.doc.reminder.date);\n\t        var repeatText = row.doc.reminder.repeat;\n\t        if (repeatText === 'doesnotrepeat') {\n\t            if (todayDate.getFullYear() === reminderDate.getFullYear() &&\n\t                todayDate.getMonth() === reminderDate.getMonth() &&\n\t                todayDate.getDate() === reminderDate.getDate() &&\n\t                todayDate.getHours() === reminderDate.getHours() &&\n\t                todayDate.getMinutes() === reminderDate.getMinutes()) {\n\t                this.pushNotification(row);\n\t            }\n\t        }\n\t        else if (repeatText === 'daily') {\n\t            if (todayDate.getHours() === reminderDate.getHours() &&\n\t                todayDate.getMinutes() === reminderDate.getMinutes()) {\n\t                this.pushNotification(row);\n\t            }\n\t        }\n\t        else if (repeatText === 'weekly') {\n\t            if (todayDate.getDay() === reminderDate.getDay() &&\n\t                todayDate.getHours() === reminderDate.getHours() &&\n\t                todayDate.getMinutes() === reminderDate.getMinutes()) {\n\t                this.pushNotification(row);\n\t            }\n\t        }\n\t        else if (repeatText === 'monthly') {\n\t            if (todayDate.getDate() === reminderDate.getDate() &&\n\t                todayDate.getHours() === reminderDate.getHours() &&\n\t                todayDate.getMinutes() === reminderDate.getMinutes()) {\n\t                this.pushNotification(row);\n\t            }\n\t        }\n\t        else if (repeatText === 'yearly') {\n\t            if (todayDate.getMonth() === reminderDate.getMonth() &&\n\t                todayDate.getDate() === reminderDate.getDate() &&\n\t                todayDate.getHours() === reminderDate.getHours() &&\n\t                todayDate.getMinutes() === reminderDate.getMinutes()) {\n\t                this.pushNotification(row);\n\t            }\n\t        }\n\t    };\n\t    NotesTableService.prototype.pushNotification = function (note) {\n\t        this.audio.play();\n\t        this._pushNotifications.create(note.doc.title, { body: note.doc.note, icon: 'images/preserver_small.png' }).subscribe(function (res) { }, function (err) { });\n\t    };\n\t    NotesTableService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof angular2_notifications_1.PushNotificationsService !== 'undefined' && angular2_notifications_1.PushNotificationsService) === 'function' && _a) || Object])\n\t    ], NotesTableService);\n\t    return NotesTableService;\n\t    var _a;\n\t}());\n\texports.NotesTableService = NotesTableService;\n\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\t\n\tvar uuidV4 = _interopDefault(__webpack_require__(78));\n\tvar lie = _interopDefault(__webpack_require__(83));\n\tvar getArguments = _interopDefault(__webpack_require__(85));\n\tvar events = __webpack_require__(86);\n\tvar inherits = _interopDefault(__webpack_require__(87));\n\tvar nextTick = _interopDefault(__webpack_require__(84));\n\tvar debug = _interopDefault(__webpack_require__(88));\n\tvar Md5 = _interopDefault(__webpack_require__(92));\n\tvar vuvuzela = _interopDefault(__webpack_require__(93));\n\t\n\t/* istanbul ignore next */\n\tvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\t\n\tfunction isBinaryObject(object) {\n\t  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n\t    (typeof Blob !== 'undefined' && object instanceof Blob);\n\t}\n\t\n\tfunction cloneArrayBuffer(buff) {\n\t  if (typeof buff.slice === 'function') {\n\t    return buff.slice(0);\n\t  }\n\t  // IE10-11 slice() polyfill\n\t  var target = new ArrayBuffer(buff.byteLength);\n\t  var targetArray = new Uint8Array(target);\n\t  var sourceArray = new Uint8Array(buff);\n\t  targetArray.set(sourceArray);\n\t  return target;\n\t}\n\t\n\tfunction cloneBinaryObject(object) {\n\t  if (object instanceof ArrayBuffer) {\n\t    return cloneArrayBuffer(object);\n\t  }\n\t  var size = object.size;\n\t  var type = object.type;\n\t  // Blob\n\t  if (typeof object.slice === 'function') {\n\t    return object.slice(0, size, type);\n\t  }\n\t  // PhantomJS slice() replacement\n\t  return object.webkitSlice(0, size, type);\n\t}\n\t\n\t// most of this is borrowed from lodash.isPlainObject:\n\t// https://github.com/fis-components/lodash.isplainobject/\n\t// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\t\n\tvar funcToString = Function.prototype.toString;\n\tvar objectCtorString = funcToString.call(Object);\n\t\n\tfunction isPlainObject(value) {\n\t  var proto = Object.getPrototypeOf(value);\n\t  /* istanbul ignore if */\n\t  if (proto === null) { // not sure when this happens, but I guess it can\n\t    return true;\n\t  }\n\t  var Ctor = proto.constructor;\n\t  return (typeof Ctor == 'function' &&\n\t    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n\t}\n\t\n\tfunction clone(object) {\n\t  var newObject;\n\t  var i;\n\t  var len;\n\t\n\t  if (!object || typeof object !== 'object') {\n\t    return object;\n\t  }\n\t\n\t  if (Array.isArray(object)) {\n\t    newObject = [];\n\t    for (i = 0, len = object.length; i < len; i++) {\n\t      newObject[i] = clone(object[i]);\n\t    }\n\t    return newObject;\n\t  }\n\t\n\t  // special case: to avoid inconsistencies between IndexedDB\n\t  // and other backends, we automatically stringify Dates\n\t  if (object instanceof Date) {\n\t    return object.toISOString();\n\t  }\n\t\n\t  if (isBinaryObject(object)) {\n\t    return cloneBinaryObject(object);\n\t  }\n\t\n\t  if (!isPlainObject(object)) {\n\t    return object; // don't clone objects like Workers\n\t  }\n\t\n\t  newObject = {};\n\t  for (i in object) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(object, i)) {\n\t      var value = clone(object[i]);\n\t      if (typeof value !== 'undefined') {\n\t        newObject[i] = value;\n\t      }\n\t    }\n\t  }\n\t  return newObject;\n\t}\n\t\n\tfunction once(fun) {\n\t  var called = false;\n\t  return getArguments(function (args) {\n\t    /* istanbul ignore if */\n\t    if (called) {\n\t      // this is a smoke test and should never actually happen\n\t      throw new Error('once called more than once');\n\t    } else {\n\t      called = true;\n\t      fun.apply(this, args);\n\t    }\n\t  });\n\t}\n\t\n\tfunction toPromise(func) {\n\t  //create the function we will be returning\n\t  return getArguments(function (args) {\n\t    // Clone arguments\n\t    args = clone(args);\n\t    var self = this;\n\t    // if the last argument is a function, assume its a callback\n\t    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n\t    var promise = new PouchPromise(function (fulfill, reject) {\n\t      var resp;\n\t      try {\n\t        var callback = once(function (err, mesg) {\n\t          if (err) {\n\t            reject(err);\n\t          } else {\n\t            fulfill(mesg);\n\t          }\n\t        });\n\t        // create a callback for this invocation\n\t        // apply the function in the orig context\n\t        args.push(callback);\n\t        resp = func.apply(self, args);\n\t        if (resp && typeof resp.then === 'function') {\n\t          fulfill(resp);\n\t        }\n\t      } catch (e) {\n\t        reject(e);\n\t      }\n\t    });\n\t    // if there is a callback, call it back\n\t    if (usedCB) {\n\t      promise.then(function (result) {\n\t        usedCB(null, result);\n\t      }, usedCB);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\tfunction logApiCall(self, name, args) {\n\t  /* istanbul ignore if */\n\t  if (self.constructor.listeners('debug').length) {\n\t    var logArgs = ['api', self.name, name];\n\t    for (var i = 0; i < args.length - 1; i++) {\n\t      logArgs.push(args[i]);\n\t    }\n\t    self.constructor.emit('debug', logArgs);\n\t\n\t    // override the callback itself to log the response\n\t    var origCallback = args[args.length - 1];\n\t    args[args.length - 1] = function (err, res) {\n\t      var responseArgs = ['api', self.name, name];\n\t      responseArgs = responseArgs.concat(\n\t        err ? ['error', err] : ['success', res]\n\t      );\n\t      self.constructor.emit('debug', responseArgs);\n\t      origCallback(err, res);\n\t    };\n\t  }\n\t}\n\t\n\tfunction adapterFun(name, callback) {\n\t  return toPromise(getArguments(function (args) {\n\t    if (this._closed) {\n\t      return PouchPromise.reject(new Error('database is closed'));\n\t    }\n\t    if (this._destroyed) {\n\t      return PouchPromise.reject(new Error('database is destroyed'));\n\t    }\n\t    var self = this;\n\t    logApiCall(self, name, args);\n\t    if (!this.taskqueue.isReady) {\n\t      return new PouchPromise(function (fulfill, reject) {\n\t        self.taskqueue.addTask(function (failed) {\n\t          if (failed) {\n\t            reject(failed);\n\t          } else {\n\t            fulfill(self[name].apply(self, args));\n\t          }\n\t        });\n\t      });\n\t    }\n\t    return callback.apply(this, args);\n\t  }));\n\t}\n\t\n\tfunction mangle(key) {\n\t  return '$' + key;\n\t}\n\tfunction unmangle(key) {\n\t  return key.substring(1);\n\t}\n\tfunction Map$1() {\n\t  this._store = {};\n\t}\n\tMap$1.prototype.get = function (key) {\n\t  var mangled = mangle(key);\n\t  return this._store[mangled];\n\t};\n\tMap$1.prototype.set = function (key, value) {\n\t  var mangled = mangle(key);\n\t  this._store[mangled] = value;\n\t  return true;\n\t};\n\tMap$1.prototype.has = function (key) {\n\t  var mangled = mangle(key);\n\t  return mangled in this._store;\n\t};\n\tMap$1.prototype.delete = function (key) {\n\t  var mangled = mangle(key);\n\t  var res = mangled in this._store;\n\t  delete this._store[mangled];\n\t  return res;\n\t};\n\tMap$1.prototype.forEach = function (cb) {\n\t  var keys = Object.keys(this._store);\n\t  for (var i = 0, len = keys.length; i < len; i++) {\n\t    var key = keys[i];\n\t    var value = this._store[key];\n\t    key = unmangle(key);\n\t    cb(value, key);\n\t  }\n\t};\n\tObject.defineProperty(Map$1.prototype, 'size', {\n\t  get: function () {\n\t    return Object.keys(this._store).length;\n\t  }\n\t});\n\t\n\tfunction Set$1(array) {\n\t  this._store = new Map$1();\n\t\n\t  // init with an array\n\t  if (array && Array.isArray(array)) {\n\t    for (var i = 0, len = array.length; i < len; i++) {\n\t      this.add(array[i]);\n\t    }\n\t  }\n\t}\n\tSet$1.prototype.add = function (key) {\n\t  return this._store.set(key, true);\n\t};\n\tSet$1.prototype.has = function (key) {\n\t  return this._store.has(key);\n\t};\n\tSet$1.prototype.forEach = function (cb) {\n\t  this._store.forEach(function (value, key) {\n\t    cb(key);\n\t  });\n\t};\n\tObject.defineProperty(Set$1.prototype, 'size', {\n\t  get: function () {\n\t    return this._store.size;\n\t  }\n\t});\n\t\n\t/* global Map,Set,Symbol */\n\t// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n\t// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n\t// Notably they fail in IE11 and iOS 8.4, which this prevents.\n\tfunction supportsMapAndSet() {\n\t  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n\t    return false;\n\t  }\n\t  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n\t  return prop && 'get' in prop && Map[Symbol.species] === Map;\n\t}\n\t\n\t// based on https://github.com/montagejs/collections\n\t/* global Map,Set */\n\t\n\tvar ExportedSet;\n\tvar ExportedMap;\n\t\n\t{\n\t  if (supportsMapAndSet()) { // prefer built-in Map/Set\n\t    ExportedSet = Set;\n\t    ExportedMap = Map;\n\t  } else { // fall back to our polyfill\n\t    ExportedSet = Set$1;\n\t    ExportedMap = Map$1;\n\t  }\n\t}\n\t\n\t// like underscore/lodash _.pick()\n\tfunction pick(obj, arr) {\n\t  var res = {};\n\t  for (var i = 0, len = arr.length; i < len; i++) {\n\t    var prop = arr[i];\n\t    if (prop in obj) {\n\t      res[prop] = obj[prop];\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t// Most browsers throttle concurrent requests at 6, so it's silly\n\t// to shim _bulk_get by trying to launch potentially hundreds of requests\n\t// and then letting the majority time out. We can handle this ourselves.\n\tvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\t\n\tfunction identityFunction(x) {\n\t  return x;\n\t}\n\t\n\tfunction formatResultForOpenRevsGet(result) {\n\t  return [{\n\t    ok: result\n\t  }];\n\t}\n\t\n\t// shim for P/CouchDB adapters that don't directly implement _bulk_get\n\tfunction bulkGet(db, opts, callback) {\n\t  var requests = opts.docs;\n\t\n\t  // consolidate into one request per doc if possible\n\t  var requestsById = new ExportedMap();\n\t  requests.forEach(function (request) {\n\t    if (requestsById.has(request.id)) {\n\t      requestsById.get(request.id).push(request);\n\t    } else {\n\t      requestsById.set(request.id, [request]);\n\t    }\n\t  });\n\t\n\t  var numDocs = requestsById.size;\n\t  var numDone = 0;\n\t  var perDocResults = new Array(numDocs);\n\t\n\t  function collapseResultsAndFinish() {\n\t    var results = [];\n\t    perDocResults.forEach(function (res) {\n\t      res.docs.forEach(function (info) {\n\t        results.push({\n\t          id: res.id,\n\t          docs: [info]\n\t        });\n\t      });\n\t    });\n\t    callback(null, {results: results});\n\t  }\n\t\n\t  function checkDone() {\n\t    if (++numDone === numDocs) {\n\t      collapseResultsAndFinish();\n\t    }\n\t  }\n\t\n\t  function gotResult(docIndex, id, docs) {\n\t    perDocResults[docIndex] = {id: id, docs: docs};\n\t    checkDone();\n\t  }\n\t\n\t  var allRequests = [];\n\t  requestsById.forEach(function (value, key) {\n\t    allRequests.push(key);\n\t  });\n\t\n\t  var i = 0;\n\t\n\t  function nextBatch() {\n\t\n\t    if (i >= allRequests.length) {\n\t      return;\n\t    }\n\t\n\t    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n\t    var batch = allRequests.slice(i, upTo);\n\t    processBatch(batch, i);\n\t    i += batch.length;\n\t  }\n\t\n\t  function processBatch(batch, offset) {\n\t    batch.forEach(function (docId, j) {\n\t      var docIdx = offset + j;\n\t      var docRequests = requestsById.get(docId);\n\t\n\t      // just use the first request as the \"template\"\n\t      // TODO: The _bulk_get API allows for more subtle use cases than this,\n\t      // but for now it is unlikely that there will be a mix of different\n\t      // \"atts_since\" or \"attachments\" in the same request, since it's just\n\t      // replicate.js that is using this for the moment.\n\t      // Also, atts_since is aspirational, since we don't support it yet.\n\t      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n\t      docOpts.open_revs = docRequests.map(function (request) {\n\t        // rev is optional, open_revs disallowed\n\t        return request.rev;\n\t      });\n\t\n\t      // remove falsey / undefined revisions\n\t      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\t\n\t      var formatResult = identityFunction;\n\t\n\t      if (docOpts.open_revs.length === 0) {\n\t        delete docOpts.open_revs;\n\t\n\t        // when fetching only the \"winning\" leaf,\n\t        // transform the result so it looks like an open_revs\n\t        // request\n\t        formatResult = formatResultForOpenRevsGet;\n\t      }\n\t\n\t      // globally-supplied options\n\t      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n\t        if (param in opts) {\n\t          docOpts[param] = opts[param];\n\t        }\n\t      });\n\t      db.get(docId, docOpts, function (err, res) {\n\t        var result;\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          result = [{error: err}];\n\t        } else {\n\t          result = formatResult(res);\n\t        }\n\t        gotResult(docIdx, docId, result);\n\t        nextBatch();\n\t      });\n\t    });\n\t  }\n\t\n\t  nextBatch();\n\t\n\t}\n\t\n\tfunction isChromeApp() {\n\t  return (typeof chrome !== \"undefined\" &&\n\t    typeof chrome.storage !== \"undefined\" &&\n\t    typeof chrome.storage.local !== \"undefined\");\n\t}\n\t\n\tvar hasLocal;\n\t\n\tif (isChromeApp()) {\n\t  hasLocal = false;\n\t} else {\n\t  try {\n\t    localStorage.setItem('_pouch_check_localstorage', 1);\n\t    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n\t  } catch (e) {\n\t    hasLocal = false;\n\t  }\n\t}\n\t\n\tfunction hasLocalStorage() {\n\t  return hasLocal;\n\t}\n\t\n\t// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n\t// avoid using process.nextTick() directly because the polyfill is very large and we don't\n\t// need all of it (see: https://github.com/defunctzombie/node-process).\n\t// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n\t// package, so it's the one we use.\n\t// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n\t// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n\t// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n\t// (least latency) option, which is \"immediate\" due to use of microtasks.\n\t// All of our nextTicks are isolated to this one function so we can easily swap out one\n\t// implementation for another.\n\t\n\tinherits(Changes, events.EventEmitter);\n\t\n\t/* istanbul ignore next */\n\tfunction attachBrowserEvents(self) {\n\t  if (isChromeApp()) {\n\t    chrome.storage.onChanged.addListener(function (e) {\n\t      // make sure it's event addressed to us\n\t      if (e.db_name != null) {\n\t        //object only has oldValue, newValue members\n\t        self.emit(e.dbName.newValue);\n\t      }\n\t    });\n\t  } else if (hasLocalStorage()) {\n\t    if (typeof addEventListener !== 'undefined') {\n\t      addEventListener(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    } else { // old IE\n\t      window.attachEvent(\"storage\", function (e) {\n\t        self.emit(e.key);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\tfunction Changes() {\n\t  events.EventEmitter.call(this);\n\t  this._listeners = {};\n\t\n\t  attachBrowserEvents(this);\n\t}\n\tChanges.prototype.addListener = function (dbName, id, db, opts) {\n\t  /* istanbul ignore if */\n\t  if (this._listeners[id]) {\n\t    return;\n\t  }\n\t  var self = this;\n\t  var inprogress = false;\n\t  function eventFunction() {\n\t    /* istanbul ignore if */\n\t    if (!self._listeners[id]) {\n\t      return;\n\t    }\n\t    if (inprogress) {\n\t      inprogress = 'waiting';\n\t      return;\n\t    }\n\t    inprogress = true;\n\t    var changesOpts = pick(opts, [\n\t      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n\t      'doc_ids', 'view', 'since', 'query_params', 'binary'\n\t    ]);\n\t\n\t    /* istanbul ignore next */\n\t    function onError() {\n\t      inprogress = false;\n\t    }\n\t\n\t    db.changes(changesOpts).on('change', function (c) {\n\t      if (c.seq > opts.since && !opts.cancelled) {\n\t        opts.since = c.seq;\n\t        opts.onChange(c);\n\t      }\n\t    }).on('complete', function () {\n\t      if (inprogress === 'waiting') {\n\t        nextTick(eventFunction);\n\t      }\n\t      inprogress = false;\n\t    }).on('error', onError);\n\t  }\n\t  this._listeners[id] = eventFunction;\n\t  this.on(dbName, eventFunction);\n\t};\n\t\n\tChanges.prototype.removeListener = function (dbName, id) {\n\t  /* istanbul ignore if */\n\t  if (!(id in this._listeners)) {\n\t    return;\n\t  }\n\t  events.EventEmitter.prototype.removeListener.call(this, dbName,\n\t    this._listeners[id]);\n\t  delete this._listeners[id];\n\t};\n\t\n\t\n\t/* istanbul ignore next */\n\tChanges.prototype.notifyLocalWindows = function (dbName) {\n\t  //do a useless change on a storage thing\n\t  //in order to get other windows's listeners to activate\n\t  if (isChromeApp()) {\n\t    chrome.storage.local.set({dbName: dbName});\n\t  } else if (hasLocalStorage()) {\n\t    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n\t  }\n\t};\n\t\n\tChanges.prototype.notify = function (dbName) {\n\t  this.emit(dbName);\n\t  this.notifyLocalWindows(dbName);\n\t};\n\t\n\tfunction guardedConsole(method) {\n\t  /* istanbul ignore else */\n\t  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n\t    var args = Array.prototype.slice.call(arguments, 1);\n\t    console[method].apply(console, args);\n\t  }\n\t}\n\t\n\tfunction randomNumber(min, max) {\n\t  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n\t  min = parseInt(min, 10) || 0;\n\t  max = parseInt(max, 10);\n\t  if (max !== max || max <= min) {\n\t    max = (min || 1) << 1; //doubling\n\t  } else {\n\t    max = max + 1;\n\t  }\n\t  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n\t  if (max > maxTimeout) {\n\t    min = maxTimeout >> 1; // divide by two\n\t    max = maxTimeout;\n\t  }\n\t  var ratio = Math.random();\n\t  var range = max - min;\n\t\n\t  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n\t}\n\t\n\tfunction defaultBackOff(min) {\n\t  var max = 0;\n\t  if (!min) {\n\t    max = 2000;\n\t  }\n\t  return randomNumber(min, max);\n\t}\n\t\n\t// designed to give info to browser users, who are disturbed\n\t// when they see http errors in the console\n\tfunction explainError(status, str) {\n\t  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n\t}\n\t\n\tvar assign;\n\t{\n\t  if (typeof Object.assign === 'function') {\n\t    assign = Object.assign;\n\t  } else {\n\t    // lite Object.assign polyfill based on\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\t    assign = function (target) {\n\t      var to = Object(target);\n\t\n\t      for (var index = 1; index < arguments.length; index++) {\n\t        var nextSource = arguments[index];\n\t\n\t        if (nextSource != null) { // Skip over if undefined or null\n\t          for (var nextKey in nextSource) {\n\t            // Avoid bugs when hasOwnProperty is shadowed\n\t            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t              to[nextKey] = nextSource[nextKey];\n\t            }\n\t          }\n\t        }\n\t      }\n\t      return to;\n\t    };\n\t  }\n\t}\n\t\n\tvar $inject_Object_assign = assign;\n\t\n\tinherits(PouchError, Error);\n\t\n\tfunction PouchError(status, error, reason) {\n\t  Error.call(this, reason);\n\t  this.status = status;\n\t  this.name = error;\n\t  this.message = reason;\n\t  this.error = true;\n\t}\n\t\n\tPouchError.prototype.toString = function () {\n\t  return JSON.stringify({\n\t    status: this.status,\n\t    name: this.name,\n\t    message: this.message,\n\t    reason: this.reason\n\t  });\n\t};\n\t\n\tvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\n\tvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\n\tvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\n\tvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\n\tvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\n\tvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\n\tvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\n\tvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\n\tvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\n\tvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\n\tvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\n\tvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\n\tvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\n\tvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\n\tvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\n\tvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\n\tvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\n\tvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\n\tvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\n\tvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\n\tvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\n\tvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\n\tvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\n\tvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\t\n\tfunction createError(error, reason) {\n\t  function CustomPouchError(reason) {\n\t    // inherit error properties from our parent error manually\n\t    // so as to allow proper JSON parsing.\n\t    /* jshint ignore:start */\n\t    for (var p in error) {\n\t      if (typeof error[p] !== 'function') {\n\t        this[p] = error[p];\n\t      }\n\t    }\n\t    /* jshint ignore:end */\n\t    if (reason !== undefined) {\n\t      this.reason = reason;\n\t    }\n\t  }\n\t  CustomPouchError.prototype = PouchError.prototype;\n\t  return new CustomPouchError(reason);\n\t}\n\t\n\tfunction generateErrorFromResponse(err) {\n\t\n\t  if (typeof err !== 'object') {\n\t    var data = err;\n\t    err = UNKNOWN_ERROR;\n\t    err.data = data;\n\t  }\n\t\n\t  if ('error' in err && err.error === 'conflict') {\n\t    err.name = 'conflict';\n\t    err.status = 409;\n\t  }\n\t\n\t  if (!('name' in err)) {\n\t    err.name = err.error || 'unknown';\n\t  }\n\t\n\t  if (!('status' in err)) {\n\t    err.status = 500;\n\t  }\n\t\n\t  if (!('message' in err)) {\n\t    err.message = err.message || err.reason;\n\t  }\n\t\n\t  return err;\n\t}\n\t\n\tfunction tryFilter(filter, doc, req) {\n\t  try {\n\t    return !filter(doc, req);\n\t  } catch (err) {\n\t    var msg = 'Filter function threw: ' + err.toString();\n\t    return createError(BAD_REQUEST, msg);\n\t  }\n\t}\n\t\n\tfunction filterChange(opts) {\n\t  var req = {};\n\t  var hasFilter = opts.filter && typeof opts.filter === 'function';\n\t  req.query = opts.query_params;\n\t\n\t  return function filter(change) {\n\t    if (!change.doc) {\n\t      // CSG sends events on the changes feed that don't have documents,\n\t      // this hack makes a whole lot of existing code robust.\n\t      change.doc = {};\n\t    }\n\t\n\t    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\t\n\t    if (typeof filterReturn === 'object') {\n\t      return filterReturn;\n\t    }\n\t\n\t    if (filterReturn) {\n\t      return false;\n\t    }\n\t\n\t    if (!opts.include_docs) {\n\t      delete change.doc;\n\t    } else if (!opts.attachments) {\n\t      for (var att in change.doc._attachments) {\n\t        /* istanbul ignore else */\n\t        if (change.doc._attachments.hasOwnProperty(att)) {\n\t          change.doc._attachments[att].stub = true;\n\t        }\n\t      }\n\t    }\n\t    return true;\n\t  };\n\t}\n\t\n\tfunction flatten(arrs) {\n\t  var res = [];\n\t  for (var i = 0, len = arrs.length; i < len; i++) {\n\t    res = res.concat(arrs[i]);\n\t  }\n\t  return res;\n\t}\n\t\n\t// shim for Function.prototype.name,\n\t// for browsers that don't support it like IE\n\t\n\t/* istanbul ignore next */\n\t\n\t// Determine id an ID is valid\n\t//   - invalid IDs begin with an underescore that does not begin '_design' or\n\t//     '_local'\n\t//   - any other string value is a valid id\n\t// Returns the specific error object for each case\n\tfunction invalidIdError(id) {\n\t  var err;\n\t  if (!id) {\n\t    err = createError(MISSING_ID);\n\t  } else if (typeof id !== 'string') {\n\t    err = createError(INVALID_ID);\n\t  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n\t    err = createError(RESERVED_ID);\n\t  }\n\t  if (err) {\n\t    throw err;\n\t  }\n\t}\n\t\n\t// Checks if a PouchDB object is \"remote\" or not. This is\n\t// designed to opt-in to certain optimizations, such as\n\t// avoiding checks for \"dependentDbs\" and other things that\n\t// we know only apply to local databases. In general, \"remote\"\n\t// should be true for the http adapter, and for third-party\n\t// adapters with similar expensive boundaries to cross for\n\t// every API call, such as socket-pouch and worker-pouch.\n\t// Previously, this was handled via db.type() === 'http'\n\t// which is now deprecated.\n\t\n\tfunction isRemote(db) {\n\t  if (typeof db._remote === 'boolean') {\n\t    return db._remote;\n\t  }\n\t  /* istanbul ignore next */\n\t  if (typeof db.type === 'function') {\n\t    guardedConsole('warn',\n\t      'db.type() is deprecated and will be removed in ' +\n\t      'a future version of PouchDB');\n\t    return db.type() === 'http';\n\t  }\n\t  /* istanbul ignore next */\n\t  return false;\n\t}\n\t\n\tfunction listenerCount(ee, type) {\n\t  return 'listenerCount' in ee ? ee.listenerCount(type) :\n\t                                 events.EventEmitter.listenerCount(ee, type);\n\t}\n\t\n\tfunction parseDesignDocFunctionName(s) {\n\t  if (!s) {\n\t    return null;\n\t  }\n\t  var parts = s.split('/');\n\t  if (parts.length === 2) {\n\t    return parts;\n\t  }\n\t  if (parts.length === 1) {\n\t    return [s, s];\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction normalizeDesignDocFunctionName(s) {\n\t  var normalized = parseDesignDocFunctionName(s);\n\t  return normalized ? normalized.join('/') : null;\n\t}\n\t\n\t// originally parseUri 1.2.2, now patched by us\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\tvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n\t    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\n\tvar qName =\"queryKey\";\n\tvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\t\n\t// use the \"loose\" parser\n\t/* eslint maxlen: 0, no-useless-escape: 0 */\n\tvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\t\n\tfunction parseUri(str) {\n\t  var m = parser.exec(str);\n\t  var uri = {};\n\t  var i = 14;\n\t\n\t  while (i--) {\n\t    var key = keys[i];\n\t    var value = m[i] || \"\";\n\t    var encoded = ['user', 'password'].indexOf(key) !== -1;\n\t    uri[key] = encoded ? decodeURIComponent(value) : value;\n\t  }\n\t\n\t  uri[qName] = {};\n\t  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n\t    if ($1) {\n\t      uri[qName][$1] = $2;\n\t    }\n\t  });\n\t\n\t  return uri;\n\t}\n\t\n\t// Based on https://github.com/alexdavid/scope-eval v0.0.3\n\t// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n\t// This is basically just a wrapper around new Function()\n\t\n\tfunction scopeEval(source, scope) {\n\t  var keys = [];\n\t  var values = [];\n\t  for (var key in scope) {\n\t    if (scope.hasOwnProperty(key)) {\n\t      keys.push(key);\n\t      values.push(scope[key]);\n\t    }\n\t  }\n\t  keys.push(source);\n\t  return Function.apply(null, keys).apply(null, values);\n\t}\n\t\n\t// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n\t// the diffFun tells us what delta to apply to the doc.  it either returns\n\t// the doc, or false if it doesn't need to do an update after all\n\tfunction upsert(db, docId, diffFun) {\n\t  return new PouchPromise(function (fulfill, reject) {\n\t    db.get(docId, function (err, doc) {\n\t      if (err) {\n\t        /* istanbul ignore next */\n\t        if (err.status !== 404) {\n\t          return reject(err);\n\t        }\n\t        doc = {};\n\t      }\n\t\n\t      // the user might change the _rev, so save it for posterity\n\t      var docRev = doc._rev;\n\t      var newDoc = diffFun(doc);\n\t\n\t      if (!newDoc) {\n\t        // if the diffFun returns falsy, we short-circuit as\n\t        // an optimization\n\t        return fulfill({updated: false, rev: docRev});\n\t      }\n\t\n\t      // users aren't allowed to modify these values,\n\t      // so reset them here\n\t      newDoc._id = docId;\n\t      newDoc._rev = docRev;\n\t      fulfill(tryAndPut(db, newDoc, diffFun));\n\t    });\n\t  });\n\t}\n\t\n\tfunction tryAndPut(db, doc, diffFun) {\n\t  return db.put(doc).then(function (res) {\n\t    return {\n\t      updated: true,\n\t      rev: res.rev\n\t    };\n\t  }, function (err) {\n\t    /* istanbul ignore next */\n\t    if (err.status !== 409) {\n\t      throw err;\n\t    }\n\t    return upsert(db, doc._id, diffFun);\n\t  });\n\t}\n\t\n\tfunction rev() {\n\t  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n\t}\n\t\n\tvar uuid = uuidV4.v4;\n\t\n\t// We fetch all leafs of the revision tree, and sort them based on tree length\n\t// and whether they were deleted, undeleted documents with the longest revision\n\t// tree (most edits) win\n\t// The final sort algorithm is slightly documented in a sidebar here:\n\t// http://guide.couchdb.org/draft/conflicts.html\n\tfunction winningRev(metadata) {\n\t  var winningId;\n\t  var winningPos;\n\t  var winningDeleted;\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var pos = node.pos;\n\t    if (branches.length) { // non-leaf\n\t      for (var i = 0, len = branches.length; i < len; i++) {\n\t        toVisit.push({pos: pos + 1, ids: branches[i]});\n\t      }\n\t      continue;\n\t    }\n\t    var deleted = !!tree[1].deleted;\n\t    var id = tree[0];\n\t    // sort by deleted, then pos, then id\n\t    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n\t        winningPos !== pos ? winningPos < pos : winningId < id)) {\n\t      winningId = id;\n\t      winningPos = pos;\n\t      winningDeleted = deleted;\n\t    }\n\t  }\n\t\n\t  return winningPos + '-' + winningId;\n\t}\n\t\n\t// Pretty much all below can be combined into a higher order function to\n\t// traverse revisions\n\t// The return value from the callback will be passed as context to all\n\t// children of that node\n\tfunction traverseRevTree(revs, callback) {\n\t  var toVisit = revs.slice();\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var branches = tree[2];\n\t    var newCtx =\n\t      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n\t    }\n\t  }\n\t}\n\t\n\tfunction sortByPos(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\tfunction collectLeaves(revs) {\n\t  var leaves = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n\t    if (isLeaf) {\n\t      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n\t    }\n\t  });\n\t  leaves.sort(sortByPos).reverse();\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    delete leaves[i].pos;\n\t  }\n\t  return leaves;\n\t}\n\t\n\t// returns revs of all conflicts that is leaves such that\n\t// 1. are not deleted and\n\t// 2. are different than winning revision\n\tfunction collectConflicts(metadata) {\n\t  var win = winningRev(metadata);\n\t  var leaves = collectLeaves(metadata.rev_tree);\n\t  var conflicts = [];\n\t  for (var i = 0, len = leaves.length; i < len; i++) {\n\t    var leaf = leaves[i];\n\t    if (leaf.rev !== win && !leaf.opts.deleted) {\n\t      conflicts.push(leaf.rev);\n\t    }\n\t  }\n\t  return conflicts;\n\t}\n\t\n\t// compact a tree by marking its non-leafs as missing,\n\t// and return a list of revs to delete\n\tfunction compactTree(metadata) {\n\t  var revs = [];\n\t  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                               revHash, ctx, opts) {\n\t    if (opts.status === 'available' && !isLeaf) {\n\t      revs.push(pos + '-' + revHash);\n\t      opts.status = 'missing';\n\t    }\n\t  });\n\t  return revs;\n\t}\n\t\n\t// build up a list of all the paths to the leafs in this revision tree\n\tfunction rootToLeaf(revs) {\n\t  var paths = [];\n\t  var toVisit = revs.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, opts: opts});\n\t    if (isLeaf) {\n\t      paths.push({pos: (pos + 1 - history.length), ids: history});\n\t    }\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n\t    }\n\t  }\n\t  return paths.reverse();\n\t}\n\t\n\t// for a better overview of what this is doing, read:\n\t// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n\t//\n\t// But for a quick intro, CouchDB uses a revision tree to store a documents\n\t// history, A -> B -> C, when a document has conflicts, that is a branch in the\n\t// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n\t//\n\t// KeyTree = [Path ... ]\n\t// Path = {pos: position_from_root, ids: Tree}\n\t// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\t\n\tfunction sortByPos$1(a, b) {\n\t  return a.pos - b.pos;\n\t}\n\t\n\t// classic binary search\n\tfunction binarySearch(arr, item, comparator) {\n\t  var low = 0;\n\t  var high = arr.length;\n\t  var mid;\n\t  while (low < high) {\n\t    mid = (low + high) >>> 1;\n\t    if (comparator(arr[mid], item) < 0) {\n\t      low = mid + 1;\n\t    } else {\n\t      high = mid;\n\t    }\n\t  }\n\t  return low;\n\t}\n\t\n\t// assuming the arr is sorted, insert the item in the proper place\n\tfunction insertSorted(arr, item, comparator) {\n\t  var idx = binarySearch(arr, item, comparator);\n\t  arr.splice(idx, 0, item);\n\t}\n\t\n\t// Turn a path as a flat array into a tree with a single branch.\n\t// If any should be stemmed from the beginning of the array, that's passed\n\t// in as the second argument\n\tfunction pathToTree(path, numStemmed) {\n\t  var root;\n\t  var leaf;\n\t  for (var i = numStemmed, len = path.length; i < len; i++) {\n\t    var node = path[i];\n\t    var currentLeaf = [node.id, node.opts, []];\n\t    if (leaf) {\n\t      leaf[2].push(currentLeaf);\n\t      leaf = currentLeaf;\n\t    } else {\n\t      root = leaf = currentLeaf;\n\t    }\n\t  }\n\t  return root;\n\t}\n\t\n\t// compare the IDs of two trees\n\tfunction compareTree(a, b) {\n\t  return a[0] < b[0] ? -1 : 1;\n\t}\n\t\n\t// Merge two trees together\n\t// The roots of tree1 and tree2 must be the same revision\n\tfunction mergeTree(in_tree1, in_tree2) {\n\t  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n\t  var conflicts = false;\n\t  while (queue.length > 0) {\n\t    var item = queue.pop();\n\t    var tree1 = item.tree1;\n\t    var tree2 = item.tree2;\n\t\n\t    if (tree1[1].status || tree2[1].status) {\n\t      tree1[1].status =\n\t        (tree1[1].status ===  'available' ||\n\t        tree2[1].status === 'available') ? 'available' : 'missing';\n\t    }\n\t\n\t    for (var i = 0; i < tree2[2].length; i++) {\n\t      if (!tree1[2][0]) {\n\t        conflicts = 'new_leaf';\n\t        tree1[2][0] = tree2[2][i];\n\t        continue;\n\t      }\n\t\n\t      var merged = false;\n\t      for (var j = 0; j < tree1[2].length; j++) {\n\t        if (tree1[2][j][0] === tree2[2][i][0]) {\n\t          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n\t          merged = true;\n\t        }\n\t      }\n\t      if (!merged) {\n\t        conflicts = 'new_branch';\n\t        insertSorted(tree1[2], tree2[2][i], compareTree);\n\t      }\n\t    }\n\t  }\n\t  return {conflicts: conflicts, tree: in_tree1};\n\t}\n\t\n\tfunction doMerge(tree, path, dontExpand) {\n\t  var restree = [];\n\t  var conflicts = false;\n\t  var merged = false;\n\t  var res;\n\t\n\t  if (!tree.length) {\n\t    return {tree: [path], conflicts: 'new_leaf'};\n\t  }\n\t\n\t  for (var i = 0, len = tree.length; i < len; i++) {\n\t    var branch = tree[i];\n\t    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n\t      // Paths start at the same position and have the same root, so they need\n\t      // merged\n\t      res = mergeTree(branch.ids, path.ids);\n\t      restree.push({pos: branch.pos, ids: res.tree});\n\t      conflicts = conflicts || res.conflicts;\n\t      merged = true;\n\t    } else if (dontExpand !== true) {\n\t      // The paths start at a different position, take the earliest path and\n\t      // traverse up until it as at the same point from root as the path we\n\t      // want to merge.  If the keys match we return the longer path with the\n\t      // other merged After stemming we dont want to expand the trees\n\t\n\t      var t1 = branch.pos < path.pos ? branch : path;\n\t      var t2 = branch.pos < path.pos ? path : branch;\n\t      var diff = t2.pos - t1.pos;\n\t\n\t      var candidateParents = [];\n\t\n\t      var trees = [];\n\t      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n\t      while (trees.length > 0) {\n\t        var item = trees.pop();\n\t        if (item.diff === 0) {\n\t          if (item.ids[0] === t2.ids[0]) {\n\t            candidateParents.push(item);\n\t          }\n\t          continue;\n\t        }\n\t        var elements = item.ids[2];\n\t        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n\t          trees.push({\n\t            ids: elements[j],\n\t            diff: item.diff - 1,\n\t            parent: item.ids,\n\t            parentIdx: j\n\t          });\n\t        }\n\t      }\n\t\n\t      var el = candidateParents[0];\n\t\n\t      if (!el) {\n\t        restree.push(branch);\n\t      } else {\n\t        res = mergeTree(el.ids, t2.ids);\n\t        el.parent[2][el.parentIdx] = res.tree;\n\t        restree.push({pos: t1.pos, ids: t1.ids});\n\t        conflicts = conflicts || res.conflicts;\n\t        merged = true;\n\t      }\n\t    } else {\n\t      restree.push(branch);\n\t    }\n\t  }\n\t\n\t  // We didnt find\n\t  if (!merged) {\n\t    restree.push(path);\n\t  }\n\t\n\t  restree.sort(sortByPos$1);\n\t\n\t  return {\n\t    tree: restree,\n\t    conflicts: conflicts || 'internal_node'\n\t  };\n\t}\n\t\n\t// To ensure we dont grow the revision tree infinitely, we stem old revisions\n\tfunction stem(tree, depth) {\n\t  // First we break out the tree into a complete list of root to leaf paths\n\t  var paths = rootToLeaf(tree);\n\t  var stemmedRevs;\n\t\n\t  var result;\n\t  for (var i = 0, len = paths.length; i < len; i++) {\n\t    // Then for each path, we cut off the start of the path based on the\n\t    // `depth` to stem to, and generate a new set of flat trees\n\t    var path = paths[i];\n\t    var stemmed = path.ids;\n\t    var node;\n\t    if (stemmed.length > depth) {\n\t      // only do the stemming work if we actually need to stem\n\t      if (!stemmedRevs) {\n\t        stemmedRevs = {}; // avoid allocating this object unnecessarily\n\t      }\n\t      var numStemmed = stemmed.length - depth;\n\t      node = {\n\t        pos: path.pos + numStemmed,\n\t        ids: pathToTree(stemmed, numStemmed)\n\t      };\n\t\n\t      for (var s = 0; s < numStemmed; s++) {\n\t        var rev = (path.pos + s) + '-' + stemmed[s].id;\n\t        stemmedRevs[rev] = true;\n\t      }\n\t    } else { // no need to actually stem\n\t      node = {\n\t        pos: path.pos,\n\t        ids: pathToTree(stemmed, 0)\n\t      };\n\t    }\n\t\n\t    // Then we remerge all those flat trees together, ensuring that we dont\n\t    // connect trees that would go beyond the depth limit\n\t    if (result) {\n\t      result = doMerge(result, node, true).tree;\n\t    } else {\n\t      result = [node];\n\t    }\n\t  }\n\t\n\t  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n\t  if (stemmedRevs) {\n\t    traverseRevTree(result, function (isLeaf, pos, revHash) {\n\t      // some revisions may have been removed in a branch but not in another\n\t      delete stemmedRevs[pos + '-' + revHash];\n\t    });\n\t  }\n\t\n\t  return {\n\t    tree: result,\n\t    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n\t  };\n\t}\n\t\n\tfunction merge(tree, path, depth) {\n\t  var newTree = doMerge(tree, path);\n\t  var stemmed = stem(newTree.tree, depth);\n\t  return {\n\t    tree: stemmed.tree,\n\t    stemmedRevs: stemmed.revs,\n\t    conflicts: newTree.conflicts\n\t  };\n\t}\n\t\n\t// return true if a rev exists in the rev tree, false otherwise\n\tfunction revExists(revs, rev) {\n\t  var toVisit = revs.slice();\n\t  var splitRev = rev.split('-');\n\t  var targetPos = parseInt(splitRev[0], 10);\n\t  var targetId = splitRev[1];\n\t\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    if (node.pos === targetPos && node.ids[0] === targetId) {\n\t      return true;\n\t    }\n\t    var branches = node.ids[2];\n\t    for (var i = 0, len = branches.length; i < len; i++) {\n\t      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\tfunction getTrees(node) {\n\t  return node.ids;\n\t}\n\t\n\t// check if a specific revision of a doc has been deleted\n\t//  - metadata: the metadata object from the doc store\n\t//  - rev: (optional) the revision to check. defaults to winning revision\n\tfunction isDeleted(metadata, rev) {\n\t  if (!rev) {\n\t    rev = winningRev(metadata);\n\t  }\n\t  var id = rev.substring(rev.indexOf('-') + 1);\n\t  var toVisit = metadata.rev_tree.map(getTrees);\n\t\n\t  var tree;\n\t  while ((tree = toVisit.pop())) {\n\t    if (tree[0] === id) {\n\t      return !!tree[1].deleted;\n\t    }\n\t    toVisit = toVisit.concat(tree[2]);\n\t  }\n\t}\n\t\n\tfunction isLocalId(id) {\n\t  return (/^_local/).test(id);\n\t}\n\t\n\t// returns the current leaf node for a given revision\n\tfunction latest(rev, metadata) {\n\t  var toVisit = metadata.rev_tree.slice();\n\t  var node;\n\t  while ((node = toVisit.pop())) {\n\t    var pos = node.pos;\n\t    var tree = node.ids;\n\t    var id = tree[0];\n\t    var opts = tree[1];\n\t    var branches = tree[2];\n\t    var isLeaf = branches.length === 0;\n\t\n\t    var history = node.history ? node.history.slice() : [];\n\t    history.push({id: id, pos: pos, opts: opts});\n\t\n\t    if (isLeaf) {\n\t      for (var i = 0, len = history.length; i < len; i++) {\n\t        var historyNode = history[i];\n\t        var historyRev = historyNode.pos + '-' + historyNode.id;\n\t\n\t        if (historyRev === rev) {\n\t          // return the rev of this leaf\n\t          return pos + '-' + id;\n\t        }\n\t      }\n\t    }\n\t\n\t    for (var j = 0, l = branches.length; j < l; j++) {\n\t      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n\t}\n\t\n\tinherits(Changes$2, events.EventEmitter);\n\t\n\tfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n\t  // isolate try/catches to avoid V8 deoptimizations\n\t  try {\n\t    self.emit('change', change, pending, lastSeq);\n\t  } catch (e) {\n\t    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n\t  }\n\t}\n\t\n\tfunction Changes$2(db, opts, callback) {\n\t  events.EventEmitter.call(this);\n\t  var self = this;\n\t  this.db = db;\n\t  opts = opts ? clone(opts) : {};\n\t  var complete = opts.complete = once(function (err, resp) {\n\t    if (err) {\n\t      if (listenerCount(self, 'error') > 0) {\n\t        self.emit('error', err);\n\t      }\n\t    } else {\n\t      self.emit('complete', resp);\n\t    }\n\t    self.removeAllListeners();\n\t    db.removeListener('destroyed', onDestroy);\n\t  });\n\t  if (callback) {\n\t    self.on('complete', function (resp) {\n\t      callback(null, resp);\n\t    });\n\t    self.on('error', callback);\n\t  }\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  db.once('destroyed', onDestroy);\n\t\n\t  opts.onChange = function (change, pending, lastSeq) {\n\t    /* istanbul ignore if */\n\t    if (self.isCancelled) {\n\t      return;\n\t    }\n\t    tryCatchInChangeListener(self, change, pending, lastSeq);\n\t  };\n\t\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    opts.complete = function (err, res) {\n\t      if (err) {\n\t        reject(err);\n\t      } else {\n\t        fulfill(res);\n\t      }\n\t    };\n\t  });\n\t  self.once('cancel', function () {\n\t    db.removeListener('destroyed', onDestroy);\n\t    opts.complete(null, {status: 'cancelled'});\n\t  });\n\t  this.then = promise.then.bind(promise);\n\t  this['catch'] = promise['catch'].bind(promise);\n\t  this.then(function (result) {\n\t    complete(null, result);\n\t  }, complete);\n\t\n\t\n\t\n\t  if (!db.taskqueue.isReady) {\n\t    db.taskqueue.addTask(function (failed) {\n\t      if (failed) {\n\t        opts.complete(failed);\n\t      } else if (self.isCancelled) {\n\t        self.emit('cancel');\n\t      } else {\n\t        self.validateChanges(opts);\n\t      }\n\t    });\n\t  } else {\n\t    self.validateChanges(opts);\n\t  }\n\t}\n\tChanges$2.prototype.cancel = function () {\n\t  this.isCancelled = true;\n\t  if (this.db.taskqueue.isReady) {\n\t    this.emit('cancel');\n\t  }\n\t};\n\tfunction processChange(doc, metadata, opts) {\n\t  var changeList = [{rev: doc._rev}];\n\t  if (opts.style === 'all_docs') {\n\t    changeList = collectLeaves(metadata.rev_tree)\n\t    .map(function (x) { return {rev: x.rev}; });\n\t  }\n\t  var change = {\n\t    id: metadata.id,\n\t    changes: changeList,\n\t    doc: doc\n\t  };\n\t\n\t  if (isDeleted(metadata, doc._rev)) {\n\t    change.deleted = true;\n\t  }\n\t  if (opts.conflicts) {\n\t    change.doc._conflicts = collectConflicts(metadata);\n\t    if (!change.doc._conflicts.length) {\n\t      delete change.doc._conflicts;\n\t    }\n\t  }\n\t  return change;\n\t}\n\t\n\tChanges$2.prototype.validateChanges = function (opts) {\n\t  var callback = opts.complete;\n\t  var self = this;\n\t\n\t  /* istanbul ignore else */\n\t  if (PouchDB$5._changesFilterPlugin) {\n\t    PouchDB$5._changesFilterPlugin.validate(opts, function (err) {\n\t      if (err) {\n\t        return callback(err);\n\t      }\n\t      self.doChanges(opts);\n\t    });\n\t  } else {\n\t    self.doChanges(opts);\n\t  }\n\t};\n\t\n\tChanges$2.prototype.doChanges = function (opts) {\n\t  var self = this;\n\t  var callback = opts.complete;\n\t\n\t  opts = clone(opts);\n\t  if ('live' in opts && !('continuous' in opts)) {\n\t    opts.continuous = opts.live;\n\t  }\n\t  opts.processChange = processChange;\n\t\n\t  if (opts.since === 'latest') {\n\t    opts.since = 'now';\n\t  }\n\t  if (!opts.since) {\n\t    opts.since = 0;\n\t  }\n\t  if (opts.since === 'now') {\n\t    this.db.info().then(function (info) {\n\t      /* istanbul ignore if */\n\t      if (self.isCancelled) {\n\t        callback(null, {status: 'cancelled'});\n\t        return;\n\t      }\n\t      opts.since = info.update_seq;\n\t      self.doChanges(opts);\n\t    }, callback);\n\t    return;\n\t  }\n\t\n\t  /* istanbul ignore else */\n\t  if (PouchDB$5._changesFilterPlugin) {\n\t    PouchDB$5._changesFilterPlugin.normalize(opts);\n\t    if (PouchDB$5._changesFilterPlugin.shouldFilter(this, opts)) {\n\t      return PouchDB$5._changesFilterPlugin.filter(this, opts);\n\t    }\n\t  } else {\n\t    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n\t      if (key in opts) {\n\t        guardedConsole('warn',\n\t          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n\t          'but pouchdb-changes-filter plugin is not installed, so it ' +\n\t          'was ignored. Please install the plugin to enable filtering.'\n\t        );\n\t      }\n\t    });\n\t  }\n\t\n\t  if (!('descending' in opts)) {\n\t    opts.descending = false;\n\t  }\n\t\n\t  // 0 and 1 should return 1 document\n\t  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n\t  opts.complete = callback;\n\t  var newPromise = this.db._changes(opts);\n\t  /* istanbul ignore else */\n\t  if (newPromise && typeof newPromise.cancel === 'function') {\n\t    var cancel = self.cancel;\n\t    self.cancel = getArguments(function (args) {\n\t      newPromise.cancel();\n\t      cancel.apply(this, args);\n\t    });\n\t  }\n\t};\n\t\n\t/*\n\t * A generic pouch adapter\n\t */\n\t\n\tfunction compare(left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t}\n\t\n\t// Wrapper for functions that call the bulkdocs api with a single doc,\n\t// if the first result is an error, return an error\n\tfunction yankError(callback, docId) {\n\t  return function (err, results) {\n\t    if (err || (results[0] && results[0].error)) {\n\t      err = err || results[0];\n\t      err.docId = docId;\n\t      callback(err);\n\t    } else {\n\t      callback(null, results.length ? results[0]  : results);\n\t    }\n\t  };\n\t}\n\t\n\t// clean docs given to us by the user\n\tfunction cleanDocs(docs) {\n\t  for (var i = 0; i < docs.length; i++) {\n\t    var doc = docs[i];\n\t    if (doc._deleted) {\n\t      delete doc._attachments; // ignore atts for deleted docs\n\t    } else if (doc._attachments) {\n\t      // filter out extraneous keys from _attachments\n\t      var atts = Object.keys(doc._attachments);\n\t      for (var j = 0; j < atts.length; j++) {\n\t        var att = atts[j];\n\t        doc._attachments[att] = pick(doc._attachments[att],\n\t          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t// compare two docs, first by _id then by _rev\n\tfunction compareByIdThenRev(a, b) {\n\t  var idCompare = compare(a._id, b._id);\n\t  if (idCompare !== 0) {\n\t    return idCompare;\n\t  }\n\t  var aStart = a._revisions ? a._revisions.start : 0;\n\t  var bStart = b._revisions ? b._revisions.start : 0;\n\t  return compare(aStart, bStart);\n\t}\n\t\n\t// for every node in a revision tree computes its distance from the closest\n\t// leaf\n\tfunction computeHeight(revs) {\n\t  var height = {};\n\t  var edges = [];\n\t  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n\t    var rev$$1 = pos + \"-\" + id;\n\t    if (isLeaf) {\n\t      height[rev$$1] = 0;\n\t    }\n\t    if (prnt !== undefined) {\n\t      edges.push({from: prnt, to: rev$$1});\n\t    }\n\t    return rev$$1;\n\t  });\n\t\n\t  edges.reverse();\n\t  edges.forEach(function (edge) {\n\t    if (height[edge.from] === undefined) {\n\t      height[edge.from] = 1 + height[edge.to];\n\t    } else {\n\t      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n\t    }\n\t  });\n\t  return height;\n\t}\n\t\n\tfunction allDocsKeysParse(opts) {\n\t  var keys =  ('limit' in opts) ?\n\t    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n\t    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n\t  opts.keys = keys;\n\t  opts.skip = 0;\n\t  if (opts.descending) {\n\t    keys.reverse();\n\t    opts.descending = false;\n\t  }\n\t}\n\t\n\t// all compaction is done in a queue, to avoid attaching\n\t// too many listeners at once\n\tfunction doNextCompaction(self) {\n\t  var task = self._compactionQueue[0];\n\t  var opts = task.opts;\n\t  var callback = task.callback;\n\t  self.get('_local/compaction').catch(function () {\n\t    return false;\n\t  }).then(function (doc) {\n\t    if (doc && doc.last_seq) {\n\t      opts.last_seq = doc.last_seq;\n\t    }\n\t    self._compact(opts, function (err, res) {\n\t      /* istanbul ignore if */\n\t      if (err) {\n\t        callback(err);\n\t      } else {\n\t        callback(null, res);\n\t      }\n\t      nextTick(function () {\n\t        self._compactionQueue.shift();\n\t        if (self._compactionQueue.length) {\n\t          doNextCompaction(self);\n\t        }\n\t      });\n\t    });\n\t  });\n\t}\n\t\n\tfunction attachmentNameError(name) {\n\t  if (name.charAt(0) === '_') {\n\t    return name + ' is not a valid attachment name, attachment ' +\n\t      'names cannot start with \\'_\\'';\n\t  }\n\t  return false;\n\t}\n\t\n\tinherits(AbstractPouchDB, events.EventEmitter);\n\t\n\tfunction AbstractPouchDB() {\n\t  events.EventEmitter.call(this);\n\t}\n\t\n\tAbstractPouchDB.prototype.post =\n\t  adapterFun('post', function (doc, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return callback(createError(NOT_AN_OBJECT));\n\t  }\n\t  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n\t});\n\t\n\tAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof doc !== 'object' || Array.isArray(doc)) {\n\t    return cb(createError(NOT_AN_OBJECT));\n\t  }\n\t  invalidIdError(doc._id);\n\t  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n\t    if (doc._deleted) {\n\t      return this._removeLocal(doc, cb);\n\t    } else {\n\t      return this._putLocal(doc, cb);\n\t    }\n\t  }\n\t  var self = this;\n\t  if (opts.force && doc._rev) {\n\t    transformForceOptionToNewEditsOption();\n\t    putDoc(function (err) {\n\t      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n\t      cb(err, result);\n\t    });\n\t  } else {\n\t    putDoc(cb);\n\t  }\n\t\n\t  function transformForceOptionToNewEditsOption() {\n\t    var parts = doc._rev.split('-');\n\t    var oldRevId = parts[1];\n\t    var oldRevNum = parseInt(parts[0], 10);\n\t\n\t    var newRevNum = oldRevNum + 1;\n\t    var newRevId = rev();\n\t\n\t    doc._revisions = {\n\t      start: newRevNum,\n\t      ids: [newRevId, oldRevId]\n\t    };\n\t    doc._rev = newRevNum + '-' + newRevId;\n\t    opts.new_edits = false;\n\t  }\n\t  function putDoc(next) {\n\t    if (typeof self._put === 'function' && opts.new_edits !== false) {\n\t      self._put(doc, opts, next);\n\t    } else {\n\t      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n\t    }\n\t  }\n\t});\n\t\n\tAbstractPouchDB.prototype.putAttachment =\n\t  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n\t                                              blob, type) {\n\t  var api = this;\n\t  if (typeof type === 'function') {\n\t    type = blob;\n\t    blob = rev$$1;\n\t    rev$$1 = null;\n\t  }\n\t  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n\t  /* istanbul ignore if */\n\t  if (typeof type === 'undefined') {\n\t    type = blob;\n\t    blob = rev$$1;\n\t    rev$$1 = null;\n\t  }\n\t  if (!type) {\n\t    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n\t  }\n\t\n\t  function createAttachment(doc) {\n\t    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n\t    doc._attachments = doc._attachments || {};\n\t    doc._attachments[attachmentId] = {\n\t      content_type: type,\n\t      data: blob,\n\t      revpos: ++prevrevpos\n\t    };\n\t    return api.put(doc);\n\t  }\n\t\n\t  return api.get(docId).then(function (doc) {\n\t    if (doc._rev !== rev$$1) {\n\t      throw createError(REV_CONFLICT);\n\t    }\n\t\n\t    return createAttachment(doc);\n\t  }, function (err) {\n\t     // create new doc\n\t    /* istanbul ignore else */\n\t    if (err.reason === MISSING_DOC.message) {\n\t      return createAttachment({_id: docId});\n\t    } else {\n\t      throw err;\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.removeAttachment =\n\t  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n\t                                                 callback) {\n\t  var self = this;\n\t  self.get(docId, function (err, obj) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      callback(err);\n\t      return;\n\t    }\n\t    if (obj._rev !== rev$$1) {\n\t      callback(createError(REV_CONFLICT));\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!obj._attachments) {\n\t      return callback();\n\t    }\n\t    delete obj._attachments[attachmentId];\n\t    if (Object.keys(obj._attachments).length === 0) {\n\t      delete obj._attachments;\n\t    }\n\t    self.put(obj, callback);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.remove =\n\t  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n\t  var doc;\n\t  if (typeof optsOrRev === 'string') {\n\t    // id, rev, opts, callback style\n\t    doc = {\n\t      _id: docOrId,\n\t      _rev: optsOrRev\n\t    };\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t  } else {\n\t    // doc, opts, callback style\n\t    doc = docOrId;\n\t    if (typeof optsOrRev === 'function') {\n\t      callback = optsOrRev;\n\t      opts = {};\n\t    } else {\n\t      callback = opts;\n\t      opts = optsOrRev;\n\t    }\n\t  }\n\t  opts = opts || {};\n\t  opts.was_delete = true;\n\t  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n\t  newDoc._deleted = true;\n\t  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n\t    return this._removeLocal(doc, callback);\n\t  }\n\t  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n\t});\n\t\n\tAbstractPouchDB.prototype.revsDiff =\n\t  adapterFun('revsDiff', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  var ids = Object.keys(req);\n\t\n\t  if (!ids.length) {\n\t    return callback(null, {});\n\t  }\n\t\n\t  var count = 0;\n\t  var missing = new ExportedMap();\n\t\n\t  function addToMissing(id, revId) {\n\t    if (!missing.has(id)) {\n\t      missing.set(id, {missing: []});\n\t    }\n\t    missing.get(id).missing.push(revId);\n\t  }\n\t\n\t  function processDoc(id, rev_tree) {\n\t    // Is this fast enough? Maybe we should switch to a set simulated by a map\n\t    var missingForId = req[id].slice(0);\n\t    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n\t      opts) {\n\t        var rev$$1 = pos + '-' + revHash;\n\t        var idx = missingForId.indexOf(rev$$1);\n\t        if (idx === -1) {\n\t          return;\n\t        }\n\t\n\t        missingForId.splice(idx, 1);\n\t        /* istanbul ignore if */\n\t        if (opts.status !== 'available') {\n\t          addToMissing(id, rev$$1);\n\t        }\n\t      });\n\t\n\t    // Traversing the tree is synchronous, so now `missingForId` contains\n\t    // revisions that were not found in the tree\n\t    missingForId.forEach(function (rev$$1) {\n\t      addToMissing(id, rev$$1);\n\t    });\n\t  }\n\t\n\t  ids.map(function (id) {\n\t    this._getRevisionTree(id, function (err, rev_tree) {\n\t      if (err && err.status === 404 && err.message === 'missing') {\n\t        missing.set(id, {missing: req[id]});\n\t      } else if (err) {\n\t        /* istanbul ignore next */\n\t        return callback(err);\n\t      } else {\n\t        processDoc(id, rev_tree);\n\t      }\n\t\n\t      if (++count === ids.length) {\n\t        // convert LazyMap to object\n\t        var missingObj = {};\n\t        missing.forEach(function (value, key) {\n\t          missingObj[key] = value;\n\t        });\n\t        return callback(null, missingObj);\n\t      }\n\t    });\n\t  }, this);\n\t});\n\t\n\t// _bulk_get API for faster replication, as described in\n\t// https://github.com/apache/couchdb-chttpd/pull/33\n\t// At the \"abstract\" level, it will just run multiple get()s in\n\t// parallel, because this isn't much of a performance cost\n\t// for local databases (except the cost of multiple transactions, which is\n\t// small). The http adapter overrides this in order\n\t// to do a more efficient single HTTP request.\n\tAbstractPouchDB.prototype.bulkGet =\n\t  adapterFun('bulkGet', function (opts, callback) {\n\t  bulkGet(this, opts, callback);\n\t});\n\t\n\t// compact one document and fire callback\n\t// by compacting we mean removing all revisions which\n\t// are further from the leaf in revision tree than max_height\n\tAbstractPouchDB.prototype.compactDocument =\n\t  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n\t  var self = this;\n\t  this._getRevisionTree(docId, function (err, revTree) {\n\t    /* istanbul ignore if */\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    var height = computeHeight(revTree);\n\t    var candidates = [];\n\t    var revs = [];\n\t    Object.keys(height).forEach(function (rev$$1) {\n\t      if (height[rev$$1] > maxHeight) {\n\t        candidates.push(rev$$1);\n\t      }\n\t    });\n\t\n\t    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n\t      var rev$$1 = pos + '-' + revHash;\n\t      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n\t        revs.push(rev$$1);\n\t      }\n\t    });\n\t    self._doCompaction(docId, revs, callback);\n\t  });\n\t});\n\t\n\t// compact the whole database using single document\n\t// compaction\n\tAbstractPouchDB.prototype.compact =\n\t  adapterFun('compact', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  self._compactionQueue = self._compactionQueue || [];\n\t  self._compactionQueue.push({opts: opts, callback: callback});\n\t  if (self._compactionQueue.length === 1) {\n\t    doNextCompaction(self);\n\t  }\n\t});\n\tAbstractPouchDB.prototype._compact = function (opts, callback) {\n\t  var self = this;\n\t  var changesOpts = {\n\t    return_docs: false,\n\t    last_seq: opts.last_seq || 0\n\t  };\n\t  var promises = [];\n\t\n\t  function onChange(row) {\n\t    promises.push(self.compactDocument(row.id, 0));\n\t  }\n\t  function onComplete(resp) {\n\t    var lastSeq = resp.last_seq;\n\t    PouchPromise.all(promises).then(function () {\n\t      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n\t        if (!doc.last_seq || doc.last_seq < lastSeq) {\n\t          doc.last_seq = lastSeq;\n\t          return doc;\n\t        }\n\t        return false; // somebody else got here first, don't update\n\t      });\n\t    }).then(function () {\n\t      callback(null, {ok: true});\n\t    }).catch(callback);\n\t  }\n\t  self.changes(changesOpts)\n\t    .on('change', onChange)\n\t    .on('complete', onComplete)\n\t    .on('error', callback);\n\t};\n\t\n\t/* Begin api wrappers. Specific functionality to storage belongs in the\n\t   _[method] */\n\tAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n\t  if (typeof opts === 'function') {\n\t    cb = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof id !== 'string') {\n\t    return cb(createError(INVALID_ID));\n\t  }\n\t  if (isLocalId(id) && typeof this._getLocal === 'function') {\n\t    return this._getLocal(id, cb);\n\t  }\n\t  var leaves = [], self = this;\n\t\n\t  function finishOpenRevs() {\n\t    var result = [];\n\t    var count = leaves.length;\n\t    /* istanbul ignore if */\n\t    if (!count) {\n\t      return cb(null, result);\n\t    }\n\t\n\t    // order with open_revs is unspecified\n\t    leaves.forEach(function (leaf) {\n\t      self.get(id, {\n\t        rev: leaf,\n\t        revs: opts.revs,\n\t        latest: opts.latest,\n\t        attachments: opts.attachments,\n\t        binary: opts.binary\n\t      }, function (err, doc) {\n\t        if (!err) {\n\t          // using latest=true can produce duplicates\n\t          var existing;\n\t          for (var i = 0, l = result.length; i < l; i++) {\n\t            if (result[i].ok && result[i].ok._rev === doc._rev) {\n\t              existing = true;\n\t              break;\n\t            }\n\t          }\n\t          if (!existing) {\n\t            result.push({ok: doc});\n\t          }\n\t        } else {\n\t          result.push({missing: leaf});\n\t        }\n\t        count--;\n\t        if (!count) {\n\t          cb(null, result);\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  if (opts.open_revs) {\n\t    if (opts.open_revs === \"all\") {\n\t      this._getRevisionTree(id, function (err, rev_tree) {\n\t        if (err) {\n\t          return cb(err);\n\t        }\n\t        leaves = collectLeaves(rev_tree).map(function (leaf) {\n\t          return leaf.rev;\n\t        });\n\t        finishOpenRevs();\n\t      });\n\t    } else {\n\t      if (Array.isArray(opts.open_revs)) {\n\t        leaves = opts.open_revs;\n\t        for (var i = 0; i < leaves.length; i++) {\n\t          var l = leaves[i];\n\t          // looks like it's the only thing couchdb checks\n\t          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n\t            return cb(createError(INVALID_REV));\n\t          }\n\t        }\n\t        finishOpenRevs();\n\t      } else {\n\t        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n\t      }\n\t    }\n\t    return; // open_revs does not like other options\n\t  }\n\t\n\t  return this._get(id, opts, function (err, result) {\n\t    if (err) {\n\t      err.docId = id;\n\t      return cb(err);\n\t    }\n\t\n\t    var doc = result.doc;\n\t    var metadata = result.metadata;\n\t    var ctx = result.ctx;\n\t\n\t    if (opts.conflicts) {\n\t      var conflicts = collectConflicts(metadata);\n\t      if (conflicts.length) {\n\t        doc._conflicts = conflicts;\n\t      }\n\t    }\n\t\n\t    if (isDeleted(metadata, doc._rev)) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    if (opts.revs || opts.revs_info) {\n\t      var splittedRev = doc._rev.split('-');\n\t      var revNo       = parseInt(splittedRev[0], 10);\n\t      var revHash     = splittedRev[1];\n\t\n\t      var paths = rootToLeaf(metadata.rev_tree);\n\t      var path = null;\n\t\n\t      for (var i = 0; i < paths.length; i++) {\n\t        var currentPath = paths[i];\n\t        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n\t          .indexOf(revHash);\n\t        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\t\n\t        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n\t          path = currentPath;\n\t        }\n\t      }\n\t\n\t      var indexOfRev = path.ids.map(function (x) { return x.id; })\n\t        .indexOf(doc._rev.split('-')[1]) + 1;\n\t      var howMany = path.ids.length - indexOfRev;\n\t      path.ids.splice(indexOfRev, howMany);\n\t      path.ids.reverse();\n\t\n\t      if (opts.revs) {\n\t        doc._revisions = {\n\t          start: (path.pos + path.ids.length) - 1,\n\t          ids: path.ids.map(function (rev$$1) {\n\t            return rev$$1.id;\n\t          })\n\t        };\n\t      }\n\t      if (opts.revs_info) {\n\t        var pos =  path.pos + path.ids.length;\n\t        doc._revs_info = path.ids.map(function (rev$$1) {\n\t          pos--;\n\t          return {\n\t            rev: pos + '-' + rev$$1.id,\n\t            status: rev$$1.opts.status\n\t          };\n\t        });\n\t      }\n\t    }\n\t\n\t    if (opts.attachments && doc._attachments) {\n\t      var attachments = doc._attachments;\n\t      var count = Object.keys(attachments).length;\n\t      if (count === 0) {\n\t        return cb(null, doc);\n\t      }\n\t      Object.keys(attachments).forEach(function (key) {\n\t        this._getAttachment(doc._id, key, attachments[key], {\n\t          // Previously the revision handling was done in adapter.js\n\t          // getAttachment, however since idb-next doesnt we need to\n\t          // pass the rev through\n\t          rev: doc._rev,\n\t          binary: opts.binary,\n\t          ctx: ctx\n\t        }, function (err, data) {\n\t          var att = doc._attachments[key];\n\t          att.data = data;\n\t          delete att.stub;\n\t          delete att.length;\n\t          if (!--count) {\n\t            cb(null, doc);\n\t          }\n\t        });\n\t      }, self);\n\t    } else {\n\t      if (doc._attachments) {\n\t        for (var key in doc._attachments) {\n\t          /* istanbul ignore else */\n\t          if (doc._attachments.hasOwnProperty(key)) {\n\t            doc._attachments[key].stub = true;\n\t          }\n\t        }\n\t      }\n\t      cb(null, doc);\n\t    }\n\t  });\n\t});\n\t\n\t// TODO: I dont like this, it forces an extra read for every\n\t// attachment read and enforces a confusing api between\n\t// adapter.js and the adapter implementation\n\tAbstractPouchDB.prototype.getAttachment =\n\t  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n\t  var self = this;\n\t  if (opts instanceof Function) {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  this._get(docId, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n\t      opts.ctx = res.ctx;\n\t      opts.binary = true;\n\t      self._getAttachment(docId, attachmentId,\n\t                          res.doc._attachments[attachmentId], opts, callback);\n\t    } else {\n\t      return callback(createError(MISSING_DOC));\n\t    }\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.allDocs =\n\t  adapterFun('allDocs', function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n\t  if (opts.start_key) {\n\t    opts.startkey = opts.start_key;\n\t  }\n\t  if (opts.end_key) {\n\t    opts.endkey = opts.end_key;\n\t  }\n\t  if ('keys' in opts) {\n\t    if (!Array.isArray(opts.keys)) {\n\t      return callback(new TypeError('options.keys must be an array'));\n\t    }\n\t    var incompatibleOpt =\n\t      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n\t      return incompatibleOpt in opts;\n\t    })[0];\n\t    if (incompatibleOpt) {\n\t      callback(createError(QUERY_PARSE_ERROR,\n\t        'Query parameter `' + incompatibleOpt +\n\t        '` is not compatible with multi-get'\n\t      ));\n\t      return;\n\t    }\n\t    if (!isRemote(this)) {\n\t      allDocsKeysParse(opts);\n\t      if (opts.keys.length === 0) {\n\t        return this._allDocs({limit: 0}, callback);\n\t      }\n\t    }\n\t  }\n\t\n\t  return this._allDocs(opts, callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.changes = function (opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  return new Changes$2(this, opts, callback);\n\t};\n\t\n\tAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n\t  this._closed = true;\n\t  this.emit('closed');\n\t  return this._close(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n\t  var self = this;\n\t  this._info(function (err, info) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    // assume we know better than the adapter, unless it informs us\n\t    info.db_name = info.db_name || self.name;\n\t    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n\t    info.adapter = self.adapter;\n\t    callback(null, info);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n\t  return this._id(callback);\n\t});\n\t\n\t/* istanbul ignore next */\n\tAbstractPouchDB.prototype.type = function () {\n\t  return (typeof this._type === 'function') ? this._type() : this.adapter;\n\t};\n\t\n\tAbstractPouchDB.prototype.bulkDocs =\n\t  adapterFun('bulkDocs', function (req, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  opts = opts || {};\n\t\n\t  if (Array.isArray(req)) {\n\t    req = {\n\t      docs: req\n\t    };\n\t  }\n\t\n\t  if (!req || !req.docs || !Array.isArray(req.docs)) {\n\t    return callback(createError(MISSING_BULK_DOCS));\n\t  }\n\t\n\t  for (var i = 0; i < req.docs.length; ++i) {\n\t    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n\t      return callback(createError(NOT_AN_OBJECT));\n\t    }\n\t  }\n\t\n\t  var attachmentError;\n\t  req.docs.forEach(function (doc) {\n\t    if (doc._attachments) {\n\t      Object.keys(doc._attachments).forEach(function (name) {\n\t        attachmentError = attachmentError || attachmentNameError(name);\n\t        if (!doc._attachments[name].content_type) {\n\t          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  if (attachmentError) {\n\t    return callback(createError(BAD_REQUEST, attachmentError));\n\t  }\n\t\n\t  if (!('new_edits' in opts)) {\n\t    if ('new_edits' in req) {\n\t      opts.new_edits = req.new_edits;\n\t    } else {\n\t      opts.new_edits = true;\n\t    }\n\t  }\n\t\n\t  var adapter = this;\n\t  if (!opts.new_edits && !isRemote(adapter)) {\n\t    // ensure revisions of the same doc are sorted, so that\n\t    // the local adapter processes them correctly (#2935)\n\t    req.docs.sort(compareByIdThenRev);\n\t  }\n\t\n\t  cleanDocs(req.docs);\n\t\n\t  // in the case of conflicts, we want to return the _ids to the user\n\t  // however, the underlying adapter may destroy the docs array, so\n\t  // create a copy here\n\t  var ids = req.docs.map(function (doc) {\n\t    return doc._id;\n\t  });\n\t\n\t  return this._bulkDocs(req, opts, function (err, res) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    if (!opts.new_edits) {\n\t      // this is what couch does when new_edits is false\n\t      res = res.filter(function (x) {\n\t        return x.error;\n\t      });\n\t    }\n\t    // add ids for error/conflict responses (not required for CouchDB)\n\t    if (!isRemote(adapter)) {\n\t      for (var i = 0, l = res.length; i < l; i++) {\n\t        res[i].id = res[i].id || ids[i];\n\t      }\n\t    }\n\t\n\t    callback(null, res);\n\t  });\n\t});\n\t\n\tAbstractPouchDB.prototype.registerDependentDatabase =\n\t  adapterFun('registerDependentDatabase', function (dependentDb,\n\t                                                          callback) {\n\t  var depDB = new this.constructor(dependentDb, this.__opts);\n\t\n\t  function diffFun(doc) {\n\t    doc.dependentDbs = doc.dependentDbs || {};\n\t    if (doc.dependentDbs[dependentDb]) {\n\t      return false; // no update required\n\t    }\n\t    doc.dependentDbs[dependentDb] = true;\n\t    return doc;\n\t  }\n\t  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n\t    .then(function () {\n\t      callback(null, {db: depDB});\n\t    }).catch(callback);\n\t});\n\t\n\tAbstractPouchDB.prototype.destroy =\n\t  adapterFun('destroy', function (opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t\n\t  var self = this;\n\t  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\t\n\t  function destroyDb() {\n\t    // call destroy method of the particular adaptor\n\t    self._destroy(opts, function (err, resp) {\n\t      if (err) {\n\t        return callback(err);\n\t      }\n\t      self._destroyed = true;\n\t      self.emit('destroyed');\n\t      callback(null, resp || { 'ok': true });\n\t    });\n\t  }\n\t\n\t  if (isRemote(self)) {\n\t    // no need to check for dependent DBs if it's a remote DB\n\t    return destroyDb();\n\t  }\n\t\n\t  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n\t    if (err) {\n\t      /* istanbul ignore if */\n\t      if (err.status !== 404) {\n\t        return callback(err);\n\t      } else { // no dependencies\n\t        return destroyDb();\n\t      }\n\t    }\n\t    var dependentDbs = localDoc.dependentDbs;\n\t    var PouchDB = self.constructor;\n\t    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n\t      // use_prefix is only false in the browser\n\t      /* istanbul ignore next */\n\t      var trueName = usePrefix ?\n\t        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n\t      return new PouchDB(trueName, self.__opts).destroy();\n\t    });\n\t    PouchPromise.all(deletedMap).then(destroyDb, callback);\n\t  });\n\t});\n\t\n\tfunction TaskQueue$1() {\n\t  this.isReady = false;\n\t  this.failed = false;\n\t  this.queue = [];\n\t}\n\t\n\tTaskQueue$1.prototype.execute = function () {\n\t  var fun;\n\t  if (this.failed) {\n\t    while ((fun = this.queue.shift())) {\n\t      fun(this.failed);\n\t    }\n\t  } else {\n\t    while ((fun = this.queue.shift())) {\n\t      fun();\n\t    }\n\t  }\n\t};\n\t\n\tTaskQueue$1.prototype.fail = function (err) {\n\t  this.failed = err;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue$1.prototype.ready = function (db) {\n\t  this.isReady = true;\n\t  this.db = db;\n\t  this.execute();\n\t};\n\t\n\tTaskQueue$1.prototype.addTask = function (fun) {\n\t  this.queue.push(fun);\n\t  if (this.failed) {\n\t    this.execute();\n\t  }\n\t};\n\t\n\tfunction parseAdapter(name, opts) {\n\t  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n\t  if (match) {\n\t    // the http adapter expects the fully qualified name\n\t    return {\n\t      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n\t      adapter: match[1]\n\t    };\n\t  }\n\t\n\t  var adapters = PouchDB$5.adapters;\n\t  var preferredAdapters = PouchDB$5.preferredAdapters;\n\t  var prefix = PouchDB$5.prefix;\n\t  var adapterName = opts.adapter;\n\t\n\t  if (!adapterName) { // automatically determine adapter\n\t    for (var i = 0; i < preferredAdapters.length; ++i) {\n\t      adapterName = preferredAdapters[i];\n\t      // check for browsers that have been upgraded from websql-only to websql+idb\n\t      /* istanbul ignore if */\n\t      if (adapterName === 'idb' && 'websql' in adapters &&\n\t          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n\t        // log it, because this can be confusing during development\n\t        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n\t          ' avoid data loss, because it was already opened with WebSQL.');\n\t        continue; // keep using websql to avoid user data loss\n\t      }\n\t      break;\n\t    }\n\t  }\n\t\n\t  var adapter = adapters[adapterName];\n\t\n\t  // if adapter is invalid, then an error will be thrown later\n\t  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n\t    adapter.use_prefix : true;\n\t\n\t  return {\n\t    name: usePrefix ? (prefix + name) : name,\n\t    adapter: adapterName\n\t  };\n\t}\n\t\n\t// OK, so here's the deal. Consider this code:\n\t//     var db1 = new PouchDB('foo');\n\t//     var db2 = new PouchDB('foo');\n\t//     db1.destroy();\n\t// ^ these two both need to emit 'destroyed' events,\n\t// as well as the PouchDB constructor itself.\n\t// So we have one db object (whichever one got destroy() called on it)\n\t// responsible for emitting the initial event, which then gets emitted\n\t// by the constructor, which then broadcasts it to any other dbs\n\t// that may have been created with the same name.\n\tfunction prepareForDestruction(self) {\n\t\n\t  function onDestroyed(from_constructor) {\n\t    self.removeListener('closed', onClosed);\n\t    if (!from_constructor) {\n\t      self.constructor.emit('destroyed', self.name);\n\t    }\n\t  }\n\t\n\t  function onClosed() {\n\t    self.removeListener('destroyed', onDestroyed);\n\t    self.constructor.emit('unref', self);\n\t  }\n\t\n\t  self.once('destroyed', onDestroyed);\n\t  self.once('closed', onClosed);\n\t  self.constructor.emit('ref', self);\n\t}\n\t\n\tinherits(PouchDB$5, AbstractPouchDB);\n\tfunction PouchDB$5(name, opts) {\n\t  // In Node our test suite only tests this for PouchAlt unfortunately\n\t  /* istanbul ignore if */\n\t  if (!(this instanceof PouchDB$5)) {\n\t    return new PouchDB$5(name, opts);\n\t  }\n\t\n\t  var self = this;\n\t  opts = opts || {};\n\t\n\t  if (name && typeof name === 'object') {\n\t    opts = name;\n\t    name = opts.name;\n\t    delete opts.name;\n\t  }\n\t\n\t  this.__opts = opts = clone(opts);\n\t\n\t  self.auto_compaction = opts.auto_compaction;\n\t  self.prefix = PouchDB$5.prefix;\n\t\n\t  if (typeof name !== 'string') {\n\t    throw new Error('Missing/invalid DB name');\n\t  }\n\t\n\t  var prefixedName = (opts.prefix || '') + name;\n\t  var backend = parseAdapter(prefixedName, opts);\n\t\n\t  opts.name = backend.name;\n\t  opts.adapter = opts.adapter || backend.adapter;\n\t\n\t  self.name = name;\n\t  self._adapter = opts.adapter;\n\t  PouchDB$5.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\t\n\t  if (!PouchDB$5.adapters[opts.adapter] ||\n\t      !PouchDB$5.adapters[opts.adapter].valid()) {\n\t    throw new Error('Invalid Adapter: ' + opts.adapter);\n\t  }\n\t\n\t  AbstractPouchDB.call(self);\n\t  self.taskqueue = new TaskQueue$1();\n\t\n\t  self.adapter = opts.adapter;\n\t\n\t  PouchDB$5.adapters[opts.adapter].call(self, opts, function (err) {\n\t    if (err) {\n\t      return self.taskqueue.fail(err);\n\t    }\n\t    prepareForDestruction(self);\n\t\n\t    self.emit('created', self);\n\t    PouchDB$5.emit('created', self.name);\n\t    self.taskqueue.ready(self);\n\t  });\n\t\n\t}\n\t\n\tPouchDB$5.adapters = {};\n\tPouchDB$5.preferredAdapters = [];\n\t\n\tPouchDB$5.prefix = '_pouch_';\n\t\n\tvar eventEmitter = new events.EventEmitter();\n\t\n\tfunction setUpEventEmitter(Pouch) {\n\t  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n\t    if (typeof events.EventEmitter.prototype[key] === 'function') {\n\t      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n\t    }\n\t  });\n\t\n\t  // these are created in constructor.js, and allow us to notify each DB with\n\t  // the same name that it was destroyed, via the constructor object\n\t  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\t\n\t  Pouch.on('ref', function onConstructorRef(db) {\n\t    if (!destructListeners.has(db.name)) {\n\t      destructListeners.set(db.name, []);\n\t    }\n\t    destructListeners.get(db.name).push(db);\n\t  });\n\t\n\t  Pouch.on('unref', function onConstructorUnref(db) {\n\t    if (!destructListeners.has(db.name)) {\n\t      return;\n\t    }\n\t    var dbList = destructListeners.get(db.name);\n\t    var pos = dbList.indexOf(db);\n\t    if (pos < 0) {\n\t      /* istanbul ignore next */\n\t      return;\n\t    }\n\t    dbList.splice(pos, 1);\n\t    if (dbList.length > 1) {\n\t      /* istanbul ignore next */\n\t      destructListeners.set(db.name, dbList);\n\t    } else {\n\t      destructListeners.delete(db.name);\n\t    }\n\t  });\n\t\n\t  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n\t    if (!destructListeners.has(name)) {\n\t      return;\n\t    }\n\t    var dbList = destructListeners.get(name);\n\t    destructListeners.delete(name);\n\t    dbList.forEach(function (db) {\n\t      db.emit('destroyed',true);\n\t    });\n\t  });\n\t}\n\t\n\tsetUpEventEmitter(PouchDB$5);\n\t\n\tPouchDB$5.adapter = function (id, obj, addToPreferredAdapters) {\n\t  /* istanbul ignore else */\n\t  if (obj.valid()) {\n\t    PouchDB$5.adapters[id] = obj;\n\t    if (addToPreferredAdapters) {\n\t      PouchDB$5.preferredAdapters.push(id);\n\t    }\n\t  }\n\t};\n\t\n\tPouchDB$5.plugin = function (obj) {\n\t  if (typeof obj === 'function') { // function style for plugins\n\t    obj(PouchDB$5);\n\t  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n\t    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n\t  } else {\n\t    Object.keys(obj).forEach(function (id) { // object style for plugins\n\t      PouchDB$5.prototype[id] = obj[id];\n\t    });\n\t  }\n\t  if (this.__defaults) {\n\t    PouchDB$5.__defaults = $inject_Object_assign({}, this.__defaults);\n\t  }\n\t  return PouchDB$5;\n\t};\n\t\n\tPouchDB$5.defaults = function (defaultOpts) {\n\t  function PouchAlt(name, opts) {\n\t    if (!(this instanceof PouchAlt)) {\n\t      return new PouchAlt(name, opts);\n\t    }\n\t\n\t    opts = opts || {};\n\t\n\t    if (name && typeof name === 'object') {\n\t      opts = name;\n\t      name = opts.name;\n\t      delete opts.name;\n\t    }\n\t\n\t    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n\t    PouchDB$5.call(this, name, opts);\n\t  }\n\t\n\t  inherits(PouchAlt, PouchDB$5);\n\t\n\t  PouchAlt.preferredAdapters = PouchDB$5.preferredAdapters.slice();\n\t  Object.keys(PouchDB$5).forEach(function (key) {\n\t    if (!(key in PouchAlt)) {\n\t      PouchAlt[key] = PouchDB$5[key];\n\t    }\n\t  });\n\t\n\t  // make default options transitive\n\t  // https://github.com/pouchdb/pouchdb/issues/5922\n\t  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\t\n\t  return PouchAlt;\n\t};\n\t\n\t// managed automatically by set-version.js\n\tvar version = \"6.4.1\";\n\t\n\tfunction debugPouch(PouchDB) {\n\t  PouchDB.debug = debug;\n\t  var logs = {};\n\t  /* istanbul ignore next */\n\t  PouchDB.on('debug', function (args) {\n\t    // first argument is log identifier\n\t    var logId = args[0];\n\t    // rest should be passed verbatim to debug module\n\t    var logArgs = args.slice(1);\n\t    if (!logs[logId]) {\n\t      logs[logId] = debug('pouchdb:' + logId);\n\t    }\n\t    logs[logId].apply(null, logArgs);\n\t  });\n\t}\n\t\n\t// this would just be \"return doc[field]\", but fields\n\t// can be \"deep\" due to dot notation\n\tfunction getFieldFromDoc(doc, parsedField) {\n\t  var value = doc;\n\t  for (var i = 0, len = parsedField.length; i < len; i++) {\n\t    var key = parsedField[i];\n\t    value = value[key];\n\t    if (!value) {\n\t      break;\n\t    }\n\t  }\n\t  return value;\n\t}\n\t\n\tfunction compare$1(left, right) {\n\t  return left < right ? -1 : left > right ? 1 : 0;\n\t}\n\t\n\t// Converts a string in dot notation to an array of its components, with backslash escaping\n\tfunction parseField(fieldName) {\n\t  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n\t  var fields = [];\n\t  var current = '';\n\t  for (var i = 0, len = fieldName.length; i < len; i++) {\n\t    var ch = fieldName[i];\n\t    if (ch === '.') {\n\t      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n\t        current = current.substring(0, current.length - 1) + '.';\n\t      } else { // not escaped, so delimiter\n\t        fields.push(current);\n\t        current = '';\n\t      }\n\t    } else { // normal character\n\t      current += ch;\n\t    }\n\t  }\n\t  fields.push(current);\n\t  return fields;\n\t}\n\t\n\tvar combinationFields = ['$or', '$nor', '$not'];\n\tfunction isCombinationalField(field) {\n\t  return combinationFields.indexOf(field) > -1;\n\t}\n\t\n\tfunction getKey(obj) {\n\t  return Object.keys(obj)[0];\n\t}\n\t\n\tfunction getValue(obj) {\n\t  return obj[getKey(obj)];\n\t}\n\t\n\t\n\t// flatten an array of selectors joined by an $and operator\n\tfunction mergeAndedSelectors(selectors) {\n\t\n\t  // sort to ensure that e.g. if the user specified\n\t  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n\t  // just {$gt: 'b'}\n\t  var res = {};\n\t\n\t  selectors.forEach(function (selector) {\n\t    Object.keys(selector).forEach(function (field) {\n\t      var matcher = selector[field];\n\t      if (typeof matcher !== 'object') {\n\t        matcher = {$eq: matcher};\n\t      }\n\t\n\t      if (isCombinationalField(field)) {\n\t        if (matcher instanceof Array) {\n\t          res[field] = matcher.map(function (m) {\n\t            return mergeAndedSelectors([m]);\n\t          });\n\t        } else {\n\t          res[field] = mergeAndedSelectors([matcher]);\n\t        }\n\t      } else {\n\t        var fieldMatchers = res[field] = res[field] || {};\n\t        Object.keys(matcher).forEach(function (operator) {\n\t          var value = matcher[operator];\n\t\n\t          if (operator === '$gt' || operator === '$gte') {\n\t            return mergeGtGte(operator, value, fieldMatchers);\n\t          } else if (operator === '$lt' || operator === '$lte') {\n\t            return mergeLtLte(operator, value, fieldMatchers);\n\t          } else if (operator === '$ne') {\n\t            return mergeNe(value, fieldMatchers);\n\t          } else if (operator === '$eq') {\n\t            return mergeEq(value, fieldMatchers);\n\t          }\n\t          fieldMatchers[operator] = value;\n\t        });\n\t      }\n\t    });\n\t  });\n\t\n\t  return res;\n\t}\n\t\n\t\n\t\n\t// collapse logically equivalent gt/gte values\n\tfunction mergeGtGte(operator, value, fieldMatchers) {\n\t  if (typeof fieldMatchers.$eq !== 'undefined') {\n\t    return; // do nothing\n\t  }\n\t  if (typeof fieldMatchers.$gte !== 'undefined') {\n\t    if (operator === '$gte') {\n\t      if (value > fieldMatchers.$gte) { // more specificity\n\t        fieldMatchers.$gte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value >= fieldMatchers.$gte) { // more specificity\n\t        delete fieldMatchers.$gte;\n\t        fieldMatchers.$gt = value;\n\t      }\n\t    }\n\t  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n\t    if (operator === '$gte') {\n\t      if (value > fieldMatchers.$gt) { // more specificity\n\t        delete fieldMatchers.$gt;\n\t        fieldMatchers.$gte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value > fieldMatchers.$gt) { // more specificity\n\t        fieldMatchers.$gt = value;\n\t      }\n\t    }\n\t  } else {\n\t    fieldMatchers[operator] = value;\n\t  }\n\t}\n\t\n\t// collapse logically equivalent lt/lte values\n\tfunction mergeLtLte(operator, value, fieldMatchers) {\n\t  if (typeof fieldMatchers.$eq !== 'undefined') {\n\t    return; // do nothing\n\t  }\n\t  if (typeof fieldMatchers.$lte !== 'undefined') {\n\t    if (operator === '$lte') {\n\t      if (value < fieldMatchers.$lte) { // more specificity\n\t        fieldMatchers.$lte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value <= fieldMatchers.$lte) { // more specificity\n\t        delete fieldMatchers.$lte;\n\t        fieldMatchers.$lt = value;\n\t      }\n\t    }\n\t  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n\t    if (operator === '$lte') {\n\t      if (value < fieldMatchers.$lt) { // more specificity\n\t        delete fieldMatchers.$lt;\n\t        fieldMatchers.$lte = value;\n\t      }\n\t    } else { // operator === '$gt'\n\t      if (value < fieldMatchers.$lt) { // more specificity\n\t        fieldMatchers.$lt = value;\n\t      }\n\t    }\n\t  } else {\n\t    fieldMatchers[operator] = value;\n\t  }\n\t}\n\t\n\t// combine $ne values into one array\n\tfunction mergeNe(value, fieldMatchers) {\n\t  if ('$ne' in fieldMatchers) {\n\t    // there are many things this could \"not\" be\n\t    fieldMatchers.$ne.push(value);\n\t  } else { // doesn't exist yet\n\t    fieldMatchers.$ne = [value];\n\t  }\n\t}\n\t\n\t// add $eq into the mix\n\tfunction mergeEq(value, fieldMatchers) {\n\t  // these all have less specificity than the $eq\n\t  // TODO: check for user errors here\n\t  delete fieldMatchers.$gt;\n\t  delete fieldMatchers.$gte;\n\t  delete fieldMatchers.$lt;\n\t  delete fieldMatchers.$lte;\n\t  delete fieldMatchers.$ne;\n\t  fieldMatchers.$eq = value;\n\t}\n\t\n\t\n\t//\n\t// normalize the selector\n\t//\n\tfunction massageSelector(input) {\n\t  var result = clone(input);\n\t  var wasAnded = false;\n\t  if ('$and' in result) {\n\t    result = mergeAndedSelectors(result['$and']);\n\t    wasAnded = true;\n\t  }\n\t\n\t  ['$or', '$nor'].forEach(function (orOrNor) {\n\t    if (orOrNor in result) {\n\t      // message each individual selector\n\t      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n\t      result[orOrNor].forEach(function (subSelector) {\n\t        var fields = Object.keys(subSelector);\n\t        for (var i = 0; i < fields.length; i++) {\n\t          var field = fields[i];\n\t          var matcher = subSelector[field];\n\t          if (typeof matcher !== 'object' || matcher === null) {\n\t            subSelector[field] = {$eq: matcher};\n\t          }\n\t        }\n\t      });\n\t    }\n\t  });\n\t\n\t  if ('$not' in result) {\n\t    //This feels a little like forcing, but it will work for now,\n\t    //I would like to come back to this and make the merging of selectors a little more generic\n\t    result['$not'] = mergeAndedSelectors([result['$not']]);\n\t  }\n\t\n\t  var fields = Object.keys(result);\n\t\n\t  for (var i = 0; i < fields.length; i++) {\n\t    var field = fields[i];\n\t    var matcher = result[field];\n\t\n\t    if (typeof matcher !== 'object' || matcher === null) {\n\t      matcher = {$eq: matcher};\n\t    } else if ('$ne' in matcher && !wasAnded) {\n\t      // I put these in an array, since there may be more than one\n\t      // but in the \"mergeAnded\" operation, I already take care of that\n\t      matcher.$ne = [matcher.$ne];\n\t    }\n\t    result[field] = matcher;\n\t  }\n\t\n\t  return result;\n\t}\n\t\n\tfunction pad(str, padWith, upToLength) {\n\t  var padding = '';\n\t  var targetLength = upToLength - str.length;\n\t  /* istanbul ignore next */\n\t  while (padding.length < targetLength) {\n\t    padding += padWith;\n\t  }\n\t  return padding;\n\t}\n\t\n\tfunction padLeft(str, padWith, upToLength) {\n\t  var padding = pad(str, padWith, upToLength);\n\t  return padding + str;\n\t}\n\t\n\tvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\n\tvar MAGNITUDE_DIGITS = 3; // ditto\n\tvar SEP = ''; // set to '_' for easier debugging \n\t\n\tfunction collate(a, b) {\n\t\n\t  if (a === b) {\n\t    return 0;\n\t  }\n\t\n\t  a = normalizeKey(a);\n\t  b = normalizeKey(b);\n\t\n\t  var ai = collationIndex(a);\n\t  var bi = collationIndex(b);\n\t  if ((ai - bi) !== 0) {\n\t    return ai - bi;\n\t  }\n\t  switch (typeof a) {\n\t    case 'number':\n\t      return a - b;\n\t    case 'boolean':\n\t      return a < b ? -1 : 1;\n\t    case 'string':\n\t      return stringCollate(a, b);\n\t  }\n\t  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n\t}\n\t\n\t// couch considers null/NaN/Infinity/-Infinity === undefined,\n\t// for the purposes of mapreduce indexes. also, dates get stringified.\n\tfunction normalizeKey(key) {\n\t  switch (typeof key) {\n\t    case 'undefined':\n\t      return null;\n\t    case 'number':\n\t      if (key === Infinity || key === -Infinity || isNaN(key)) {\n\t        return null;\n\t      }\n\t      return key;\n\t    case 'object':\n\t      var origKey = key;\n\t      if (Array.isArray(key)) {\n\t        var len = key.length;\n\t        key = new Array(len);\n\t        for (var i = 0; i < len; i++) {\n\t          key[i] = normalizeKey(origKey[i]);\n\t        }\n\t      /* istanbul ignore next */\n\t      } else if (key instanceof Date) {\n\t        return key.toJSON();\n\t      } else if (key !== null) { // generic object\n\t        key = {};\n\t        for (var k in origKey) {\n\t          if (origKey.hasOwnProperty(k)) {\n\t            var val = origKey[k];\n\t            if (typeof val !== 'undefined') {\n\t              key[k] = normalizeKey(val);\n\t            }\n\t          }\n\t        }\n\t      }\n\t  }\n\t  return key;\n\t}\n\t\n\tfunction indexify(key) {\n\t  if (key !== null) {\n\t    switch (typeof key) {\n\t      case 'boolean':\n\t        return key ? 1 : 0;\n\t      case 'number':\n\t        return numToIndexableString(key);\n\t      case 'string':\n\t        // We've to be sure that key does not contain \\u0000\n\t        // Do order-preserving replacements:\n\t        // 0 -> 1, 1\n\t        // 1 -> 1, 2\n\t        // 2 -> 2, 2\n\t        return key\n\t          .replace(/\\u0002/g, '\\u0002\\u0002')\n\t          .replace(/\\u0001/g, '\\u0001\\u0002')\n\t          .replace(/\\u0000/g, '\\u0001\\u0001');\n\t      case 'object':\n\t        var isArray = Array.isArray(key);\n\t        var arr = isArray ? key : Object.keys(key);\n\t        var i = -1;\n\t        var len = arr.length;\n\t        var result = '';\n\t        if (isArray) {\n\t          while (++i < len) {\n\t            result += toIndexableString(arr[i]);\n\t          }\n\t        } else {\n\t          while (++i < len) {\n\t            var objKey = arr[i];\n\t            result += toIndexableString(objKey) +\n\t                toIndexableString(key[objKey]);\n\t          }\n\t        }\n\t        return result;\n\t    }\n\t  }\n\t  return '';\n\t}\n\t\n\t// convert the given key to a string that would be appropriate\n\t// for lexical sorting, e.g. within a database, where the\n\t// sorting is the same given by the collate() function.\n\tfunction toIndexableString(key) {\n\t  var zero = '\\u0000';\n\t  key = normalizeKey(key);\n\t  return collationIndex(key) + SEP + indexify(key) + zero;\n\t}\n\t\n\tfunction parseNumber(str, i) {\n\t  var originalIdx = i;\n\t  var num;\n\t  var zero = str[i] === '1';\n\t  if (zero) {\n\t    num = 0;\n\t    i++;\n\t  } else {\n\t    var neg = str[i] === '0';\n\t    i++;\n\t    var numAsString = '';\n\t    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n\t    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      magnitude = -magnitude;\n\t    }\n\t    i += MAGNITUDE_DIGITS;\n\t    while (true) {\n\t      var ch = str[i];\n\t      if (ch === '\\u0000') {\n\t        break;\n\t      } else {\n\t        numAsString += ch;\n\t      }\n\t      i++;\n\t    }\n\t    numAsString = numAsString.split('.');\n\t    if (numAsString.length === 1) {\n\t      num = parseInt(numAsString, 10);\n\t    } else {\n\t      /* istanbul ignore next */\n\t      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n\t    }\n\t    /* istanbul ignore next */\n\t    if (neg) {\n\t      num = num - 10;\n\t    }\n\t    /* istanbul ignore next */\n\t    if (magnitude !== 0) {\n\t      // parseFloat is more reliable than pow due to rounding errors\n\t      // e.g. Number.MAX_VALUE would return Infinity if we did\n\t      // num * Math.pow(10, magnitude);\n\t      num = parseFloat(num + 'e' + magnitude);\n\t    }\n\t  }\n\t  return {num: num, length : i - originalIdx};\n\t}\n\t\n\t// move up the stack while parsing\n\t// this function moved outside of parseIndexableString for performance\n\tfunction pop(stack, metaStack) {\n\t  var obj = stack.pop();\n\t\n\t  if (metaStack.length) {\n\t    var lastMetaElement = metaStack[metaStack.length - 1];\n\t    if (obj === lastMetaElement.element) {\n\t      // popping a meta-element, e.g. an object whose value is another object\n\t      metaStack.pop();\n\t      lastMetaElement = metaStack[metaStack.length - 1];\n\t    }\n\t    var element = lastMetaElement.element;\n\t    var lastElementIndex = lastMetaElement.index;\n\t    if (Array.isArray(element)) {\n\t      element.push(obj);\n\t    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t      var key = stack.pop();\n\t      element[key] = obj;\n\t    } else {\n\t      stack.push(obj); // obj with key only\n\t    }\n\t  }\n\t}\n\t\n\tfunction parseIndexableString(str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t\n\t  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t  while (true) {\n\t    var collationIndex = str[i++];\n\t    if (collationIndex === '\\u0000') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case '1':\n\t        stack.push(null);\n\t        break;\n\t      case '2':\n\t        stack.push(str[i] === '1');\n\t        i++;\n\t        break;\n\t      case '3':\n\t        var parsedNum = parseNumber(str, i);\n\t        stack.push(parsedNum.num);\n\t        i += parsedNum.length;\n\t        break;\n\t      case '4':\n\t        var parsedStr = '';\n\t        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n\t        while (true) {\n\t          var ch = str[i];\n\t          if (ch === '\\u0000') {\n\t            break;\n\t          }\n\t          parsedStr += ch;\n\t          i++;\n\t        }\n\t        // perform the reverse of the order-preserving replacement\n\t        // algorithm (see above)\n\t        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n\t          .replace(/\\u0001\\u0002/g, '\\u0001')\n\t          .replace(/\\u0002\\u0002/g, '\\u0002');\n\t        stack.push(parsedStr);\n\t        break;\n\t      case '5':\n\t        var arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '6':\n\t        var objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      /* istanbul ignore next */\n\t      default:\n\t        throw new Error(\n\t          'bad collationIndex or unexpectedly reached end of input: ' +\n\t            collationIndex);\n\t    }\n\t  }\n\t}\n\t\n\tfunction arrayCollate(a, b) {\n\t  var len = Math.min(a.length, b.length);\n\t  for (var i = 0; i < len; i++) {\n\t    var sort = collate(a[i], b[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t  }\n\t  return (a.length === b.length) ? 0 :\n\t    (a.length > b.length) ? 1 : -1;\n\t}\n\tfunction stringCollate(a, b) {\n\t  // See: https://github.com/daleharvey/pouchdb/issues/40\n\t  // This is incompatible with the CouchDB implementation, but its the\n\t  // best we can do for now\n\t  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n\t}\n\tfunction objectCollate(a, b) {\n\t  var ak = Object.keys(a), bk = Object.keys(b);\n\t  var len = Math.min(ak.length, bk.length);\n\t  for (var i = 0; i < len; i++) {\n\t    // First sort the keys\n\t    var sort = collate(ak[i], bk[i]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t    // if the keys are equal sort the values\n\t    sort = collate(a[ak[i]], b[bk[i]]);\n\t    if (sort !== 0) {\n\t      return sort;\n\t    }\n\t\n\t  }\n\t  return (ak.length === bk.length) ? 0 :\n\t    (ak.length > bk.length) ? 1 : -1;\n\t}\n\t// The collation is defined by erlangs ordered terms\n\t// the atoms null, true, false come first, then numbers, strings,\n\t// arrays, then objects\n\t// null/undefined/NaN/Infinity/-Infinity are all considered null\n\tfunction collationIndex(x) {\n\t  var id = ['boolean', 'number', 'string', 'object'];\n\t  var idx = id.indexOf(typeof x);\n\t  //false if -1 otherwise true, but fast!!!!1\n\t  if (~idx) {\n\t    if (x === null) {\n\t      return 1;\n\t    }\n\t    if (Array.isArray(x)) {\n\t      return 5;\n\t    }\n\t    return idx < 3 ? (idx + 2) : (idx + 3);\n\t  }\n\t  /* istanbul ignore next */\n\t  if (Array.isArray(x)) {\n\t    return 5;\n\t  }\n\t}\n\t\n\t// conversion:\n\t// x yyy zz...zz\n\t// x = 0 for negative, 1 for 0, 2 for positive\n\t// y = exponent (for negative numbers negated) moved so that it's >= 0\n\t// z = mantisse\n\tfunction numToIndexableString(num) {\n\t\n\t  if (num === 0) {\n\t    return '1';\n\t  }\n\t\n\t  // convert number to exponential format for easier and\n\t  // more succinct string sorting\n\t  var expFormat = num.toExponential().split(/e\\+?/);\n\t  var magnitude = parseInt(expFormat[1], 10);\n\t\n\t  var neg = num < 0;\n\t\n\t  var result = neg ? '0' : '2';\n\t\n\t  // first sort by magnitude\n\t  // it's easier if all magnitudes are positive\n\t  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n\t  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\t\n\t  result += SEP + magString;\n\t\n\t  // then sort by the factor\n\t  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n\t  /* istanbul ignore next */\n\t  if (neg) { // for negative reverse ordering\n\t    factor = 10 - factor;\n\t  }\n\t\n\t  var factorStr = factor.toFixed(20);\n\t\n\t  // strip zeros from the end\n\t  factorStr = factorStr.replace(/\\.?0+$/, '');\n\t\n\t  result += SEP + factorStr;\n\t\n\t  return result;\n\t}\n\t\n\t// create a comparator based on the sort object\n\tfunction createFieldSorter(sort) {\n\t\n\t  function getFieldValuesAsArray(doc) {\n\t    return sort.map(function (sorting) {\n\t      var fieldName = getKey(sorting);\n\t      var parsedField = parseField(fieldName);\n\t      var docFieldValue = getFieldFromDoc(doc, parsedField);\n\t      return docFieldValue;\n\t    });\n\t  }\n\t\n\t  return function (aRow, bRow) {\n\t    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n\t    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n\t    var collation = collate(aFieldValues, bFieldValues);\n\t    if (collation !== 0) {\n\t      return collation;\n\t    }\n\t    // this is what mango seems to do\n\t    return compare$1(aRow.doc._id, bRow.doc._id);\n\t  };\n\t}\n\t\n\tfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n\t  rows = rows.filter(function (row) {\n\t    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n\t  });\n\t\n\t  if (requestDef.sort) {\n\t    // in-memory sort\n\t    var fieldSorter = createFieldSorter(requestDef.sort);\n\t    rows = rows.sort(fieldSorter);\n\t    if (typeof requestDef.sort[0] !== 'string' &&\n\t        getValue(requestDef.sort[0]) === 'desc') {\n\t      rows = rows.reverse();\n\t    }\n\t  }\n\t\n\t  if ('limit' in requestDef || 'skip' in requestDef) {\n\t    // have to do the limit in-memory\n\t    var skip = requestDef.skip || 0;\n\t    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n\t    rows = rows.slice(skip, limit);\n\t  }\n\t  return rows;\n\t}\n\t\n\tfunction rowFilter(doc, selector, inMemoryFields) {\n\t  return inMemoryFields.every(function (field) {\n\t    var matcher = selector[field];\n\t    var parsedField = parseField(field);\n\t    var docFieldValue = getFieldFromDoc(doc, parsedField);\n\t    if (isCombinationalField(field)) {\n\t      return matchCominationalSelector(field, matcher, doc);\n\t    }\n\t\n\t    return matchSelector(matcher, doc, parsedField, docFieldValue);\n\t  });\n\t}\n\t\n\tfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n\t  if (!matcher) {\n\t    // no filtering necessary; this field is just needed for sorting\n\t    return true;\n\t  }\n\t\n\t  return Object.keys(matcher).every(function (userOperator) {\n\t    var userValue = matcher[userOperator];\n\t    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n\t  });\n\t}\n\t\n\tfunction matchCominationalSelector(field, matcher, doc) {\n\t\n\t  if (field === '$or') {\n\t    return matcher.some(function (orMatchers) {\n\t      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n\t    });\n\t  }\n\t\n\t  if (field === '$not') {\n\t    return !rowFilter(doc, matcher, Object.keys(matcher));\n\t  }\n\t\n\t  //`$nor`\n\t  return !matcher.find(function (orMatchers) {\n\t    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n\t  });\n\t\n\t}\n\t\n\tfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n\t  if (!matchers[userOperator]) {\n\t    throw new Error('unknown operator \"' + userOperator +\n\t      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n\t      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n\t  }\n\t  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n\t}\n\t\n\tfunction fieldExists(docFieldValue) {\n\t  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n\t}\n\t\n\tfunction fieldIsNotUndefined(docFieldValue) {\n\t  return typeof docFieldValue !== 'undefined';\n\t}\n\t\n\tfunction modField(docFieldValue, userValue) {\n\t  var divisor = userValue[0];\n\t  var mod = userValue[1];\n\t  if (divisor === 0) {\n\t    throw new Error('Bad divisor, cannot divide by zero');\n\t  }\n\t\n\t  if (parseInt(divisor, 10) !== divisor ) {\n\t    throw new Error('Divisor is not an integer');\n\t  }\n\t\n\t  if (parseInt(mod, 10) !== mod ) {\n\t    throw new Error('Modulus is not an integer');\n\t  }\n\t\n\t  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n\t    return false;\n\t  }\n\t\n\t  return docFieldValue % divisor === mod;\n\t}\n\t\n\tfunction arrayContainsValue(docFieldValue, userValue) {\n\t  return userValue.some(function (val) {\n\t    if (docFieldValue instanceof Array) {\n\t      return docFieldValue.indexOf(val) > -1;\n\t    }\n\t\n\t    return docFieldValue === val;\n\t  });\n\t}\n\t\n\tfunction arrayContainsAllValues(docFieldValue, userValue) {\n\t  return userValue.every(function (val) {\n\t    return docFieldValue.indexOf(val) > -1;\n\t  });\n\t}\n\t\n\tfunction arraySize(docFieldValue, userValue) {\n\t  return docFieldValue.length === userValue;\n\t}\n\t\n\tfunction regexMatch(docFieldValue, userValue) {\n\t  var re = new RegExp(userValue);\n\t\n\t  return re.test(docFieldValue);\n\t}\n\t\n\tfunction typeMatch(docFieldValue, userValue) {\n\t\n\t  switch (userValue) {\n\t    case 'null':\n\t      return docFieldValue === null;\n\t    case 'boolean':\n\t      return typeof (docFieldValue) === 'boolean';\n\t    case 'number':\n\t      return typeof (docFieldValue) === 'number';\n\t    case 'string':\n\t      return typeof (docFieldValue) === 'string';\n\t    case 'array':\n\t      return docFieldValue instanceof Array;\n\t    case 'object':\n\t      return ({}).toString.call(docFieldValue) === '[object Object]';\n\t  }\n\t\n\t  throw new Error(userValue + ' not supported as a type.' +\n\t                  'Please use one of object, string, array, number, boolean or null.');\n\t\n\t}\n\t\n\tvar matchers = {\n\t\n\t  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n\t    if (!Array.isArray(docFieldValue)) {\n\t      return false;\n\t    }\n\t\n\t    if (docFieldValue.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    if (typeof docFieldValue[0] === 'object') {\n\t      return docFieldValue.some(function (val) {\n\t        return rowFilter(val, userValue, Object.keys(userValue));\n\t      });\n\t    }\n\t\n\t    return docFieldValue.some(function (val) {\n\t      return matchSelector(userValue, doc, parsedField, val);\n\t    });\n\t  },\n\t\n\t  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n\t    if (!Array.isArray(docFieldValue)) {\n\t      return false;\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    if (docFieldValue.length === 0) {\n\t      return false;\n\t    }\n\t\n\t    if (typeof docFieldValue[0] === 'object') {\n\t      return docFieldValue.every(function (val) {\n\t        return rowFilter(val, userValue, Object.keys(userValue));\n\t      });\n\t    }\n\t\n\t    return docFieldValue.every(function (val) {\n\t      return matchSelector(userValue, doc, parsedField, val);\n\t    });\n\t  },\n\t\n\t  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n\t  },\n\t\n\t  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n\t  },\n\t\n\t  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n\t  },\n\t\n\t  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n\t  },\n\t\n\t  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n\t  },\n\t\n\t  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n\t    //a field that is null is still considered to exist\n\t    if (userValue) {\n\t      return fieldIsNotUndefined(docFieldValue);\n\t    }\n\t\n\t    return !fieldIsNotUndefined(docFieldValue);\n\t  },\n\t\n\t  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n\t  },\n\t\n\t  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n\t    return userValue.every(function (neValue) {\n\t      return collate(docFieldValue, neValue) !== 0;\n\t    });\n\t  },\n\t  '$in': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n\t  },\n\t\n\t  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n\t  },\n\t\n\t  '$size': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n\t  },\n\t\n\t  '$all': function (doc, userValue, parsedField, docFieldValue) {\n\t    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n\t  },\n\t\n\t  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n\t    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n\t  },\n\t\n\t  '$type': function (doc, userValue, parsedField, docFieldValue) {\n\t    return typeMatch(docFieldValue, userValue);\n\t  }\n\t};\n\t\n\t// return true if the given doc matches the supplied selector\n\tfunction matchesSelector(doc, selector) {\n\t  /* istanbul ignore if */\n\t  if (typeof selector !== 'object') {\n\t    // match the CouchDB error message\n\t    throw new Error('Selector error: expected a JSON object');\n\t  }\n\t\n\t  selector = massageSelector(selector);\n\t  var row = {\n\t    'doc': doc\n\t  };\n\t\n\t  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n\t  return rowsMatched && rowsMatched.length === 1;\n\t}\n\t\n\tfunction evalFilter(input) {\n\t  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n\t}\n\t\n\tfunction evalView(input) {\n\t  var code = [\n\t    'return function(doc) {',\n\t    '  \"use strict\";',\n\t    '  var emitted = false;',\n\t    '  var emit = function (a, b) {',\n\t    '    emitted = true;',\n\t    '  };',\n\t    '  var view = ' + input + ';',\n\t    '  view(doc);',\n\t    '  if (emitted) {',\n\t    '    return true;',\n\t    '  }',\n\t    '};'\n\t  ].join('\\n');\n\t\n\t  return scopeEval(code, {});\n\t}\n\t\n\tfunction validate(opts, callback) {\n\t  if (opts.selector) {\n\t    if (opts.filter && opts.filter !== '_selector') {\n\t      var filterName = typeof opts.filter === 'string' ?\n\t        opts.filter : 'function';\n\t      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n\t    }\n\t  }\n\t  callback();\n\t}\n\t\n\tfunction normalize(opts) {\n\t  if (opts.view && !opts.filter) {\n\t    opts.filter = '_view';\n\t  }\n\t\n\t  if (opts.selector && !opts.filter) {\n\t    opts.filter = '_selector';\n\t  }\n\t\n\t  if (opts.filter && typeof opts.filter === 'string') {\n\t    if (opts.filter === '_view') {\n\t      opts.view = normalizeDesignDocFunctionName(opts.view);\n\t    } else {\n\t      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n\t    }\n\t  }\n\t}\n\t\n\tfunction shouldFilter(changesHandler, opts) {\n\t  return opts.filter && typeof opts.filter === 'string' &&\n\t    !opts.doc_ids && !isRemote(changesHandler.db);\n\t}\n\t\n\tfunction filter(changesHandler, opts) {\n\t  var callback = opts.complete;\n\t  if (opts.filter === '_view') {\n\t    if (!opts.view || typeof opts.view !== 'string') {\n\t      var err = createError(BAD_REQUEST,\n\t        '`view` filter parameter not found or invalid.');\n\t      return callback(err);\n\t    }\n\t    // fetch a view from a design doc, make it behave like a filter\n\t    var viewName = parseDesignDocFunctionName(opts.view);\n\t    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (changesHandler.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n\t        ddoc.views[viewName[1]].map;\n\t      if (!mapFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          (ddoc.views ? 'missing json key: ' + viewName[1] :\n\t            'missing json key: views')));\n\t      }\n\t      opts.filter = evalView(mapFun);\n\t      changesHandler.doChanges(opts);\n\t    });\n\t  } else if (opts.selector) {\n\t    opts.filter = function (doc) {\n\t      return matchesSelector(doc, opts.selector);\n\t    };\n\t    changesHandler.doChanges(opts);\n\t  } else {\n\t    // fetch a filter from a design doc\n\t    var filterName = parseDesignDocFunctionName(opts.filter);\n\t    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n\t      /* istanbul ignore if */\n\t      if (changesHandler.isCancelled) {\n\t        return callback(null, {status: 'cancelled'});\n\t      }\n\t      /* istanbul ignore next */\n\t      if (err) {\n\t        return callback(generateErrorFromResponse(err));\n\t      }\n\t      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n\t      if (!filterFun) {\n\t        return callback(createError(MISSING_DOC,\n\t          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n\t            : 'missing json key: filters')));\n\t      }\n\t      opts.filter = evalFilter(filterFun);\n\t      changesHandler.doChanges(opts);\n\t    });\n\t  }\n\t}\n\t\n\tfunction applyChangesFilterPlugin(PouchDB) {\n\t  PouchDB._changesFilterPlugin = {\n\t    validate: validate,\n\t    normalize: normalize,\n\t    shouldFilter: shouldFilter,\n\t    filter: filter\n\t  };\n\t}\n\t\n\t// TODO: remove from pouchdb-core (breaking)\n\tPouchDB$5.plugin(debugPouch);\n\t\n\t// TODO: remove from pouchdb-core (breaking)\n\tPouchDB$5.plugin(applyChangesFilterPlugin);\n\t\n\tPouchDB$5.version = version;\n\t\n\tfunction toObject(array) {\n\t  return array.reduce(function (obj, item) {\n\t    obj[item] = true;\n\t    return obj;\n\t  }, {});\n\t}\n\t// List of top level reserved words for doc\n\tvar reservedWords = toObject([\n\t  '_id',\n\t  '_rev',\n\t  '_attachments',\n\t  '_deleted',\n\t  '_revisions',\n\t  '_revs_info',\n\t  '_conflicts',\n\t  '_deleted_conflicts',\n\t  '_local_seq',\n\t  '_rev_tree',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats',\n\t  // Specific to Couchbase Sync Gateway\n\t  '_removed'\n\t]);\n\t\n\t// List of reserved words that should end up the document\n\tvar dataWords = toObject([\n\t  '_attachments',\n\t  //replication documents\n\t  '_replication_id',\n\t  '_replication_state',\n\t  '_replication_state_time',\n\t  '_replication_state_reason',\n\t  '_replication_stats'\n\t]);\n\t\n\tfunction parseRevisionInfo(rev$$1) {\n\t  if (!/^\\d+-./.test(rev$$1)) {\n\t    return createError(INVALID_REV);\n\t  }\n\t  var idx = rev$$1.indexOf('-');\n\t  var left = rev$$1.substring(0, idx);\n\t  var right = rev$$1.substring(idx + 1);\n\t  return {\n\t    prefix: parseInt(left, 10),\n\t    id: right\n\t  };\n\t}\n\t\n\tfunction makeRevTreeFromRevisions(revisions, opts) {\n\t  var pos = revisions.start - revisions.ids.length + 1;\n\t\n\t  var revisionIds = revisions.ids;\n\t  var ids = [revisionIds[0], opts, []];\n\t\n\t  for (var i = 1, len = revisionIds.length; i < len; i++) {\n\t    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n\t  }\n\t\n\t  return [{\n\t    pos: pos,\n\t    ids: ids\n\t  }];\n\t}\n\t\n\t// Preprocess documents, parse their revisions, assign an id and a\n\t// revision for new writes that are missing them, etc\n\tfunction parseDoc(doc, newEdits) {\n\t\n\t  var nRevNum;\n\t  var newRevId;\n\t  var revInfo;\n\t  var opts = {status: 'available'};\n\t  if (doc._deleted) {\n\t    opts.deleted = true;\n\t  }\n\t\n\t  if (newEdits) {\n\t    if (!doc._id) {\n\t      doc._id = uuid();\n\t    }\n\t    newRevId = rev();\n\t    if (doc._rev) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      doc._rev_tree = [{\n\t        pos: revInfo.prefix,\n\t        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n\t      }];\n\t      nRevNum = revInfo.prefix + 1;\n\t    } else {\n\t      doc._rev_tree = [{\n\t        pos: 1,\n\t        ids : [newRevId, opts, []]\n\t      }];\n\t      nRevNum = 1;\n\t    }\n\t  } else {\n\t    if (doc._revisions) {\n\t      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n\t      nRevNum = doc._revisions.start;\n\t      newRevId = doc._revisions.ids[0];\n\t    }\n\t    if (!doc._rev_tree) {\n\t      revInfo = parseRevisionInfo(doc._rev);\n\t      if (revInfo.error) {\n\t        return revInfo;\n\t      }\n\t      nRevNum = revInfo.prefix;\n\t      newRevId = revInfo.id;\n\t      doc._rev_tree = [{\n\t        pos: nRevNum,\n\t        ids: [newRevId, opts, []]\n\t      }];\n\t    }\n\t  }\n\t\n\t  invalidIdError(doc._id);\n\t\n\t  doc._rev = nRevNum + '-' + newRevId;\n\t\n\t  var result = {metadata : {}, data : {}};\n\t  for (var key in doc) {\n\t    /* istanbul ignore else */\n\t    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n\t      var specialKey = key[0] === '_';\n\t      if (specialKey && !reservedWords[key]) {\n\t        var error = createError(DOC_VALIDATION, key);\n\t        error.message = DOC_VALIDATION.message + ': ' + key;\n\t        throw error;\n\t      } else if (specialKey && !dataWords[key]) {\n\t        result.metadata[key.slice(1)] = doc[key];\n\t      } else {\n\t        result.data[key] = doc[key];\n\t      }\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar thisAtob = function (str) {\n\t  return atob(str);\n\t};\n\t\n\tvar thisBtoa = function (str) {\n\t  return btoa(str);\n\t};\n\t\n\t// Abstracts constructing a Blob object, so it also works in older\n\t// browsers that don't support the native Blob constructor (e.g.\n\t// old QtWebKit versions, Android < 4.4).\n\tfunction createBlob(parts, properties) {\n\t  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n\t  parts = parts || [];\n\t  properties = properties || {};\n\t  try {\n\t    return new Blob(parts, properties);\n\t  } catch (e) {\n\t    if (e.name !== \"TypeError\") {\n\t      throw e;\n\t    }\n\t    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n\t                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n\t                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n\t                  WebKitBlobBuilder;\n\t    var builder = new Builder();\n\t    for (var i = 0; i < parts.length; i += 1) {\n\t      builder.append(parts[i]);\n\t    }\n\t    return builder.getBlob(properties.type);\n\t  }\n\t}\n\t\n\t// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n\t// encode-decode-image-with-base64-breaks-image (2013-04-21)\n\tfunction binaryStringToArrayBuffer(bin) {\n\t  var length = bin.length;\n\t  var buf = new ArrayBuffer(length);\n\t  var arr = new Uint8Array(buf);\n\t  for (var i = 0; i < length; i++) {\n\t    arr[i] = bin.charCodeAt(i);\n\t  }\n\t  return buf;\n\t}\n\t\n\tfunction binStringToBluffer(binString, type) {\n\t  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n\t}\n\t\n\tfunction b64ToBluffer(b64, type) {\n\t  return binStringToBluffer(thisAtob(b64), type);\n\t}\n\t\n\t//Can't find original post, but this is close\n\t//http://stackoverflow.com/questions/6965107/ (continues on next line)\n\t//converting-between-strings-and-arraybuffers\n\tfunction arrayBufferToBinaryString(buffer) {\n\t  var binary = '';\n\t  var bytes = new Uint8Array(buffer);\n\t  var length = bytes.byteLength;\n\t  for (var i = 0; i < length; i++) {\n\t    binary += String.fromCharCode(bytes[i]);\n\t  }\n\t  return binary;\n\t}\n\t\n\t// shim for browsers that don't support it\n\tfunction readAsBinaryString(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(arrayBufferToBinaryString(\n\t      new FileReaderSync().readAsArrayBuffer(blob)));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || '';\n\t    if (hasBinaryString) {\n\t      return callback(result);\n\t    }\n\t    callback(arrayBufferToBinaryString(result));\n\t  };\n\t  if (hasBinaryString) {\n\t    reader.readAsBinaryString(blob);\n\t  } else {\n\t    reader.readAsArrayBuffer(blob);\n\t  }\n\t}\n\t\n\tfunction blobToBinaryString(blobOrBuffer, callback) {\n\t  readAsBinaryString(blobOrBuffer, function (bin) {\n\t    callback(bin);\n\t  });\n\t}\n\t\n\tfunction blobToBase64(blobOrBuffer, callback) {\n\t  blobToBinaryString(blobOrBuffer, function (base64) {\n\t    callback(thisBtoa(base64));\n\t  });\n\t}\n\t\n\t// simplified API. universal browser support is assumed\n\tfunction readAsArrayBuffer(blob, callback) {\n\t  if (typeof FileReader === 'undefined') {\n\t    // fix for Firefox in a web worker:\n\t    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n\t    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n\t  }\n\t\n\t  var reader = new FileReader();\n\t  reader.onloadend = function (e) {\n\t    var result = e.target.result || new ArrayBuffer(0);\n\t    callback(result);\n\t  };\n\t  reader.readAsArrayBuffer(blob);\n\t}\n\t\n\t// this is not used in the browser\n\t\n\tvar setImmediateShim = global.setImmediate || global.setTimeout;\n\tvar MD5_CHUNK_SIZE = 32768;\n\t\n\tfunction rawToBase64(raw) {\n\t  return thisBtoa(raw);\n\t}\n\t\n\tfunction sliceBlob(blob, start, end) {\n\t  if (blob.webkitSlice) {\n\t    return blob.webkitSlice(start, end);\n\t  }\n\t  return blob.slice(start, end);\n\t}\n\t\n\tfunction appendBlob(buffer, blob, start, end, callback) {\n\t  if (start > 0 || end < blob.size) {\n\t    // only slice blob if we really need to\n\t    blob = sliceBlob(blob, start, end);\n\t  }\n\t  readAsArrayBuffer(blob, function (arrayBuffer) {\n\t    buffer.append(arrayBuffer);\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction appendString(buffer, string, start, end, callback) {\n\t  if (start > 0 || end < string.length) {\n\t    // only create a substring if we really need to\n\t    string = string.substring(start, end);\n\t  }\n\t  buffer.appendBinary(string);\n\t  callback();\n\t}\n\t\n\tfunction binaryMd5(data, callback) {\n\t  var inputIsString = typeof data === 'string';\n\t  var len = inputIsString ? data.length : data.size;\n\t  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n\t  var chunks = Math.ceil(len / chunkSize);\n\t  var currentChunk = 0;\n\t  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\t\n\t  var append = inputIsString ? appendString : appendBlob;\n\t\n\t  function next() {\n\t    setImmediateShim(loadNextChunk);\n\t  }\n\t\n\t  function done() {\n\t    var raw = buffer.end(true);\n\t    var base64 = rawToBase64(raw);\n\t    callback(base64);\n\t    buffer.destroy();\n\t  }\n\t\n\t  function loadNextChunk() {\n\t    var start = currentChunk * chunkSize;\n\t    var end = start + chunkSize;\n\t    currentChunk++;\n\t    if (currentChunk < chunks) {\n\t      append(buffer, data, start, end, next);\n\t    } else {\n\t      append(buffer, data, start, end, done);\n\t    }\n\t  }\n\t  loadNextChunk();\n\t}\n\t\n\tfunction stringMd5(string) {\n\t  return Md5.hash(string);\n\t}\n\t\n\tfunction parseBase64(data) {\n\t  try {\n\t    return thisAtob(data);\n\t  } catch (e) {\n\t    var err = createError(BAD_ARG,\n\t      'Attachment is not a valid base64 string');\n\t    return {error: err};\n\t  }\n\t}\n\t\n\tfunction preprocessString(att, blobType, callback) {\n\t  var asBinary = parseBase64(att.data);\n\t  if (asBinary.error) {\n\t    return callback(asBinary.error);\n\t  }\n\t\n\t  att.length = asBinary.length;\n\t  if (blobType === 'blob') {\n\t    att.data = binStringToBluffer(asBinary, att.content_type);\n\t  } else if (blobType === 'base64') {\n\t    att.data = thisBtoa(asBinary);\n\t  } else { // binary\n\t    att.data = asBinary;\n\t  }\n\t  binaryMd5(asBinary, function (result) {\n\t    att.digest = 'md5-' + result;\n\t    callback();\n\t  });\n\t}\n\t\n\tfunction preprocessBlob(att, blobType, callback) {\n\t  binaryMd5(att.data, function (md5) {\n\t    att.digest = 'md5-' + md5;\n\t    // size is for blobs (browser), length is for buffers (node)\n\t    att.length = att.data.size || att.data.length || 0;\n\t    if (blobType === 'binary') {\n\t      blobToBinaryString(att.data, function (binString) {\n\t        att.data = binString;\n\t        callback();\n\t      });\n\t    } else if (blobType === 'base64') {\n\t      blobToBase64(att.data, function (b64) {\n\t        att.data = b64;\n\t        callback();\n\t      });\n\t    } else {\n\t      callback();\n\t    }\n\t  });\n\t}\n\t\n\tfunction preprocessAttachment(att, blobType, callback) {\n\t  if (att.stub) {\n\t    return callback();\n\t  }\n\t  if (typeof att.data === 'string') { // input is a base64 string\n\t    preprocessString(att, blobType, callback);\n\t  } else { // input is a blob\n\t    preprocessBlob(att, blobType, callback);\n\t  }\n\t}\n\t\n\tfunction preprocessAttachments(docInfos, blobType, callback) {\n\t\n\t  if (!docInfos.length) {\n\t    return callback();\n\t  }\n\t\n\t  var docv = 0;\n\t  var overallErr;\n\t\n\t  docInfos.forEach(function (docInfo) {\n\t    var attachments = docInfo.data && docInfo.data._attachments ?\n\t      Object.keys(docInfo.data._attachments) : [];\n\t    var recv = 0;\n\t\n\t    if (!attachments.length) {\n\t      return done();\n\t    }\n\t\n\t    function processedAttachment(err) {\n\t      overallErr = err;\n\t      recv++;\n\t      if (recv === attachments.length) {\n\t        done();\n\t      }\n\t    }\n\t\n\t    for (var key in docInfo.data._attachments) {\n\t      if (docInfo.data._attachments.hasOwnProperty(key)) {\n\t        preprocessAttachment(docInfo.data._attachments[key],\n\t          blobType, processedAttachment);\n\t      }\n\t    }\n\t  });\n\t\n\t  function done() {\n\t    docv++;\n\t    if (docInfos.length === docv) {\n\t      if (overallErr) {\n\t        callback(overallErr);\n\t      } else {\n\t        callback();\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tfunction updateDoc(revLimit, prev, docInfo, results,\n\t                   i, cb, writeDoc, newEdits) {\n\t\n\t  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n\t    results[i] = docInfo;\n\t    return cb();\n\t  }\n\t\n\t  // sometimes this is pre-calculated. historically not always\n\t  var previousWinningRev = prev.winningRev || winningRev(prev);\n\t  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n\t    isDeleted(prev, previousWinningRev);\n\t  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n\t    isDeleted(docInfo.metadata);\n\t  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\t\n\t  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n\t    var newDoc = docInfo.data;\n\t    newDoc._rev = previousWinningRev;\n\t    newDoc._id = docInfo.metadata.id;\n\t    docInfo = parseDoc(newDoc, newEdits);\n\t  }\n\t\n\t  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\t\n\t  var inConflict = newEdits && ((\n\t    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n\t    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n\t    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\t\n\t  if (inConflict) {\n\t    var err = createError(REV_CONFLICT);\n\t    results[i] = err;\n\t    return cb();\n\t  }\n\t\n\t  var newRev = docInfo.metadata.rev;\n\t  docInfo.metadata.rev_tree = merged.tree;\n\t  docInfo.stemmedRevs = merged.stemmedRevs || [];\n\t  /* istanbul ignore else */\n\t  if (prev.rev_map) {\n\t    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n\t  }\n\t\n\t  // recalculate\n\t  var winningRev$$1 = winningRev(docInfo.metadata);\n\t  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\t\n\t  // calculate the total number of documents that were added/removed,\n\t  // from the perspective of total_rows/doc_count\n\t  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n\t    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\t\n\t  var newRevIsDeleted;\n\t  if (newRev === winningRev$$1) {\n\t    // if the new rev is the same as the winning rev, we can reuse that value\n\t    newRevIsDeleted = winningRevIsDeleted;\n\t  } else {\n\t    // if they're not the same, then we need to recalculate\n\t    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n\t  }\n\t\n\t  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t    true, delta, i, cb);\n\t}\n\t\n\tfunction rootIsMissing(docInfo) {\n\t  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n\t}\n\t\n\tfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n\t                     writeDoc, opts, overallCallback) {\n\t\n\t  // Default to 1000 locally\n\t  revLimit = revLimit || 1000;\n\t\n\t  function insertDoc(docInfo, resultsIdx, callback) {\n\t    // Cant insert new deleted documents\n\t    var winningRev$$1 = winningRev(docInfo.metadata);\n\t    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n\t    if ('was_delete' in opts && deleted) {\n\t      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n\t      return callback();\n\t    }\n\t\n\t    // 4712 - detect whether a new document was inserted with a _rev\n\t    var inConflict = newEdits && rootIsMissing(docInfo);\n\t\n\t    if (inConflict) {\n\t      var err = createError(REV_CONFLICT);\n\t      results[resultsIdx] = err;\n\t      return callback();\n\t    }\n\t\n\t    var delta = deleted ? 0 : 1;\n\t\n\t    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n\t      delta, resultsIdx, callback);\n\t  }\n\t\n\t  var newEdits = opts.new_edits;\n\t  var idsToDocs = new ExportedMap();\n\t\n\t  var docsDone = 0;\n\t  var docsToDo = docInfos.length;\n\t\n\t  function checkAllDocsDone() {\n\t    if (++docsDone === docsToDo && overallCallback) {\n\t      overallCallback();\n\t    }\n\t  }\n\t\n\t  docInfos.forEach(function (currentDoc, resultsIdx) {\n\t\n\t    if (currentDoc._id && isLocalId(currentDoc._id)) {\n\t      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n\t      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n\t        results[resultsIdx] = err || res;\n\t        checkAllDocsDone();\n\t      });\n\t      return;\n\t    }\n\t\n\t    var id = currentDoc.metadata.id;\n\t    if (idsToDocs.has(id)) {\n\t      docsToDo--; // duplicate\n\t      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n\t    } else {\n\t      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n\t    }\n\t  });\n\t\n\t  // in the case of new_edits, the user can provide multiple docs\n\t  // with the same id. these need to be processed sequentially\n\t  idsToDocs.forEach(function (docs, id) {\n\t    var numDone = 0;\n\t\n\t    function docWritten() {\n\t      if (++numDone < docs.length) {\n\t        nextDoc();\n\t      } else {\n\t        checkAllDocsDone();\n\t      }\n\t    }\n\t    function nextDoc() {\n\t      var value = docs[numDone];\n\t      var currentDoc = value[0];\n\t      var resultsIdx = value[1];\n\t\n\t      if (fetchedDocs.has(id)) {\n\t        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n\t          resultsIdx, docWritten, writeDoc, newEdits);\n\t      } else {\n\t        // Ensure stemming applies to new writes as well\n\t        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n\t        currentDoc.metadata.rev_tree = merged.tree;\n\t        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n\t        insertDoc(currentDoc, resultsIdx, docWritten);\n\t      }\n\t    }\n\t    nextDoc();\n\t  });\n\t}\n\t\n\t// IndexedDB requires a versioned database structure, so we use the\n\t// version here to manage migrations.\n\tvar ADAPTER_VERSION = 5;\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\t// Keyed by document id\n\tvar DOC_STORE = 'document-store';\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE = 'by-sequence';\n\t// Where we store attachments\n\tvar ATTACH_STORE = 'attach-store';\n\t// Where we store many-to-many relations\n\t// between attachment digests and seqs\n\tvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\t\n\t// Where we store database-wide meta data in a single record\n\t// keyed by id: META_STORE\n\tvar META_STORE = 'meta-store';\n\t// Where we store local documents\n\tvar LOCAL_STORE = 'local-store';\n\t// Where we detect blob support\n\tvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\t\n\tfunction safeJsonParse(str) {\n\t  // This try/catch guards against stack overflow errors.\n\t  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n\t  // cannot overflow.\n\t  try {\n\t    return JSON.parse(str);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.parse(str);\n\t  }\n\t}\n\t\n\tfunction safeJsonStringify(json) {\n\t  try {\n\t    return JSON.stringify(json);\n\t  } catch (e) {\n\t    /* istanbul ignore next */\n\t    return vuvuzela.stringify(json);\n\t  }\n\t}\n\t\n\tfunction idbError(callback) {\n\t  return function (evt) {\n\t    var message = 'unknown_error';\n\t    if (evt.target && evt.target.error) {\n\t      message = evt.target.error.name || evt.target.error.message;\n\t    }\n\t    callback(createError(IDB_ERROR, message, evt.type));\n\t  };\n\t}\n\t\n\t// Unfortunately, the metadata has to be stringified\n\t// when it is put into the database, because otherwise\n\t// IndexedDB can throw errors for deeply-nested objects.\n\t// Originally we just used JSON.parse/JSON.stringify; now\n\t// we use this custom vuvuzela library that avoids recursion.\n\t// If we could do it all over again, we'd probably use a\n\t// format for the revision trees other than JSON.\n\tfunction encodeMetadata(metadata, winningRev, deleted) {\n\t  return {\n\t    data: safeJsonStringify(metadata),\n\t    winningRev: winningRev,\n\t    deletedOrLocal: deleted ? '1' : '0',\n\t    seq: metadata.seq, // highest seq for this doc\n\t    id: metadata.id\n\t  };\n\t}\n\t\n\tfunction decodeMetadata(storedObject) {\n\t  if (!storedObject) {\n\t    return null;\n\t  }\n\t  var metadata = safeJsonParse(storedObject.data);\n\t  metadata.winningRev = storedObject.winningRev;\n\t  metadata.deleted = storedObject.deletedOrLocal === '1';\n\t  metadata.seq = storedObject.seq;\n\t  return metadata;\n\t}\n\t\n\t// read the doc back out from the database. we don't store the\n\t// _id or _rev because we already have _doc_id_rev.\n\tfunction decodeDoc(doc) {\n\t  if (!doc) {\n\t    return doc;\n\t  }\n\t  var idx = doc._doc_id_rev.lastIndexOf(':');\n\t  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n\t  doc._rev = doc._doc_id_rev.substring(idx + 1);\n\t  delete doc._doc_id_rev;\n\t  return doc;\n\t}\n\t\n\t// Read a blob from the database, encoding as necessary\n\t// and translating from base64 if the IDB doesn't support\n\t// native Blobs\n\tfunction readBlobData(body, type, asBlob, callback) {\n\t  if (asBlob) {\n\t    if (!body) {\n\t      callback(createBlob([''], {type: type}));\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      callback(body);\n\t    } else { // no blob support\n\t      callback(b64ToBluffer(body, type));\n\t    }\n\t  } else { // as base64 string\n\t    if (!body) {\n\t      callback('');\n\t    } else if (typeof body !== 'string') { // we have blob support\n\t      readAsBinaryString(body, function (binary) {\n\t        callback(thisBtoa(binary));\n\t      });\n\t    } else { // no blob support\n\t      callback(body);\n\t    }\n\t  }\n\t}\n\t\n\tfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var digest = attObj.digest;\n\t    var req = txn.objectStore(ATTACH_STORE).get(digest);\n\t    req.onsuccess = function (e) {\n\t      attObj.body = e.target.result.body;\n\t      checkDone();\n\t    };\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\t// IDB-specific postprocessing necessary because\n\t// we don't know whether we stored a true Blob or\n\t// a base64-encoded string, and if it's a Blob it\n\t// needs to be read outside of the transaction context\n\tfunction postProcessAttachments(results, asBlob) {\n\t  return PouchPromise.all(results.map(function (row) {\n\t    if (row.doc && row.doc._attachments) {\n\t      var attNames = Object.keys(row.doc._attachments);\n\t      return PouchPromise.all(attNames.map(function (att) {\n\t        var attObj = row.doc._attachments[att];\n\t        if (!('body' in attObj)) { // already processed\n\t          return;\n\t        }\n\t        var body = attObj.body;\n\t        var type = attObj.content_type;\n\t        return new PouchPromise(function (resolve) {\n\t          readBlobData(body, type, asBlob, function (data) {\n\t            row.doc._attachments[att] = $inject_Object_assign(\n\t              pick(attObj, ['digest', 'content_type']),\n\t              {data: data}\n\t            );\n\t            resolve();\n\t          });\n\t        });\n\t      }));\n\t    }\n\t  }));\n\t}\n\t\n\tfunction compactRevs(revs, docId, txn) {\n\t\n\t  var possiblyOrphanedDigests = [];\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var attStore = txn.objectStore(ATTACH_STORE);\n\t  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t  var count = revs.length;\n\t\n\t  function checkDone() {\n\t    count--;\n\t    if (!count) { // done processing all revs\n\t      deleteOrphanedAttachments();\n\t    }\n\t  }\n\t\n\t  function deleteOrphanedAttachments() {\n\t    if (!possiblyOrphanedDigests.length) {\n\t      return;\n\t    }\n\t    possiblyOrphanedDigests.forEach(function (digest) {\n\t      var countReq = attAndSeqStore.index('digestSeq').count(\n\t        IDBKeyRange.bound(\n\t          digest + '::', digest + '::\\uffff', false, false));\n\t      countReq.onsuccess = function (e) {\n\t        var count = e.target.result;\n\t        if (!count) {\n\t          // orphaned\n\t          attStore.delete(digest);\n\t        }\n\t      };\n\t    });\n\t  }\n\t\n\t  revs.forEach(function (rev$$1) {\n\t    var index = seqStore.index('_doc_id_rev');\n\t    var key = docId + \"::\" + rev$$1;\n\t    index.getKey(key).onsuccess = function (e) {\n\t      var seq = e.target.result;\n\t      if (typeof seq !== 'number') {\n\t        return checkDone();\n\t      }\n\t      seqStore.delete(seq);\n\t\n\t      var cursor = attAndSeqStore.index('seq')\n\t        .openCursor(IDBKeyRange.only(seq));\n\t\n\t      cursor.onsuccess = function (event) {\n\t        var cursor = event.target.result;\n\t        if (cursor) {\n\t          var digest = cursor.value.digestSeq.split('::')[0];\n\t          possiblyOrphanedDigests.push(digest);\n\t          attAndSeqStore.delete(cursor.primaryKey);\n\t          cursor.continue();\n\t        } else { // done\n\t          checkDone();\n\t        }\n\t      };\n\t    };\n\t  });\n\t}\n\t\n\tfunction openTransactionSafely(idb, stores, mode) {\n\t  try {\n\t    return {\n\t      txn: idb.transaction(stores, mode)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tvar changesHandler$$1 = new Changes();\n\t\n\tfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n\t  var docInfos = req.docs;\n\t  var txn;\n\t  var docStore;\n\t  var bySeqStore;\n\t  var attachStore;\n\t  var attachAndSeqStore;\n\t  var metaStore;\n\t  var docInfoError;\n\t  var metaDoc;\n\t\n\t  for (var i = 0, len = docInfos.length; i < len; i++) {\n\t    var doc = docInfos[i];\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      continue;\n\t    }\n\t    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n\t    if (doc.error && !docInfoError) {\n\t      docInfoError = doc;\n\t    }\n\t  }\n\t\n\t  if (docInfoError) {\n\t    return callback(docInfoError);\n\t  }\n\t\n\t  var allDocsProcessed = false;\n\t  var docCountDelta = 0;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new ExportedMap();\n\t  var preconditionErrored = false;\n\t  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\t\n\t  preprocessAttachments(docInfos, blobType, function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    startTransaction();\n\t  });\n\t\n\t  function startTransaction() {\n\t\n\t    var stores = [\n\t      DOC_STORE, BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n\t      META_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    txn = txnResult.txn;\n\t    txn.onabort = idbError(callback);\n\t    txn.ontimeout = idbError(callback);\n\t    txn.oncomplete = complete;\n\t    docStore = txn.objectStore(DOC_STORE);\n\t    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    attachStore = txn.objectStore(ATTACH_STORE);\n\t    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t    metaStore = txn.objectStore(META_STORE);\n\t\n\t    metaStore.get(META_STORE).onsuccess = function (e) {\n\t      metaDoc = e.target.result;\n\t      updateDocCountIfReady();\n\t    };\n\t\n\t    verifyAttachments(function (err) {\n\t      if (err) {\n\t        preconditionErrored = true;\n\t        return callback(err);\n\t      }\n\t      fetchExistingDocs();\n\t    });\n\t  }\n\t\n\t  function onAllDocsProcessed() {\n\t    allDocsProcessed = true;\n\t    updateDocCountIfReady();\n\t  }\n\t\n\t  function idbProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n\t                txn, results, writeDoc, opts, onAllDocsProcessed);\n\t  }\n\t\n\t  function updateDocCountIfReady() {\n\t    if (!metaDoc || !allDocsProcessed) {\n\t      return;\n\t    }\n\t    // caching the docCount saves a lot of time in allDocs() and\n\t    // info(), which is why we go to all the trouble of doing this\n\t    metaDoc.docCount += docCountDelta;\n\t    metaStore.put(metaDoc);\n\t  }\n\t\n\t  function fetchExistingDocs() {\n\t\n\t    if (!docInfos.length) {\n\t      return;\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        idbProcessDocs();\n\t      }\n\t    }\n\t\n\t    function readMetadata(event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t\n\t      if (metadata) {\n\t        fetchedDocs.set(metadata.id, metadata);\n\t      }\n\t      checkDone();\n\t    }\n\t\n\t    for (var i = 0, len = docInfos.length; i < len; i++) {\n\t      var docInfo = docInfos[i];\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        checkDone(); // skip local docs\n\t        continue;\n\t      }\n\t      var req = docStore.get(docInfo.metadata.id);\n\t      req.onsuccess = readMetadata;\n\t    }\n\t  }\n\t\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return;\n\t    }\n\t\n\t    changesHandler$$1.notify(api._meta.name);\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t\n\t    var req = attachStore.get(digest);\n\t    req.onsuccess = function (e) {\n\t      if (!e.target.result) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        err.status = 412;\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t\n\t\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    docInfo.metadata.winningRev = winningRev$$1;\n\t    docInfo.metadata.deleted = winningRevIsDeleted;\n\t\n\t    var doc = docInfo.data;\n\t    doc._id = docInfo.metadata.id;\n\t    doc._rev = docInfo.metadata.rev;\n\t\n\t    if (newRevIsDeleted) {\n\t      doc._deleted = true;\n\t    }\n\t\n\t    var hasAttachments = doc._attachments &&\n\t      Object.keys(doc._attachments).length;\n\t    if (hasAttachments) {\n\t      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n\t        isUpdate, resultsIdx, callback);\n\t    }\n\t\n\t    docCountDelta += delta;\n\t    updateDocCountIfReady();\n\t\n\t    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t      isUpdate, resultsIdx, callback);\n\t  }\n\t\n\t  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t                     isUpdate, resultsIdx, callback) {\n\t\n\t    var doc = docInfo.data;\n\t    var metadata = docInfo.metadata;\n\t\n\t    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n\t    delete doc._id;\n\t    delete doc._rev;\n\t\n\t    function afterPutDoc(e) {\n\t      var revsToDelete = docInfo.stemmedRevs || [];\n\t\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n\t      }\n\t\n\t      if (revsToDelete && revsToDelete.length) {\n\t        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n\t      }\n\t\n\t      metadata.seq = e.target.result;\n\t      // Current _rev is calculated from _rev_tree on read\n\t      // delete metadata.rev;\n\t      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n\t        winningRevIsDeleted);\n\t      var metaDataReq = docStore.put(metadataToStore);\n\t      metaDataReq.onsuccess = afterPutMetadata;\n\t    }\n\t\n\t    function afterPutDocError(e) {\n\t      // ConstraintError, need to update, not put (see #1638 for details)\n\t      e.preventDefault(); // avoid transaction abort\n\t      e.stopPropagation(); // avoid transaction onerror\n\t      var index = bySeqStore.index('_doc_id_rev');\n\t      var getKeyReq = index.getKey(doc._doc_id_rev);\n\t      getKeyReq.onsuccess = function (e) {\n\t        var putReq = bySeqStore.put(doc, e.target.result);\n\t        putReq.onsuccess = afterPutDoc;\n\t      };\n\t    }\n\t\n\t    function afterPutMetadata() {\n\t      results[resultsIdx] = {\n\t        ok: true,\n\t        id: metadata.id,\n\t        rev: metadata.rev\n\t      };\n\t      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n\t      insertAttachmentMappings(docInfo, metadata.seq, callback);\n\t    }\n\t\n\t    var putReq = bySeqStore.put(doc);\n\t\n\t    putReq.onsuccess = afterPutDoc;\n\t    putReq.onerror = afterPutDocError;\n\t  }\n\t\n\t  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n\t                            isUpdate, resultsIdx, callback) {\n\t\n\t\n\t    var doc = docInfo.data;\n\t\n\t    var numDone = 0;\n\t    var attachments = Object.keys(doc._attachments);\n\t\n\t    function collectResults() {\n\t      if (numDone === attachments.length) {\n\t        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n\t          isUpdate, resultsIdx, callback);\n\t      }\n\t    }\n\t\n\t    function attachmentSaved() {\n\t      numDone++;\n\t      collectResults();\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev$$1, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        numDone++;\n\t        collectResults();\n\t      }\n\t    });\n\t  }\n\t\n\t  // map seqs to attachment digests, which\n\t  // we will need later during compaction\n\t  function insertAttachmentMappings(docInfo, seq, callback) {\n\t\n\t    var attsAdded = 0;\n\t    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\t\n\t    if (!attsToAdd.length) {\n\t      return callback();\n\t    }\n\t\n\t    function checkDone() {\n\t      if (++attsAdded === attsToAdd.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    function add(att) {\n\t      var digest = docInfo.data._attachments[att].digest;\n\t      var req = attachAndSeqStore.put({\n\t        seq: seq,\n\t        digestSeq: digest + '::' + seq\n\t      });\n\t\n\t      req.onsuccess = checkDone;\n\t      req.onerror = function (e) {\n\t        // this callback is for a constaint error, which we ignore\n\t        // because this docid/rev has already been associated with\n\t        // the digest (e.g. when new_edits == false)\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t        checkDone();\n\t      };\n\t    }\n\t    for (var i = 0; i < attsToAdd.length; i++) {\n\t      add(attsToAdd[i]); // do in parallel\n\t    }\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t\n\t\n\t    var getKeyReq = attachStore.count(digest);\n\t    getKeyReq.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (count) {\n\t        return callback(); // already exists\n\t      }\n\t      var newAtt = {\n\t        digest: digest,\n\t        body: data\n\t      };\n\t      var putReq = attachStore.put(newAtt);\n\t      putReq.onsuccess = callback;\n\t    };\n\t  }\n\t}\n\t\n\t// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n\t// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n\t// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n\t// we're not processing each document one-at-a-time.\n\tfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\t\n\t  // Bail out of getAll()/getAllKeys() in the following cases:\n\t  // 1) either method is unsupported - we need both\n\t  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n\t  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n\t  //    perhaps they are filtering on a per-doc basis)\n\t  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\t\n\t  var useGetAll = typeof objectStore.getAll === 'function' &&\n\t    typeof objectStore.getAllKeys === 'function' &&\n\t    batchSize > 1 && !descending;\n\t\n\t  var keysBatch;\n\t  var valuesBatch;\n\t  var pseudoCursor;\n\t\n\t  function onGetAll(e) {\n\t    valuesBatch = e.target.result;\n\t    if (keysBatch) {\n\t      onBatch(keysBatch, valuesBatch, pseudoCursor);\n\t    }\n\t  }\n\t\n\t  function onGetAllKeys(e) {\n\t    keysBatch = e.target.result;\n\t    if (valuesBatch) {\n\t      onBatch(keysBatch, valuesBatch, pseudoCursor);\n\t    }\n\t  }\n\t\n\t  function continuePseudoCursor() {\n\t    if (!keysBatch.length) { // no more results\n\t      return onBatch();\n\t    }\n\t    // fetch next batch, exclusive start\n\t    var lastKey = keysBatch[keysBatch.length - 1];\n\t    var newKeyRange;\n\t    if (keyRange && keyRange.upper) {\n\t      try {\n\t        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n\t          true, keyRange.upperOpen);\n\t      } catch (e) {\n\t        if (e.name === \"DataError\" && e.code === 0) {\n\t          return onBatch(); // we're done, startkey and endkey are equal\n\t        }\n\t      }\n\t    } else {\n\t      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n\t    }\n\t    keyRange = newKeyRange;\n\t    keysBatch = null;\n\t    valuesBatch = null;\n\t    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n\t    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n\t  }\n\t\n\t  function onCursor(e) {\n\t    var cursor = e.target.result;\n\t    if (!cursor) { // done\n\t      return onBatch();\n\t    }\n\t    // regular IDBCursor acts like a batch where batch size is always 1\n\t    onBatch([cursor.key], [cursor.value], cursor);\n\t  }\n\t\n\t  if (useGetAll) {\n\t    pseudoCursor = {\"continue\": continuePseudoCursor};\n\t    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n\t    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n\t  } else if (descending) {\n\t    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n\t  } else {\n\t    objectStore.openCursor(keyRange).onsuccess = onCursor;\n\t  }\n\t}\n\t\n\t// simple shim for objectStore.getAll(), falling back to IDBCursor\n\tfunction getAll(objectStore, keyRange, onSuccess) {\n\t  if (typeof objectStore.getAll === 'function') {\n\t    // use native getAll\n\t    objectStore.getAll(keyRange).onsuccess = onSuccess;\n\t    return;\n\t  }\n\t  // fall back to cursors\n\t  var values = [];\n\t\n\t  function onCursor(e) {\n\t    var cursor = e.target.result;\n\t    if (cursor) {\n\t      values.push(cursor.value);\n\t      cursor.continue();\n\t    } else {\n\t      onSuccess({\n\t        target: {\n\t          result: values\n\t        }\n\t      });\n\t    }\n\t  }\n\t\n\t  objectStore.openCursor(keyRange).onsuccess = onCursor;\n\t}\n\t\n\tfunction allDocsKeys(keys, docStore, onBatch) {\n\t  // It's not guaranted to be returned in right order  \n\t  var valuesBatch = [];\n\t  var count = 0;\n\t  keys.forEach(function (key, index) {\n\t    docStore.get(key).onsuccess = function (event) {\n\t      if (event.target.result) {\n\t        valuesBatch[index] = event.target.result;\n\t      } else {\n\t        valuesBatch[index] = {key: key, error: 'not_found'};\n\t      }\n\t      count++;\n\t      if (count === keys.length) {\n\t        onBatch(keys, valuesBatch, {});\n\t      }\n\t    };\n\t  });\n\t}\n\t\n\tfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n\t  try {\n\t    if (start && end) {\n\t      if (descending) {\n\t        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n\t      } else {\n\t        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n\t      }\n\t    } else if (start) {\n\t      if (descending) {\n\t        return IDBKeyRange.upperBound(start);\n\t      } else {\n\t        return IDBKeyRange.lowerBound(start);\n\t      }\n\t    } else if (end) {\n\t      if (descending) {\n\t        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n\t      } else {\n\t        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n\t      }\n\t    } else if (key) {\n\t      return IDBKeyRange.only(key);\n\t    }\n\t  } catch (e) {\n\t    return {error: e};\n\t  }\n\t  return null;\n\t}\n\t\n\tfunction idbAllDocs(opts, idb, callback) {\n\t  var start = 'startkey' in opts ? opts.startkey : false;\n\t  var end = 'endkey' in opts ? opts.endkey : false;\n\t  var key = 'key' in opts ? opts.key : false;\n\t  var keys = 'keys' in opts ? opts.keys : false; \n\t  var skip = opts.skip || 0;\n\t  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n\t  var inclusiveEnd = opts.inclusive_end !== false;\n\t\n\t  var keyRange; \n\t  var keyRangeError;\n\t  if (!keys) {\n\t    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n\t    keyRangeError = keyRange && keyRange.error;\n\t    if (keyRangeError && \n\t      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n\t      // DataError with error code 0 indicates start is less than end, so\n\t      // can just do an empty query. Else need to throw\n\t      return callback(createError(IDB_ERROR,\n\t        keyRangeError.name, keyRangeError.message));\n\t    }\n\t  }\n\t\n\t  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\t\n\t  if (opts.attachments) {\n\t    stores.push(ATTACH_STORE);\n\t  }\n\t  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n\t  if (txnResult.error) {\n\t    return callback(txnResult.error);\n\t  }\n\t  var txn = txnResult.txn;\n\t  txn.oncomplete = onTxnComplete;\n\t  txn.onabort = idbError(callback);\n\t  var docStore = txn.objectStore(DOC_STORE);\n\t  var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t  var metaStore = txn.objectStore(META_STORE);\n\t  var docIdRevIndex = seqStore.index('_doc_id_rev');\n\t  var results = [];\n\t  var docCount;\n\t  var updateSeq;\n\t\n\t  metaStore.get(META_STORE).onsuccess = function (e) {\n\t    docCount = e.target.result.docCount;\n\t  };\n\t\n\t  /* istanbul ignore if */\n\t  if (opts.update_seq) {\n\t    getMaxUpdateSeq(seqStore, function (e) { \n\t      if (e.target.result && e.target.result.length > 0) {\n\t        updateSeq = e.target.result[0];\n\t      }\n\t    });\n\t  }\n\t\n\t  function getMaxUpdateSeq(objectStore, onSuccess) {\n\t    function onCursor(e) {\n\t      var cursor = e.target.result;\n\t      var maxKey = undefined;\n\t      if (cursor && cursor.key) {\n\t        maxKey = cursor.key;\n\t      } \n\t      return onSuccess({\n\t        target: {\n\t          result: [maxKey]\n\t        }\n\t      });\n\t    }\n\t    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n\t  }\n\t\n\t  // if the user specifies include_docs=true, then we don't\n\t  // want to block the main cursor while we're fetching the doc\n\t  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n\t    var key = metadata.id + \"::\" + winningRev$$1;\n\t    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n\t      row.doc = decodeDoc(e.target.result);\n\t      if (opts.conflicts) {\n\t        var conflicts = collectConflicts(metadata);\n\t        if (conflicts.length) {\n\t          row.doc._conflicts = conflicts;\n\t        }\n\t      }\n\t      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n\t    };\n\t  }\n\t\n\t  function allDocsInner(winningRev$$1, metadata) {\n\t    var row = {\n\t      id: metadata.id,\n\t      key: metadata.id,\n\t      value: {\n\t        rev: winningRev$$1\n\t      }\n\t    };\n\t    var deleted = metadata.deleted;\n\t    if (deleted) {\n\t      if (keys) {\n\t        results.push(row);\n\t        // deleted docs are okay with \"keys\" requests\n\t        row.value.deleted = true;\n\t        row.doc = null;\n\t      }\n\t    } else if (skip-- <= 0) {\n\t      results.push(row);\n\t      if (opts.include_docs) {\n\t        fetchDocAsynchronously(metadata, row, winningRev$$1);\n\t      }\n\t    }\n\t  }\n\t\n\t  function processBatch(batchValues) {\n\t    for (var i = 0, len = batchValues.length; i < len; i++) {\n\t      if (results.length === limit) {\n\t        break;\n\t      }\n\t      var batchValue = batchValues[i];\n\t      if (batchValue.error && keys) {\n\t        // key was not found with \"keys\" requests\n\t        results.push(batchValue);\n\t        continue;\n\t      }\n\t      var metadata = decodeMetadata(batchValue);\n\t      var winningRev$$1 = metadata.winningRev;\n\t      allDocsInner(winningRev$$1, metadata);\n\t    }\n\t  }\n\t\n\t  function onBatch(batchKeys, batchValues, cursor) {\n\t    if (!cursor) {\n\t      return;\n\t    }\n\t    processBatch(batchValues);\n\t    if (results.length < limit) {\n\t      cursor.continue();\n\t    }\n\t  }\n\t\n\t  function onGetAll(e) {\n\t    var values = e.target.result;\n\t    if (opts.descending) {\n\t      values = values.reverse();\n\t    }\n\t    processBatch(values);\n\t  }\n\t\n\t  function onResultsReady() {\n\t    var returnVal = {\n\t      total_rows: docCount,\n\t      offset: opts.skip,\n\t      rows: results\n\t    };\n\t    \n\t    /* istanbul ignore if */\n\t    if (opts.update_seq && updateSeq !== undefined) {\n\t      returnVal.update_seq = updateSeq;\n\t    }\n\t    callback(null, returnVal);\n\t  }\n\t\n\t  function onTxnComplete() {\n\t    if (opts.attachments) {\n\t      postProcessAttachments(results, opts.binary).then(onResultsReady);\n\t    } else {\n\t      onResultsReady();\n\t    }\n\t  }\n\t\n\t  // don't bother doing any requests if start > end or limit === 0\n\t  if (keyRangeError || limit === 0) {\n\t    return;\n\t  }\n\t  if (keys) {\n\t    return allDocsKeys(opts.keys, docStore, onBatch);\n\t  }\n\t  if (limit === -1) { // just fetch everything\n\t    return getAll(docStore, keyRange, onGetAll);\n\t  }\n\t  // else do a cursor\n\t  // choose a batch size based on the skip, since we'll need to skip that many\n\t  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n\t}\n\t\n\t//\n\t// Blobs are not supported in all versions of IndexedDB, notably\n\t// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n\t//\n\t// Various other blob bugs exist in Chrome v37-42 (inclusive).\n\t// Detecting them is expensive and confusing to users, and Chrome 37-42\n\t// is at very low usage worldwide, so we do a hacky userAgent check instead.\n\t//\n\t// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n\t// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n\t// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n\t//\n\tfunction checkBlobSupport(txn) {\n\t  return new PouchPromise(function (resolve) {\n\t    var blob$$1 = createBlob(['']);\n\t    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\t\n\t    req.onsuccess = function () {\n\t      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n\t      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n\t      // MS Edge pretends to be Chrome 42:\n\t      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n\t      resolve(matchedEdge || !matchedChrome ||\n\t        parseInt(matchedChrome[1], 10) >= 43);\n\t    };\n\t\n\t    txn.onabort = function (e) {\n\t      // If the transaction aborts now its due to not being able to\n\t      // write to the database, likely due to the disk being full\n\t      e.preventDefault();\n\t      e.stopPropagation();\n\t      resolve(false);\n\t    };\n\t  }).catch(function () {\n\t    return false; // error, so assume unsupported\n\t  });\n\t}\n\t\n\tfunction countDocs(txn, cb) {\n\t  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n\t  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n\t    cb(e.target.result);\n\t  };\n\t}\n\t\n\t// This task queue ensures that IDB open calls are done in their own tick\n\t// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n\t// before calling the next one. This works around IE/Edge race conditions in IDB.\n\t\n\tvar running = false;\n\tvar queue = [];\n\t\n\tfunction tryCode(fun, err, res, PouchDB) {\n\t  try {\n\t    fun(err, res);\n\t  } catch (err) {\n\t    // Shouldn't happen, but in some odd cases\n\t    // IndexedDB implementations might throw a sync\n\t    // error, in which case this will at least log it.\n\t    PouchDB.emit('error', err);\n\t  }\n\t}\n\t\n\tfunction applyNext() {\n\t  if (running || !queue.length) {\n\t    return;\n\t  }\n\t  running = true;\n\t  queue.shift()();\n\t}\n\t\n\tfunction enqueueTask(action, callback, PouchDB) {\n\t  queue.push(function runAction() {\n\t    action(function runCallback(err, res) {\n\t      tryCode(callback, err, res, PouchDB);\n\t      running = false;\n\t      nextTick(function runNext() {\n\t        applyNext(PouchDB);\n\t      });\n\t    });\n\t  });\n\t  applyNext();\n\t}\n\t\n\tfunction changes(opts, api, dbName, idb) {\n\t  opts = clone(opts);\n\t\n\t  if (opts.continuous) {\n\t    var id = dbName + ':' + uuid();\n\t    changesHandler$$1.addListener(dbName, id, api, opts);\n\t    changesHandler$$1.notify(dbName);\n\t    return {\n\t      cancel: function () {\n\t        changesHandler$$1.removeListener(dbName, id);\n\t      }\n\t    };\n\t  }\n\t\n\t  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\t\n\t  opts.since = opts.since || 0;\n\t  var lastSeq = opts.since;\n\t\n\t  var limit = 'limit' in opts ? opts.limit : -1;\n\t  if (limit === 0) {\n\t    limit = 1; // per CouchDB _changes spec\n\t  }\n\t  var returnDocs;\n\t  if ('return_docs' in opts) {\n\t    returnDocs = opts.return_docs;\n\t  } else if ('returnDocs' in opts) {\n\t    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t    returnDocs = opts.returnDocs;\n\t  } else {\n\t    returnDocs = true;\n\t  }\n\t\n\t  var results = [];\n\t  var numResults = 0;\n\t  var filter = filterChange(opts);\n\t  var docIdsToMetadata = new ExportedMap();\n\t\n\t  var txn;\n\t  var bySeqStore;\n\t  var docStore;\n\t  var docIdRevIndex;\n\t\n\t  function onBatch(batchKeys, batchValues, cursor) {\n\t    if (!cursor || !batchKeys.length) { // done\n\t      return;\n\t    }\n\t\n\t    var winningDocs = new Array(batchKeys.length);\n\t    var metadatas = new Array(batchKeys.length);\n\t\n\t    function processMetadataAndWinningDoc(metadata, winningDoc) {\n\t      var change = opts.processChange(winningDoc, metadata, opts);\n\t      lastSeq = change.seq = metadata.seq;\n\t\n\t      var filtered = filter(change);\n\t      if (typeof filtered === 'object') { // anything but true/false indicates error\n\t        return opts.complete(filtered);\n\t      }\n\t\n\t      if (filtered) {\n\t        numResults++;\n\t        if (returnDocs) {\n\t          results.push(change);\n\t        }\n\t        // process the attachment immediately\n\t        // for the benefit of live listeners\n\t        if (opts.attachments && opts.include_docs) {\n\t          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n\t            postProcessAttachments([change], opts.binary).then(function () {\n\t              opts.onChange(change);\n\t            });\n\t          });\n\t        } else {\n\t          opts.onChange(change);\n\t        }\n\t      }\n\t    }\n\t\n\t    function onBatchDone() {\n\t      for (var i = 0, len = winningDocs.length; i < len; i++) {\n\t        if (numResults === limit) {\n\t          break;\n\t        }\n\t        var winningDoc = winningDocs[i];\n\t        if (!winningDoc) {\n\t          continue;\n\t        }\n\t        var metadata = metadatas[i];\n\t        processMetadataAndWinningDoc(metadata, winningDoc);\n\t      }\n\t\n\t      if (numResults !== limit) {\n\t        cursor.continue();\n\t      }\n\t    }\n\t\n\t    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n\t    // them all only once all data has been collected. This is done in parallel\n\t    // because it's faster than doing it one-at-a-time.\n\t    var numDone = 0;\n\t    batchValues.forEach(function (value, i) {\n\t      var doc = decodeDoc(value);\n\t      var seq = batchKeys[i];\n\t      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n\t        metadatas[i] = metadata;\n\t        winningDocs[i] = winningDoc;\n\t        if (++numDone === batchKeys.length) {\n\t          onBatchDone();\n\t        }\n\t      });\n\t    });\n\t  }\n\t\n\t  function onGetMetadata(doc, seq, metadata, cb) {\n\t    if (metadata.seq !== seq) {\n\t      // some other seq is later\n\t      return cb();\n\t    }\n\t\n\t    if (metadata.winningRev === doc._rev) {\n\t      // this is the winning doc\n\t      return cb(metadata, doc);\n\t    }\n\t\n\t    // fetch winning doc in separate request\n\t    var docIdRev = doc._id + '::' + metadata.winningRev;\n\t    var req = docIdRevIndex.get(docIdRev);\n\t    req.onsuccess = function (e) {\n\t      cb(metadata, decodeDoc(e.target.result));\n\t    };\n\t  }\n\t\n\t  function fetchWinningDocAndMetadata(doc, seq, cb) {\n\t    if (docIds && !docIds.has(doc._id)) {\n\t      return cb();\n\t    }\n\t\n\t    var metadata = docIdsToMetadata.get(doc._id);\n\t    if (metadata) { // cached\n\t      return onGetMetadata(doc, seq, metadata, cb);\n\t    }\n\t    // metadata not cached, have to go fetch it\n\t    docStore.get(doc._id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      docIdsToMetadata.set(doc._id, metadata);\n\t      onGetMetadata(doc, seq, metadata, cb);\n\t    };\n\t  }\n\t\n\t  function finish() {\n\t    opts.complete(null, {\n\t      results: results,\n\t      last_seq: lastSeq\n\t    });\n\t  }\n\t\n\t  function onTxnComplete() {\n\t    if (!opts.continuous && opts.attachments) {\n\t      // cannot guarantee that postProcessing was already done,\n\t      // so do it again\n\t      postProcessAttachments(results).then(finish);\n\t    } else {\n\t      finish();\n\t    }\n\t  }\n\t\n\t  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n\t  if (opts.attachments) {\n\t    objectStores.push(ATTACH_STORE);\n\t  }\n\t  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n\t  if (txnResult.error) {\n\t    return opts.complete(txnResult.error);\n\t  }\n\t  txn = txnResult.txn;\n\t  txn.onabort = idbError(opts.complete);\n\t  txn.oncomplete = onTxnComplete;\n\t\n\t  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t  docStore = txn.objectStore(DOC_STORE);\n\t  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\t\n\t  var keyRange = (opts.since && !opts.descending) ?\n\t    IDBKeyRange.lowerBound(opts.since, true) : null;\n\t\n\t  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n\t}\n\t\n\tvar cachedDBs = new ExportedMap();\n\tvar blobSupportPromise;\n\tvar openReqList = new ExportedMap();\n\t\n\tfunction IdbPouch(opts, callback) {\n\t  var api = this;\n\t\n\t  enqueueTask(function (thisCallback) {\n\t    init(api, opts, thisCallback);\n\t  }, callback, api.constructor);\n\t}\n\t\n\tfunction init(api, opts, callback) {\n\t\n\t  var dbName = opts.name;\n\t\n\t  var idb = null;\n\t  api._meta = null;\n\t\n\t  // called when creating a fresh new database\n\t  function createSchema(db) {\n\t    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n\t    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n\t    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n\t    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\t\n\t    // added in v2\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    // added in v3\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\t\n\t    // added in v4\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 2\n\t  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n\t  // store local docs in the main doc-store, but whaddyagonnado\n\t  function addDeletedOrLocalIndex(txn, callback) {\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\t\n\t    docStore.openCursor().onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var deleted = isDeleted(metadata);\n\t        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n\t        docStore.put(metadata);\n\t        cursor.continue();\n\t      } else {\n\t        callback();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 3 (part 1)\n\t  function createLocalStoreSchema(db) {\n\t    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n\t      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n\t  }\n\t\n\t  // migration to version 3 (part 2)\n\t  function migrateLocalStore(txn, cb) {\n\t    var localStore = txn.objectStore(LOCAL_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (event) {\n\t      var cursor = event.target.result;\n\t      if (cursor) {\n\t        var metadata = cursor.value;\n\t        var docId = metadata.id;\n\t        var local = isLocalId(docId);\n\t        var rev$$1 = winningRev(metadata);\n\t        if (local) {\n\t          var docIdRev = docId + \"::\" + rev$$1;\n\t          // remove all seq entries\n\t          // associated with this docId\n\t          var start = docId + \"::\";\n\t          var end = docId + \"::~\";\n\t          var index = seqStore.index('_doc_id_rev');\n\t          var range = IDBKeyRange.bound(start, end, false, false);\n\t          var seqCursor = index.openCursor(range);\n\t          seqCursor.onsuccess = function (e) {\n\t            seqCursor = e.target.result;\n\t            if (!seqCursor) {\n\t              // done\n\t              docStore.delete(cursor.primaryKey);\n\t              cursor.continue();\n\t            } else {\n\t              var data = seqCursor.value;\n\t              if (data._doc_id_rev === docIdRev) {\n\t                localStore.put(data);\n\t              }\n\t              seqStore.delete(seqCursor.primaryKey);\n\t              seqCursor.continue();\n\t            }\n\t          };\n\t        } else {\n\t          cursor.continue();\n\t        }\n\t      } else if (cb) {\n\t        cb();\n\t      }\n\t    };\n\t  }\n\t\n\t  // migration to version 4 (part 1)\n\t  function addAttachAndSeqStore(db) {\n\t    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n\t      {autoIncrement: true});\n\t    attAndSeqStore.createIndex('seq', 'seq');\n\t    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n\t  }\n\t\n\t  // migration to version 4 (part 2)\n\t  function migrateAttsAndSeqs(txn, callback) {\n\t    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var attStore = txn.objectStore(ATTACH_STORE);\n\t    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\t\n\t    // need to actually populate the table. this is the expensive part,\n\t    // so as an optimization, check first that this database even\n\t    // contains attachments\n\t    var req = attStore.count();\n\t    req.onsuccess = function (e) {\n\t      var count = e.target.result;\n\t      if (!count) {\n\t        return callback(); // done\n\t      }\n\t\n\t      seqStore.openCursor().onsuccess = function (e) {\n\t        var cursor = e.target.result;\n\t        if (!cursor) {\n\t          return callback(); // done\n\t        }\n\t        var doc = cursor.value;\n\t        var seq = cursor.primaryKey;\n\t        var atts = Object.keys(doc._attachments || {});\n\t        var digestMap = {};\n\t        for (var j = 0; j < atts.length; j++) {\n\t          var att = doc._attachments[atts[j]];\n\t          digestMap[att.digest] = true; // uniq digests, just in case\n\t        }\n\t        var digests = Object.keys(digestMap);\n\t        for (j = 0; j < digests.length; j++) {\n\t          var digest = digests[j];\n\t          attAndSeqStore.put({\n\t            seq: seq,\n\t            digestSeq: digest + '::' + seq\n\t          });\n\t        }\n\t        cursor.continue();\n\t      };\n\t    };\n\t  }\n\t\n\t  // migration to version 5\n\t  // Instead of relying on on-the-fly migration of metadata,\n\t  // this brings the doc-store to its modern form:\n\t  // - metadata.winningrev\n\t  // - metadata.seq\n\t  // - stringify the metadata when storing it\n\t  function migrateMetadata(txn) {\n\t\n\t    function decodeMetadataCompat(storedObject) {\n\t      if (!storedObject.data) {\n\t        // old format, when we didn't store it stringified\n\t        storedObject.deleted = storedObject.deletedOrLocal === '1';\n\t        return storedObject;\n\t      }\n\t      return decodeMetadata(storedObject);\n\t    }\n\t\n\t    // ensure that every metadata has a winningRev and seq,\n\t    // which was previously created on-the-fly but better to migrate\n\t    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t    var cursor = docStore.openCursor();\n\t    cursor.onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      if (!cursor) {\n\t        return; // done\n\t      }\n\t      var metadata = decodeMetadataCompat(cursor.value);\n\t\n\t      metadata.winningRev = metadata.winningRev ||\n\t        winningRev(metadata);\n\t\n\t      function fetchMetadataSeq() {\n\t        // metadata.seq was added post-3.2.0, so if it's missing,\n\t        // we need to fetch it manually\n\t        var start = metadata.id + '::';\n\t        var end = metadata.id + '::\\uffff';\n\t        var req = bySeqStore.index('_doc_id_rev').openCursor(\n\t          IDBKeyRange.bound(start, end));\n\t\n\t        var metadataSeq = 0;\n\t        req.onsuccess = function (e) {\n\t          var cursor = e.target.result;\n\t          if (!cursor) {\n\t            metadata.seq = metadataSeq;\n\t            return onGetMetadataSeq();\n\t          }\n\t          var seq = cursor.primaryKey;\n\t          if (seq > metadataSeq) {\n\t            metadataSeq = seq;\n\t          }\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      function onGetMetadataSeq() {\n\t        var metadataToStore = encodeMetadata(metadata,\n\t          metadata.winningRev, metadata.deleted);\n\t\n\t        var req = docStore.put(metadataToStore);\n\t        req.onsuccess = function () {\n\t          cursor.continue();\n\t        };\n\t      }\n\t\n\t      if (metadata.seq) {\n\t        return onGetMetadataSeq();\n\t      }\n\t\n\t      fetchMetadataSeq();\n\t    };\n\t\n\t  }\n\t\n\t  api._remote = false;\n\t  api.type = function () {\n\t    return 'idb';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, api._meta.instanceId);\n\t  });\n\t\n\t  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n\t    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n\t  };\n\t\n\t  // First we look up the metadata in the ids database, then we fetch the\n\t  // current revision(s) from the by sequence store\n\t  api._get = function idb_get(id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var err;\n\t    var txn = opts.ctx;\n\t    if (!txn) {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t\n\t    function finish() {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n\t    }\n\t\n\t    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n\t      metadata = decodeMetadata(e.target.result);\n\t      // we can determine the result here if:\n\t      // 1. there is no such document\n\t      // 2. the document is deleted and we don't ask about specific rev\n\t      // When we ask with opts.rev we expect the answer to be either\n\t      // doc (possibly with _deleted=true) or missing error\n\t      if (!metadata) {\n\t        err = createError(MISSING_DOC, 'missing');\n\t        return finish();\n\t      }\n\t\n\t      var rev$$1;\n\t      if (!opts.rev) {\n\t        rev$$1 = metadata.winningRev;\n\t        var deleted = isDeleted(metadata);\n\t        if (deleted) {\n\t          err = createError(MISSING_DOC, \"deleted\");\n\t          return finish();\n\t        }\n\t      } else {\n\t        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n\t      }\n\t\n\t      var objectStore = txn.objectStore(BY_SEQ_STORE);\n\t      var key = metadata.id + '::' + rev$$1;\n\t\n\t      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n\t        doc = e.target.result;\n\t        if (doc) {\n\t          doc = decodeDoc(doc);\n\t        }\n\t        if (!doc) {\n\t          err = createError(MISSING_DOC, 'missing');\n\t          return finish();\n\t        }\n\t        finish();\n\t      };\n\t    };\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var txn;\n\t    if (opts.ctx) {\n\t      txn = opts.ctx;\n\t    } else {\n\t      var txnResult = openTransactionSafely(idb,\n\t        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      txn = txnResult.txn;\n\t    }\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t\n\t    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n\t      var body = e.target.result.body;\n\t      readBlobData(body, type, opts.binary, function (blobData) {\n\t        callback(null, blobData);\n\t      });\n\t    };\n\t  };\n\t\n\t  api._info = function idb_info(callback) {\n\t    var updateSeq;\n\t    var docCount;\n\t\n\t    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n\t      docCount = e.target.result.docCount;\n\t    };\n\t    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n\t      var cursor = e.target.result;\n\t      updateSeq = cursor ? cursor.key : 0;\n\t    };\n\t\n\t    txn.oncomplete = function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: updateSeq,\n\t        // for debugging\n\t        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n\t      });\n\t    };\n\t  };\n\t\n\t  api._allDocs = function idb_allDocs(opts, callback) {\n\t    idbAllDocs(opts, idb, callback);\n\t  };\n\t\n\t  api._changes = function idbChanges(opts) {\n\t    return changes(opts, api, dbName, idb);\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n\t    // \"Returns immediately and closes the connection in a separate thread...\"\n\t    idb.close();\n\t    cachedDBs.delete(dbName);\n\t    callback();\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t    var req = txn.objectStore(DOC_STORE).get(docId);\n\t    req.onsuccess = function (event) {\n\t      var doc = decodeMetadata(event.target.result);\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        callback(null, doc.rev_tree);\n\t      }\n\t    };\n\t  };\n\t\n\t  // This function removes revisions of document docId\n\t  // which are listed in revs and sets this document\n\t  // revision to to rev_tree\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    var stores = [\n\t      DOC_STORE,\n\t      BY_SEQ_STORE,\n\t      ATTACH_STORE,\n\t      ATTACH_AND_SEQ_STORE\n\t    ];\n\t    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var txn = txnResult.txn;\n\t\n\t    var docStore = txn.objectStore(DOC_STORE);\n\t\n\t    docStore.get(docId).onsuccess = function (event) {\n\t      var metadata = decodeMetadata(event.target.result);\n\t      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                         revHash, ctx, opts) {\n\t        var rev$$1 = pos + '-' + revHash;\n\t        if (revs.indexOf(rev$$1) !== -1) {\n\t          opts.status = 'missing';\n\t        }\n\t      });\n\t      compactRevs(revs, docId, txn);\n\t      var winningRev$$1 = metadata.winningRev;\n\t      var deleted = metadata.deleted;\n\t      txn.objectStore(DOC_STORE).put(\n\t        encodeMetadata(metadata, winningRev$$1, deleted));\n\t    };\n\t    txn.onabort = idbError(callback);\n\t    txn.oncomplete = function () {\n\t      callback();\n\t    };\n\t  };\n\t\n\t\n\t  api._getLocal = function (id, callback) {\n\t    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n\t    if (txnResult.error) {\n\t      return callback(txnResult.error);\n\t    }\n\t    var tx = txnResult.txn;\n\t    var req = tx.objectStore(LOCAL_STORE).get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var doc = e.target.result;\n\t      if (!doc) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        delete doc['_doc_id_rev']; // for backwards compat\n\t        callback(null, doc);\n\t      }\n\t    };\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    if (!oldRev) {\n\t      doc._rev = '0-1';\n\t    } else {\n\t      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t\n\t    var tx = opts.ctx;\n\t    var ret;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.onerror = idbError(callback);\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req;\n\t    if (oldRev) {\n\t      req = oStore.get(id);\n\t      req.onsuccess = function (e) {\n\t        var oldDoc = e.target.result;\n\t        if (!oldDoc || oldDoc._rev !== oldRev) {\n\t          callback(createError(REV_CONFLICT));\n\t        } else { // update\n\t          var req = oStore.put(doc);\n\t          req.onsuccess = function () {\n\t            ret = {ok: true, id: doc._id, rev: doc._rev};\n\t            if (opts.ctx) { // return immediately\n\t              callback(null, ret);\n\t            }\n\t          };\n\t        }\n\t      };\n\t    } else { // new doc\n\t      req = oStore.add(doc);\n\t      req.onerror = function (e) {\n\t        // constraint error, already exists\n\t        callback(createError(REV_CONFLICT));\n\t        e.preventDefault(); // avoid transaction abort\n\t        e.stopPropagation(); // avoid transaction onerror\n\t      };\n\t      req.onsuccess = function () {\n\t        ret = {ok: true, id: doc._id, rev: doc._rev};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n\t      if (txnResult.error) {\n\t        return callback(txnResult.error);\n\t      }\n\t      tx = txnResult.txn;\n\t      tx.oncomplete = function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      };\n\t    }\n\t    var ret;\n\t    var id = doc._id;\n\t    var oStore = tx.objectStore(LOCAL_STORE);\n\t    var req = oStore.get(id);\n\t\n\t    req.onerror = idbError(callback);\n\t    req.onsuccess = function (e) {\n\t      var oldDoc = e.target.result;\n\t      if (!oldDoc || oldDoc._rev !== doc._rev) {\n\t        callback(createError(MISSING_DOC));\n\t      } else {\n\t        oStore.delete(id);\n\t        ret = {ok: true, id: id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    changesHandler$$1.removeAllListeners(dbName);\n\t\n\t    //Close open request for \"dbName\" database to fix ie delay.\n\t    var openReq = openReqList.get(dbName);\n\t    if (openReq && openReq.result) {\n\t      openReq.result.close();\n\t      cachedDBs.delete(dbName);\n\t    }\n\t    var req = indexedDB.deleteDatabase(dbName);\n\t\n\t    req.onsuccess = function () {\n\t      //Remove open request from the list.\n\t      openReqList.delete(dbName);\n\t      if (hasLocalStorage() && (dbName in localStorage)) {\n\t        delete localStorage[dbName];\n\t      }\n\t      callback(null, { 'ok': true });\n\t    };\n\t\n\t    req.onerror = idbError(callback);\n\t  };\n\t\n\t  var cached = cachedDBs.get(dbName);\n\t\n\t  if (cached) {\n\t    idb = cached.idb;\n\t    api._meta = cached.global;\n\t    return nextTick(function () {\n\t      callback(null, api);\n\t    });\n\t  }\n\t\n\t  var req;\n\t  if (opts.storage) {\n\t    req = tryStorageOption(dbName, opts.storage);\n\t  } else {\n\t    req = indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t\n\t  openReqList.set(dbName, req);\n\t\n\t  req.onupgradeneeded = function (e) {\n\t    var db = e.target.result;\n\t    if (e.oldVersion < 1) {\n\t      return createSchema(db); // new db, initial schema\n\t    }\n\t    // do migrations\n\t\n\t    var txn = e.currentTarget.transaction;\n\t    // these migrations have to be done in this function, before\n\t    // control is returned to the event loop, because IndexedDB\n\t\n\t    if (e.oldVersion < 3) {\n\t      createLocalStoreSchema(db); // v2 -> v3\n\t    }\n\t    if (e.oldVersion < 4) {\n\t      addAttachAndSeqStore(db); // v3 -> v4\n\t    }\n\t\n\t    var migrations = [\n\t      addDeletedOrLocalIndex, // v1 -> v2\n\t      migrateLocalStore,      // v2 -> v3\n\t      migrateAttsAndSeqs,     // v3 -> v4\n\t      migrateMetadata         // v4 -> v5\n\t    ];\n\t\n\t    var i = e.oldVersion;\n\t\n\t    function next() {\n\t      var migration = migrations[i - 1];\n\t      i++;\n\t      if (migration) {\n\t        migration(txn, next);\n\t      }\n\t    }\n\t\n\t    next();\n\t  };\n\t\n\t  req.onsuccess = function (e) {\n\t\n\t    idb = e.target.result;\n\t\n\t    idb.onversionchange = function () {\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    idb.onabort = function (e) {\n\t      guardedConsole('error', 'Database has a global failure', e.target.error);\n\t      idb.close();\n\t      cachedDBs.delete(dbName);\n\t    };\n\t\n\t    // Do a few setup operations (in parallel as much as possible):\n\t    // 1. Fetch meta doc\n\t    // 2. Check blob support\n\t    // 3. Calculate docCount\n\t    // 4. Generate an instanceId if necessary\n\t    // 5. Store docCount and instanceId on meta doc\n\t\n\t    var txn = idb.transaction([\n\t      META_STORE,\n\t      DETECT_BLOB_SUPPORT_STORE,\n\t      DOC_STORE\n\t    ], 'readwrite');\n\t\n\t    var storedMetaDoc = false;\n\t    var metaDoc;\n\t    var docCount;\n\t    var blobSupport;\n\t    var instanceId;\n\t\n\t    function completeSetup() {\n\t      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n\t        return;\n\t      }\n\t      api._meta = {\n\t        name: dbName,\n\t        instanceId: instanceId,\n\t        blobSupport: blobSupport\n\t      };\n\t\n\t      cachedDBs.set(dbName, {\n\t        idb: idb,\n\t        global: api._meta\n\t      });\n\t      callback(null, api);\n\t    }\n\t\n\t    function storeMetaDocIfReady() {\n\t      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n\t        return;\n\t      }\n\t      var instanceKey = dbName + '_id';\n\t      if (instanceKey in metaDoc) {\n\t        instanceId = metaDoc[instanceKey];\n\t      } else {\n\t        metaDoc[instanceKey] = instanceId = uuid();\n\t      }\n\t      metaDoc.docCount = docCount;\n\t      txn.objectStore(META_STORE).put(metaDoc);\n\t    }\n\t\n\t    //\n\t    // fetch or generate the instanceId\n\t    //\n\t    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n\t      metaDoc = e.target.result || { id: META_STORE };\n\t      storeMetaDocIfReady();\n\t    };\n\t\n\t    //\n\t    // countDocs\n\t    //\n\t    countDocs(txn, function (count) {\n\t      docCount = count;\n\t      storeMetaDocIfReady();\n\t    });\n\t\n\t    //\n\t    // check blob support\n\t    //\n\t    if (!blobSupportPromise) {\n\t      // make sure blob support is only checked once\n\t      blobSupportPromise = checkBlobSupport(txn);\n\t    }\n\t\n\t    blobSupportPromise.then(function (val) {\n\t      blobSupport = val;\n\t      completeSetup();\n\t    });\n\t\n\t    // only when the metadata put transaction has completed,\n\t    // consider the setup done\n\t    txn.oncomplete = function () {\n\t      storedMetaDoc = true;\n\t      completeSetup();\n\t    };\n\t  };\n\t\n\t  req.onerror = function () {\n\t    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n\t    guardedConsole('error', msg);\n\t    callback(createError(IDB_ERROR, msg));\n\t  };\n\t}\n\t\n\tIdbPouch.valid = function () {\n\t  // Issue #2533, we finally gave up on doing bug\n\t  // detection instead of browser sniffing. Safari brought us\n\t  // to our knees.\n\t  var isSafari = typeof openDatabase !== 'undefined' &&\n\t    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n\t    !/Chrome/.test(navigator.userAgent) &&\n\t    !/BlackBerry/.test(navigator.platform);\n\t\n\t  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n\t  // are not allowed. `typeof indexedDB` also triggers the error.\n\t  try {\n\t    // some outdated implementations of IDB that appear on Samsung\n\t    // and HTC Android devices <4.4 are missing IDBKeyRange\n\t    return !isSafari && typeof indexedDB !== 'undefined' &&\n\t      typeof IDBKeyRange !== 'undefined';\n\t  } catch (e) {\n\t    return false;\n\t  }\n\t};\n\t\n\tfunction tryStorageOption(dbName, storage) {\n\t  try { // option only available in Firefox 26+\n\t    return indexedDB.open(dbName, {\n\t      version: ADAPTER_VERSION,\n\t      storage: storage\n\t    });\n\t  } catch (err) {\n\t      return indexedDB.open(dbName, ADAPTER_VERSION);\n\t  }\n\t}\n\t\n\tfunction IDBPouch (PouchDB) {\n\t  PouchDB.adapter('idb', IdbPouch, true);\n\t}\n\t\n\t//\n\t// Parsing hex strings. Yeah.\n\t//\n\t// So basically we need this because of a bug in WebSQL:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t//\n\t// UTF-8 and UTF-16 are provided as separate functions\n\t// for meager performance improvements\n\t//\n\t\n\tfunction decodeUtf8(str) {\n\t  return decodeURIComponent(escape(str));\n\t}\n\t\n\tfunction hexToInt(charCode) {\n\t  // '0'-'9' is 48-57\n\t  // 'A'-'F' is 65-70\n\t  // SQLite will only give us uppercase hex\n\t  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n\t}\n\t\n\t\n\t// Example:\n\t// pragma encoding=utf8;\n\t// select hex('A');\n\t// returns '41'\n\tfunction parseHexUtf8(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start++)) << 4) |\n\t        hexToInt(str.charCodeAt(start++)));\n\t  }\n\t  return result;\n\t}\n\t\n\t// Example:\n\t// pragma encoding=utf16;\n\t// select hex('A');\n\t// returns '4100'\n\t// notice that the 00 comes after the 41 (i.e. it's swizzled)\n\tfunction parseHexUtf16(str, start, end) {\n\t  var result = '';\n\t  while (start < end) {\n\t    // UTF-16, so swizzle the bytes\n\t    result += String.fromCharCode(\n\t      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n\t        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n\t        (hexToInt(str.charCodeAt(start)) << 4) |\n\t        hexToInt(str.charCodeAt(start + 1)));\n\t    start += 4;\n\t  }\n\t  return result;\n\t}\n\t\n\tfunction parseHexString(str, encoding) {\n\t  if (encoding === 'UTF-8') {\n\t    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n\t  } else {\n\t    return parseHexUtf16(str, 0, str.length);\n\t  }\n\t}\n\t\n\tfunction quote(str) {\n\t  return \"'\" + str + \"'\";\n\t}\n\t\n\tvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\t\n\t// The object stores created for each database\n\t// DOC_STORE stores the document meta data, its revision history and state\n\tvar DOC_STORE$1 = quote('document-store');\n\t// BY_SEQ_STORE stores a particular version of a document, keyed by its\n\t// sequence id\n\tvar BY_SEQ_STORE$1 = quote('by-sequence');\n\t// Where we store attachments\n\tvar ATTACH_STORE$1 = quote('attach-store');\n\tvar LOCAL_STORE$1 = quote('local-store');\n\tvar META_STORE$1 = quote('metadata-store');\n\t// where we store many-to-many relations between attachment\n\t// digests and seqs\n\tvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\t\n\t// escapeBlob and unescapeBlob are workarounds for a websql bug:\n\t// https://code.google.com/p/chromium/issues/detail?id=422690\n\t// https://bugs.webkit.org/show_bug.cgi?id=137637\n\t// The goal is to never actually insert the \\u0000 character\n\t// in the database.\n\tfunction escapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0002/g, '\\u0002\\u0002')\n\t    .replace(/\\u0001/g, '\\u0001\\u0002')\n\t    .replace(/\\u0000/g, '\\u0001\\u0001');\n\t}\n\t\n\tfunction unescapeBlob(str) {\n\t  return str\n\t    .replace(/\\u0001\\u0001/g, '\\u0000')\n\t    .replace(/\\u0001\\u0002/g, '\\u0001')\n\t    .replace(/\\u0002\\u0002/g, '\\u0002');\n\t}\n\t\n\tfunction stringifyDoc(doc) {\n\t  // don't bother storing the id/rev. it uses lots of space,\n\t  // in persistent map/reduce especially\n\t  delete doc._id;\n\t  delete doc._rev;\n\t  return JSON.stringify(doc);\n\t}\n\t\n\tfunction unstringifyDoc(doc, id, rev$$1) {\n\t  doc = JSON.parse(doc);\n\t  doc._id = id;\n\t  doc._rev = rev$$1;\n\t  return doc;\n\t}\n\t\n\t// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\n\tfunction qMarks(num) {\n\t  var s = '(';\n\t  while (num--) {\n\t    s += '?';\n\t    if (num) {\n\t      s += ',';\n\t    }\n\t  }\n\t  return s + ')';\n\t}\n\t\n\tfunction select(selector, table, joiner, where, orderBy) {\n\t  return 'SELECT ' + selector + ' FROM ' +\n\t    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n\t    (joiner ? (' ON ' + joiner) : '') +\n\t    (where ? (' WHERE ' +\n\t    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n\t    (orderBy ? (' ORDER BY ' + orderBy) : '');\n\t}\n\t\n\tfunction compactRevs$1(revs, docId, tx) {\n\t\n\t  if (!revs.length) {\n\t    return;\n\t  }\n\t\n\t  var numDone = 0;\n\t  var seqs = [];\n\t\n\t  function checkDone() {\n\t    if (++numDone === revs.length) { // done\n\t      deleteOrphans();\n\t    }\n\t  }\n\t\n\t  function deleteOrphans() {\n\t    // find orphaned attachment digests\n\t\n\t    if (!seqs.length) {\n\t      return;\n\t    }\n\t\n\t    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\t\n\t    tx.executeSql(sql, seqs, function (tx, res) {\n\t\n\t      var digestsToCheck = [];\n\t      for (var i = 0; i < res.rows.length; i++) {\n\t        digestsToCheck.push(res.rows.item(i).digest);\n\t      }\n\t      if (!digestsToCheck.length) {\n\t        return;\n\t      }\n\t\n\t      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t        ' WHERE seq IN (' +\n\t        seqs.map(function () { return '?'; }).join(',') +\n\t        ')';\n\t      tx.executeSql(sql, seqs, function (tx) {\n\t\n\t        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n\t          ' WHERE digest IN (' +\n\t          digestsToCheck.map(function () { return '?'; }).join(',') +\n\t          ')';\n\t        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n\t          var nonOrphanedDigests = new ExportedSet();\n\t          for (var i = 0; i < res.rows.length; i++) {\n\t            nonOrphanedDigests.add(res.rows.item(i).digest);\n\t          }\n\t          digestsToCheck.forEach(function (digest) {\n\t            if (nonOrphanedDigests.has(digest)) {\n\t              return;\n\t            }\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n\t              [digest]);\n\t            tx.executeSql(\n\t              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // update by-seq and attach stores in parallel\n\t  revs.forEach(function (rev$$1) {\n\t    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=? AND rev=?';\n\t\n\t    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n\t      if (!res.rows.length) { // already deleted\n\t        return checkDone();\n\t      }\n\t      var seq = res.rows.item(0).seq;\n\t      seqs.push(seq);\n\t\n\t      tx.executeSql(\n\t        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n\t    });\n\t  });\n\t}\n\t\n\tfunction websqlError(callback) {\n\t  return function (event) {\n\t    guardedConsole('error', 'WebSQL threw an error', event);\n\t    // event may actually be a SQLError object, so report is as such\n\t    var errorNameMatch = event && event.constructor.toString()\n\t        .match(/function ([^(]+)/);\n\t    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n\t    var errorReason = event.target || event.message;\n\t    callback(createError(WSQ_ERROR, errorReason, errorName));\n\t  };\n\t}\n\t\n\tfunction getSize(opts) {\n\t  if ('size' in opts) {\n\t    // triggers immediate popup in iOS, fixes #2347\n\t    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n\t    return opts.size * 1000000;\n\t  }\n\t  // In iOS, doesn't matter as long as it's <= 5000000.\n\t  // Except that if you request too much, our tests fail\n\t  // because of the native \"do you accept?\" popup.\n\t  // In Android <=4.3, this value is actually used as an\n\t  // honest-to-god ceiling for data, so we need to\n\t  // set it to a decently high number.\n\t  var isAndroid = typeof navigator !== 'undefined' &&\n\t    /Android/.test(navigator.userAgent);\n\t  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n\t}\n\t\n\tfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n\t  var newEdits = opts.new_edits;\n\t  var userDocs = req.docs;\n\t\n\t  // Parse the docs, give them a sequence number for the result\n\t  var docInfos = userDocs.map(function (doc) {\n\t    if (doc._id && isLocalId(doc._id)) {\n\t      return doc;\n\t    }\n\t    var newDoc = parseDoc(doc, newEdits);\n\t    return newDoc;\n\t  });\n\t\n\t  var docInfoErrors = docInfos.filter(function (docInfo) {\n\t    return docInfo.error;\n\t  });\n\t  if (docInfoErrors.length) {\n\t    return callback(docInfoErrors[0]);\n\t  }\n\t\n\t  var tx;\n\t  var results = new Array(docInfos.length);\n\t  var fetchedDocs = new ExportedMap();\n\t\n\t  var preconditionErrored;\n\t  function complete() {\n\t    if (preconditionErrored) {\n\t      return callback(preconditionErrored);\n\t    }\n\t    websqlChanges.notify(api._name);\n\t    callback(null, results);\n\t  }\n\t\n\t  function verifyAttachment(digest, callback) {\n\t    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n\t      ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.item(0).cnt === 0) {\n\t        var err = createError(MISSING_STUB,\n\t          'unknown stub attachment with digest ' +\n\t          digest);\n\t        callback(err);\n\t      } else {\n\t        callback();\n\t      }\n\t    });\n\t  }\n\t\n\t  function verifyAttachments(finish) {\n\t    var digests = [];\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo.data && docInfo.data._attachments) {\n\t        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n\t          var att = docInfo.data._attachments[filename];\n\t          if (att.stub) {\n\t            digests.push(att.digest);\n\t          }\n\t        });\n\t      }\n\t    });\n\t    if (!digests.length) {\n\t      return finish();\n\t    }\n\t    var numDone = 0;\n\t    var err;\n\t\n\t    function checkDone() {\n\t      if (++numDone === digests.length) {\n\t        finish(err);\n\t      }\n\t    }\n\t    digests.forEach(function (digest) {\n\t      verifyAttachment(digest, function (attErr) {\n\t        if (attErr && !err) {\n\t          err = attErr;\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n\t                    isUpdate, delta, resultsIdx, callback) {\n\t\n\t    function finish() {\n\t      var data = docInfo.data;\n\t      var deletedInt = newRevIsDeleted ? 1 : 0;\n\t\n\t      var id = data._id;\n\t      var rev = data._rev;\n\t      var json = stringifyDoc(data);\n\t      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n\t        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n\t      var sqlArgs = [id, rev, json, deletedInt];\n\t\n\t      // map seqs to attachment digests, which\n\t      // we will need later during compaction\n\t      function insertAttachmentMappings(seq, callback) {\n\t        var attsAdded = 0;\n\t        var attsToAdd = Object.keys(data._attachments || {});\n\t\n\t        if (!attsToAdd.length) {\n\t          return callback();\n\t        }\n\t        function checkDone() {\n\t          if (++attsAdded === attsToAdd.length) {\n\t            callback();\n\t          }\n\t          return false; // ack handling a constraint error\n\t        }\n\t        function add(att) {\n\t          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t            ' (digest, seq) VALUES (?,?)';\n\t          var sqlArgs = [data._attachments[att].digest, seq];\n\t          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n\t          // second callback is for a constaint error, which we ignore\n\t          // because this docid/rev has already been associated with\n\t          // the digest (e.g. when new_edits == false)\n\t        }\n\t        for (var i = 0; i < attsToAdd.length; i++) {\n\t          add(attsToAdd[i]); // do in parallel\n\t        }\n\t      }\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        var seq = result.insertId;\n\t        insertAttachmentMappings(seq, function () {\n\t          dataWritten(tx, seq);\n\t        });\n\t      }, function () {\n\t        // constraint error, recover by updating instead (see #1638)\n\t        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n\t          'doc_id=? AND rev=?');\n\t        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n\t          var seq = res.rows.item(0).seq;\n\t          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n\t          var sqlArgs = [json, deletedInt, id, rev];\n\t          tx.executeSql(sql, sqlArgs, function (tx) {\n\t            insertAttachmentMappings(seq, function () {\n\t              dataWritten(tx, seq);\n\t            });\n\t          });\n\t        });\n\t        return false; // ack that we've handled the error\n\t      });\n\t    }\n\t\n\t    function collectResults(attachmentErr) {\n\t      if (!err) {\n\t        if (attachmentErr) {\n\t          err = attachmentErr;\n\t          callback(err);\n\t        } else if (recv === attachments.length) {\n\t          finish();\n\t        }\n\t      }\n\t    }\n\t\n\t    var err = null;\n\t    var recv = 0;\n\t\n\t    docInfo.data._id = docInfo.metadata.id;\n\t    docInfo.data._rev = docInfo.metadata.rev;\n\t    var attachments = Object.keys(docInfo.data._attachments || {});\n\t\n\t\n\t    if (newRevIsDeleted) {\n\t      docInfo.data._deleted = true;\n\t    }\n\t\n\t    function attachmentSaved(err) {\n\t      recv++;\n\t      collectResults(err);\n\t    }\n\t\n\t    attachments.forEach(function (key) {\n\t      var att = docInfo.data._attachments[key];\n\t      if (!att.stub) {\n\t        var data = att.data;\n\t        delete att.data;\n\t        att.revpos = parseInt(winningRev$$1, 10);\n\t        var digest = att.digest;\n\t        saveAttachment(digest, data, attachmentSaved);\n\t      } else {\n\t        recv++;\n\t        collectResults();\n\t      }\n\t    });\n\t\n\t    if (!attachments.length) {\n\t      finish();\n\t    }\n\t\n\t    function dataWritten(tx, seq) {\n\t      var id = docInfo.metadata.id;\n\t\n\t      var revsToCompact = docInfo.stemmedRevs || [];\n\t      if (isUpdate && api.auto_compaction) {\n\t        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n\t      }\n\t      if (revsToCompact.length) {\n\t        compactRevs$1(revsToCompact, id, tx);\n\t      }\n\t\n\t      docInfo.metadata.seq = seq;\n\t      var rev = docInfo.metadata.rev;\n\t      delete docInfo.metadata.rev;\n\t\n\t      var sql = isUpdate ?\n\t      'UPDATE ' + DOC_STORE$1 +\n\t      ' SET json=?, max_seq=?, winningseq=' +\n\t      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n\t      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n\t        : 'INSERT INTO ' + DOC_STORE$1 +\n\t      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n\t      var metadataStr = safeJsonStringify(docInfo.metadata);\n\t      var params = isUpdate ?\n\t        [metadataStr, seq, winningRev$$1, id] :\n\t        [id, seq, seq, metadataStr];\n\t      tx.executeSql(sql, params, function () {\n\t        results[resultsIdx] = {\n\t          ok: true,\n\t          id: docInfo.metadata.id,\n\t          rev: rev\n\t        };\n\t        fetchedDocs.set(id, docInfo.metadata);\n\t        callback();\n\t      });\n\t    }\n\t  }\n\t\n\t  function websqlProcessDocs() {\n\t    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n\t                results, writeDoc, opts);\n\t  }\n\t\n\t  function fetchExistingDocs(callback) {\n\t    if (!docInfos.length) {\n\t      return callback();\n\t    }\n\t\n\t    var numFetched = 0;\n\t\n\t    function checkDone() {\n\t      if (++numFetched === docInfos.length) {\n\t        callback();\n\t      }\n\t    }\n\t\n\t    docInfos.forEach(function (docInfo) {\n\t      if (docInfo._id && isLocalId(docInfo._id)) {\n\t        return checkDone(); // skip local docs\n\t      }\n\t      var id = docInfo.metadata.id;\n\t      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n\t      ' WHERE id = ?', [id], function (tx, result) {\n\t        if (result.rows.length) {\n\t          var metadata = safeJsonParse(result.rows.item(0).json);\n\t          fetchedDocs.set(id, metadata);\n\t        }\n\t        checkDone();\n\t      });\n\t    });\n\t  }\n\t\n\t  function saveAttachment(digest, data, callback) {\n\t    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      if (result.rows.length) { // attachment already exists\n\t        return callback();\n\t      }\n\t      // we could just insert before selecting and catch the error,\n\t      // but my hunch is that it's cheaper not to serialize the blob\n\t      // from JS to C if we don't have to (TODO: confirm this)\n\t      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n\t      ' (digest, body, escaped) VALUES (?,?,1)';\n\t      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n\t        callback();\n\t      }, function () {\n\t        // ignore constaint errors, means it already exists\n\t        callback();\n\t        return false; // ack we handled the error\n\t      });\n\t    });\n\t  }\n\t\n\t  preprocessAttachments(docInfos, 'binary', function (err) {\n\t    if (err) {\n\t      return callback(err);\n\t    }\n\t    db.transaction(function (txn) {\n\t      tx = txn;\n\t      verifyAttachments(function (err) {\n\t        if (err) {\n\t          preconditionErrored = err;\n\t        } else {\n\t          fetchExistingDocs(websqlProcessDocs);\n\t        }\n\t      });\n\t    }, websqlError(callback), complete);\n\t  });\n\t}\n\t\n\tvar cachedDatabases = new ExportedMap();\n\t\n\t// openDatabase passed in through opts (e.g. for node-websql)\n\tfunction openDatabaseWithOpts(opts) {\n\t  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n\t}\n\t\n\tfunction openDBSafely(opts) {\n\t  try {\n\t    return {\n\t      db: openDatabaseWithOpts(opts)\n\t    };\n\t  } catch (err) {\n\t    return {\n\t      error: err\n\t    };\n\t  }\n\t}\n\t\n\tfunction openDB$1(opts) {\n\t  var cachedResult = cachedDatabases.get(opts.name);\n\t  if (!cachedResult) {\n\t    cachedResult = openDBSafely(opts);\n\t    cachedDatabases.set(opts.name, cachedResult);\n\t  }\n\t  return cachedResult;\n\t}\n\t\n\tvar websqlChanges = new Changes();\n\t\n\tfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n\t  var attachments = Object.keys(doc._attachments || {});\n\t  if (!attachments.length) {\n\t    return cb && cb();\n\t  }\n\t  var numDone = 0;\n\t\n\t  function checkDone() {\n\t    if (++numDone === attachments.length && cb) {\n\t      cb();\n\t    }\n\t  }\n\t\n\t  function fetchAttachment(doc, att) {\n\t    var attObj = doc._attachments[att];\n\t    var attOpts = {binary: opts.binary, ctx: txn};\n\t    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n\t      doc._attachments[att] = $inject_Object_assign(\n\t        pick(attObj, ['digest', 'content_type']),\n\t        { data: data }\n\t      );\n\t      checkDone();\n\t    });\n\t  }\n\t\n\t  attachments.forEach(function (att) {\n\t    if (opts.attachments && opts.include_docs) {\n\t      fetchAttachment(doc, att);\n\t    } else {\n\t      doc._attachments[att].stub = true;\n\t      checkDone();\n\t    }\n\t  });\n\t}\n\t\n\tvar POUCH_VERSION = 1;\n\t\n\t// these indexes cover the ground for most allDocs queries\n\tvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n\t  BY_SEQ_STORE$1 + ' (seq, deleted)';\n\tvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n\t    BY_SEQ_STORE$1 + ' (doc_id, rev)';\n\tvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n\t  DOC_STORE$1 + ' (winningseq)';\n\tvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n\t  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\n\tvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n\t  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n\t    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\t\n\tvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n\t  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\tvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n\t  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n\t  BY_SEQ_STORE$1 + '.json AS data, ' +\n\t  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n\t  DOC_STORE$1 + '.json AS metadata';\n\t\n\tfunction WebSqlPouch$1(opts, callback) {\n\t  var api = this;\n\t  var instanceId = null;\n\t  var size = getSize(opts);\n\t  var idRequests = [];\n\t  var encoding;\n\t\n\t  api._name = opts.name;\n\t\n\t  // extend the options here, because sqlite plugin has a ton of options\n\t  // and they are constantly changing, so it's more prudent to allow anything\n\t  var websqlOpts = $inject_Object_assign({}, opts, {\n\t    version: POUCH_VERSION,\n\t    description: opts.name,\n\t    size: size\n\t  });\n\t  var openDBResult = openDB$1(websqlOpts);\n\t  if (openDBResult.error) {\n\t    return websqlError(callback)(openDBResult.error);\n\t  }\n\t  var db = openDBResult.db;\n\t  if (typeof db.readTransaction !== 'function') {\n\t    // doesn't exist in sqlite plugin\n\t    db.readTransaction = db.transaction;\n\t  }\n\t\n\t  function dbCreated() {\n\t    // note the db name in case the browser upgrades to idb\n\t    if (hasLocalStorage()) {\n\t      window.localStorage['_pouch__websqldb_' + api._name] = true;\n\t    }\n\t    callback(null, api);\n\t  }\n\t\n\t  // In this migration, we added the 'deleted' and 'local' columns to the\n\t  // by-seq and doc store tables.\n\t  // To preserve existing user data, we re-process all the existing JSON\n\t  // and add these values.\n\t  // Called migration2 because it corresponds to adapter version (db_version) #2\n\t  function runMigration2(tx, callback) {\n\t    // index used for the join in the allDocs query\n\t    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t\n\t    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n\t      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n\t      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n\t        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n\t        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (local, id)');\n\t\n\t        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n\t          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n\t          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\t\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t\n\t          var deleted = [];\n\t          var local = [];\n\t\n\t          for (var i = 0; i < result.rows.length; i++) {\n\t            var item = result.rows.item(i);\n\t            var seq = item.seq;\n\t            var metadata = JSON.parse(item.metadata);\n\t            if (isDeleted(metadata)) {\n\t              deleted.push(seq);\n\t            }\n\t            if (isLocalId(metadata.id)) {\n\t              local.push(metadata.id);\n\t            }\n\t          }\n\t          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n\t            qMarks(local.length), local, function () {\n\t            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n\t              ' SET deleted = 1 WHERE seq IN ' +\n\t              qMarks(deleted.length), deleted, callback);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we make all the local docs unversioned\n\t  function runMigration3(tx, callback) {\n\t    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t      ' (id UNIQUE, rev, json)';\n\t    tx.executeSql(local, [], function () {\n\t      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n\t        BY_SEQ_STORE$1 + '.json AS data ' +\n\t        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n\t        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n\t        DOC_STORE$1 + '.winningseq WHERE local = 1';\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var rows = [];\n\t        for (var i = 0; i < res.rows.length; i++) {\n\t          rows.push(res.rows.item(i));\n\t        }\n\t        function doNext() {\n\t          if (!rows.length) {\n\t            return callback(tx);\n\t          }\n\t          var row = rows.shift();\n\t          var rev$$1 = JSON.parse(row.data)._rev;\n\t          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n\t              ' (id, rev, json) VALUES (?,?,?)',\n\t              [row.id, rev$$1, row.data], function (tx) {\n\t            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n\t                [row.id], function (tx) {\n\t              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n\t                  [row.seq], function () {\n\t                doNext();\n\t              });\n\t            });\n\t          });\n\t        }\n\t        doNext();\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we remove doc_id_rev and just use rev\n\t  function runMigration4(tx, callback) {\n\t\n\t    function updateRows(rows) {\n\t      function doNext() {\n\t        if (!rows.length) {\n\t          return callback(tx);\n\t        }\n\t        var row = rows.shift();\n\t        var doc_id_rev = parseHexString(row.hex, encoding);\n\t        var idx = doc_id_rev.lastIndexOf('::');\n\t        var doc_id = doc_id_rev.substring(0, idx);\n\t        var rev$$1 = doc_id_rev.substring(idx + 2);\n\t        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n\t          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n\t        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n\t          doNext();\n\t        });\n\t      }\n\t      doNext();\n\t    }\n\t\n\t    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n\t          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            var rows = [];\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              rows.push(res.rows.item(i));\n\t            }\n\t            updateRows(rows);\n\t          });\n\t        });\n\t      });\n\t    });\n\t  }\n\t\n\t  // in this migration, we add the attach_and_seq table\n\t  // for issue #2818\n\t  function runMigration5(tx, callback) {\n\t\n\t    function migrateAttsAndSeqs(tx) {\n\t      // need to actually populate the table. this is the expensive part,\n\t      // so as an optimization, check first that this database even\n\t      // contains attachments\n\t      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n\t      tx.executeSql(sql, [], function (tx, res) {\n\t        var count = res.rows.item(0).cnt;\n\t        if (!count) {\n\t          return callback(tx);\n\t        }\n\t\n\t        var offset = 0;\n\t        var pageSize = 10;\n\t        function nextPage() {\n\t          var sql = select(\n\t            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n\t            [DOC_STORE$1, BY_SEQ_STORE$1],\n\t            DOC_STORE_AND_BY_SEQ_JOINER,\n\t            null,\n\t            DOC_STORE$1 + '.id '\n\t          );\n\t          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n\t          offset += pageSize;\n\t          tx.executeSql(sql, [], function (tx, res) {\n\t            if (!res.rows.length) {\n\t              return callback(tx);\n\t            }\n\t            var digestSeqs = {};\n\t            function addDigestSeq(digest, seq) {\n\t              // uniq digest/seq pairs, just in case there are dups\n\t              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n\t              if (seqs.indexOf(seq) === -1) {\n\t                seqs.push(seq);\n\t              }\n\t            }\n\t            for (var i = 0; i < res.rows.length; i++) {\n\t              var row = res.rows.item(i);\n\t              var doc = unstringifyDoc(row.data, row.id, row.rev);\n\t              var atts = Object.keys(doc._attachments || {});\n\t              for (var j = 0; j < atts.length; j++) {\n\t                var att = doc._attachments[atts[j]];\n\t                addDigestSeq(att.digest, row.seq);\n\t              }\n\t            }\n\t            var digestSeqPairs = [];\n\t            Object.keys(digestSeqs).forEach(function (digest) {\n\t              var seqs = digestSeqs[digest];\n\t              seqs.forEach(function (seq) {\n\t                digestSeqPairs.push([digest, seq]);\n\t              });\n\t            });\n\t            if (!digestSeqPairs.length) {\n\t              return nextPage();\n\t            }\n\t            var numDone = 0;\n\t            digestSeqPairs.forEach(function (pair) {\n\t              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n\t                ' (digest, seq) VALUES (?,?)';\n\t              tx.executeSql(sql, pair, function () {\n\t                if (++numDone === digestSeqPairs.length) {\n\t                  nextPage();\n\t                }\n\t              });\n\t            });\n\t          });\n\t        }\n\t        nextPage();\n\t      });\n\t    }\n\t\n\t    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t    tx.executeSql(attachAndRev, [], function (tx) {\n\t      tx.executeSql(\n\t        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n\t          tx.executeSql(\n\t            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n\t            migrateAttsAndSeqs);\n\t        });\n\t    });\n\t  }\n\t\n\t  // in this migration, we use escapeBlob() and unescapeBlob()\n\t  // instead of reading out the binary as HEX, which is slow\n\t  function runMigration6(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n\t      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n\t    tx.executeSql(sql, [], callback);\n\t  }\n\t\n\t  // issue #3136, in this migration we need a \"latest seq\" as well\n\t  // as the \"winning seq\" in the doc store\n\t  function runMigration7(tx, callback) {\n\t    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n\t      ' ADD COLUMN max_seq INTEGER';\n\t    tx.executeSql(sql, [], function (tx) {\n\t      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n\t        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n\t      tx.executeSql(sql, [], function (tx) {\n\t        // add unique index after filling, else we'll get a constraint\n\t        // error when we do the ALTER TABLE\n\t        var sql =\n\t          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n\t          DOC_STORE$1 + ' (max_seq)';\n\t        tx.executeSql(sql, [], callback);\n\t      });\n\t    });\n\t  }\n\t\n\t  function checkEncoding(tx, cb) {\n\t    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n\t    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n\t        var hex = res.rows.item(0).hex;\n\t        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n\t        cb();\n\t      }\n\t    );\n\t  }\n\t\n\t  function onGetInstanceId() {\n\t    while (idRequests.length > 0) {\n\t      var idCallback = idRequests.pop();\n\t      idCallback(null, instanceId);\n\t    }\n\t  }\n\t\n\t  function onGetVersion(tx, dbVersion) {\n\t    if (dbVersion === 0) {\n\t      // initial schema\n\t\n\t      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n\t        ' (dbid, db_version INTEGER)';\n\t      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n\t        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n\t      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n\t        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n\t      // TODO: migrate winningseq to INTEGER\n\t      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n\t        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n\t      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n\t        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n\t        'json, deleted TINYINT(1), doc_id, rev)';\n\t      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n\t        ' (id UNIQUE, rev, json)';\n\t\n\t      // creates\n\t      tx.executeSql(attach);\n\t      tx.executeSql(local);\n\t      tx.executeSql(attachAndRev, [], function () {\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n\t        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n\t      });\n\t      tx.executeSql(doc, [], function () {\n\t        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\t        tx.executeSql(seq, [], function () {\n\t          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n\t          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n\t          tx.executeSql(meta, [], function () {\n\t            // mark the db version, and new dbid\n\t            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n\t              ' (db_version, dbid) VALUES (?,?)';\n\t            instanceId = uuid();\n\t            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n\t            tx.executeSql(initSeq, initSeqArgs, function () {\n\t              onGetInstanceId();\n\t            });\n\t          });\n\t        });\n\t      });\n\t    } else { // version > 0\n\t\n\t      var setupDone = function () {\n\t        var migrated = dbVersion < ADAPTER_VERSION$1;\n\t        if (migrated) {\n\t          // update the db version within this transaction\n\t          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n\t            ADAPTER_VERSION$1);\n\t        }\n\t        // notify db.id() callers\n\t        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n\t        tx.executeSql(sql, [], function (tx, result) {\n\t          instanceId = result.rows.item(0).dbid;\n\t          onGetInstanceId();\n\t        });\n\t      };\n\t\n\t      // would love to use promises here, but then websql\n\t      // ends the transaction early\n\t      var tasks = [\n\t        runMigration2,\n\t        runMigration3,\n\t        runMigration4,\n\t        runMigration5,\n\t        runMigration6,\n\t        runMigration7,\n\t        setupDone\n\t      ];\n\t\n\t      // run each migration sequentially\n\t      var i = dbVersion;\n\t      var nextMigration = function (tx) {\n\t        tasks[i - 1](tx, nextMigration);\n\t        i++;\n\t      };\n\t      nextMigration(tx);\n\t    }\n\t  }\n\t\n\t  function setup() {\n\t    db.transaction(function (tx) {\n\t      // first check the encoding\n\t      checkEncoding(tx, function () {\n\t        // then get the version\n\t        fetchVersion(tx);\n\t      });\n\t    }, websqlError(callback), dbCreated);\n\t  }\n\t\n\t  function fetchVersion(tx) {\n\t    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      if (!result.rows.length) {\n\t        // database hasn't even been created yet (version 0)\n\t        onGetVersion(tx, 0);\n\t      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n\t        // table was created, but without the new db_version column,\n\t        // so add it.\n\t        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n\t          ' ADD COLUMN db_version INTEGER', [], function () {\n\t          // before version 2, this column didn't even exist\n\t          onGetVersion(tx, 1);\n\t        });\n\t      } else { // column exists, we can safely get it\n\t        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n\t          [], function (tx, result) {\n\t          var dbVersion = result.rows.item(0).db_version;\n\t          onGetVersion(tx, dbVersion);\n\t        });\n\t      }\n\t    });\n\t  }\n\t\n\t  setup();\n\t\n\t  function getMaxSeq(tx, callback) {\n\t    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n\t    tx.executeSql(sql, [], function (tx, res) {\n\t      var updateSeq = res.rows.item(0).seq || 0;\n\t      callback(updateSeq);\n\t    });\n\t  }\n\t\n\t  function countDocs(tx, callback) {\n\t    // count the total rows\n\t    var sql = select(\n\t      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n\t      [DOC_STORE$1, BY_SEQ_STORE$1],\n\t      DOC_STORE_AND_BY_SEQ_JOINER,\n\t      BY_SEQ_STORE$1 + '.deleted=0');\n\t\n\t    tx.executeSql(sql, [], function (tx, result) {\n\t      callback(result.rows.item(0).num);\n\t    });\n\t  }\n\t\n\t  api._remote = false;\n\t  api.type = function () {\n\t    return 'websql';\n\t  };\n\t\n\t  api._id = toPromise(function (callback) {\n\t    callback(null, instanceId);\n\t  });\n\t\n\t  api._info = function (callback) {\n\t    var seq;\n\t    var docCount;\n\t    db.readTransaction(function (tx) {\n\t      getMaxSeq(tx, function (theSeq) {\n\t        seq = theSeq;\n\t      });\n\t      countDocs(tx, function (theDocCount) {\n\t        docCount = theDocCount;\n\t      });\n\t    }, websqlError(callback), function () {\n\t      callback(null, {\n\t        doc_count: docCount,\n\t        update_seq: seq,\n\t        websql_encoding: encoding\n\t      });\n\t    });\n\t  };\n\t\n\t  api._bulkDocs = function (req, reqOpts, callback) {\n\t    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n\t  };\n\t\n\t  function latest$$1(tx, id, rev$$1, callback, finish) {\n\t    var sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t    var sqlArgs = [id];\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var err = createError(MISSING_DOC, 'missing');\n\t        return finish(err);\n\t      }\n\t      var item = results.rows.item(0);\n\t      var metadata = safeJsonParse(item.metadata);\n\t      callback(latest(rev$$1, metadata));\n\t    });\n\t  }\n\t\n\t  api._get = function (id, opts, callback) {\n\t    var doc;\n\t    var metadata;\n\t    var tx = opts.ctx;\n\t    if (!tx) {\n\t      return db.readTransaction(function (txn) {\n\t        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n\t      });\n\t    }\n\t\n\t    function finish(err) {\n\t      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n\t    }\n\t\n\t    var sql;\n\t    var sqlArgs;\n\t\n\t    if (!opts.rev) {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        DOC_STORE$1 + '.id=?');\n\t      sqlArgs = [id];\n\t    } else if (opts.latest) {\n\t      latest$$1(tx, id, opts.rev, function (latestRev) {\n\t        opts.latest = false;\n\t        opts.rev = latestRev;\n\t        api._get(id, opts, callback);\n\t      }, finish);\n\t      return;\n\t    } else {\n\t      sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n\t        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n\t      sqlArgs = [id, opts.rev];\n\t    }\n\t\n\t    tx.executeSql(sql, sqlArgs, function (a, results) {\n\t      if (!results.rows.length) {\n\t        var missingErr = createError(MISSING_DOC, 'missing');\n\t        return finish(missingErr);\n\t      }\n\t      var item = results.rows.item(0);\n\t      metadata = safeJsonParse(item.metadata);\n\t      if (item.deleted && !opts.rev) {\n\t        var deletedErr = createError(MISSING_DOC, 'deleted');\n\t        return finish(deletedErr);\n\t      }\n\t      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n\t      finish();\n\t    });\n\t  };\n\t\n\t  api._allDocs = function (opts, callback) {\n\t    var results = [];\n\t    var totalRows;\n\t    var updateSeq;\n\t\n\t    var start = 'startkey' in opts ? opts.startkey : false;\n\t    var end = 'endkey' in opts ? opts.endkey : false;\n\t    var key = 'key' in opts ? opts.key : false;\n\t    var keys = 'keys' in opts ? opts.keys : false;\n\t    var descending = 'descending' in opts ? opts.descending : false;\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    var offset = 'skip' in opts ? opts.skip : 0;\n\t    var inclusiveEnd = opts.inclusive_end !== false;\n\t    \n\t    var sqlArgs = [];\n\t    var criteria = [];\n\t\n\t    if (keys) {\n\t      var destinctKeys = [];\n\t      var bindingStr = \"\";\n\t      keys.forEach(function (key) {\n\t        if (destinctKeys.indexOf(key) === -1) {\n\t          destinctKeys.push(key);\n\t          bindingStr += '?,';\n\t        }\n\t      });\n\t      bindingStr = bindingStr.substring(0, bindingStr.length - 1); // keys is never empty\n\t      criteria.push(DOC_STORE$1 + '.id IN (' + bindingStr + ')');\n\t      sqlArgs = sqlArgs.concat(destinctKeys);\n\t    } else if (key !== false) {\n\t      criteria.push(DOC_STORE$1 + '.id = ?');\n\t      sqlArgs.push(key);\n\t    } else if (start !== false || end !== false) {\n\t      if (start !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n\t        sqlArgs.push(start);\n\t      }\n\t      if (end !== false) {\n\t        var comparator = descending ? '>' : '<';\n\t        if (inclusiveEnd) {\n\t          comparator += '=';\n\t        }\n\t        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n\t        sqlArgs.push(end);\n\t      }\n\t      if (key !== false) {\n\t        criteria.push(DOC_STORE$1 + '.id = ?');\n\t        sqlArgs.push(key);\n\t      }\n\t    }\n\t\n\t    if (!keys) {\n\t      // report deleted if keys are specified\n\t      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n\t    }\n\t\n\t    db.readTransaction(function (tx) {\n\t      // count the docs in parallel to other operations\n\t      countDocs(tx, function (docCount) {\n\t        totalRows = docCount;\n\t      });\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.update_seq) {\n\t        // get max sequence in parallel to other operations\n\t        getMaxSeq(tx, function (theSeq) {\n\t          updateSeq = theSeq;\n\t        });\n\t      }\n\t\n\t      if (limit === 0) {\n\t        return;\n\t      }\n\t\n\t      // do a single query to fetch the documents\n\t      var sql = select(\n\t        SELECT_DOCS,\n\t        [DOC_STORE$1, BY_SEQ_STORE$1],\n\t        DOC_STORE_AND_BY_SEQ_JOINER,\n\t        criteria,\n\t        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n\t        );\n\t      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\t\n\t      tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t        for (var i = 0, l = result.rows.length; i < l; i++) {\n\t          var item = result.rows.item(i);\n\t          var metadata = safeJsonParse(item.metadata);\n\t          var id = metadata.id;\n\t          var data = unstringifyDoc(item.data, id, item.rev);\n\t          var winningRev$$1 = data._rev;\n\t          var doc = {\n\t            id: id,\n\t            key: id,\n\t            value: {rev: winningRev$$1}\n\t          };\n\t          if (opts.include_docs) {\n\t            doc.doc = data;\n\t            doc.doc._rev = winningRev$$1;\n\t            if (opts.conflicts) {\n\t              var conflicts = collectConflicts(metadata);\n\t              if (conflicts.length) {\n\t                doc.doc._conflicts = conflicts;\n\t              }\n\t            }\n\t            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n\t          }\n\t          if (item.deleted) {\n\t            if (keys) {\n\t              doc.value.deleted = true;\n\t              doc.doc = null;\n\t            } else {\n\t              // propably should not happen\n\t              continue;\n\t            }\n\t          }\n\t          if (!keys) {\n\t            results.push(doc);\n\t          } else {\n\t            var index = keys.indexOf(id, index);\n\t            do {\n\t              results[index] = doc;\n\t              index = keys.indexOf(id, index + 1);\n\t            } while (index > -1 && index < keys.length);\n\t          }\n\t        }\n\t        if (keys) {\n\t          keys.forEach(function (key, index) {\n\t            if (!results[index]) {\n\t              results[index] = {key: key, error: 'not_found'};\n\t            }\n\t          });\n\t        }\n\t      });\n\t    }, websqlError(callback), function () {\n\t      var returnVal = {\n\t        total_rows: totalRows,\n\t        offset: opts.skip,\n\t        rows: results\n\t      };\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.update_seq) {\n\t        returnVal.update_seq = updateSeq;\n\t      }\n\t      callback(null, returnVal);\n\t    });\n\t  };\n\t\n\t  api._changes = function (opts) {\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous) {\n\t      var id = api._name + ':' + uuid();\n\t      websqlChanges.addListener(api._name, id, api, opts);\n\t      websqlChanges.notify(api._name);\n\t      return {\n\t        cancel: function () {\n\t          websqlChanges.removeListener(api._name, id);\n\t        }\n\t      };\n\t    }\n\t\n\t    var descending = opts.descending;\n\t\n\t    // Ignore the `since` parameter when `descending` is true\n\t    opts.since = opts.since && !descending ? opts.since : 0;\n\t\n\t    var limit = 'limit' in opts ? opts.limit : -1;\n\t    if (limit === 0) {\n\t      limit = 1; // per CouchDB _changes spec\n\t    }\n\t\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    var results = [];\n\t    var numResults = 0;\n\t\n\t    function fetchChanges() {\n\t\n\t      var selectStmt =\n\t        DOC_STORE$1 + '.json AS metadata, ' +\n\t        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n\t        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n\t        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\t\n\t      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\t\n\t      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n\t        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\t\n\t      var criteria = ['maxSeq > ?'];\n\t      var sqlArgs = [opts.since];\n\t\n\t      if (opts.doc_ids) {\n\t        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n\t        sqlArgs = sqlArgs.concat(opts.doc_ids);\n\t      }\n\t\n\t      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\t\n\t      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\t\n\t      var filter = filterChange(opts);\n\t      if (!opts.view && !opts.filter) {\n\t        // we can just limit in the query\n\t        sql += ' LIMIT ' + limit;\n\t      }\n\t\n\t      var lastSeq = opts.since || 0;\n\t      db.readTransaction(function (tx) {\n\t        tx.executeSql(sql, sqlArgs, function (tx, result) {\n\t          function reportChange(change) {\n\t            return function () {\n\t              opts.onChange(change);\n\t            };\n\t          }\n\t          for (var i = 0, l = result.rows.length; i < l; i++) {\n\t            var item = result.rows.item(i);\n\t            var metadata = safeJsonParse(item.metadata);\n\t            lastSeq = item.maxSeq;\n\t\n\t            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n\t              item.winningRev);\n\t            var change = opts.processChange(doc, metadata, opts);\n\t            change.seq = item.maxSeq;\n\t\n\t            var filtered = filter(change);\n\t            if (typeof filtered === 'object') {\n\t              return opts.complete(filtered);\n\t            }\n\t\n\t            if (filtered) {\n\t              numResults++;\n\t              if (returnDocs) {\n\t                results.push(change);\n\t              }\n\t              // process the attachment immediately\n\t              // for the benefit of live listeners\n\t              if (opts.attachments && opts.include_docs) {\n\t                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n\t                  reportChange(change));\n\t              } else {\n\t                reportChange(change)();\n\t              }\n\t            }\n\t            if (numResults === limit) {\n\t              break;\n\t            }\n\t          }\n\t        });\n\t      }, websqlError(opts.complete), function () {\n\t        if (!opts.continuous) {\n\t          opts.complete(null, {\n\t            results: results,\n\t            last_seq: lastSeq\n\t          });\n\t        }\n\t      });\n\t    }\n\t\n\t    fetchChanges();\n\t  };\n\t\n\t  api._close = function (callback) {\n\t    //WebSQL databases do not need to be closed\n\t    callback();\n\t  };\n\t\n\t  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n\t    var res;\n\t    var tx = opts.ctx;\n\t    var digest = attachment.digest;\n\t    var type = attachment.content_type;\n\t    var sql = 'SELECT escaped, ' +\n\t      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n\t      ATTACH_STORE$1 + ' WHERE digest=?';\n\t    tx.executeSql(sql, [digest], function (tx, result) {\n\t      // websql has a bug where \\u0000 causes early truncation in strings\n\t      // and blobs. to work around this, we used to use the hex() function,\n\t      // but that's not performant. after migration 6, we remove \\u0000\n\t      // and add it back in afterwards\n\t      var item = result.rows.item(0);\n\t      var data = item.escaped ? unescapeBlob(item.body) :\n\t        parseHexString(item.body, encoding);\n\t      if (opts.binary) {\n\t        res = binStringToBluffer(data, type);\n\t      } else {\n\t        res = thisBtoa(data);\n\t      }\n\t      callback(null, res);\n\t    });\n\t  };\n\t\n\t  api._getRevisionTree = function (docId, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        if (!result.rows.length) {\n\t          callback(createError(MISSING_DOC));\n\t        } else {\n\t          var data = safeJsonParse(result.rows.item(0).metadata);\n\t          callback(null, data.rev_tree);\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._doCompaction = function (docId, revs, callback) {\n\t    if (!revs.length) {\n\t      return callback();\n\t    }\n\t    db.transaction(function (tx) {\n\t\n\t      // update doc store\n\t      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n\t      tx.executeSql(sql, [docId], function (tx, result) {\n\t        var metadata = safeJsonParse(result.rows.item(0).metadata);\n\t        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n\t                                                           revHash, ctx, opts) {\n\t          var rev$$1 = pos + '-' + revHash;\n\t          if (revs.indexOf(rev$$1) !== -1) {\n\t            opts.status = 'missing';\n\t          }\n\t        });\n\t\n\t        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n\t        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n\t      });\n\t\n\t      compactRevs$1(revs, docId, tx);\n\t    }, websqlError(callback), function () {\n\t      callback();\n\t    });\n\t  };\n\t\n\t  api._getLocal = function (id, callback) {\n\t    db.readTransaction(function (tx) {\n\t      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n\t      tx.executeSql(sql, [id], function (tx, res) {\n\t        if (res.rows.length) {\n\t          var item = res.rows.item(0);\n\t          var doc = unstringifyDoc(item.json, id, item.rev);\n\t          callback(null, doc);\n\t        } else {\n\t          callback(createError(MISSING_DOC));\n\t        }\n\t      });\n\t    });\n\t  };\n\t\n\t  api._putLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    delete doc._revisions; // ignore this, trust the rev\n\t    var oldRev = doc._rev;\n\t    var id = doc._id;\n\t    var newRev;\n\t    if (!oldRev) {\n\t      newRev = doc._rev = '0-1';\n\t    } else {\n\t      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n\t    }\n\t    var json = stringifyDoc(doc);\n\t\n\t    var ret;\n\t    function putLocal(tx) {\n\t      var sql;\n\t      var values;\n\t      if (oldRev) {\n\t        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n\t          'WHERE id=? AND rev=?';\n\t        values = [newRev, json, id, oldRev];\n\t      } else {\n\t        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n\t        values = [id, newRev, json];\n\t      }\n\t      tx.executeSql(sql, values, function (tx, res) {\n\t        if (res.rowsAffected) {\n\t          ret = {ok: true, id: id, rev: newRev};\n\t          if (opts.ctx) { // return immediately\n\t            callback(null, ret);\n\t          }\n\t        } else {\n\t          callback(createError(REV_CONFLICT));\n\t        }\n\t      }, function () {\n\t        callback(createError(REV_CONFLICT));\n\t        return false; // ack that we handled the error\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      putLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(putLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._removeLocal = function (doc, opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var ret;\n\t\n\t    function removeLocal(tx) {\n\t      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n\t      var params = [doc._id, doc._rev];\n\t      tx.executeSql(sql, params, function (tx, res) {\n\t        if (!res.rowsAffected) {\n\t          return callback(createError(MISSING_DOC));\n\t        }\n\t        ret = {ok: true, id: doc._id, rev: '0-0'};\n\t        if (opts.ctx) { // return immediately\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t\n\t    if (opts.ctx) {\n\t      removeLocal(opts.ctx);\n\t    } else {\n\t      db.transaction(removeLocal, websqlError(callback), function () {\n\t        if (ret) {\n\t          callback(null, ret);\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  api._destroy = function (opts, callback) {\n\t    websqlChanges.removeAllListeners(api._name);\n\t    db.transaction(function (tx) {\n\t      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n\t        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n\t      stores.forEach(function (store) {\n\t        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n\t      });\n\t    }, websqlError(callback), function () {\n\t      if (hasLocalStorage()) {\n\t        delete window.localStorage['_pouch__websqldb_' + api._name];\n\t        delete window.localStorage[api._name];\n\t      }\n\t      callback(null, {'ok': true});\n\t    });\n\t  };\n\t}\n\t\n\tfunction canOpenTestDB() {\n\t  try {\n\t    openDatabase('_pouch_validate_websql', 1, '', 1);\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\t// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n\t// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n\t// https://github.com/pouchdb/pouchdb/issues/5079)\n\t// This has been fixed in latest WebKit, so we try to detect it here.\n\tfunction isValidWebSQL() {\n\t  // WKWebView UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n\t  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n\t  // Chrome for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n\t  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n\t  //   Mobile/9B206 Safari/7534.48.3\n\t  // Firefox for iOS UA:\n\t  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n\t  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\t\n\t  // indexedDB is null on some UIWebViews and undefined in others\n\t  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n\t  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n\t      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n\t    // definitely not WKWebView, avoid creating an unnecessary database\n\t    return true;\n\t  }\n\t  // Cache the result in LocalStorage. Reason we do this is because if we\n\t  // call openDatabase() too many times, Safari craps out in SauceLabs and\n\t  // starts throwing DOM Exception 14s.\n\t  var hasLS = hasLocalStorage();\n\t  // Include user agent in the hash, so that if Safari is upgraded, we don't\n\t  // continually think it's broken.\n\t  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n\t  if (hasLS && localStorage[localStorageKey]) {\n\t    return localStorage[localStorageKey] === '1';\n\t  }\n\t  var openedTestDB = canOpenTestDB();\n\t  if (hasLS) {\n\t    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n\t  }\n\t  return openedTestDB;\n\t}\n\t\n\tfunction valid() {\n\t  if (typeof openDatabase !== 'function') {\n\t    return false;\n\t  }\n\t  return isValidWebSQL();\n\t}\n\t\n\tfunction openDB(name, version, description, size) {\n\t  // Traditional WebSQL API\n\t  return openDatabase(name, version, description, size);\n\t}\n\t\n\tfunction WebSQLPouch(opts, callback) {\n\t  var _opts = $inject_Object_assign({\n\t    websql: openDB\n\t  }, opts);\n\t\n\t  WebSqlPouch$1.call(this, _opts, callback);\n\t}\n\t\n\tWebSQLPouch.valid = valid;\n\t\n\tWebSQLPouch.use_prefix = true;\n\t\n\tfunction WebSqlPouch (PouchDB) {\n\t  PouchDB.adapter('websql', WebSQLPouch, true);\n\t}\n\t\n\t/* global fetch */\n\t/* global Headers */\n\tfunction wrappedFetch() {\n\t  var wrappedPromise = {};\n\t\n\t  var promise = new PouchPromise(function (resolve, reject) {\n\t    wrappedPromise.resolve = resolve;\n\t    wrappedPromise.reject = reject;\n\t  });\n\t\n\t  var args = new Array(arguments.length);\n\t\n\t  for (var i = 0; i < args.length; i++) {\n\t    args[i] = arguments[i];\n\t  }\n\t\n\t  wrappedPromise.promise = promise;\n\t\n\t  PouchPromise.resolve().then(function () {\n\t    return fetch.apply(null, args);\n\t  }).then(function (response) {\n\t    wrappedPromise.resolve(response);\n\t  }).catch(function (error) {\n\t    wrappedPromise.reject(error);\n\t  });\n\t\n\t  return wrappedPromise;\n\t}\n\t\n\tfunction fetchRequest(options, callback) {\n\t  var wrappedPromise, timer, response;\n\t\n\t  var headers = new Headers();\n\t\n\t  var fetchOptions = {\n\t    method: options.method,\n\t    credentials: 'include',\n\t    headers: headers\n\t  };\n\t\n\t  if (options.json) {\n\t    headers.set('Accept', 'application/json');\n\t    headers.set('Content-Type', options.headers['Content-Type'] ||\n\t      'application/json');\n\t  }\n\t\n\t  if (options.body &&\n\t      options.processData &&\n\t      typeof options.body !== 'string') {\n\t    fetchOptions.body = JSON.stringify(options.body);\n\t  } else if ('body' in options) {\n\t    fetchOptions.body = options.body;\n\t  } else {\n\t    fetchOptions.body = null;\n\t  }\n\t\n\t  Object.keys(options.headers).forEach(function (key) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      headers.set(key, options.headers[key]);\n\t    }\n\t  });\n\t\n\t  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(function () {\n\t      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n\t        options.url));\n\t    }, options.timeout);\n\t  }\n\t\n\t  wrappedPromise.promise.then(function (fetchResponse) {\n\t    response = {\n\t      statusCode: fetchResponse.status\n\t    };\n\t\n\t    if (options.timeout > 0) {\n\t      clearTimeout(timer);\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n\t    }\n\t\n\t    return fetchResponse.json();\n\t  }).then(function (result) {\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      callback(null, response, result);\n\t    } else {\n\t      result.status = response.statusCode;\n\t      callback(result);\n\t    }\n\t  }).catch(function (error) {\n\t    if (!error) {\n\t      // this happens when the listener is canceled\n\t      error = new Error('canceled');\n\t    }\n\t    callback(error);\n\t  });\n\t\n\t  return {abort: wrappedPromise.reject};\n\t}\n\t\n\tfunction xhRequest(options, callback) {\n\t\n\t  var xhr, timer;\n\t  var timedout = false;\n\t\n\t  var abortReq = function () {\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var timeoutReq = function () {\n\t    timedout = true;\n\t    xhr.abort();\n\t    cleanUp();\n\t  };\n\t\n\t  var ret = {abort: abortReq};\n\t\n\t  var cleanUp = function () {\n\t    clearTimeout(timer);\n\t    ret.abort = function () {};\n\t    if (xhr) {\n\t      xhr.onprogress = undefined;\n\t      if (xhr.upload) {\n\t        xhr.upload.onprogress = undefined;\n\t      }\n\t      xhr.onreadystatechange = undefined;\n\t      xhr = undefined;\n\t    }\n\t  };\n\t\n\t  if (options.xhr) {\n\t    xhr = new options.xhr();\n\t  } else {\n\t    xhr = new XMLHttpRequest();\n\t  }\n\t\n\t  try {\n\t    xhr.open(options.method, options.url);\n\t  } catch (exception) {\n\t    return callback(new Error(exception.name || 'Url is invalid'));\n\t  }\n\t\n\t  xhr.withCredentials = ('withCredentials' in options) ?\n\t    options.withCredentials : true;\n\t\n\t  if (options.method === 'GET') {\n\t    delete options.headers['Content-Type'];\n\t  } else if (options.json) {\n\t    options.headers.Accept = 'application/json';\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t    if (options.body &&\n\t        options.processData &&\n\t        typeof options.body !== \"string\") {\n\t      options.body = JSON.stringify(options.body);\n\t    }\n\t  }\n\t\n\t  if (options.binary) {\n\t    xhr.responseType = 'arraybuffer';\n\t  }\n\t\n\t  if (!('body' in options)) {\n\t    options.body = null;\n\t  }\n\t\n\t  for (var key in options.headers) {\n\t    if (options.headers.hasOwnProperty(key)) {\n\t      xhr.setRequestHeader(key, options.headers[key]);\n\t    }\n\t  }\n\t\n\t  if (options.timeout > 0) {\n\t    timer = setTimeout(timeoutReq, options.timeout);\n\t    xhr.onprogress = function () {\n\t      clearTimeout(timer);\n\t      if (xhr.readyState !== 4) {\n\t        timer = setTimeout(timeoutReq, options.timeout);\n\t      }\n\t    };\n\t    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n\t      xhr.upload.onprogress = xhr.onprogress;\n\t    }\n\t  }\n\t\n\t  xhr.onreadystatechange = function () {\n\t    if (xhr.readyState !== 4) {\n\t      return;\n\t    }\n\t\n\t    var response = {\n\t      statusCode: xhr.status\n\t    };\n\t\n\t    if (xhr.status >= 200 && xhr.status < 300) {\n\t      var data;\n\t      if (options.binary) {\n\t        data = createBlob([xhr.response || ''], {\n\t          type: xhr.getResponseHeader('Content-Type')\n\t        });\n\t      } else {\n\t        data = xhr.responseText;\n\t      }\n\t      callback(null, response, data);\n\t    } else {\n\t      var err = {};\n\t      if (timedout) {\n\t        err = new Error('ETIMEDOUT');\n\t        err.code = 'ETIMEDOUT';\n\t      } else if (typeof xhr.response === 'string') {\n\t        try {\n\t          err = JSON.parse(xhr.response);\n\t        } catch (e) {}\n\t      }\n\t      err.status = xhr.status;\n\t      callback(err);\n\t    }\n\t    cleanUp();\n\t  };\n\t\n\t  if (options.body && (options.body instanceof Blob)) {\n\t    readAsArrayBuffer(options.body, function (arrayBuffer) {\n\t      xhr.send(arrayBuffer);\n\t    });\n\t  } else {\n\t    xhr.send(options.body);\n\t  }\n\t\n\t  return ret;\n\t}\n\t\n\tfunction testXhr() {\n\t  try {\n\t    new XMLHttpRequest();\n\t    return true;\n\t  } catch (err) {\n\t    return false;\n\t  }\n\t}\n\t\n\tvar hasXhr = testXhr();\n\t\n\tfunction ajax$1(options, callback) {\n\t  if (!false && (hasXhr || options.xhr)) {\n\t    return xhRequest(options, callback);\n\t  } else {\n\t    return fetchRequest(options, callback);\n\t  }\n\t}\n\t\n\t// the blob already has a type; do nothing\n\t\n\tfunction defaultBody() {\n\t  return '';\n\t}\n\t\n\tfunction ajaxCore$1(options, callback) {\n\t\n\t  options = clone(options);\n\t\n\t  var defaultOptions = {\n\t    method : \"GET\",\n\t    headers: {},\n\t    json: true,\n\t    processData: true,\n\t    timeout: 10000,\n\t    cache: false\n\t  };\n\t\n\t  options = $inject_Object_assign(defaultOptions, options);\n\t\n\t  function onSuccess(obj, resp, cb) {\n\t    if (!options.binary && options.json && typeof obj === 'string') {\n\t      /* istanbul ignore next */\n\t      try {\n\t        obj = JSON.parse(obj);\n\t      } catch (e) {\n\t        // Probably a malformed JSON from server\n\t        return cb(e);\n\t      }\n\t    }\n\t    if (Array.isArray(obj)) {\n\t      obj = obj.map(function (v) {\n\t        if (v.error || v.missing) {\n\t          return generateErrorFromResponse(v);\n\t        } else {\n\t          return v;\n\t        }\n\t      });\n\t    }\n\t    if (options.binary) {\n\t      \n\t    }\n\t    cb(null, obj, resp);\n\t  }\n\t\n\t  if (options.json) {\n\t    if (!options.binary) {\n\t      options.headers.Accept = 'application/json';\n\t    }\n\t    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n\t      'application/json';\n\t  }\n\t\n\t  if (options.binary) {\n\t    options.encoding = null;\n\t    options.json = false;\n\t  }\n\t\n\t  if (!options.processData) {\n\t    options.json = false;\n\t  }\n\t\n\t  return ajax$1(options, function (err, response, body) {\n\t\n\t    if (err) {\n\t      return callback(generateErrorFromResponse(err));\n\t    }\n\t\n\t    var error;\n\t    var content_type = response.headers && response.headers['content-type'];\n\t    var data = body || defaultBody();\n\t\n\t    // CouchDB doesn't always return the right content-type for JSON data, so\n\t    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n\t    if (!options.binary && (options.json || !options.processData) &&\n\t        typeof data !== 'object' &&\n\t        (/json/.test(content_type) ||\n\t         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n\t      try {\n\t        data = JSON.parse(data.toString());\n\t      } catch (e) {}\n\t    }\n\t\n\t    if (response.statusCode >= 200 && response.statusCode < 300) {\n\t      onSuccess(data, response, callback);\n\t    } else {\n\t      error = generateErrorFromResponse(data);\n\t      error.status = response.statusCode;\n\t      callback(error);\n\t    }\n\t  });\n\t}\n\t\n\tfunction ajax(opts, callback) {\n\t\n\t  // cache-buster, specifically designed to work around IE's aggressive caching\n\t  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n\t  // Also Safari caches POSTs, so we need to cache-bust those too.\n\t  var ua = (navigator && navigator.userAgent) ?\n\t    navigator.userAgent.toLowerCase() : '';\n\t\n\t  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n\t  var isIE = ua.indexOf('msie') !== -1;\n\t  var isTrident = ua.indexOf('trident') !== -1;\n\t  var isEdge = ua.indexOf('edge') !== -1;\n\t\n\t  // it appears the new version of safari also caches GETs,\n\t  // see https://github.com/pouchdb/pouchdb/issues/5010\n\t  var shouldCacheBust = (isSafari ||\n\t    ((isIE || isTrident || isEdge) && opts.method === 'GET'));\n\t\n\t  var cache = 'cache' in opts ? opts.cache : true;\n\t\n\t  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\t\n\t  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n\t    var hasArgs = opts.url.indexOf('?') !== -1;\n\t    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n\t  }\n\t\n\t  return ajaxCore$1(opts, callback);\n\t}\n\t\n\t// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n\t// but much smaller in code size. limits the number of concurrent promises that are executed\n\t\n\t\n\tfunction pool(promiseFactories, limit) {\n\t  return new PouchPromise(function (resolve, reject) {\n\t    var running = 0;\n\t    var current = 0;\n\t    var done = 0;\n\t    var len = promiseFactories.length;\n\t    var err;\n\t\n\t    function runNext() {\n\t      running++;\n\t      promiseFactories[current++]().then(onSuccess, onError);\n\t    }\n\t\n\t    function doNext() {\n\t      if (++done === len) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          reject(err);\n\t        } else {\n\t          resolve();\n\t        }\n\t      } else {\n\t        runNextBatch();\n\t      }\n\t    }\n\t\n\t    function onSuccess() {\n\t      running--;\n\t      doNext();\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    function onError(thisErr) {\n\t      running--;\n\t      err = err || thisErr;\n\t      doNext();\n\t    }\n\t\n\t    function runNextBatch() {\n\t      while (running < limit && current < len) {\n\t        runNext();\n\t      }\n\t    }\n\t\n\t    runNextBatch();\n\t  });\n\t}\n\t\n\tvar CHANGES_BATCH_SIZE = 25;\n\tvar MAX_SIMULTANEOUS_REVS = 50;\n\tvar CHANGES_TIMEOUT_BUFFER = 5000;\n\tvar DEFAULT_HEARTBEAT = 10000;\n\t\n\tvar supportsBulkGetMap = {};\n\t\n\tfunction readAttachmentsAsBlobOrBuffer(row) {\n\t  var doc = row.doc || row.ok;\n\t  var atts = doc._attachments;\n\t  if (!atts) {\n\t    return;\n\t  }\n\t  Object.keys(atts).forEach(function (filename) {\n\t    var att = atts[filename];\n\t    att.data = b64ToBluffer(att.data, att.content_type);\n\t  });\n\t}\n\t\n\tfunction encodeDocId(id) {\n\t  if (/^_design/.test(id)) {\n\t    return '_design/' + encodeURIComponent(id.slice(8));\n\t  }\n\t  if (/^_local/.test(id)) {\n\t    return '_local/' + encodeURIComponent(id.slice(7));\n\t  }\n\t  return encodeURIComponent(id);\n\t}\n\t\n\tfunction preprocessAttachments$2(doc) {\n\t  if (!doc._attachments || !Object.keys(doc._attachments)) {\n\t    return PouchPromise.resolve();\n\t  }\n\t\n\t  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n\t    var attachment = doc._attachments[key];\n\t    if (attachment.data && typeof attachment.data !== 'string') {\n\t      return new PouchPromise(function (resolve) {\n\t        blobToBase64(attachment.data, resolve);\n\t      }).then(function (b64) {\n\t        attachment.data = b64;\n\t      });\n\t    }\n\t  }));\n\t}\n\t\n\tfunction hasUrlPrefix(opts) {\n\t  if (!opts.prefix) {\n\t    return false;\n\t  }\n\t\n\t  var protocol = parseUri(opts.prefix).protocol;\n\t\n\t  return protocol === 'http' || protocol === 'https';\n\t}\n\t\n\t// Get all the information you possibly can about the URI given by name and\n\t// return it as a suitable object.\n\tfunction getHost(name, opts) {\n\t\n\t  // encode db name if opts.prefix is a url (#5574)\n\t  if (hasUrlPrefix(opts)) {\n\t    var dbName = opts.name.substr(opts.prefix.length);\n\t    name = opts.prefix + encodeURIComponent(dbName);\n\t  }\n\t\n\t  // Prase the URI into all its little bits\n\t  var uri = parseUri(name);\n\t\n\t  // Store the user and password as a separate auth object\n\t  if (uri.user || uri.password) {\n\t    uri.auth = {username: uri.user, password: uri.password};\n\t  }\n\t\n\t  // Split the path part of the URI into parts using '/' as the delimiter\n\t  // after removing any leading '/' and any trailing '/'\n\t  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\t\n\t  // Store the first part as the database name and remove it from the parts\n\t  // array\n\t  uri.db = parts.pop();\n\t  // Prevent double encoding of URI component\n\t  if (uri.db.indexOf('%') === -1) {\n\t    uri.db = encodeURIComponent(uri.db);\n\t  }\n\t\n\t  // Restore the path by joining all the remaining parts (all the parts\n\t  // except for the database name) with '/'s\n\t  uri.path = parts.join('/');\n\t\n\t  return uri;\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genDBUrl(opts, path) {\n\t  return genUrl(opts, opts.db + '/' + path);\n\t}\n\t\n\t// Generate a URL with the host data given by opts and the given path\n\tfunction genUrl(opts, path) {\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  var pathDel = !opts.path ? '' : '/';\n\t\n\t  // If the host already has a path, then we need to have a path delimiter\n\t  // Otherwise, the path delimiter is the empty string\n\t  return opts.protocol + '://' + opts.host +\n\t         (opts.port ? (':' + opts.port) : '') +\n\t         '/' + opts.path + pathDel + path;\n\t}\n\t\n\tfunction paramsToStr(params) {\n\t  return '?' + Object.keys(params).map(function (k) {\n\t    return k + '=' + encodeURIComponent(params[k]);\n\t  }).join('&');\n\t}\n\t\n\t// Implements the PouchDB API for dealing with CouchDB instances over HTTP\n\tfunction HttpPouch(opts, callback) {\n\t\n\t  // The functions that will be publicly available for HttpPouch\n\t  var api = this;\n\t\n\t  var host = getHost(opts.name, opts);\n\t  var dbUrl = genDBUrl(host, '');\n\t\n\t  opts = clone(opts);\n\t  var ajaxOpts = opts.ajax || {};\n\t\n\t  if (opts.auth || host.auth) {\n\t    var nAuth = opts.auth || host.auth;\n\t    var str = nAuth.username + ':' + nAuth.password;\n\t    var token = thisBtoa(unescape(encodeURIComponent(str)));\n\t    ajaxOpts.headers = ajaxOpts.headers || {};\n\t    ajaxOpts.headers.Authorization = 'Basic ' + token;\n\t  }\n\t\n\t  // Not strictly necessary, but we do this because numerous tests\n\t  // rely on swapping ajax in and out.\n\t  api._ajax = ajax;\n\t\n\t  function ajax$$1(userOpts, options, callback) {\n\t    var reqAjax = (userOpts || {}).ajax || {};\n\t    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n\t    var defaultHeaders = clone(ajaxOpts.headers || {});\n\t    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n\t      options.headers || {});\n\t    /* istanbul ignore if */\n\t    if (api.constructor.listeners('debug').length) {\n\t      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n\t    }\n\t    return api._ajax(reqOpts, callback);\n\t  }\n\t\n\t  function ajaxPromise(userOpts, opts) {\n\t    return new PouchPromise(function (resolve, reject) {\n\t      ajax$$1(userOpts, opts, function (err, res) {\n\t        /* istanbul ignore if */\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  function adapterFun$$1(name, fun) {\n\t    return adapterFun(name, getArguments(function (args) {\n\t      setup().then(function () {\n\t        return fun.apply(this, args);\n\t      }).catch(function (e) {\n\t        var callback = args.pop();\n\t        callback(e);\n\t      });\n\t    }));\n\t  }\n\t\n\t  var setupPromise;\n\t\n\t  function setup() {\n\t    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n\t    if (opts.skipSetup || opts.skip_setup) {\n\t      return PouchPromise.resolve();\n\t    }\n\t\n\t    // If there is a setup in process or previous successful setup\n\t    // done then we will use that\n\t    // If previous setups have been rejected we will try again\n\t    if (setupPromise) {\n\t      return setupPromise;\n\t    }\n\t\n\t    var checkExists = {method: 'GET', url: dbUrl};\n\t    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n\t      if (err && err.status && err.status === 404) {\n\t        // Doesnt exist, create it\n\t        explainError(404, 'PouchDB is just detecting if the remote exists.');\n\t        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n\t      } else {\n\t        return PouchPromise.reject(err);\n\t      }\n\t    }).catch(function (err) {\n\t      // If we try to create a database that already exists, skipped in\n\t      // istanbul since its catching a race condition.\n\t      /* istanbul ignore if */\n\t      if (err && err.status && err.status === 412) {\n\t        return true;\n\t      }\n\t      return PouchPromise.reject(err);\n\t    });\n\t\n\t    setupPromise.catch(function () {\n\t      setupPromise = null;\n\t    });\n\t\n\t    return setupPromise;\n\t  }\n\t\n\t  nextTick(function () {\n\t    callback(null, api);\n\t  });\n\t\n\t  api._remote = true;\n\t  /* istanbul ignore next */\n\t  api.type = function () {\n\t    return 'http';\n\t  };\n\t\n\t  api.id = adapterFun$$1('id', function (callback) {\n\t    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n\t      var uuid$$1 = (result && result.uuid) ?\n\t        (result.uuid + host.db) : genDBUrl(host, '');\n\t      callback(null, uuid$$1);\n\t    });\n\t  });\n\t\n\t  api.request = adapterFun$$1('request', function (options, callback) {\n\t    options.url = genDBUrl(host, options.url);\n\t    ajax$$1({}, options, callback);\n\t  });\n\t\n\t  // Sends a POST request to the host calling the couchdb _compact function\n\t  //    version: The version of CouchDB it is running\n\t  api.compact = adapterFun$$1('compact', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t    ajax$$1(opts, {\n\t      url: genDBUrl(host, '_compact'),\n\t      method: 'POST'\n\t    }, function () {\n\t      function ping() {\n\t        api.info(function (err, res) {\n\t          // CouchDB may send a \"compact_running:true\" if it's\n\t          // already compacting. PouchDB Server doesn't.\n\t          /* istanbul ignore else */\n\t          if (res && !res.compact_running) {\n\t            callback(null, {ok: true});\n\t          } else {\n\t            setTimeout(ping, opts.interval || 200);\n\t          }\n\t        });\n\t      }\n\t      // Ping the http if it's finished compaction\n\t      ping();\n\t    });\n\t  });\n\t\n\t  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n\t    var self = this;\n\t\n\t    function doBulkGet(cb) {\n\t      var params = {};\n\t      if (opts.revs) {\n\t        params.revs = true;\n\t      }\n\t      if (opts.attachments) {\n\t        /* istanbul ignore next */\n\t        params.attachments = true;\n\t      }\n\t      if (opts.latest) {\n\t        params.latest = true;\n\t      }\n\t      ajax$$1(opts, {\n\t        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n\t        method: 'POST',\n\t        body: { docs: opts.docs}\n\t      }, function (err, result) {\n\t        if (!err && opts.attachments && opts.binary) {\n\t          result.results.forEach(function (res) {\n\t            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n\t          });\n\t        }\n\t        cb(err, result);\n\t      });\n\t    }\n\t\n\t    /* istanbul ignore next */\n\t    function doBulkGetShim() {\n\t      // avoid \"url too long error\" by splitting up into multiple requests\n\t      var batchSize = MAX_SIMULTANEOUS_REVS;\n\t      var numBatches = Math.ceil(opts.docs.length / batchSize);\n\t      var numDone = 0;\n\t      var results = new Array(numBatches);\n\t\n\t      function onResult(batchNum) {\n\t        return function (err, res) {\n\t          // err is impossible because shim returns a list of errs in that case\n\t          results[batchNum] = res.results;\n\t          if (++numDone === numBatches) {\n\t            callback(null, {results: flatten(results)});\n\t          }\n\t        };\n\t      }\n\t\n\t      for (var i = 0; i < numBatches; i++) {\n\t        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n\t        subOpts.ajax = ajaxOpts;\n\t        subOpts.docs = opts.docs.slice(i * batchSize,\n\t          Math.min(opts.docs.length, (i + 1) * batchSize));\n\t        bulkGet(self, subOpts, onResult(i));\n\t      }\n\t    }\n\t\n\t    // mark the whole database as either supporting or not supporting _bulk_get\n\t    var dbUrl = genUrl(host, '');\n\t    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\t\n\t    /* istanbul ignore next */\n\t    if (typeof supportsBulkGet !== 'boolean') {\n\t      // check if this database supports _bulk_get\n\t      doBulkGet(function (err, res) {\n\t        if (err) {\n\t          supportsBulkGetMap[dbUrl] = false;\n\t          explainError(\n\t            err.status,\n\t            'PouchDB is just detecting if the remote ' +\n\t            'supports the _bulk_get API.'\n\t          );\n\t          doBulkGetShim();\n\t        } else {\n\t          supportsBulkGetMap[dbUrl] = true;\n\t          callback(null, res);\n\t        }\n\t      });\n\t    } else if (supportsBulkGet) {\n\t      doBulkGet(callback);\n\t    } else {\n\t      doBulkGetShim();\n\t    }\n\t  });\n\t\n\t  // Calls GET on the host, which gets back a JSON string containing\n\t  //    couchdb: A welcome string\n\t  //    version: The version of CouchDB it is running\n\t  api._info = function (callback) {\n\t    setup().then(function () {\n\t      ajax$$1({}, {\n\t        method: 'GET',\n\t        url: genDBUrl(host, '')\n\t      }, function (err, res) {\n\t        /* istanbul ignore next */\n\t        if (err) {\n\t        return callback(err);\n\t        }\n\t        res.host = genDBUrl(host, '');\n\t        callback(null, res);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t  // Get the document with the given id from the database given by host.\n\t  // The id could be solely the _id in the database, or it may be a\n\t  // _design/ID or _local/ID path\n\t  api.get = adapterFun$$1('get', function (id, opts, callback) {\n\t    // If no options were given, set the callback to the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t\n\t    if (opts.revs) {\n\t      params.revs = true;\n\t    }\n\t\n\t    if (opts.revs_info) {\n\t      params.revs_info = true;\n\t    }\n\t\n\t    if (opts.latest) {\n\t      params.latest = true;\n\t    }\n\t\n\t    if (opts.open_revs) {\n\t      if (opts.open_revs !== \"all\") {\n\t        opts.open_revs = JSON.stringify(opts.open_revs);\n\t      }\n\t      params.open_revs = opts.open_revs;\n\t    }\n\t\n\t    if (opts.rev) {\n\t      params.rev = opts.rev;\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = opts.conflicts;\n\t    }\n\t\n\t    /* istanbul ignore if */\n\t    if (opts.update_seq) {\n\t      params.update_seq = opts.update_seq;\n\t    }\n\t\n\t    id = encodeDocId(id);\n\t\n\t    // Set the options for the ajax call\n\t    var options = {\n\t      method: 'GET',\n\t      url: genDBUrl(host, id + paramsToStr(params))\n\t    };\n\t\n\t    function fetchAttachments(doc) {\n\t      var atts = doc._attachments;\n\t      var filenames = atts && Object.keys(atts);\n\t      if (!atts || !filenames.length) {\n\t        return;\n\t      }\n\t      // we fetch these manually in separate XHRs, because\n\t      // Sync Gateway would normally send it back as multipart/mixed,\n\t      // which we cannot parse. Also, this is more efficient than\n\t      // receiving attachments as base64-encoded strings.\n\t      function fetch(filename) {\n\t        var att = atts[filename];\n\t        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n\t          '?rev=' + doc._rev;\n\t        return ajaxPromise(opts, {\n\t          method: 'GET',\n\t          url: genDBUrl(host, path),\n\t          binary: true\n\t        }).then(function (blob) {\n\t          if (opts.binary) {\n\t            return blob;\n\t          }\n\t          return new PouchPromise(function (resolve) {\n\t            blobToBase64(blob, resolve);\n\t          });\n\t        }).then(function (data) {\n\t          delete att.stub;\n\t          delete att.length;\n\t          att.data = data;\n\t        });\n\t      }\n\t\n\t      var promiseFactories = filenames.map(function (filename) {\n\t        return function () {\n\t          return fetch(filename);\n\t        };\n\t      });\n\t\n\t      // This limits the number of parallel xhr requests to 5 any time\n\t      // to avoid issues with maximum browser request limits\n\t      return pool(promiseFactories, 5);\n\t    }\n\t\n\t    function fetchAllAttachments(docOrDocs) {\n\t      if (Array.isArray(docOrDocs)) {\n\t        return PouchPromise.all(docOrDocs.map(function (doc) {\n\t          if (doc.ok) {\n\t            return fetchAttachments(doc.ok);\n\t          }\n\t        }));\n\t      }\n\t      return fetchAttachments(docOrDocs);\n\t    }\n\t\n\t    ajaxPromise(opts, options).then(function (res) {\n\t      return PouchPromise.resolve().then(function () {\n\t        if (opts.attachments) {\n\t          return fetchAllAttachments(res);\n\t        }\n\t      }).then(function () {\n\t        callback(null, res);\n\t      });\n\t    }).catch(function (e) {\n\t      e.docId = id;\n\t      callback(e);\n\t    });\n\t  });\n\t\n\t  // Delete the document given by doc from the database given by host.\n\t  api.remove = adapterFun$$1('remove',\n\t      function (docOrId, optsOrRev, opts, callback) {\n\t    var doc;\n\t    if (typeof optsOrRev === 'string') {\n\t      // id, rev, opts, callback style\n\t      doc = {\n\t        _id: docOrId,\n\t        _rev: optsOrRev\n\t      };\n\t      if (typeof opts === 'function') {\n\t        callback = opts;\n\t        opts = {};\n\t      }\n\t    } else {\n\t      // doc, opts, callback style\n\t      doc = docOrId;\n\t      if (typeof optsOrRev === 'function') {\n\t        callback = optsOrRev;\n\t        opts = {};\n\t      } else {\n\t        callback = opts;\n\t        opts = optsOrRev;\n\t      }\n\t    }\n\t\n\t    var rev$$1 = (doc._rev || opts.rev);\n\t\n\t    // Delete the document\n\t    ajax$$1(opts, {\n\t      method: 'DELETE',\n\t      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n\t    }, callback);\n\t  });\n\t\n\t  function encodeAttachmentId(attachmentId) {\n\t    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n\t  }\n\t\n\t  // Get the attachment\n\t  api.getAttachment =\n\t    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n\t                                                callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n\t    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n\t      encodeAttachmentId(attachmentId) + params;\n\t    ajax$$1(opts, {\n\t      method: 'GET',\n\t      url: url,\n\t      binary: true\n\t    }, callback);\n\t  });\n\t\n\t  // Remove the attachment given by the id and rev\n\t  api.removeAttachment =\n\t    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n\t                                                   callback) {\n\t\n\t    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n\t      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\t\n\t    ajax$$1({}, {\n\t      method: 'DELETE',\n\t      url: url\n\t    }, callback);\n\t  });\n\t\n\t  // Add the attachment given by blob and its contentType property\n\t  // to the document with the given id, the revision given by rev, and\n\t  // add it to the database given by host.\n\t  api.putAttachment =\n\t    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n\t                                                type, callback) {\n\t    if (typeof type === 'function') {\n\t      callback = type;\n\t      type = blob;\n\t      blob = rev$$1;\n\t      rev$$1 = null;\n\t    }\n\t    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n\t    var url = genDBUrl(host, id);\n\t    if (rev$$1) {\n\t      url += '?rev=' + rev$$1;\n\t    }\n\t\n\t    if (typeof blob === 'string') {\n\t      // input is assumed to be a base64 string\n\t      var binary;\n\t      try {\n\t        binary = thisAtob(blob);\n\t      } catch (err) {\n\t        return callback(createError(BAD_ARG,\n\t                        'Attachment is not a valid base64 string'));\n\t      }\n\t      blob = binary ? binStringToBluffer(binary, type) : '';\n\t    }\n\t\n\t    var opts = {\n\t      headers: {'Content-Type': type},\n\t      method: 'PUT',\n\t      url: url,\n\t      processData: false,\n\t      body: blob,\n\t      timeout: ajaxOpts.timeout || 60000\n\t    };\n\t    // Add the attachment\n\t    ajax$$1({}, opts, callback);\n\t  });\n\t\n\t  // Update/create multiple documents given by req in the database\n\t  // given by host.\n\t  api._bulkDocs = function (req, opts, callback) {\n\t    // If new_edits=false then it prevents the database from creating\n\t    // new revision numbers for the documents. Instead it just uses\n\t    // the old ones. This is used in database replication.\n\t    req.new_edits = opts.new_edits;\n\t\n\t    setup().then(function () {\n\t      return PouchPromise.all(req.docs.map(preprocessAttachments$2));\n\t    }).then(function () {\n\t      // Update/create the documents\n\t      ajax$$1(opts, {\n\t        method: 'POST',\n\t        url: genDBUrl(host, '_bulk_docs'),\n\t        timeout: opts.timeout,\n\t        body: req\n\t      }, function (err, results) {\n\t        if (err) {\n\t          return callback(err);\n\t        }\n\t        results.forEach(function (result) {\n\t          result.ok = true; // smooths out cloudant not adding this\n\t        });\n\t        callback(null, results);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Update/create document\n\t  api._put = function (doc, opts, callback) {\n\t    setup().then(function () {\n\t      return preprocessAttachments$2(doc);\n\t    }).then(function () {\n\t      // Update/create the document\n\t      ajax$$1(opts, {\n\t        method: 'PUT',\n\t        url: genDBUrl(host, encodeDocId(doc._id)),\n\t        body: doc\n\t      }, function (err, result) {\n\t        if (err) {\n\t          err.docId = doc && doc._id;\n\t          return callback(err);\n\t        }\n\t        callback(null, result);\n\t      });\n\t    }).catch(callback);\n\t  };\n\t\n\t\n\t  // Get a listing of the documents in the database given\n\t  // by host and ordered by increasing id.\n\t  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = clone(opts);\n\t\n\t    // List of parameters to add to the GET request\n\t    var params = {};\n\t    var body;\n\t    var method = 'GET';\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    /* istanbul ignore if */\n\t    if (opts.update_seq) {\n\t      params.update_seq = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t\n\t    if (opts.include_docs) {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    // added in CouchDB 1.6.0\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.key) {\n\t      params.key = JSON.stringify(opts.key);\n\t    }\n\t\n\t    if (opts.start_key) {\n\t      opts.startkey = opts.start_key;\n\t    }\n\t\n\t    if (opts.startkey) {\n\t      params.startkey = JSON.stringify(opts.startkey);\n\t    }\n\t\n\t    if (opts.end_key) {\n\t      opts.endkey = opts.end_key;\n\t    }\n\t\n\t    if (opts.endkey) {\n\t      params.endkey = JSON.stringify(opts.endkey);\n\t    }\n\t\n\t    if (typeof opts.inclusive_end !== 'undefined') {\n\t      params.inclusive_end = !!opts.inclusive_end;\n\t    }\n\t\n\t    if (typeof opts.limit !== 'undefined') {\n\t      params.limit = opts.limit;\n\t    }\n\t\n\t    if (typeof opts.skip !== 'undefined') {\n\t      params.skip = opts.skip;\n\t    }\n\t\n\t    var paramStr = paramsToStr(params);\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      method = 'POST';\n\t      body = {keys: opts.keys};\n\t    }\n\t\n\t    // Get the document listing\n\t    ajaxPromise(opts, {\n\t      method: method,\n\t      url: genDBUrl(host, '_all_docs' + paramStr),\n\t      body: body\n\t    }).then(function (res) {\n\t      if (opts.include_docs && opts.attachments && opts.binary) {\n\t        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n\t      }\n\t      callback(null, res);\n\t    }).catch(callback);\n\t  });\n\t\n\t  // Get a list of changes made to documents in the database given by host.\n\t  // TODO According to the README, there should be two other methods here,\n\t  // api.changes.addListener and api.changes.removeListener.\n\t  api._changes = function (opts) {\n\t\n\t    // We internally page the results of a changes request, this means\n\t    // if there is a large set of changes to be returned we can start\n\t    // processing them quicker instead of waiting on the entire\n\t    // set of changes to return and attempting to process them at once\n\t    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\t\n\t    opts = clone(opts);\n\t\n\t    if (opts.continuous && !('heartbeat' in opts)) {\n\t      opts.heartbeat = DEFAULT_HEARTBEAT;\n\t    }\n\t\n\t    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n\t      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n\t      30 * 1000;\n\t\n\t    // ensure CHANGES_TIMEOUT_BUFFER applies\n\t    if ('timeout' in opts && opts.timeout &&\n\t      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n\t        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n\t    }\n\t\n\t    if ('heartbeat' in opts && opts.heartbeat &&\n\t       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n\t        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n\t    }\n\t\n\t    var params = {};\n\t    if ('timeout' in opts && opts.timeout) {\n\t      params.timeout = opts.timeout;\n\t    }\n\t\n\t    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n\t    var returnDocs;\n\t    if ('return_docs' in opts) {\n\t      returnDocs = opts.return_docs;\n\t    } else if ('returnDocs' in opts) {\n\t      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n\t      returnDocs = opts.returnDocs;\n\t    } else {\n\t      returnDocs = true;\n\t    }\n\t    //\n\t    var leftToFetch = limit;\n\t\n\t    if (opts.style) {\n\t      params.style = opts.style;\n\t    }\n\t\n\t    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n\t      params.include_docs = true;\n\t    }\n\t\n\t    if (opts.attachments) {\n\t      params.attachments = true;\n\t    }\n\t\n\t    if (opts.continuous) {\n\t      params.feed = 'longpoll';\n\t    }\n\t\n\t    if (opts.seq_interval) {\n\t      params.seq_interval = opts.seq_interval;\n\t    }\n\t\n\t    if (opts.conflicts) {\n\t      params.conflicts = true;\n\t    }\n\t\n\t    if (opts.descending) {\n\t      params.descending = true;\n\t    }\n\t    \n\t    /* istanbul ignore if */\n\t    if (opts.update_seq) {\n\t      params.update_seq = true;\n\t    }\n\t\n\t    if ('heartbeat' in opts) {\n\t      // If the heartbeat value is false, it disables the default heartbeat\n\t      if (opts.heartbeat) {\n\t        params.heartbeat = opts.heartbeat;\n\t      }\n\t    }\n\t\n\t    if (opts.filter && typeof opts.filter === 'string') {\n\t      params.filter = opts.filter;\n\t    }\n\t\n\t    if (opts.view && typeof opts.view === 'string') {\n\t      params.filter = '_view';\n\t      params.view = opts.view;\n\t    }\n\t\n\t    // If opts.query_params exists, pass it through to the changes request.\n\t    // These parameters may be used by the filter on the source database.\n\t    if (opts.query_params && typeof opts.query_params === 'object') {\n\t      for (var param_name in opts.query_params) {\n\t        /* istanbul ignore else */\n\t        if (opts.query_params.hasOwnProperty(param_name)) {\n\t          params[param_name] = opts.query_params[param_name];\n\t        }\n\t      }\n\t    }\n\t\n\t    var method = 'GET';\n\t    var body;\n\t\n\t    if (opts.doc_ids) {\n\t      // set this automagically for the user; it's annoying that couchdb\n\t      // requires both a \"filter\" and a \"doc_ids\" param.\n\t      params.filter = '_doc_ids';\n\t      method = 'POST';\n\t      body = {doc_ids: opts.doc_ids };\n\t    }\n\t    /* istanbul ignore next */\n\t    else if (opts.selector) {\n\t      // set this automagically for the user, similar to above\n\t      params.filter = '_selector';\n\t      method = 'POST';\n\t      body = {selector: opts.selector };\n\t    }\n\t\n\t    var xhr;\n\t    var lastFetchedSeq;\n\t\n\t    // Get all the changes starting wtih the one immediately after the\n\t    // sequence number given by since.\n\t    var fetch = function (since, callback) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      params.since = since;\n\t      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n\t      /* istanbul ignore next */\n\t      if (typeof params.since === \"object\") {\n\t        params.since = JSON.stringify(params.since);\n\t      }\n\t\n\t      if (opts.descending) {\n\t        if (limit) {\n\t          params.limit = leftToFetch;\n\t        }\n\t      } else {\n\t        params.limit = (!limit || leftToFetch > batchSize) ?\n\t          batchSize : leftToFetch;\n\t      }\n\t\n\t      // Set the options for the ajax call\n\t      var xhrOpts = {\n\t        method: method,\n\t        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n\t        timeout: requestTimeout,\n\t        body: body\n\t      };\n\t      lastFetchedSeq = since;\n\t\n\t      /* istanbul ignore if */\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t\n\t      // Get the changes\n\t      setup().then(function () {\n\t        xhr = ajax$$1(opts, xhrOpts, callback);\n\t      }).catch(callback);\n\t    };\n\t\n\t    // If opts.since exists, get all the changes from the sequence\n\t    // number given by opts.since. Otherwise, get all the changes\n\t    // from the sequence number 0.\n\t    var results = {results: []};\n\t\n\t    var fetched = function (err, res) {\n\t      if (opts.aborted) {\n\t        return;\n\t      }\n\t      var raw_results_length = 0;\n\t      // If the result of the ajax call (res) contains changes (res.results)\n\t      if (res && res.results) {\n\t        raw_results_length = res.results.length;\n\t        results.last_seq = res.last_seq;\n\t        var pending = null;\n\t        var lastSeq = null;\n\t        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\t        /* istanbul ignore if */\n\t        if (typeof res.pending === 'number') {\n\t          pending = res.pending;\n\t        }\n\t        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n\t          lastSeq = results.last_seq;\n\t        }\n\t        // For each change\n\t        var req = {};\n\t        req.query = opts.query_params;\n\t        res.results = res.results.filter(function (c) {\n\t          leftToFetch--;\n\t          var ret = filterChange(opts)(c);\n\t          if (ret) {\n\t            if (opts.include_docs && opts.attachments && opts.binary) {\n\t              readAttachmentsAsBlobOrBuffer(c);\n\t            }\n\t            if (returnDocs) {\n\t              results.results.push(c);\n\t            }\n\t            opts.onChange(c, pending, lastSeq);\n\t          }\n\t          return ret;\n\t        });\n\t      } else if (err) {\n\t        // In case of an error, stop listening for changes and call\n\t        // opts.complete\n\t        opts.aborted = true;\n\t        opts.complete(err);\n\t        return;\n\t      }\n\t\n\t      // The changes feed may have timed out with no results\n\t      // if so reuse last update sequence\n\t      if (res && res.last_seq) {\n\t        lastFetchedSeq = res.last_seq;\n\t      }\n\t\n\t      var finished = (limit && leftToFetch <= 0) ||\n\t        (res && raw_results_length < batchSize) ||\n\t        (opts.descending);\n\t\n\t      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n\t        // Queue a call to fetch again with the newest sequence number\n\t        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n\t      } else {\n\t        // We're done, call the callback\n\t        opts.complete(null, results);\n\t      }\n\t    };\n\t\n\t    fetch(opts.since || 0, fetched);\n\t\n\t    // Return a method to cancel this method from processing any more\n\t    return {\n\t      cancel: function () {\n\t        opts.aborted = true;\n\t        if (xhr) {\n\t          xhr.abort();\n\t        }\n\t      }\n\t    };\n\t  };\n\t\n\t  // Given a set of document/revision IDs (given by req), tets the subset of\n\t  // those that do NOT correspond to revisions stored in the database.\n\t  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n\t  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n\t    // If no options were given, set the callback to be the second parameter\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t\n\t    // Get the missing document/revision IDs\n\t    ajax$$1(opts, {\n\t      method: 'POST',\n\t      url: genDBUrl(host, '_revs_diff'),\n\t      body: req\n\t    }, callback);\n\t  });\n\t\n\t  api._close = function (callback) {\n\t    callback();\n\t  };\n\t\n\t  api._destroy = function (options, callback) {\n\t    ajax$$1(options, {\n\t      url: genDBUrl(host, ''),\n\t      method: 'DELETE'\n\t    }, function (err, resp) {\n\t      if (err && err.status && err.status !== 404) {\n\t        return callback(err);\n\t      }\n\t      callback(null, resp);\n\t    });\n\t  };\n\t}\n\t\n\t// HttpPouch is a valid adapter.\n\tHttpPouch.valid = function () {\n\t  return true;\n\t};\n\t\n\tfunction HttpPouch$1 (PouchDB) {\n\t  PouchDB.adapter('http', HttpPouch, false);\n\t  PouchDB.adapter('https', HttpPouch, false);\n\t}\n\t\n\tfunction QueryParseError(message) {\n\t  this.status = 400;\n\t  this.name = 'query_parse_error';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, QueryParseError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(QueryParseError, Error);\n\t\n\tfunction NotFoundError(message) {\n\t  this.status = 404;\n\t  this.name = 'not_found';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, NotFoundError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(NotFoundError, Error);\n\t\n\tfunction BuiltInError(message) {\n\t  this.status = 500;\n\t  this.name = 'invalid_value';\n\t  this.message = message;\n\t  this.error = true;\n\t  try {\n\t    Error.captureStackTrace(this, BuiltInError);\n\t  } catch (e) {}\n\t}\n\t\n\tinherits(BuiltInError, Error);\n\t\n\tfunction promisedCallback(promise, callback) {\n\t  if (callback) {\n\t    promise.then(function (res) {\n\t      nextTick(function () {\n\t        callback(null, res);\n\t      });\n\t    }, function (reason) {\n\t      nextTick(function () {\n\t        callback(reason);\n\t      });\n\t    });\n\t  }\n\t  return promise;\n\t}\n\t\n\tfunction callbackify(fun) {\n\t  return getArguments(function (args) {\n\t    var cb = args.pop();\n\t    var promise = fun.apply(this, args);\n\t    if (typeof cb === 'function') {\n\t      promisedCallback(promise, cb);\n\t    }\n\t    return promise;\n\t  });\n\t}\n\t\n\t// Promise finally util similar to Q.finally\n\tfunction fin(promise, finalPromiseFactory) {\n\t  return promise.then(function (res) {\n\t    return finalPromiseFactory().then(function () {\n\t      return res;\n\t    });\n\t  }, function (reason) {\n\t    return finalPromiseFactory().then(function () {\n\t      throw reason;\n\t    });\n\t  });\n\t}\n\t\n\tfunction sequentialize(queue, promiseFactory) {\n\t  return function () {\n\t    var args = arguments;\n\t    var that = this;\n\t    return queue.add(function () {\n\t      return promiseFactory.apply(that, args);\n\t    });\n\t  };\n\t}\n\t\n\t// uniq an array of strings, order not guaranteed\n\t// similar to underscore/lodash _.uniq\n\tfunction uniq(arr) {\n\t  var theSet = new ExportedSet(arr);\n\t  var result = new Array(theSet.size);\n\t  var index = -1;\n\t  theSet.forEach(function (value) {\n\t    result[++index] = value;\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction mapToKeysArray(map) {\n\t  var result = new Array(map.size);\n\t  var index = -1;\n\t  map.forEach(function (value, key) {\n\t    result[++index] = key;\n\t  });\n\t  return result;\n\t}\n\t\n\tfunction createBuiltInError(name) {\n\t  var message = 'builtin ' + name +\n\t    ' function requires map values to be numbers' +\n\t    ' or number arrays';\n\t  return new BuiltInError(message);\n\t}\n\t\n\tfunction sum(values) {\n\t  var result = 0;\n\t  for (var i = 0, len = values.length; i < len; i++) {\n\t    var num = values[i];\n\t    if (typeof num !== 'number') {\n\t      if (Array.isArray(num)) {\n\t        // lists of numbers are also allowed, sum them separately\n\t        result = typeof result === 'number' ? [result] : result;\n\t        for (var j = 0, jLen = num.length; j < jLen; j++) {\n\t          var jNum = num[j];\n\t          if (typeof jNum !== 'number') {\n\t            throw createBuiltInError('_sum');\n\t          } else if (typeof result[j] === 'undefined') {\n\t            result.push(jNum);\n\t          } else {\n\t            result[j] += jNum;\n\t          }\n\t        }\n\t      } else { // not array/number\n\t        throw createBuiltInError('_sum');\n\t      }\n\t    } else if (typeof result === 'number') {\n\t      result += num;\n\t    } else { // add number to array\n\t      result[0] += num;\n\t    }\n\t  }\n\t  return result;\n\t}\n\t\n\tvar log = guardedConsole.bind(null, 'log');\n\tvar isArray = Array.isArray;\n\tvar toJSON = JSON.parse;\n\t\n\tfunction evalFunctionWithEval(func, emit) {\n\t  return scopeEval(\n\t    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n\t    {\n\t      emit: emit,\n\t      sum: sum,\n\t      log: log,\n\t      isArray: isArray,\n\t      toJSON: toJSON\n\t    }\n\t  );\n\t}\n\t\n\t/*\n\t * Simple task queue to sequentialize actions. Assumes\n\t * callbacks will eventually fire (once).\n\t */\n\t\n\t\n\tfunction TaskQueue$2() {\n\t  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n\t}\n\tTaskQueue$2.prototype.add = function (promiseFactory) {\n\t  this.promise = this.promise.catch(function () {\n\t    // just recover\n\t  }).then(function () {\n\t    return promiseFactory();\n\t  });\n\t  return this.promise;\n\t};\n\tTaskQueue$2.prototype.finish = function () {\n\t  return this.promise;\n\t};\n\t\n\tfunction stringify(input) {\n\t  if (!input) {\n\t    return 'undefined'; // backwards compat for empty reduce\n\t  }\n\t  // for backwards compat with mapreduce, functions/strings are stringified\n\t  // as-is. everything else is JSON-stringified.\n\t  switch (typeof input) {\n\t    case 'function':\n\t      // e.g. a mapreduce map\n\t      return input.toString();\n\t    case 'string':\n\t      // e.g. a mapreduce built-in _reduce function\n\t      return input.toString();\n\t    default:\n\t      // e.g. a JSON object in the case of mango queries\n\t      return JSON.stringify(input);\n\t  }\n\t}\n\t\n\t/* create a string signature for a view so we can cache it and uniq it */\n\tfunction createViewSignature(mapFun, reduceFun) {\n\t  // the \"undefined\" part is for backwards compatibility\n\t  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n\t}\n\t\n\tfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n\t  var viewSignature = createViewSignature(mapFun, reduceFun);\n\t\n\t  var cachedViews;\n\t  if (!temporary) {\n\t    // cache this to ensure we don't try to update the same view twice\n\t    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n\t    if (cachedViews[viewSignature]) {\n\t      return cachedViews[viewSignature];\n\t    }\n\t  }\n\t\n\t  var promiseForView = sourceDB.info().then(function (info) {\n\t\n\t    var depDbName = info.db_name + '-mrview-' +\n\t      (temporary ? 'temp' : stringMd5(viewSignature));\n\t\n\t    // save the view name in the source db so it can be cleaned up if necessary\n\t    // (e.g. when the _design doc is deleted, remove all associated view data)\n\t    function diffFunction(doc) {\n\t      doc.views = doc.views || {};\n\t      var fullViewName = viewName;\n\t      if (fullViewName.indexOf('/') === -1) {\n\t        fullViewName = viewName + '/' + viewName;\n\t      }\n\t      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n\t      /* istanbul ignore if */\n\t      if (depDbs[depDbName]) {\n\t        return; // no update necessary\n\t      }\n\t      depDbs[depDbName] = true;\n\t      return doc;\n\t    }\n\t    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n\t      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n\t        var db = res.db;\n\t        db.auto_compaction = true;\n\t        var view = {\n\t          name: depDbName,\n\t          db: db,\n\t          sourceDB: sourceDB,\n\t          adapter: sourceDB.adapter,\n\t          mapFun: mapFun,\n\t          reduceFun: reduceFun\n\t        };\n\t        return view.db.get('_local/lastSeq').catch(function (err) {\n\t          /* istanbul ignore if */\n\t          if (err.status !== 404) {\n\t            throw err;\n\t          }\n\t        }).then(function (lastSeqDoc) {\n\t          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n\t          if (cachedViews) {\n\t            view.db.once('destroyed', function () {\n\t              delete cachedViews[viewSignature];\n\t            });\n\t          }\n\t          return view;\n\t        });\n\t      });\n\t    });\n\t  });\n\t\n\t  if (cachedViews) {\n\t    cachedViews[viewSignature] = promiseForView;\n\t  }\n\t  return promiseForView;\n\t}\n\t\n\tvar persistentQueues = {};\n\tvar tempViewQueue = new TaskQueue$2();\n\tvar CHANGES_BATCH_SIZE$1 = 50;\n\t\n\tfunction parseViewName(name) {\n\t  // can be either 'ddocname/viewname' or just 'viewname'\n\t  // (where the ddoc name is the same)\n\t  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n\t}\n\t\n\tfunction isGenOne(changes) {\n\t  // only return true if the current change is 1-\n\t  // and there are no other leafs\n\t  return changes.length === 1 && /^1-/.test(changes[0].rev);\n\t}\n\t\n\tfunction emitError(db, e) {\n\t  try {\n\t    db.emit('error', e);\n\t  } catch (err) {\n\t    guardedConsole('error',\n\t      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n\t      'You can debug this error by doing:\\n' +\n\t      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n\t      'Please double-check your map/reduce function.');\n\t    guardedConsole('error', e);\n\t  }\n\t}\n\t\n\t/**\n\t * Returns an \"abstract\" mapreduce object of the form:\n\t *\n\t *   {\n\t *     query: queryFun,\n\t *     viewCleanup: viewCleanupFun\n\t *   }\n\t *\n\t * Arguments are:\n\t *\n\t * localDoc: string\n\t *   This is for the local doc that gets saved in order to track the\n\t *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n\t *   unique, so that indexer plugins don't collide with each other.\n\t * mapper: function (mapFunDef, emit)\n\t *   Returns a map function based on the mapFunDef, which in the case of\n\t *   normal map/reduce is just the de-stringified function, but may be\n\t *   something else, such as an object in the case of pouchdb-find.\n\t * reducer: function (reduceFunDef)\n\t *   Ditto, but for reducing. Modules don't have to support reducing\n\t *   (e.g. pouchdb-find).\n\t * ddocValidator: function (ddoc, viewName)\n\t *   Throws an error if the ddoc or viewName is not valid.\n\t *   This could be a way to communicate to the user that the configuration for the\n\t *   indexer is invalid.\n\t */\n\tfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\t\n\t  function tryMap(db, fun, doc) {\n\t    // emit an event if there was an error thrown by a map function.\n\t    // putting try/catches in a single function also avoids deoptimizations.\n\t    try {\n\t      fun(doc);\n\t    } catch (e) {\n\t      emitError(db, e);\n\t    }\n\t  }\n\t\n\t  function tryReduce(db, fun, keys, values, rereduce) {\n\t    // same as above, but returning the result or an error. there are two separate\n\t    // functions to avoid extra memory allocations since the tryCode() case is used\n\t    // for custom map functions (common) vs this function, which is only used for\n\t    // custom reduce functions (rare)\n\t    try {\n\t      return {output : fun(keys, values, rereduce)};\n\t    } catch (e) {\n\t      emitError(db, e);\n\t      return {error: e};\n\t    }\n\t  }\n\t\n\t  function sortByKeyThenValue(x, y) {\n\t    var keyCompare = collate(x.key, y.key);\n\t    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n\t  }\n\t\n\t  function sliceResults(results, limit, skip) {\n\t    skip = skip || 0;\n\t    if (typeof limit === 'number') {\n\t      return results.slice(skip, limit + skip);\n\t    } else if (skip > 0) {\n\t      return results.slice(skip);\n\t    }\n\t    return results;\n\t  }\n\t\n\t  function rowToDocId(row) {\n\t    var val = row.value;\n\t    // Users can explicitly specify a joined doc _id, or it\n\t    // defaults to the doc _id that emitted the key/value.\n\t    var docId = (val && typeof val === 'object' && val._id) || row.id;\n\t    return docId;\n\t  }\n\t\n\t  function readAttachmentsAsBlobOrBuffer(res) {\n\t    res.rows.forEach(function (row) {\n\t      var atts = row.doc && row.doc._attachments;\n\t      if (!atts) {\n\t        return;\n\t      }\n\t      Object.keys(atts).forEach(function (filename) {\n\t        var att = atts[filename];\n\t        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n\t      });\n\t    });\n\t  }\n\t\n\t  function postprocessAttachments(opts) {\n\t    return function (res) {\n\t      if (opts.include_docs && opts.attachments && opts.binary) {\n\t        readAttachmentsAsBlobOrBuffer(res);\n\t      }\n\t      return res;\n\t    };\n\t  }\n\t\n\t  function addHttpParam(paramName, opts, params, asJson) {\n\t    // add an http param from opts to params, optionally json-encoded\n\t    var val = opts[paramName];\n\t    if (typeof val !== 'undefined') {\n\t      if (asJson) {\n\t        val = encodeURIComponent(JSON.stringify(val));\n\t      }\n\t      params.push(paramName + '=' + val);\n\t    }\n\t  }\n\t\n\t  function coerceInteger(integerCandidate) {\n\t    if (typeof integerCandidate !== 'undefined') {\n\t      var asNumber = Number(integerCandidate);\n\t      // prevents e.g. '1foo' or '1.1' being coerced to 1\n\t      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n\t        return asNumber;\n\t      } else {\n\t        return integerCandidate;\n\t      }\n\t    }\n\t  }\n\t\n\t  function coerceOptions(opts) {\n\t    opts.group_level = coerceInteger(opts.group_level);\n\t    opts.limit = coerceInteger(opts.limit);\n\t    opts.skip = coerceInteger(opts.skip);\n\t    return opts;\n\t  }\n\t\n\t  function checkPositiveInteger(number) {\n\t    if (number) {\n\t      if (typeof number !== 'number') {\n\t        return  new QueryParseError('Invalid value for integer: \"' +\n\t          number + '\"');\n\t      }\n\t      if (number < 0) {\n\t        return new QueryParseError('Invalid value for positive integer: ' +\n\t          '\"' + number + '\"');\n\t      }\n\t    }\n\t  }\n\t\n\t  function checkQueryParseError(options, fun) {\n\t    var startkeyName = options.descending ? 'endkey' : 'startkey';\n\t    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\t\n\t    if (typeof options[startkeyName] !== 'undefined' &&\n\t      typeof options[endkeyName] !== 'undefined' &&\n\t      collate(options[startkeyName], options[endkeyName]) > 0) {\n\t      throw new QueryParseError('No rows can match your key range, ' +\n\t        'reverse your start_key and end_key or set {descending : true}');\n\t    } else if (fun.reduce && options.reduce !== false) {\n\t      if (options.include_docs) {\n\t        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n\t      } else if (options.keys && options.keys.length > 1 &&\n\t        !options.group && !options.group_level) {\n\t        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n\t          '{group: true}');\n\t      }\n\t    }\n\t    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n\t      var error = checkPositiveInteger(options[optionName]);\n\t      if (error) {\n\t        throw error;\n\t      }\n\t    });\n\t  }\n\t\n\t  function httpQuery(db, fun, opts) {\n\t    // List of parameters to add to the PUT request\n\t    var params = [];\n\t    var body;\n\t    var method = 'GET';\n\t\n\t    // If opts.reduce exists and is defined, then add it to the list\n\t    // of parameters.\n\t    // If reduce=false then the results are that of only the map function\n\t    // not the final result of map and reduce.\n\t    addHttpParam('reduce', opts, params);\n\t    addHttpParam('include_docs', opts, params);\n\t    addHttpParam('attachments', opts, params);\n\t    addHttpParam('limit', opts, params);\n\t    addHttpParam('descending', opts, params);\n\t    addHttpParam('group', opts, params);\n\t    addHttpParam('group_level', opts, params);\n\t    addHttpParam('skip', opts, params);\n\t    addHttpParam('stale', opts, params);\n\t    addHttpParam('conflicts', opts, params);\n\t    addHttpParam('startkey', opts, params, true);\n\t    addHttpParam('start_key', opts, params, true);\n\t    addHttpParam('endkey', opts, params, true);\n\t    addHttpParam('end_key', opts, params, true);\n\t    addHttpParam('inclusive_end', opts, params);\n\t    addHttpParam('key', opts, params, true);\n\t    addHttpParam('update_seq', opts, params);\n\t\n\t    // Format the list of parameters into a valid URI query string\n\t    params = params.join('&');\n\t    params = params === '' ? '' : '?' + params;\n\t\n\t    // If keys are supplied, issue a POST to circumvent GET query string limits\n\t    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n\t    if (typeof opts.keys !== 'undefined') {\n\t      var MAX_URL_LENGTH = 2000;\n\t      // according to http://stackoverflow.com/a/417184/680742,\n\t      // the de facto URL length limit is 2000 characters\n\t\n\t      var keysAsString =\n\t        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n\t      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n\t        // If the keys are short enough, do a GET. we do this to work around\n\t        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n\t        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n\t      } else {\n\t        method = 'POST';\n\t        if (typeof fun === 'string') {\n\t          body = {keys: opts.keys};\n\t        } else { // fun is {map : mapfun}, so append to this\n\t          fun.keys = opts.keys;\n\t        }\n\t      }\n\t    }\n\t\n\t    // We are referencing a query defined in the design doc\n\t    if (typeof fun === 'string') {\n\t      var parts = parseViewName(fun);\n\t      return db.request({\n\t        method: method,\n\t        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n\t        body: body\n\t      }).then(\n\t        /* istanbul ignore next */\n\t        function (result) {\n\t          // fail the entire request if the result contains an error\n\t          result.rows.forEach(function (row) {\n\t            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n\t              throw new Error(row.reason);\n\t            }\n\t          });\n\t\n\t          return result;\n\t      })\n\t      .then(postprocessAttachments(opts));\n\t    }\n\t\n\t    // We are using a temporary view, terrible for performance, good for testing\n\t    body = body || {};\n\t    Object.keys(fun).forEach(function (key) {\n\t      if (Array.isArray(fun[key])) {\n\t        body[key] = fun[key];\n\t      } else {\n\t        body[key] = fun[key].toString();\n\t      }\n\t    });\n\t    return db.request({\n\t      method: 'POST',\n\t      url: '_temp_view' + params,\n\t      body: body\n\t    }).then(postprocessAttachments(opts));\n\t  }\n\t\n\t  // custom adapters can define their own api._query\n\t  // and override the default behavior\n\t  /* istanbul ignore next */\n\t  function customQuery(db, fun, opts) {\n\t    return new PouchPromise(function (resolve, reject) {\n\t      db._query(fun, opts, function (err, res) {\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  // custom adapters can define their own api._viewCleanup\n\t  // and override the default behavior\n\t  /* istanbul ignore next */\n\t  function customViewCleanup(db) {\n\t    return new PouchPromise(function (resolve, reject) {\n\t      db._viewCleanup(function (err, res) {\n\t        if (err) {\n\t          return reject(err);\n\t        }\n\t        resolve(res);\n\t      });\n\t    });\n\t  }\n\t\n\t  function defaultsTo(value) {\n\t    return function (reason) {\n\t      /* istanbul ignore else */\n\t      if (reason.status === 404) {\n\t        return value;\n\t      } else {\n\t        throw reason;\n\t      }\n\t    };\n\t  }\n\t\n\t  // returns a promise for a list of docs to update, based on the input docId.\n\t  // the order doesn't matter, because post-3.2.0, bulkDocs\n\t  // is an atomic operation in all three adapters.\n\t  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n\t    var metaDocId = '_local/doc_' + docId;\n\t    var defaultMetaDoc = {_id: metaDocId, keys: []};\n\t    var docData = docIdsToChangesAndEmits.get(docId);\n\t    var indexableKeysToKeyValues = docData[0];\n\t    var changes = docData[1];\n\t\n\t    function getMetaDoc() {\n\t      if (isGenOne(changes)) {\n\t        // generation 1, so we can safely assume initial state\n\t        // for performance reasons (avoids unnecessary GETs)\n\t        return PouchPromise.resolve(defaultMetaDoc);\n\t      }\n\t      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n\t    }\n\t\n\t    function getKeyValueDocs(metaDoc) {\n\t      if (!metaDoc.keys.length) {\n\t        // no keys, no need for a lookup\n\t        return PouchPromise.resolve({rows: []});\n\t      }\n\t      return view.db.allDocs({\n\t        keys: metaDoc.keys,\n\t        include_docs: true\n\t      });\n\t    }\n\t\n\t    function processKeyValueDocs(metaDoc, kvDocsRes) {\n\t      var kvDocs = [];\n\t      var oldKeys = new ExportedSet();\n\t\n\t      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n\t        var row = kvDocsRes.rows[i];\n\t        var doc = row.doc;\n\t        if (!doc) { // deleted\n\t          continue;\n\t        }\n\t        kvDocs.push(doc);\n\t        oldKeys.add(doc._id);\n\t        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n\t        if (!doc._deleted) {\n\t          var keyValue = indexableKeysToKeyValues.get(doc._id);\n\t          if ('value' in keyValue) {\n\t            doc.value = keyValue.value;\n\t          }\n\t        }\n\t      }\n\t      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n\t      newKeys.forEach(function (key) {\n\t        if (!oldKeys.has(key)) {\n\t          // new doc\n\t          var kvDoc = {\n\t            _id: key\n\t          };\n\t          var keyValue = indexableKeysToKeyValues.get(key);\n\t          if ('value' in keyValue) {\n\t            kvDoc.value = keyValue.value;\n\t          }\n\t          kvDocs.push(kvDoc);\n\t        }\n\t      });\n\t      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n\t      kvDocs.push(metaDoc);\n\t\n\t      return kvDocs;\n\t    }\n\t\n\t    return getMetaDoc().then(function (metaDoc) {\n\t      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n\t        return processKeyValueDocs(metaDoc, kvDocsRes);\n\t      });\n\t    });\n\t  }\n\t\n\t  // updates all emitted key/value docs and metaDocs in the mrview database\n\t  // for the given batch of documents from the source database\n\t  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n\t    var seqDocId = '_local/lastSeq';\n\t    return view.db.get(seqDocId)\n\t      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n\t      .then(function (lastSeqDoc) {\n\t        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n\t        return PouchPromise.all(docIds.map(function (docId) {\n\t          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n\t        })).then(function (listOfDocsToPersist) {\n\t          var docsToPersist = flatten(listOfDocsToPersist);\n\t          lastSeqDoc.seq = seq;\n\t          docsToPersist.push(lastSeqDoc);\n\t          // write all docs in a single operation, update the seq once\n\t          return view.db.bulkDocs({docs : docsToPersist});\n\t        });\n\t      });\n\t  }\n\t\n\t  function getQueue(view) {\n\t    var viewName = typeof view === 'string' ? view : view.name;\n\t    var queue = persistentQueues[viewName];\n\t    if (!queue) {\n\t      queue = persistentQueues[viewName] = new TaskQueue$2();\n\t    }\n\t    return queue;\n\t  }\n\t\n\t  function updateView(view) {\n\t    return sequentialize(getQueue(view), function () {\n\t      return updateViewInQueue(view);\n\t    })();\n\t  }\n\t\n\t  function updateViewInQueue(view) {\n\t    // bind the emit function once\n\t    var mapResults;\n\t    var doc;\n\t\n\t    function emit(key, value) {\n\t      var output = {id: doc._id, key: normalizeKey(key)};\n\t      // Don't explicitly store the value unless it's defined and non-null.\n\t      // This saves on storage space, because often people don't use it.\n\t      if (typeof value !== 'undefined' && value !== null) {\n\t        output.value = normalizeKey(value);\n\t      }\n\t      mapResults.push(output);\n\t    }\n\t\n\t    var mapFun = mapper(view.mapFun, emit);\n\t\n\t    var currentSeq = view.seq || 0;\n\t\n\t    function processChange(docIdsToChangesAndEmits, seq) {\n\t      return function () {\n\t        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n\t      };\n\t    }\n\t\n\t    var queue = new TaskQueue$2();\n\t\n\t    function processNextBatch() {\n\t      return view.sourceDB.changes({\n\t        conflicts: true,\n\t        include_docs: true,\n\t        style: 'all_docs',\n\t        since: currentSeq,\n\t        limit: CHANGES_BATCH_SIZE$1\n\t      }).then(processBatch);\n\t    }\n\t\n\t    function processBatch(response) {\n\t      var results = response.results;\n\t      if (!results.length) {\n\t        return;\n\t      }\n\t      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n\t      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n\t      if (results.length < CHANGES_BATCH_SIZE$1) {\n\t        return;\n\t      }\n\t      return processNextBatch();\n\t    }\n\t\n\t    function createDocIdsToChangesAndEmits(results) {\n\t      var docIdsToChangesAndEmits = new ExportedMap();\n\t      for (var i = 0, len = results.length; i < len; i++) {\n\t        var change = results[i];\n\t        if (change.doc._id[0] !== '_') {\n\t          mapResults = [];\n\t          doc = change.doc;\n\t\n\t          if (!doc._deleted) {\n\t            tryMap(view.sourceDB, mapFun, doc);\n\t          }\n\t          mapResults.sort(sortByKeyThenValue);\n\t\n\t          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n\t          docIdsToChangesAndEmits.set(change.doc._id, [\n\t            indexableKeysToKeyValues,\n\t            change.changes\n\t          ]);\n\t        }\n\t        currentSeq = change.seq;\n\t      }\n\t      return docIdsToChangesAndEmits;\n\t    }\n\t\n\t    function createIndexableKeysToKeyValues(mapResults) {\n\t      var indexableKeysToKeyValues = new ExportedMap();\n\t      var lastKey;\n\t      for (var i = 0, len = mapResults.length; i < len; i++) {\n\t        var emittedKeyValue = mapResults[i];\n\t        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n\t        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n\t          complexKey.push(i); // dup key+id, so make it unique\n\t        }\n\t        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n\t        lastKey = emittedKeyValue.key;\n\t      }\n\t      return indexableKeysToKeyValues;\n\t    }\n\t\n\t    return processNextBatch().then(function () {\n\t      return queue.finish();\n\t    }).then(function () {\n\t      view.seq = currentSeq;\n\t    });\n\t  }\n\t\n\t  function reduceView(view, results, options) {\n\t    if (options.group_level === 0) {\n\t      delete options.group_level;\n\t    }\n\t\n\t    var shouldGroup = options.group || options.group_level;\n\t\n\t    var reduceFun = reducer(view.reduceFun);\n\t\n\t    var groups = [];\n\t    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n\t      options.group_level;\n\t    results.forEach(function (e) {\n\t      var last = groups[groups.length - 1];\n\t      var groupKey = shouldGroup ? e.key : null;\n\t\n\t      // only set group_level for array keys\n\t      if (shouldGroup && Array.isArray(groupKey)) {\n\t        groupKey = groupKey.slice(0, lvl);\n\t      }\n\t\n\t      if (last && collate(last.groupKey, groupKey) === 0) {\n\t        last.keys.push([e.key, e.id]);\n\t        last.values.push(e.value);\n\t        return;\n\t      }\n\t      groups.push({\n\t        keys: [[e.key, e.id]],\n\t        values: [e.value],\n\t        groupKey: groupKey\n\t      });\n\t    });\n\t    results = [];\n\t    for (var i = 0, len = groups.length; i < len; i++) {\n\t      var e = groups[i];\n\t      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n\t      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n\t        // CouchDB returns an error if a built-in errors out\n\t        throw reduceTry.error;\n\t      }\n\t      results.push({\n\t        // CouchDB just sets the value to null if a non-built-in errors out\n\t        value: reduceTry.error ? null : reduceTry.output,\n\t        key: e.groupKey\n\t      });\n\t    }\n\t    // no total_rows/offset when reducing\n\t    return {rows: sliceResults(results, options.limit, options.skip)};\n\t  }\n\t\n\t  function queryView(view, opts) {\n\t    return sequentialize(getQueue(view), function () {\n\t      return queryViewInQueue(view, opts);\n\t    })();\n\t  }\n\t\n\t  function queryViewInQueue(view, opts) {\n\t    var totalRows;\n\t    var shouldReduce = view.reduceFun && opts.reduce !== false;\n\t    var skip = opts.skip || 0;\n\t    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n\t      // equivalent query\n\t      opts.limit = 0;\n\t      delete opts.keys;\n\t    }\n\t\n\t    function fetchFromView(viewOpts) {\n\t      viewOpts.include_docs = true;\n\t      return view.db.allDocs(viewOpts).then(function (res) {\n\t        totalRows = res.total_rows;\n\t        return res.rows.map(function (result) {\n\t\n\t          // implicit migration - in older versions of PouchDB,\n\t          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n\t          // this is tested in a migration test\n\t          /* istanbul ignore next */\n\t          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n\t            result.doc.value !== null) {\n\t            var keys = Object.keys(result.doc.value).sort();\n\t            // this detection method is not perfect, but it's unlikely the user\n\t            // emitted a value which was an object with these 3 exact keys\n\t            var expectedKeys = ['id', 'key', 'value'];\n\t            if (!(keys < expectedKeys || keys > expectedKeys)) {\n\t              return result.doc.value;\n\t            }\n\t          }\n\t\n\t          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n\t          return {\n\t            key: parsedKeyAndDocId[0],\n\t            id: parsedKeyAndDocId[1],\n\t            value: ('value' in result.doc ? result.doc.value : null)\n\t          };\n\t        });\n\t      });\n\t    }\n\t\n\t    function onMapResultsReady(rows) {\n\t      var finalResults;\n\t      if (shouldReduce) {\n\t        finalResults = reduceView(view, rows, opts);\n\t      } else {\n\t        finalResults = {\n\t          total_rows: totalRows,\n\t          offset: skip,\n\t          rows: rows\n\t        };\n\t      }\n\t      /* istanbul ignore if */\n\t      if (opts.update_seq) {\n\t        finalResults.update_seq = view.seq;\n\t      }\n\t      if (opts.include_docs) {\n\t        var docIds = uniq(rows.map(rowToDocId));\n\t\n\t        return view.sourceDB.allDocs({\n\t          keys: docIds,\n\t          include_docs: true,\n\t          conflicts: opts.conflicts,\n\t          attachments: opts.attachments,\n\t          binary: opts.binary\n\t        }).then(function (allDocsRes) {\n\t          var docIdsToDocs = new ExportedMap();\n\t          allDocsRes.rows.forEach(function (row) {\n\t            docIdsToDocs.set(row.id, row.doc);\n\t          });\n\t          rows.forEach(function (row) {\n\t            var docId = rowToDocId(row);\n\t            var doc = docIdsToDocs.get(docId);\n\t            if (doc) {\n\t              row.doc = doc;\n\t            }\n\t          });\n\t          return finalResults;\n\t        });\n\t      } else {\n\t        return finalResults;\n\t      }\n\t    }\n\t\n\t    if (typeof opts.keys !== 'undefined') {\n\t      var keys = opts.keys;\n\t      var fetchPromises = keys.map(function (key) {\n\t        var viewOpts = {\n\t          startkey : toIndexableString([key]),\n\t          endkey   : toIndexableString([key, {}])\n\t        };\n\t        /* istanbul ignore if */\n\t        if (opts.update_seq) {\n\t          viewOpts.update_seq = true;\n\t        }\n\t        return fetchFromView(viewOpts);\n\t      });\n\t      return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n\t    } else { // normal query, no 'keys'\n\t      var viewOpts = {\n\t        descending : opts.descending\n\t      };\n\t      /* istanbul ignore if */\n\t      if (opts.update_seq) {\n\t        viewOpts.update_seq = true;\n\t      }\n\t      var startkey;\n\t      var endkey;\n\t      if ('start_key' in opts) {\n\t        startkey = opts.start_key;\n\t      }\n\t      if ('startkey' in opts) {\n\t        startkey = opts.startkey;\n\t      }\n\t      if ('end_key' in opts) {\n\t        endkey = opts.end_key;\n\t      }\n\t      if ('endkey' in opts) {\n\t        endkey = opts.endkey;\n\t      }\n\t      if (typeof startkey !== 'undefined') {\n\t        viewOpts.startkey = opts.descending ?\n\t          toIndexableString([startkey, {}]) :\n\t          toIndexableString([startkey]);\n\t      }\n\t      if (typeof endkey !== 'undefined') {\n\t        var inclusiveEnd = opts.inclusive_end !== false;\n\t        if (opts.descending) {\n\t          inclusiveEnd = !inclusiveEnd;\n\t        }\n\t\n\t        viewOpts.endkey = toIndexableString(\n\t          inclusiveEnd ? [endkey, {}] : [endkey]);\n\t      }\n\t      if (typeof opts.key !== 'undefined') {\n\t        var keyStart = toIndexableString([opts.key]);\n\t        var keyEnd = toIndexableString([opts.key, {}]);\n\t        if (viewOpts.descending) {\n\t          viewOpts.endkey = keyStart;\n\t          viewOpts.startkey = keyEnd;\n\t        } else {\n\t          viewOpts.startkey = keyStart;\n\t          viewOpts.endkey = keyEnd;\n\t        }\n\t      }\n\t      if (!shouldReduce) {\n\t        if (typeof opts.limit === 'number') {\n\t          viewOpts.limit = opts.limit;\n\t        }\n\t        viewOpts.skip = skip;\n\t      }\n\t      return fetchFromView(viewOpts).then(onMapResultsReady);\n\t    }\n\t  }\n\t\n\t  function httpViewCleanup(db) {\n\t    return db.request({\n\t      method: 'POST',\n\t      url: '_view_cleanup'\n\t    });\n\t  }\n\t\n\t  function localViewCleanup(db) {\n\t    return db.get('_local/' + localDocName).then(function (metaDoc) {\n\t      var docsToViews = new ExportedMap();\n\t      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n\t        var parts = parseViewName(fullViewName);\n\t        var designDocName = '_design/' + parts[0];\n\t        var viewName = parts[1];\n\t        var views = docsToViews.get(designDocName);\n\t        if (!views) {\n\t          views = new ExportedSet();\n\t          docsToViews.set(designDocName, views);\n\t        }\n\t        views.add(viewName);\n\t      });\n\t      var opts = {\n\t        keys : mapToKeysArray(docsToViews),\n\t        include_docs : true\n\t      };\n\t      return db.allDocs(opts).then(function (res) {\n\t        var viewsToStatus = {};\n\t        res.rows.forEach(function (row) {\n\t          var ddocName = row.key.substring(8); // cuts off '_design/'\n\t          docsToViews.get(row.key).forEach(function (viewName) {\n\t            var fullViewName = ddocName + '/' + viewName;\n\t            /* istanbul ignore if */\n\t            if (!metaDoc.views[fullViewName]) {\n\t              // new format, without slashes, to support PouchDB 2.2.0\n\t              // migration test in pouchdb's browser.migration.js verifies this\n\t              fullViewName = viewName;\n\t            }\n\t            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n\t            // design doc deleted, or view function nonexistent\n\t            var statusIsGood = row.doc && row.doc.views &&\n\t              row.doc.views[viewName];\n\t            viewDBNames.forEach(function (viewDBName) {\n\t              viewsToStatus[viewDBName] =\n\t                viewsToStatus[viewDBName] || statusIsGood;\n\t            });\n\t          });\n\t        });\n\t        var dbsToDelete = Object.keys(viewsToStatus).filter(\n\t          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n\t        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n\t          return sequentialize(getQueue(viewDBName), function () {\n\t            return new db.constructor(viewDBName, db.__opts).destroy();\n\t          })();\n\t        });\n\t        return PouchPromise.all(destroyPromises).then(function () {\n\t          return {ok: true};\n\t        });\n\t      });\n\t    }, defaultsTo({ok: true}));\n\t  }\n\t\n\t  function queryPromised(db, fun, opts) {\n\t    /* istanbul ignore next */\n\t    if (typeof db._query === 'function') {\n\t      return customQuery(db, fun, opts);\n\t    }\n\t    if (isRemote(db)) {\n\t      return httpQuery(db, fun, opts);\n\t    }\n\t    \n\t    if (typeof fun !== 'string') {\n\t      // temp_view\n\t      checkQueryParseError(opts, fun);\n\t\n\t      tempViewQueue.add(function () {\n\t        var createViewPromise = createView(\n\t          /* sourceDB */ db,\n\t          /* viewName */ 'temp_view/temp_view',\n\t          /* mapFun */ fun.map,\n\t          /* reduceFun */ fun.reduce,\n\t          /* temporary */ true,\n\t          /* localDocName */ localDocName);\n\t        return createViewPromise.then(function (view) {\n\t          return fin(updateView(view).then(function () {\n\t            return queryView(view, opts);\n\t          }), function () {\n\t            return view.db.destroy();\n\t          });\n\t        });\n\t      });\n\t      return tempViewQueue.finish();\n\t    } else {\n\t      // persistent view\n\t      var fullViewName = fun;\n\t      var parts = parseViewName(fullViewName);\n\t      var designDocName = parts[0];\n\t      var viewName = parts[1];\n\t      return db.get('_design/' + designDocName).then(function (doc) {\n\t        var fun = doc.views && doc.views[viewName];\n\t\n\t        if (!fun) {\n\t          // basic validator; it's assumed that every subclass would want this\n\t          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n\t            viewName);\n\t        }\n\t\n\t        ddocValidator(doc, viewName);\n\t        checkQueryParseError(opts, fun);\n\t\n\t        var createViewPromise = createView(\n\t          /* sourceDB */ db,\n\t          /* viewName */ fullViewName,\n\t          /* mapFun */ fun.map,\n\t          /* reduceFun */ fun.reduce,\n\t          /* temporary */ false,\n\t          /* localDocName */ localDocName);\n\t        return createViewPromise.then(function (view) {\n\t          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n\t            if (opts.stale === 'update_after') {\n\t              nextTick(function () {\n\t                updateView(view);\n\t              });\n\t            }\n\t            return queryView(view, opts);\n\t          } else { // stale not ok\n\t            return updateView(view).then(function () {\n\t              return queryView(view, opts);\n\t            });\n\t          }\n\t        });\n\t      });\n\t    }\n\t  }\n\t\n\t  function abstractQuery(fun, opts, callback) {\n\t    var db = this;\n\t    if (typeof opts === 'function') {\n\t      callback = opts;\n\t      opts = {};\n\t    }\n\t    opts = opts ? coerceOptions(opts) : {};\n\t\n\t    if (typeof fun === 'function') {\n\t      fun = {map : fun};\n\t    }\n\t\n\t    var promise = PouchPromise.resolve().then(function () {\n\t      return queryPromised(db, fun, opts);\n\t    });\n\t    promisedCallback(promise, callback);\n\t    return promise;\n\t  }\n\t\n\t  var abstractViewCleanup = callbackify(function () {\n\t    var db = this;\n\t    /* istanbul ignore next */\n\t    if (typeof db._viewCleanup === 'function') {\n\t      return customViewCleanup(db);\n\t    }\n\t    if (isRemote(db)) {\n\t      return httpViewCleanup(db);\n\t    }\n\t    return localViewCleanup(db);\n\t  });\n\t\n\t  return {\n\t    query: abstractQuery,\n\t    viewCleanup: abstractViewCleanup\n\t  };\n\t}\n\t\n\tvar builtInReduce = {\n\t  _sum: function (keys, values) {\n\t    return sum(values);\n\t  },\n\t\n\t  _count: function (keys, values) {\n\t    return values.length;\n\t  },\n\t\n\t  _stats: function (keys, values) {\n\t    // no need to implement rereduce=true, because Pouch\n\t    // will never call it\n\t    function sumsqr(values) {\n\t      var _sumsqr = 0;\n\t      for (var i = 0, len = values.length; i < len; i++) {\n\t        var num = values[i];\n\t        _sumsqr += (num * num);\n\t      }\n\t      return _sumsqr;\n\t    }\n\t    return {\n\t      sum     : sum(values),\n\t      min     : Math.min.apply(null, values),\n\t      max     : Math.max.apply(null, values),\n\t      count   : values.length,\n\t      sumsqr : sumsqr(values)\n\t    };\n\t  }\n\t};\n\t\n\tfunction getBuiltIn(reduceFunString) {\n\t  if (/^_sum/.test(reduceFunString)) {\n\t    return builtInReduce._sum;\n\t  } else if (/^_count/.test(reduceFunString)) {\n\t    return builtInReduce._count;\n\t  } else if (/^_stats/.test(reduceFunString)) {\n\t    return builtInReduce._stats;\n\t  } else if (/^_/.test(reduceFunString)) {\n\t    throw new Error(reduceFunString + ' is not a supported reduce function.');\n\t  }\n\t}\n\t\n\tfunction mapper(mapFun, emit) {\n\t  // for temp_views one can use emit(doc, emit), see #38\n\t  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n\t    var origMap = mapFun;\n\t    return function (doc) {\n\t      return origMap(doc, emit);\n\t    };\n\t  } else {\n\t    return evalFunctionWithEval(mapFun.toString(), emit);\n\t  }\n\t}\n\t\n\tfunction reducer(reduceFun) {\n\t  var reduceFunString = reduceFun.toString();\n\t  var builtIn = getBuiltIn(reduceFunString);\n\t  if (builtIn) {\n\t    return builtIn;\n\t  } else {\n\t    return evalFunctionWithEval(reduceFunString);\n\t  }\n\t}\n\t\n\tfunction ddocValidator(ddoc, viewName) {\n\t  var fun = ddoc.views && ddoc.views[viewName];\n\t  if (typeof fun.map !== 'string') {\n\t    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n\t      viewName + ', instead found object of type: ' + typeof fun.map);\n\t  }\n\t}\n\t\n\tvar localDocName = 'mrviews';\n\tvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\t\n\tfunction query(fun, opts, callback) {\n\t  return abstract.query.call(this, fun, opts, callback);\n\t}\n\t\n\tfunction viewCleanup(callback) {\n\t  return abstract.viewCleanup.call(this, callback);\n\t}\n\t\n\tvar mapreduce = {\n\t  query: query,\n\t  viewCleanup: viewCleanup\n\t};\n\t\n\tfunction isGenOne$1(rev$$1) {\n\t  return /^1-/.test(rev$$1);\n\t}\n\t\n\tfunction fileHasChanged(localDoc, remoteDoc, filename) {\n\t  return !localDoc._attachments ||\n\t         !localDoc._attachments[filename] ||\n\t         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n\t}\n\t\n\tfunction getDocAttachments(db, doc) {\n\t  var filenames = Object.keys(doc._attachments);\n\t  return PouchPromise.all(filenames.map(function (filename) {\n\t    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n\t  }));\n\t}\n\t\n\tfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n\t  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n\t  var filenames = Object.keys(doc._attachments);\n\t\n\t  if (!doCheckForLocalAttachments) {\n\t    return getDocAttachments(src, doc);\n\t  }\n\t\n\t  return target.get(doc._id).then(function (localDoc) {\n\t    return PouchPromise.all(filenames.map(function (filename) {\n\t      if (fileHasChanged(localDoc, doc, filename)) {\n\t        return src.getAttachment(doc._id, filename);\n\t      }\n\t\n\t      return target.getAttachment(localDoc._id, filename);\n\t    }));\n\t  }).catch(function (error) {\n\t    /* istanbul ignore if */\n\t    if (error.status !== 404) {\n\t      throw error;\n\t    }\n\t\n\t    return getDocAttachments(src, doc);\n\t  });\n\t}\n\t\n\tfunction createBulkGetOpts(diffs) {\n\t  var requests = [];\n\t  Object.keys(diffs).forEach(function (id) {\n\t    var missingRevs = diffs[id].missing;\n\t    missingRevs.forEach(function (missingRev) {\n\t      requests.push({\n\t        id: id,\n\t        rev: missingRev\n\t      });\n\t    });\n\t  });\n\t\n\t  return {\n\t    docs: requests,\n\t    revs: true,\n\t    latest: true\n\t  };\n\t}\n\t\n\t//\n\t// Fetch all the documents from the src as described in the \"diffs\",\n\t// which is a mapping of docs IDs to revisions. If the state ever\n\t// changes to \"cancelled\", then the returned promise will be rejected.\n\t// Else it will be resolved with a list of fetched documents.\n\t//\n\tfunction getDocs(src, target, diffs, state) {\n\t  diffs = clone(diffs); // we do not need to modify this\n\t\n\t  var resultDocs = [],\n\t      ok = true;\n\t\n\t  function getAllDocs() {\n\t\n\t    var bulkGetOpts = createBulkGetOpts(diffs);\n\t\n\t    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n\t      return;\n\t    }\n\t\n\t    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n\t      /* istanbul ignore if */\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n\t        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n\t          var remoteDoc = doc.ok;\n\t\n\t          if (doc.error) {\n\t            // when AUTO_COMPACTION is set, docs can be returned which look\n\t            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n\t            ok = false;\n\t          }\n\t\n\t          if (!remoteDoc || !remoteDoc._attachments) {\n\t            return remoteDoc;\n\t          }\n\t\n\t          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n\t                   .then(function (attachments) {\n\t                           var filenames = Object.keys(remoteDoc._attachments);\n\t                           attachments\n\t                             .forEach(function (attachment, i) {\n\t                                        var att = remoteDoc._attachments[filenames[i]];\n\t                                        delete att.stub;\n\t                                        delete att.length;\n\t                                        att.data = attachment;\n\t                                      });\n\t\n\t                                      return remoteDoc;\n\t                                    });\n\t        }));\n\t      }))\n\t\n\t      .then(function (results) {\n\t        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n\t      });\n\t    });\n\t  }\n\t\n\t  function hasAttachments(doc) {\n\t    return doc._attachments && Object.keys(doc._attachments).length > 0;\n\t  }\n\t\n\t  function hasConflicts(doc) {\n\t    return doc._conflicts && doc._conflicts.length > 0;\n\t  }\n\t\n\t  function fetchRevisionOneDocs(ids) {\n\t    // Optimization: fetch gen-1 docs and attachments in\n\t    // a single request using _all_docs\n\t    return src.allDocs({\n\t      keys: ids,\n\t      include_docs: true,\n\t      conflicts: true\n\t    }).then(function (res) {\n\t      if (state.cancelled) {\n\t        throw new Error('cancelled');\n\t      }\n\t      res.rows.forEach(function (row) {\n\t        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n\t            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n\t          // if any of these conditions apply, we need to fetch using get()\n\t          return;\n\t        }\n\t\n\t        // strip _conflicts array to appease CSG (#5793)\n\t        /* istanbul ignore if */\n\t        if (row.doc._conflicts) {\n\t          delete row.doc._conflicts;\n\t        }\n\t\n\t        // the doc we got back from allDocs() is sufficient\n\t        resultDocs.push(row.doc);\n\t        delete diffs[row.id];\n\t      });\n\t    });\n\t  }\n\t\n\t  function getRevisionOneDocs() {\n\t    // filter out the generation 1 docs and get them\n\t    // leaving the non-generation one docs to be got otherwise\n\t    var ids = Object.keys(diffs).filter(function (id) {\n\t      var missing = diffs[id].missing;\n\t      return missing.length === 1 && isGenOne$1(missing[0]);\n\t    });\n\t    if (ids.length > 0) {\n\t      return fetchRevisionOneDocs(ids);\n\t    }\n\t  }\n\t\n\t  function returnResult() {\n\t    return { ok:ok, docs:resultDocs };\n\t  }\n\t\n\t  return PouchPromise.resolve()\n\t    .then(getRevisionOneDocs)\n\t    .then(getAllDocs)\n\t    .then(returnResult);\n\t}\n\t\n\tvar CHECKPOINT_VERSION = 1;\n\tvar REPLICATOR = \"pouchdb\";\n\t// This is an arbitrary number to limit the\n\t// amount of replication history we save in the checkpoint.\n\t// If we save too much, the checkpoing docs will become very big,\n\t// if we save fewer, we'll run a greater risk of having to\n\t// read all the changes from 0 when checkpoint PUTs fail\n\t// CouchDB 2.0 has a more involved history pruning,\n\t// but let's go for the simple version for now.\n\tvar CHECKPOINT_HISTORY_SIZE = 5;\n\tvar LOWEST_SEQ = 0;\n\t\n\tfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n\t  return db.get(id).catch(function (err) {\n\t    if (err.status === 404) {\n\t      if (db.adapter === 'http' || db.adapter === 'https') {\n\t        explainError(\n\t          404, 'PouchDB is just checking if a remote checkpoint exists.'\n\t        );\n\t      }\n\t      return {\n\t        session_id: session,\n\t        _id: id,\n\t        history: [],\n\t        replicator: REPLICATOR,\n\t        version: CHECKPOINT_VERSION\n\t      };\n\t    }\n\t    throw err;\n\t  }).then(function (doc) {\n\t    if (returnValue.cancelled) {\n\t      return;\n\t    }\n\t\n\t    // if the checkpoint has not changed, do not update\n\t    if (doc.last_seq === checkpoint) {\n\t      return;\n\t    }\n\t\n\t    // Filter out current entry for this replication\n\t    doc.history = (doc.history || []).filter(function (item) {\n\t      return item.session_id !== session;\n\t    });\n\t\n\t    // Add the latest checkpoint to history\n\t    doc.history.unshift({\n\t      last_seq: checkpoint,\n\t      session_id: session\n\t    });\n\t\n\t    // Just take the last pieces in history, to\n\t    // avoid really big checkpoint docs.\n\t    // see comment on history size above\n\t    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\t\n\t    doc.version = CHECKPOINT_VERSION;\n\t    doc.replicator = REPLICATOR;\n\t\n\t    doc.session_id = session;\n\t    doc.last_seq = checkpoint;\n\t\n\t    return db.put(doc).catch(function (err) {\n\t      if (err.status === 409) {\n\t        // retry; someone is trying to write a checkpoint simultaneously\n\t        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n\t      }\n\t      throw err;\n\t    });\n\t  });\n\t}\n\t\n\tfunction Checkpointer(src, target, id, returnValue, opts) {\n\t  this.src = src;\n\t  this.target = target;\n\t  this.id = id;\n\t  this.returnValue = returnValue;\n\t  this.opts = opts || {};\n\t}\n\t\n\tCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n\t  var self = this;\n\t  return this.updateTarget(checkpoint, session).then(function () {\n\t    return self.updateSource(checkpoint, session);\n\t  });\n\t};\n\t\n\tCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n\t  if (this.opts.writeTargetCheckpoint) {\n\t    return updateCheckpoint(this.target, this.id, checkpoint,\n\t      session, this.returnValue);\n\t  } else {\n\t    return PouchPromise.resolve(true);\n\t  }\n\t};\n\t\n\tCheckpointer.prototype.updateSource = function (checkpoint, session) {\n\t  if (this.opts.writeSourceCheckpoint) {\n\t    var self = this;\n\t    return updateCheckpoint(this.src, this.id, checkpoint,\n\t      session, this.returnValue)\n\t      .catch(function (err) {\n\t        if (isForbiddenError(err)) {\n\t          self.opts.writeSourceCheckpoint = false;\n\t          return true;\n\t        }\n\t        throw err;\n\t      });\n\t  } else {\n\t    return PouchPromise.resolve(true);\n\t  }\n\t};\n\t\n\tvar comparisons = {\n\t  \"undefined\": function (targetDoc, sourceDoc) {\n\t    // This is the previous comparison function\n\t    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n\t      return sourceDoc.last_seq;\n\t    }\n\t    /* istanbul ignore next */\n\t    return 0;\n\t  },\n\t  \"1\": function (targetDoc, sourceDoc) {\n\t    // This is the comparison function ported from CouchDB\n\t    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n\t  }\n\t};\n\t\n\tCheckpointer.prototype.getCheckpoint = function () {\n\t  var self = this;\n\t\n\t  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n\t    return self.src.get(self.id).then(function (sourceDoc) {\n\t      return sourceDoc.last_seq || LOWEST_SEQ;\n\t    }).catch(function (err) {\n\t      /* istanbul ignore if */\n\t      if (err.status !== 404) {\n\t        throw err;\n\t      }\n\t      return LOWEST_SEQ;\n\t    });\n\t  }\n\t\n\t  return self.target.get(self.id).then(function (targetDoc) {\n\t    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n\t      return targetDoc.last_seq || LOWEST_SEQ;\n\t    }\n\t\n\t    return self.src.get(self.id).then(function (sourceDoc) {\n\t      // Since we can't migrate an old version doc to a new one\n\t      // (no session id), we just go with the lowest seq in this case\n\t      /* istanbul ignore if */\n\t      if (targetDoc.version !== sourceDoc.version) {\n\t        return LOWEST_SEQ;\n\t      }\n\t\n\t      var version;\n\t      if (targetDoc.version) {\n\t        version = targetDoc.version.toString();\n\t      } else {\n\t        version = \"undefined\";\n\t      }\n\t\n\t      if (version in comparisons) {\n\t        return comparisons[version](targetDoc, sourceDoc);\n\t      }\n\t      /* istanbul ignore next */\n\t      return LOWEST_SEQ;\n\t    }, function (err) {\n\t      if (err.status === 404 && targetDoc.last_seq) {\n\t        return self.src.put({\n\t          _id: self.id,\n\t          last_seq: LOWEST_SEQ\n\t        }).then(function () {\n\t          return LOWEST_SEQ;\n\t        }, function (err) {\n\t          if (isForbiddenError(err)) {\n\t            self.opts.writeSourceCheckpoint = false;\n\t            return targetDoc.last_seq;\n\t          }\n\t          /* istanbul ignore next */\n\t          return LOWEST_SEQ;\n\t        });\n\t      }\n\t      throw err;\n\t    });\n\t  }).catch(function (err) {\n\t    if (err.status !== 404) {\n\t      throw err;\n\t    }\n\t    return LOWEST_SEQ;\n\t  });\n\t};\n\t// This checkpoint comparison is ported from CouchDBs source\n\t// they come from here:\n\t// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\t\n\tfunction compareReplicationLogs(srcDoc, tgtDoc) {\n\t  if (srcDoc.session_id === tgtDoc.session_id) {\n\t    return {\n\t      last_seq: srcDoc.last_seq,\n\t      history: srcDoc.history\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n\t}\n\t\n\tfunction compareReplicationHistory(sourceHistory, targetHistory) {\n\t  // the erlang loop via function arguments is not so easy to repeat in JS\n\t  // therefore, doing this as recursion\n\t  var S = sourceHistory[0];\n\t  var sourceRest = sourceHistory.slice(1);\n\t  var T = targetHistory[0];\n\t  var targetRest = targetHistory.slice(1);\n\t\n\t  if (!S || targetHistory.length === 0) {\n\t    return {\n\t      last_seq: LOWEST_SEQ,\n\t      history: []\n\t    };\n\t  }\n\t\n\t  var sourceId = S.session_id;\n\t  /* istanbul ignore if */\n\t  if (hasSessionId(sourceId, targetHistory)) {\n\t    return {\n\t      last_seq: S.last_seq,\n\t      history: sourceHistory\n\t    };\n\t  }\n\t\n\t  var targetId = T.session_id;\n\t  if (hasSessionId(targetId, sourceRest)) {\n\t    return {\n\t      last_seq: T.last_seq,\n\t      history: targetRest\n\t    };\n\t  }\n\t\n\t  return compareReplicationHistory(sourceRest, targetRest);\n\t}\n\t\n\tfunction hasSessionId(sessionId, history) {\n\t  var props = history[0];\n\t  var rest = history.slice(1);\n\t\n\t  if (!sessionId || history.length === 0) {\n\t    return false;\n\t  }\n\t\n\t  if (sessionId === props.session_id) {\n\t    return true;\n\t  }\n\t\n\t  return hasSessionId(sessionId, rest);\n\t}\n\t\n\tfunction isForbiddenError(err) {\n\t  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n\t}\n\t\n\tvar STARTING_BACK_OFF = 0;\n\t\n\tfunction backOff(opts, returnValue, error, callback) {\n\t  if (opts.retry === false) {\n\t    returnValue.emit('error', error);\n\t    returnValue.removeAllListeners();\n\t    return;\n\t  }\n\t  if (typeof opts.back_off_function !== 'function') {\n\t    opts.back_off_function = defaultBackOff;\n\t  }\n\t  returnValue.emit('requestError', error);\n\t  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n\t    returnValue.emit('paused', error);\n\t    returnValue.state = 'stopped';\n\t    var backOffSet = function backoffTimeSet() {\n\t      opts.current_back_off = STARTING_BACK_OFF;\n\t    };\n\t    var removeBackOffSetter = function removeBackOffTimeSet() {\n\t      returnValue.removeListener('active', backOffSet);\n\t    };\n\t    returnValue.once('paused', removeBackOffSetter);\n\t    returnValue.once('active', backOffSet);\n\t  }\n\t\n\t  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n\t  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n\t  setTimeout(callback, opts.current_back_off);\n\t}\n\t\n\tfunction sortObjectPropertiesByKey(queryParams) {\n\t  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n\t    result[key] = queryParams[key];\n\t    return result;\n\t  }, {});\n\t}\n\t\n\t// Generate a unique id particular to this replication.\n\t// Not guaranteed to align perfectly with CouchDB's rep ids.\n\tfunction generateReplicationId(src, target, opts) {\n\t  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n\t  var filterFun = opts.filter ? opts.filter.toString() : '';\n\t  var queryParams = '';\n\t  var filterViewName =  '';\n\t  var selector = '';\n\t\n\t  // possibility for checkpoints to be lost here as behaviour of\n\t  // JSON.stringify is not stable (see #6226)\n\t  /* istanbul ignore if */\n\t  if (opts.selector) {\n\t    selector = JSON.stringify(opts.selector);\n\t  }\n\t\n\t  if (opts.filter && opts.query_params) {\n\t    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n\t  }\n\t\n\t  if (opts.filter && opts.filter === '_view') {\n\t    filterViewName = opts.view.toString();\n\t  }\n\t\n\t  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n\t    var queryData = res[0] + res[1] + filterFun + filterViewName +\n\t      queryParams + docIds + selector;\n\t    return new PouchPromise(function (resolve) {\n\t      binaryMd5(queryData, resolve);\n\t    });\n\t  }).then(function (md5sum) {\n\t    // can't use straight-up md5 alphabet, because\n\t    // the char '/' is interpreted as being for attachments,\n\t    // and + is also not url-safe\n\t    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n\t    return '_local/' + md5sum;\n\t  });\n\t}\n\t\n\tfunction replicate(src, target, opts, returnValue, result) {\n\t  var batches = [];               // list of batches to be processed\n\t  var currentBatch;               // the batch currently being processed\n\t  var pendingBatch = {\n\t    seq: 0,\n\t    changes: [],\n\t    docs: []\n\t  }; // next batch, not yet ready to be processed\n\t  var writingCheckpoint = false;  // true while checkpoint is being written\n\t  var changesCompleted = false;   // true when all changes received\n\t  var replicationCompleted = false; // true when replication has completed\n\t  var last_seq = 0;\n\t  var continuous = opts.continuous || opts.live || false;\n\t  var batch_size = opts.batch_size || 100;\n\t  var batches_limit = opts.batches_limit || 10;\n\t  var changesPending = false;     // true while src.changes is running\n\t  var doc_ids = opts.doc_ids;\n\t  var selector = opts.selector;\n\t  var repId;\n\t  var checkpointer;\n\t  var changedDocs = [];\n\t  // Like couchdb, every replication gets a unique session id\n\t  var session = uuid();\n\t  var seq_interval = opts.seq_interval;\n\t\n\t  result = result || {\n\t    ok: true,\n\t    start_time: new Date(),\n\t    docs_read: 0,\n\t    docs_written: 0,\n\t    doc_write_failures: 0,\n\t    errors: []\n\t  };\n\t\n\t  var changesOpts = {};\n\t  returnValue.ready(src, target);\n\t\n\t  function initCheckpointer() {\n\t    if (checkpointer) {\n\t      return PouchPromise.resolve();\n\t    }\n\t    return generateReplicationId(src, target, opts).then(function (res) {\n\t      repId = res;\n\t\n\t      var checkpointOpts = {};\n\t      if (opts.checkpoint === false) {\n\t        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n\t      } else if (opts.checkpoint === 'source') {\n\t        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n\t      } else if (opts.checkpoint === 'target') {\n\t        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n\t      } else {\n\t        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n\t      }\n\t\n\t      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n\t    });\n\t  }\n\t\n\t  function writeDocs() {\n\t    changedDocs = [];\n\t\n\t    if (currentBatch.docs.length === 0) {\n\t      return;\n\t    }\n\t    var docs = currentBatch.docs;\n\t    var bulkOpts = {timeout: opts.timeout};\n\t    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t\n\t      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n\t      // (id -> error), and check for errors while iterating over `docs`\n\t      var errorsById = Object.create(null);\n\t      res.forEach(function (res) {\n\t        if (res.error) {\n\t          errorsById[res.id] = res;\n\t        }\n\t      });\n\t\n\t      var errorsNo = Object.keys(errorsById).length;\n\t      result.doc_write_failures += errorsNo;\n\t      result.docs_written += docs.length - errorsNo;\n\t\n\t      docs.forEach(function (doc) {\n\t        var error = errorsById[doc._id];\n\t        if (error) {\n\t          result.errors.push(error);\n\t          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n\t          var errorName = (error.name || '').toLowerCase();\n\t          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n\t            returnValue.emit('denied', clone(error));\n\t          } else {\n\t            throw error;\n\t          }\n\t        } else {\n\t          changedDocs.push(doc);\n\t        }\n\t      });\n\t\n\t    }, function (err) {\n\t      result.doc_write_failures += docs.length;\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function finishBatch() {\n\t    if (currentBatch.error) {\n\t      throw new Error('There was a problem getting docs.');\n\t    }\n\t    result.last_seq = last_seq = currentBatch.seq;\n\t    var outResult = clone(result);\n\t    if (changedDocs.length) {\n\t      outResult.docs = changedDocs;\n\t      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\t      /* istanbul ignore if */\n\t      if (typeof currentBatch.pending === 'number') {\n\t        outResult.pending = currentBatch.pending;\n\t        delete currentBatch.pending;\n\t      }\n\t      returnValue.emit('change', outResult);\n\t    }\n\t    writingCheckpoint = true;\n\t    return checkpointer.writeCheckpoint(currentBatch.seq,\n\t        session).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      currentBatch = undefined;\n\t      getChanges();\n\t    }).catch(function (err) {\n\t      onCheckpointError(err);\n\t      throw err;\n\t    });\n\t  }\n\t\n\t  function getDiffs() {\n\t    var diff = {};\n\t    currentBatch.changes.forEach(function (change) {\n\t      // Couchbase Sync Gateway emits these, but we can ignore them\n\t      /* istanbul ignore if */\n\t      if (change.id === \"_user/\") {\n\t        return;\n\t      }\n\t      diff[change.id] = change.changes.map(function (x) {\n\t        return x.rev;\n\t      });\n\t    });\n\t    return target.revsDiff(diff).then(function (diffs) {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        throw new Error('cancelled');\n\t      }\n\t      // currentBatch.diffs elements are deleted as the documents are written\n\t      currentBatch.diffs = diffs;\n\t    });\n\t  }\n\t\n\t  function getBatchDocs() {\n\t    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n\t      currentBatch.error = !got.ok;\n\t      got.docs.forEach(function (doc) {\n\t        delete currentBatch.diffs[doc._id];\n\t        result.docs_read++;\n\t        currentBatch.docs.push(doc);\n\t      });\n\t    });\n\t  }\n\t\n\t  function startNextBatch() {\n\t    if (returnValue.cancelled || currentBatch) {\n\t      return;\n\t    }\n\t    if (batches.length === 0) {\n\t      processPendingBatch(true);\n\t      return;\n\t    }\n\t    currentBatch = batches.shift();\n\t    getDiffs()\n\t      .then(getBatchDocs)\n\t      .then(writeDocs)\n\t      .then(finishBatch)\n\t      .then(startNextBatch)\n\t      .catch(function (err) {\n\t        abortReplication('batch processing terminated with error', err);\n\t      });\n\t  }\n\t\n\t\n\t  function processPendingBatch(immediate) {\n\t    if (pendingBatch.changes.length === 0) {\n\t      if (batches.length === 0 && !currentBatch) {\n\t        if ((continuous && changesOpts.live) || changesCompleted) {\n\t          returnValue.state = 'pending';\n\t          returnValue.emit('paused');\n\t        }\n\t        if (changesCompleted) {\n\t          completeReplication();\n\t        }\n\t      }\n\t      return;\n\t    }\n\t    if (\n\t      immediate ||\n\t      changesCompleted ||\n\t      pendingBatch.changes.length >= batch_size\n\t    ) {\n\t      batches.push(pendingBatch);\n\t      pendingBatch = {\n\t        seq: 0,\n\t        changes: [],\n\t        docs: []\n\t      };\n\t      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n\t        returnValue.state = 'active';\n\t        returnValue.emit('active');\n\t      }\n\t      startNextBatch();\n\t    }\n\t  }\n\t\n\t\n\t  function abortReplication(reason, err) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    if (!err.message) {\n\t      err.message = reason;\n\t    }\n\t    result.ok = false;\n\t    result.status = 'aborting';\n\t    batches = [];\n\t    pendingBatch = {\n\t      seq: 0,\n\t      changes: [],\n\t      docs: []\n\t    };\n\t    completeReplication(err);\n\t  }\n\t\n\t\n\t  function completeReplication(fatalError) {\n\t    if (replicationCompleted) {\n\t      return;\n\t    }\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      result.status = 'cancelled';\n\t      if (writingCheckpoint) {\n\t        return;\n\t      }\n\t    }\n\t    result.status = result.status || 'complete';\n\t    result.end_time = new Date();\n\t    result.last_seq = last_seq;\n\t    replicationCompleted = true;\n\t\n\t    if (fatalError) {\n\t      // need to extend the error because Firefox considers \".result\" read-only\n\t      fatalError = createError(fatalError);\n\t      fatalError.result = result;\n\t\n\t      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n\t      var errorName = (fatalError.name || '').toLowerCase();\n\t      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n\t        returnValue.emit('error', fatalError);\n\t        returnValue.removeAllListeners();\n\t      } else {\n\t        backOff(opts, returnValue, fatalError, function () {\n\t          replicate(src, target, opts, returnValue);\n\t        });\n\t      }\n\t    } else {\n\t      returnValue.emit('complete', result);\n\t      returnValue.removeAllListeners();\n\t    }\n\t  }\n\t\n\t\n\t  function onChange(change, pending, lastSeq) {\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n\t    /* istanbul ignore if */\n\t    if (typeof pending === 'number') {\n\t      pendingBatch.pending = pending;\n\t    }\n\t\n\t    var filter = filterChange(opts)(change);\n\t    if (!filter) {\n\t      return;\n\t    }\n\t    pendingBatch.seq = change.seq || lastSeq;\n\t    pendingBatch.changes.push(change);\n\t    processPendingBatch(batches.length === 0 && changesOpts.live);\n\t  }\n\t\n\t\n\t  function onChangesComplete(changes) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t\n\t    // if no results were returned then we're done,\n\t    // else fetch more\n\t    if (changes.results.length > 0) {\n\t      changesOpts.since = changes.last_seq;\n\t      getChanges();\n\t      processPendingBatch(true);\n\t    } else {\n\t\n\t      var complete = function () {\n\t        if (continuous) {\n\t          changesOpts.live = true;\n\t          getChanges();\n\t        } else {\n\t          changesCompleted = true;\n\t        }\n\t        processPendingBatch(true);\n\t      };\n\t\n\t      // update the checkpoint so we start from the right seq next time\n\t      if (!currentBatch && changes.results.length === 0) {\n\t        writingCheckpoint = true;\n\t        checkpointer.writeCheckpoint(changes.last_seq,\n\t            session).then(function () {\n\t          writingCheckpoint = false;\n\t          result.last_seq = last_seq = changes.last_seq;\n\t          complete();\n\t        })\n\t        .catch(onCheckpointError);\n\t      } else {\n\t        complete();\n\t      }\n\t    }\n\t  }\n\t\n\t\n\t  function onChangesError(err) {\n\t    changesPending = false;\n\t    /* istanbul ignore if */\n\t    if (returnValue.cancelled) {\n\t      return completeReplication();\n\t    }\n\t    abortReplication('changes rejected', err);\n\t  }\n\t\n\t\n\t  function getChanges() {\n\t    if (!(\n\t      !changesPending &&\n\t      !changesCompleted &&\n\t      batches.length < batches_limit\n\t      )) {\n\t      return;\n\t    }\n\t    changesPending = true;\n\t    function abortChanges() {\n\t      changes.cancel();\n\t    }\n\t    function removeListener() {\n\t      returnValue.removeListener('cancel', abortChanges);\n\t    }\n\t\n\t    if (returnValue._changes) { // remove old changes() and listeners\n\t      returnValue.removeListener('cancel', returnValue._abortChanges);\n\t      returnValue._changes.cancel();\n\t    }\n\t    returnValue.once('cancel', abortChanges);\n\t\n\t    var changes = src.changes(changesOpts)\n\t      .on('change', onChange);\n\t    changes.then(removeListener, removeListener);\n\t    changes.then(onChangesComplete)\n\t      .catch(onChangesError);\n\t\n\t    if (opts.retry) {\n\t      // save for later so we can cancel if necessary\n\t      returnValue._changes = changes;\n\t      returnValue._abortChanges = abortChanges;\n\t    }\n\t  }\n\t\n\t\n\t  function startChanges() {\n\t    initCheckpointer().then(function () {\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      return checkpointer.getCheckpoint().then(function (checkpoint) {\n\t        last_seq = checkpoint;\n\t        changesOpts = {\n\t          since: last_seq,\n\t          limit: batch_size,\n\t          batch_size: batch_size,\n\t          style: 'all_docs',\n\t          doc_ids: doc_ids,\n\t          selector: selector,\n\t          return_docs: true // required so we know when we're done\n\t        };\n\t        if (seq_interval !== false) {\n\t          changesOpts.seq_interval = seq_interval || batch_size;\n\t        }\n\t        if (opts.filter) {\n\t          if (typeof opts.filter !== 'string') {\n\t            // required for the client-side filter in onChange\n\t            changesOpts.include_docs = true;\n\t          } else { // ddoc filter\n\t            changesOpts.filter = opts.filter;\n\t          }\n\t        }\n\t        if ('heartbeat' in opts) {\n\t          changesOpts.heartbeat = opts.heartbeat;\n\t        }\n\t        if ('timeout' in opts) {\n\t          changesOpts.timeout = opts.timeout;\n\t        }\n\t        if (opts.query_params) {\n\t          changesOpts.query_params = opts.query_params;\n\t        }\n\t        if (opts.view) {\n\t          changesOpts.view = opts.view;\n\t        }\n\t        getChanges();\n\t      });\n\t    }).catch(function (err) {\n\t      abortReplication('getCheckpoint rejected with ', err);\n\t    });\n\t  }\n\t\n\t  /* istanbul ignore next */\n\t  function onCheckpointError(err) {\n\t    writingCheckpoint = false;\n\t    abortReplication('writeCheckpoint completed with error', err);\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (returnValue.cancelled) { // cancelled immediately\n\t    completeReplication();\n\t    return;\n\t  }\n\t\n\t  if (!returnValue._addedListeners) {\n\t    returnValue.once('cancel', completeReplication);\n\t\n\t    if (typeof opts.complete === 'function') {\n\t      returnValue.once('error', opts.complete);\n\t      returnValue.once('complete', function (result) {\n\t        opts.complete(null, result);\n\t      });\n\t    }\n\t    returnValue._addedListeners = true;\n\t  }\n\t\n\t  if (typeof opts.since === 'undefined') {\n\t    startChanges();\n\t  } else {\n\t    initCheckpointer().then(function () {\n\t      writingCheckpoint = true;\n\t      return checkpointer.writeCheckpoint(opts.since, session);\n\t    }).then(function () {\n\t      writingCheckpoint = false;\n\t      /* istanbul ignore if */\n\t      if (returnValue.cancelled) {\n\t        completeReplication();\n\t        return;\n\t      }\n\t      last_seq = opts.since;\n\t      startChanges();\n\t    }).catch(onCheckpointError);\n\t  }\n\t}\n\t\n\t// We create a basic promise so the caller can cancel the replication possibly\n\t// before we have actually started listening to changes etc\n\tinherits(Replication, events.EventEmitter);\n\tfunction Replication() {\n\t  events.EventEmitter.call(this);\n\t  this.cancelled = false;\n\t  this.state = 'pending';\n\t  var self = this;\n\t  var promise = new PouchPromise(function (fulfill, reject) {\n\t    self.once('complete', fulfill);\n\t    self.once('error', reject);\n\t  });\n\t  self.then = function (resolve, reject) {\n\t    return promise.then(resolve, reject);\n\t  };\n\t  self.catch = function (reject) {\n\t    return promise.catch(reject);\n\t  };\n\t  // As we allow error handling via \"error\" event as well,\n\t  // put a stub in here so that rejecting never throws UnhandledError.\n\t  self.catch(function () {});\n\t}\n\t\n\tReplication.prototype.cancel = function () {\n\t  this.cancelled = true;\n\t  this.state = 'cancelled';\n\t  this.emit('cancel');\n\t};\n\t\n\tReplication.prototype.ready = function (src, target) {\n\t  var self = this;\n\t  if (self._readyCalled) {\n\t    return;\n\t  }\n\t  self._readyCalled = true;\n\t\n\t  function onDestroy() {\n\t    self.cancel();\n\t  }\n\t  src.once('destroyed', onDestroy);\n\t  target.once('destroyed', onDestroy);\n\t  function cleanup() {\n\t    src.removeListener('destroyed', onDestroy);\n\t    target.removeListener('destroyed', onDestroy);\n\t  }\n\t  self.once('complete', cleanup);\n\t};\n\t\n\tfunction toPouch(db, opts) {\n\t  var PouchConstructor = opts.PouchConstructor;\n\t  if (typeof db === 'string') {\n\t    return new PouchConstructor(db, opts);\n\t  } else {\n\t    return db;\n\t  }\n\t}\n\t\n\tfunction replicateWrapper(src, target, opts, callback) {\n\t\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t\n\t  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n\t    throw createError(BAD_REQUEST,\n\t                       \"`doc_ids` filter parameter is not a list.\");\n\t  }\n\t\n\t  opts.complete = callback;\n\t  opts = clone(opts);\n\t  opts.continuous = opts.continuous || opts.live;\n\t  opts.retry = ('retry' in opts) ? opts.retry : false;\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  var replicateRet = new Replication(opts);\n\t  var srcPouch = toPouch(src, opts);\n\t  var targetPouch = toPouch(target, opts);\n\t  replicate(srcPouch, targetPouch, opts, replicateRet);\n\t  return replicateRet;\n\t}\n\t\n\tinherits(Sync, events.EventEmitter);\n\tfunction sync$1(src, target, opts, callback) {\n\t  if (typeof opts === 'function') {\n\t    callback = opts;\n\t    opts = {};\n\t  }\n\t  if (typeof opts === 'undefined') {\n\t    opts = {};\n\t  }\n\t  opts = clone(opts);\n\t  /*jshint validthis:true */\n\t  opts.PouchConstructor = opts.PouchConstructor || this;\n\t  src = toPouch(src, opts);\n\t  target = toPouch(target, opts);\n\t  return new Sync(src, target, opts, callback);\n\t}\n\t\n\tfunction Sync(src, target, opts, callback) {\n\t  var self = this;\n\t  this.canceled = false;\n\t\n\t  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n\t  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\t\n\t  this.push = replicateWrapper(src, target, optsPush);\n\t  this.pull = replicateWrapper(target, src, optsPull);\n\t\n\t  this.pushPaused = true;\n\t  this.pullPaused = true;\n\t\n\t  function pullChange(change) {\n\t    self.emit('change', {\n\t      direction: 'pull',\n\t      change: change\n\t    });\n\t  }\n\t  function pushChange(change) {\n\t    self.emit('change', {\n\t      direction: 'push',\n\t      change: change\n\t    });\n\t  }\n\t  function pushDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'push',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pullDenied(doc) {\n\t    self.emit('denied', {\n\t      direction: 'pull',\n\t      doc: doc\n\t    });\n\t  }\n\t  function pushPaused() {\n\t    self.pushPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pullPaused() {\n\t    self.pullPaused = true;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('paused');\n\t    }\n\t  }\n\t  function pushActive() {\n\t    self.pushPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pullPaused) {\n\t      self.emit('active', {\n\t        direction: 'push'\n\t      });\n\t    }\n\t  }\n\t  function pullActive() {\n\t    self.pullPaused = false;\n\t    /* istanbul ignore if */\n\t    if (self.pushPaused) {\n\t      self.emit('active', {\n\t        direction: 'pull'\n\t      });\n\t    }\n\t  }\n\t\n\t  var removed = {};\n\t\n\t  function removeAll(type) { // type is 'push' or 'pull'\n\t    return function (event, func) {\n\t      var isChange = event === 'change' &&\n\t        (func === pullChange || func === pushChange);\n\t      var isDenied = event === 'denied' &&\n\t        (func === pullDenied || func === pushDenied);\n\t      var isPaused = event === 'paused' &&\n\t        (func === pullPaused || func === pushPaused);\n\t      var isActive = event === 'active' &&\n\t        (func === pullActive || func === pushActive);\n\t\n\t      if (isChange || isDenied || isPaused || isActive) {\n\t        if (!(event in removed)) {\n\t          removed[event] = {};\n\t        }\n\t        removed[event][type] = true;\n\t        if (Object.keys(removed[event]).length === 2) {\n\t          // both push and pull have asked to be removed\n\t          self.removeAllListeners(event);\n\t        }\n\t      }\n\t    };\n\t  }\n\t\n\t  if (opts.live) {\n\t    this.push.on('complete', self.pull.cancel.bind(self.pull));\n\t    this.pull.on('complete', self.push.cancel.bind(self.push));\n\t  }\n\t\n\t  function addOneListener(ee, event, listener) {\n\t    if (ee.listeners(event).indexOf(listener) == -1) {\n\t      ee.on(event, listener);\n\t    }\n\t  }\n\t\n\t  this.on('newListener', function (event) {\n\t    if (event === 'change') {\n\t      addOneListener(self.pull, 'change', pullChange);\n\t      addOneListener(self.push, 'change', pushChange);\n\t    } else if (event === 'denied') {\n\t      addOneListener(self.pull, 'denied', pullDenied);\n\t      addOneListener(self.push, 'denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      addOneListener(self.pull, 'active', pullActive);\n\t      addOneListener(self.push, 'active', pushActive);\n\t    } else if (event === 'paused') {\n\t      addOneListener(self.pull, 'paused', pullPaused);\n\t      addOneListener(self.push, 'paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.on('removeListener', function (event) {\n\t    if (event === 'change') {\n\t      self.pull.removeListener('change', pullChange);\n\t      self.push.removeListener('change', pushChange);\n\t    } else if (event === 'denied') {\n\t      self.pull.removeListener('denied', pullDenied);\n\t      self.push.removeListener('denied', pushDenied);\n\t    } else if (event === 'active') {\n\t      self.pull.removeListener('active', pullActive);\n\t      self.push.removeListener('active', pushActive);\n\t    } else if (event === 'paused') {\n\t      self.pull.removeListener('paused', pullPaused);\n\t      self.push.removeListener('paused', pushPaused);\n\t    }\n\t  });\n\t\n\t  this.pull.on('removeListener', removeAll('pull'));\n\t  this.push.on('removeListener', removeAll('push'));\n\t\n\t  var promise = PouchPromise.all([\n\t    this.push,\n\t    this.pull\n\t  ]).then(function (resp) {\n\t    var out = {\n\t      push: resp[0],\n\t      pull: resp[1]\n\t    };\n\t    self.emit('complete', out);\n\t    if (callback) {\n\t      callback(null, out);\n\t    }\n\t    self.removeAllListeners();\n\t    return out;\n\t  }, function (err) {\n\t    self.cancel();\n\t    if (callback) {\n\t      // if there's a callback, then the callback can receive\n\t      // the error event\n\t      callback(err);\n\t    } else {\n\t      // if there's no callback, then we're safe to emit an error\n\t      // event, which would otherwise throw an unhandled error\n\t      // due to 'error' being a special event in EventEmitters\n\t      self.emit('error', err);\n\t    }\n\t    self.removeAllListeners();\n\t    if (callback) {\n\t      // no sense throwing if we're already emitting an 'error' event\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  this.then = function (success, err) {\n\t    return promise.then(success, err);\n\t  };\n\t\n\t  this.catch = function (err) {\n\t    return promise.catch(err);\n\t  };\n\t}\n\t\n\tSync.prototype.cancel = function () {\n\t  if (!this.canceled) {\n\t    this.canceled = true;\n\t    this.push.cancel();\n\t    this.pull.cancel();\n\t  }\n\t};\n\t\n\tfunction replication(PouchDB) {\n\t  PouchDB.replicate = replicateWrapper;\n\t  PouchDB.sync = sync$1;\n\t\n\t  Object.defineProperty(PouchDB.prototype, 'replicate', {\n\t    get: function () {\n\t      var self = this;\n\t      if (typeof this.replicateMethods === 'undefined') {\n\t        this.replicateMethods = {\n\t          from: function (other, opts, callback) {\n\t            return self.constructor.replicate(other, self, opts, callback);\n\t          },\n\t          to: function (other, opts, callback) {\n\t            return self.constructor.replicate(self, other, opts, callback);\n\t          }\n\t        };\n\t      }\n\t      return this.replicateMethods;\n\t    }\n\t  });\n\t\n\t  PouchDB.prototype.sync = function (dbName, opts, callback) {\n\t    return this.constructor.sync(this, dbName, opts, callback);\n\t  };\n\t}\n\t\n\tPouchDB$5.plugin(IDBPouch)\n\t  .plugin(WebSqlPouch)\n\t  .plugin(HttpPouch$1)\n\t  .plugin(mapreduce)\n\t  .plugin(replication);\n\t\n\t// Pull from src because pouchdb-node/pouchdb-browser themselves\n\t// are aggressively optimized and jsnext:main would normally give us this\n\t// aggressive bundle.\n\t\n\tmodule.exports = PouchDB$5;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar v1 = __webpack_require__(79);\n\tvar v4 = __webpack_require__(82);\n\t\n\tvar uuid = v4;\n\tuuid.v1 = v1;\n\tuuid.v4 = v4;\n\t\n\tmodule.exports = uuid;\n\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar rng = __webpack_require__(80);\n\tvar bytesToUuid = __webpack_require__(81);\n\t\n\t// **`v1()` - Generate time-based UUID**\n\t//\n\t// Inspired by https://github.com/LiosK/UUID.js\n\t// and http://docs.python.org/library/uuid.html\n\t\n\t// random #'s we need to init node and clockseq\n\tvar _seedBytes = rng();\n\t\n\t// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n\tvar _nodeId = [\n\t  _seedBytes[0] | 0x01,\n\t  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n\t];\n\t\n\t// Per 4.2.2, randomize (14 bit) clockseq\n\tvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\t\n\t// Previous uuid creation time\n\tvar _lastMSecs = 0, _lastNSecs = 0;\n\t\n\t// See https://github.com/broofa/node-uuid for API details\n\tfunction v1(options, buf, offset) {\n\t  var i = buf && offset || 0;\n\t  var b = buf || [];\n\t\n\t  options = options || {};\n\t\n\t  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\t\n\t  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n\t  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n\t  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n\t  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\t  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\t\n\t  // Per 4.2.1.2, use count of uuid's generated during the current clock\n\t  // cycle to simulate higher resolution clock\n\t  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\t\n\t  // Time since last uuid creation (in msecs)\n\t  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\t\n\t  // Per 4.2.1.2, Bump clockseq on clock regression\n\t  if (dt < 0 && options.clockseq === undefined) {\n\t    clockseq = clockseq + 1 & 0x3fff;\n\t  }\n\t\n\t  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n\t  // time interval\n\t  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n\t    nsecs = 0;\n\t  }\n\t\n\t  // Per 4.2.1.2 Throw error if too many uuids are requested\n\t  if (nsecs >= 10000) {\n\t    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n\t  }\n\t\n\t  _lastMSecs = msecs;\n\t  _lastNSecs = nsecs;\n\t  _clockseq = clockseq;\n\t\n\t  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\t  msecs += 12219292800000;\n\t\n\t  // `time_low`\n\t  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n\t  b[i++] = tl >>> 24 & 0xff;\n\t  b[i++] = tl >>> 16 & 0xff;\n\t  b[i++] = tl >>> 8 & 0xff;\n\t  b[i++] = tl & 0xff;\n\t\n\t  // `time_mid`\n\t  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n\t  b[i++] = tmh >>> 8 & 0xff;\n\t  b[i++] = tmh & 0xff;\n\t\n\t  // `time_high_and_version`\n\t  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\t  b[i++] = tmh >>> 16 & 0xff;\n\t\n\t  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\t  b[i++] = clockseq >>> 8 | 0x80;\n\t\n\t  // `clock_seq_low`\n\t  b[i++] = clockseq & 0xff;\n\t\n\t  // `node`\n\t  var node = options.node || _nodeId;\n\t  for (var n = 0; n < 6; ++n) {\n\t    b[i + n] = node[n];\n\t  }\n\t\n\t  return buf ? buf : bytesToUuid(b);\n\t}\n\t\n\tmodule.exports = v1;\n\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n\t// browser this is a little complicated due to unknown quality of Math.random()\n\t// and inconsistent support for the `crypto` API.  We do the best we can via\n\t// feature-detection\n\tvar rng;\n\t\n\tvar crypto = global.crypto || global.msCrypto; // for IE 11\n\tif (crypto && crypto.getRandomValues) {\n\t  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\t  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n\t  rng = function whatwgRNG() {\n\t    crypto.getRandomValues(rnds8);\n\t    return rnds8;\n\t  };\n\t}\n\t\n\tif (!rng) {\n\t  // Math.random()-based (RNG)\n\t  //\n\t  // If all else fails, use Math.random().  It's fast, but is of unspecified\n\t  // quality.\n\t  var rnds = new Array(16);\n\t  rng = function() {\n\t    for (var i = 0, r; i < 16; i++) {\n\t      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n\t      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n\t    }\n\t\n\t    return rnds;\n\t  };\n\t}\n\t\n\tmodule.exports = rng;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Convert array of 16 byte values to UUID string format of the form:\n\t * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n\t */\n\tvar byteToHex = [];\n\tfor (var i = 0; i < 256; ++i) {\n\t  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n\t}\n\t\n\tfunction bytesToUuid(buf, offset) {\n\t  var i = offset || 0;\n\t  var bth = byteToHex;\n\t  return bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] + '-' +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]] +\n\t          bth[buf[i++]] + bth[buf[i++]];\n\t}\n\t\n\tmodule.exports = bytesToUuid;\n\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar rng = __webpack_require__(80);\n\tvar bytesToUuid = __webpack_require__(81);\n\t\n\tfunction v4(options, buf, offset) {\n\t  var i = buf && offset || 0;\n\t\n\t  if (typeof(options) == 'string') {\n\t    buf = options == 'binary' ? new Array(16) : null;\n\t    options = null;\n\t  }\n\t  options = options || {};\n\t\n\t  var rnds = options.random || (options.rng || rng)();\n\t\n\t  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n\t  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\t\n\t  // Copy bytes to buffer, if provided\n\t  if (buf) {\n\t    for (var ii = 0; ii < 16; ++ii) {\n\t      buf[i + ii] = rnds[ii];\n\t    }\n\t  }\n\t\n\t  return buf || bytesToUuid(rnds);\n\t}\n\t\n\tmodule.exports = v4;\n\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\tvar immediate = __webpack_require__(84);\n\t\n\t/* istanbul ignore next */\n\tfunction INTERNAL() {}\n\t\n\tvar handlers = {};\n\t\n\tvar REJECTED = ['REJECTED'];\n\tvar FULFILLED = ['FULFILLED'];\n\tvar PENDING = ['PENDING'];\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(resolver) {\n\t  if (typeof resolver !== 'function') {\n\t    throw new TypeError('resolver must be a function');\n\t  }\n\t  this.state = PENDING;\n\t  this.queue = [];\n\t  this.outcome = void 0;\n\t  if (resolver !== INTERNAL) {\n\t    safelyResolveThenable(this, resolver);\n\t  }\n\t}\n\t\n\tPromise.prototype[\"catch\"] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n\t    typeof onRejected !== 'function' && this.state === REJECTED) {\n\t    return this;\n\t  }\n\t  var promise = new this.constructor(INTERNAL);\n\t  if (this.state !== PENDING) {\n\t    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n\t    unwrap(promise, resolver, this.outcome);\n\t  } else {\n\t    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n\t  }\n\t\n\t  return promise;\n\t};\n\tfunction QueueItem(promise, onFulfilled, onRejected) {\n\t  this.promise = promise;\n\t  if (typeof onFulfilled === 'function') {\n\t    this.onFulfilled = onFulfilled;\n\t    this.callFulfilled = this.otherCallFulfilled;\n\t  }\n\t  if (typeof onRejected === 'function') {\n\t    this.onRejected = onRejected;\n\t    this.callRejected = this.otherCallRejected;\n\t  }\n\t}\n\tQueueItem.prototype.callFulfilled = function (value) {\n\t  handlers.resolve(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallFulfilled = function (value) {\n\t  unwrap(this.promise, this.onFulfilled, value);\n\t};\n\tQueueItem.prototype.callRejected = function (value) {\n\t  handlers.reject(this.promise, value);\n\t};\n\tQueueItem.prototype.otherCallRejected = function (value) {\n\t  unwrap(this.promise, this.onRejected, value);\n\t};\n\t\n\tfunction unwrap(promise, func, value) {\n\t  immediate(function () {\n\t    var returnValue;\n\t    try {\n\t      returnValue = func(value);\n\t    } catch (e) {\n\t      return handlers.reject(promise, e);\n\t    }\n\t    if (returnValue === promise) {\n\t      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n\t    } else {\n\t      handlers.resolve(promise, returnValue);\n\t    }\n\t  });\n\t}\n\t\n\thandlers.resolve = function (self, value) {\n\t  var result = tryCatch(getThen, value);\n\t  if (result.status === 'error') {\n\t    return handlers.reject(self, result.value);\n\t  }\n\t  var thenable = result.value;\n\t\n\t  if (thenable) {\n\t    safelyResolveThenable(self, thenable);\n\t  } else {\n\t    self.state = FULFILLED;\n\t    self.outcome = value;\n\t    var i = -1;\n\t    var len = self.queue.length;\n\t    while (++i < len) {\n\t      self.queue[i].callFulfilled(value);\n\t    }\n\t  }\n\t  return self;\n\t};\n\thandlers.reject = function (self, error) {\n\t  self.state = REJECTED;\n\t  self.outcome = error;\n\t  var i = -1;\n\t  var len = self.queue.length;\n\t  while (++i < len) {\n\t    self.queue[i].callRejected(error);\n\t  }\n\t  return self;\n\t};\n\t\n\tfunction getThen(obj) {\n\t  // Make sure we only access the accessor once as required by the spec\n\t  var then = obj && obj.then;\n\t  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n\t    return function appyThen() {\n\t      then.apply(obj, arguments);\n\t    };\n\t  }\n\t}\n\t\n\tfunction safelyResolveThenable(self, thenable) {\n\t  // Either fulfill, reject or reject with error\n\t  var called = false;\n\t  function onError(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.reject(self, value);\n\t  }\n\t\n\t  function onSuccess(value) {\n\t    if (called) {\n\t      return;\n\t    }\n\t    called = true;\n\t    handlers.resolve(self, value);\n\t  }\n\t\n\t  function tryToUnwrap() {\n\t    thenable(onSuccess, onError);\n\t  }\n\t\n\t  var result = tryCatch(tryToUnwrap);\n\t  if (result.status === 'error') {\n\t    onError(result.value);\n\t  }\n\t}\n\t\n\tfunction tryCatch(func, value) {\n\t  var out = {};\n\t  try {\n\t    out.value = func(value);\n\t    out.status = 'success';\n\t  } catch (e) {\n\t    out.status = 'error';\n\t    out.value = e;\n\t  }\n\t  return out;\n\t}\n\t\n\tPromise.resolve = resolve;\n\tfunction resolve(value) {\n\t  if (value instanceof this) {\n\t    return value;\n\t  }\n\t  return handlers.resolve(new this(INTERNAL), value);\n\t}\n\t\n\tPromise.reject = reject;\n\tfunction reject(reason) {\n\t  var promise = new this(INTERNAL);\n\t  return handlers.reject(promise, reason);\n\t}\n\t\n\tPromise.all = all;\n\tfunction all(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var values = new Array(len);\n\t  var resolved = 0;\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    allResolver(iterable[i], i);\n\t  }\n\t  return promise;\n\t  function allResolver(value, i) {\n\t    self.resolve(value).then(resolveFromAll, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t    function resolveFromAll(outValue) {\n\t      values[i] = outValue;\n\t      if (++resolved === len && !called) {\n\t        called = true;\n\t        handlers.resolve(promise, values);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\tPromise.race = race;\n\tfunction race(iterable) {\n\t  var self = this;\n\t  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n\t    return this.reject(new TypeError('must be an array'));\n\t  }\n\t\n\t  var len = iterable.length;\n\t  var called = false;\n\t  if (!len) {\n\t    return this.resolve([]);\n\t  }\n\t\n\t  var i = -1;\n\t  var promise = new this(INTERNAL);\n\t\n\t  while (++i < len) {\n\t    resolver(iterable[i]);\n\t  }\n\t  return promise;\n\t  function resolver(value) {\n\t    self.resolve(value).then(function (response) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.resolve(promise, response);\n\t      }\n\t    }, function (error) {\n\t      if (!called) {\n\t        called = true;\n\t        handlers.reject(promise, error);\n\t      }\n\t    });\n\t  }\n\t}\n\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\tvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\t\n\tvar scheduleDrain;\n\t\n\t{\n\t  if (Mutation) {\n\t    var called = 0;\n\t    var observer = new Mutation(nextTick);\n\t    var element = global.document.createTextNode('');\n\t    observer.observe(element, {\n\t      characterData: true\n\t    });\n\t    scheduleDrain = function () {\n\t      element.data = (called = ++called % 2);\n\t    };\n\t  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n\t    var channel = new global.MessageChannel();\n\t    channel.port1.onmessage = nextTick;\n\t    scheduleDrain = function () {\n\t      channel.port2.postMessage(0);\n\t    };\n\t  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n\t    scheduleDrain = function () {\n\t\n\t      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n\t      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n\t      var scriptEl = global.document.createElement('script');\n\t      scriptEl.onreadystatechange = function () {\n\t        nextTick();\n\t\n\t        scriptEl.onreadystatechange = null;\n\t        scriptEl.parentNode.removeChild(scriptEl);\n\t        scriptEl = null;\n\t      };\n\t      global.document.documentElement.appendChild(scriptEl);\n\t    };\n\t  } else {\n\t    scheduleDrain = function () {\n\t      setTimeout(nextTick, 0);\n\t    };\n\t  }\n\t}\n\t\n\tvar draining;\n\tvar queue = [];\n\t//named nextTick for less confusing stack traces\n\tfunction nextTick() {\n\t  draining = true;\n\t  var i, oldQueue;\n\t  var len = queue.length;\n\t  while (len) {\n\t    oldQueue = queue;\n\t    queue = [];\n\t    i = -1;\n\t    while (++i < len) {\n\t      oldQueue[i]();\n\t    }\n\t    len = queue.length;\n\t  }\n\t  draining = false;\n\t}\n\t\n\tmodule.exports = immediate;\n\tfunction immediate(task) {\n\t  if (queue.push(task) === 1 && !draining) {\n\t    scheduleDrain();\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = argsArray;\n\t\n\tfunction argsArray(fun) {\n\t  return function () {\n\t    var len = arguments.length;\n\t    if (len) {\n\t      var args = [];\n\t      var i = -1;\n\t      while (++i < len) {\n\t        args[i] = arguments[i];\n\t      }\n\t      return fun.call(this, args);\n\t    } else {\n\t      return fun.call(this, []);\n\t    }\n\t  };\n\t}\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\n\t// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t  this._maxListeners = this._maxListeners || undefined;\n\t}\n\tmodule.exports = EventEmitter;\n\t\n\t// Backwards-compat with node 0.10.x\n\tEventEmitter.EventEmitter = EventEmitter;\n\t\n\tEventEmitter.prototype._events = undefined;\n\tEventEmitter.prototype._maxListeners = undefined;\n\t\n\t// By default EventEmitters will print a warning if more than 10 listeners are\n\t// added to it. This is a useful default which helps finding memory leaks.\n\tEventEmitter.defaultMaxListeners = 10;\n\t\n\t// Obviously not all Emitters should be limited to 10. This function allows\n\t// that to be increased. Set to zero for unlimited.\n\tEventEmitter.prototype.setMaxListeners = function(n) {\n\t  if (!isNumber(n) || n < 0 || isNaN(n))\n\t    throw TypeError('n must be a positive number');\n\t  this._maxListeners = n;\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  var er, handler, len, args, i, listeners;\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // If there is no 'error' event listener then throw.\n\t  if (type === 'error') {\n\t    if (!this._events.error ||\n\t        (isObject(this._events.error) && !this._events.error.length)) {\n\t      er = arguments[1];\n\t      if (er instanceof Error) {\n\t        throw er; // Unhandled 'error' event\n\t      } else {\n\t        // At least give some kind of context to the user\n\t        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n\t        err.context = er;\n\t        throw err;\n\t      }\n\t    }\n\t  }\n\t\n\t  handler = this._events[type];\n\t\n\t  if (isUndefined(handler))\n\t    return false;\n\t\n\t  if (isFunction(handler)) {\n\t    switch (arguments.length) {\n\t      // fast cases\n\t      case 1:\n\t        handler.call(this);\n\t        break;\n\t      case 2:\n\t        handler.call(this, arguments[1]);\n\t        break;\n\t      case 3:\n\t        handler.call(this, arguments[1], arguments[2]);\n\t        break;\n\t      // slower\n\t      default:\n\t        args = Array.prototype.slice.call(arguments, 1);\n\t        handler.apply(this, args);\n\t    }\n\t  } else if (isObject(handler)) {\n\t    args = Array.prototype.slice.call(arguments, 1);\n\t    listeners = handler.slice();\n\t    len = listeners.length;\n\t    for (i = 0; i < len; i++)\n\t      listeners[i].apply(this, args);\n\t  }\n\t\n\t  return true;\n\t};\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  var m;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events)\n\t    this._events = {};\n\t\n\t  // To avoid recursion in the case that type === \"newListener\"! Before\n\t  // adding it to the listeners, first emit \"newListener\".\n\t  if (this._events.newListener)\n\t    this.emit('newListener', type,\n\t              isFunction(listener.listener) ?\n\t              listener.listener : listener);\n\t\n\t  if (!this._events[type])\n\t    // Optimize the case of one listener. Don't need the extra array object.\n\t    this._events[type] = listener;\n\t  else if (isObject(this._events[type]))\n\t    // If we've already got an array, just append.\n\t    this._events[type].push(listener);\n\t  else\n\t    // Adding the second element, need to change to array.\n\t    this._events[type] = [this._events[type], listener];\n\t\n\t  // Check for listener leak\n\t  if (isObject(this._events[type]) && !this._events[type].warned) {\n\t    if (!isUndefined(this._maxListeners)) {\n\t      m = this._maxListeners;\n\t    } else {\n\t      m = EventEmitter.defaultMaxListeners;\n\t    }\n\t\n\t    if (m && m > 0 && this._events[type].length > m) {\n\t      this._events[type].warned = true;\n\t      console.error('(node) warning: possible EventEmitter memory ' +\n\t                    'leak detected. %d listeners added. ' +\n\t                    'Use emitter.setMaxListeners() to increase limit.',\n\t                    this._events[type].length);\n\t      if (typeof console.trace === 'function') {\n\t        // not supported in IE 10\n\t        console.trace();\n\t      }\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  var fired = false;\n\t\n\t  function g() {\n\t    this.removeListener(type, g);\n\t\n\t    if (!fired) {\n\t      fired = true;\n\t      listener.apply(this, arguments);\n\t    }\n\t  }\n\t\n\t  g.listener = listener;\n\t  this.on(type, g);\n\t\n\t  return this;\n\t};\n\t\n\t// emits a 'removeListener' event iff the listener was removed\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  var list, position, length, i;\n\t\n\t  if (!isFunction(listener))\n\t    throw TypeError('listener must be a function');\n\t\n\t  if (!this._events || !this._events[type])\n\t    return this;\n\t\n\t  list = this._events[type];\n\t  length = list.length;\n\t  position = -1;\n\t\n\t  if (list === listener ||\n\t      (isFunction(list.listener) && list.listener === listener)) {\n\t    delete this._events[type];\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t\n\t  } else if (isObject(list)) {\n\t    for (i = length; i-- > 0;) {\n\t      if (list[i] === listener ||\n\t          (list[i].listener && list[i].listener === listener)) {\n\t        position = i;\n\t        break;\n\t      }\n\t    }\n\t\n\t    if (position < 0)\n\t      return this;\n\t\n\t    if (list.length === 1) {\n\t      list.length = 0;\n\t      delete this._events[type];\n\t    } else {\n\t      list.splice(position, 1);\n\t    }\n\t\n\t    if (this._events.removeListener)\n\t      this.emit('removeListener', type, listener);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  var key, listeners;\n\t\n\t  if (!this._events)\n\t    return this;\n\t\n\t  // not listening for removeListener, no need to emit\n\t  if (!this._events.removeListener) {\n\t    if (arguments.length === 0)\n\t      this._events = {};\n\t    else if (this._events[type])\n\t      delete this._events[type];\n\t    return this;\n\t  }\n\t\n\t  // emit removeListener for all listeners on all events\n\t  if (arguments.length === 0) {\n\t    for (key in this._events) {\n\t      if (key === 'removeListener') continue;\n\t      this.removeAllListeners(key);\n\t    }\n\t    this.removeAllListeners('removeListener');\n\t    this._events = {};\n\t    return this;\n\t  }\n\t\n\t  listeners = this._events[type];\n\t\n\t  if (isFunction(listeners)) {\n\t    this.removeListener(type, listeners);\n\t  } else if (listeners) {\n\t    // LIFO order\n\t    while (listeners.length)\n\t      this.removeListener(type, listeners[listeners.length - 1]);\n\t  }\n\t  delete this._events[type];\n\t\n\t  return this;\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  var ret;\n\t  if (!this._events || !this._events[type])\n\t    ret = [];\n\t  else if (isFunction(this._events[type]))\n\t    ret = [this._events[type]];\n\t  else\n\t    ret = this._events[type].slice();\n\t  return ret;\n\t};\n\t\n\tEventEmitter.prototype.listenerCount = function(type) {\n\t  if (this._events) {\n\t    var evlistener = this._events[type];\n\t\n\t    if (isFunction(evlistener))\n\t      return 1;\n\t    else if (evlistener)\n\t      return evlistener.length;\n\t  }\n\t  return 0;\n\t};\n\t\n\tEventEmitter.listenerCount = function(emitter, type) {\n\t  return emitter.listenerCount(type);\n\t};\n\t\n\tfunction isFunction(arg) {\n\t  return typeof arg === 'function';\n\t}\n\t\n\tfunction isNumber(arg) {\n\t  return typeof arg === 'number';\n\t}\n\t\n\tfunction isObject(arg) {\n\t  return typeof arg === 'object' && arg !== null;\n\t}\n\t\n\tfunction isUndefined(arg) {\n\t  return arg === void 0;\n\t}\n\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports) {\n\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    ctor.prototype = Object.create(superCtor.prototype, {\n\t      constructor: {\n\t        value: ctor,\n\t        enumerable: false,\n\t        writable: true,\n\t        configurable: true\n\t      }\n\t    });\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  module.exports = function inherits(ctor, superCtor) {\n\t    ctor.super_ = superCtor\n\t    var TempCtor = function () {}\n\t    TempCtor.prototype = superCtor.prototype\n\t    ctor.prototype = new TempCtor()\n\t    ctor.prototype.constructor = ctor\n\t  }\n\t}\n\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/**\n\t * This is the web browser implementation of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = __webpack_require__(90);\n\texports.log = log;\n\texports.formatArgs = formatArgs;\n\texports.save = save;\n\texports.load = load;\n\texports.useColors = useColors;\n\texports.storage = 'undefined' != typeof chrome\n\t               && 'undefined' != typeof chrome.storage\n\t                  ? chrome.storage.local\n\t                  : localstorage();\n\t\n\t/**\n\t * Colors.\n\t */\n\t\n\texports.colors = [\n\t  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n\t  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n\t  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n\t  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n\t  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n\t  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n\t  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n\t  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n\t  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n\t  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n\t  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n\t];\n\t\n\t/**\n\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t * and the Firebug extension (any Firefox version) are known\n\t * to support \"%c\" CSS customizations.\n\t *\n\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t */\n\t\n\tfunction useColors() {\n\t  // NB: In an Electron preload script, document will be defined but not fully\n\t  // initialized. Since we know we're in Chrome, we'll just detect this case\n\t  // explicitly\n\t  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n\t    return true;\n\t  }\n\t\n\t  // Internet Explorer and Edge do not support colors.\n\t  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t    return false;\n\t  }\n\t\n\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t    // is firefox >= v31?\n\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t    // double check webkit in userAgent just in case we are in a worker\n\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t}\n\t\n\t/**\n\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t */\n\t\n\texports.formatters.j = function(v) {\n\t  try {\n\t    return JSON.stringify(v);\n\t  } catch (err) {\n\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t  }\n\t};\n\t\n\t\n\t/**\n\t * Colorize log arguments if enabled.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction formatArgs(args) {\n\t  var useColors = this.useColors;\n\t\n\t  args[0] = (useColors ? '%c' : '')\n\t    + this.namespace\n\t    + (useColors ? ' %c' : ' ')\n\t    + args[0]\n\t    + (useColors ? '%c ' : ' ')\n\t    + '+' + exports.humanize(this.diff);\n\t\n\t  if (!useColors) return;\n\t\n\t  var c = 'color: ' + this.color;\n\t  args.splice(1, 0, c, 'color: inherit')\n\t\n\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t  // arguments passed either before or after the %c, so we need to\n\t  // figure out the correct index to insert the CSS into\n\t  var index = 0;\n\t  var lastC = 0;\n\t  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n\t    if ('%%' === match) return;\n\t    index++;\n\t    if ('%c' === match) {\n\t      // we only are interested in the *last* %c\n\t      // (the user may have provided their own)\n\t      lastC = index;\n\t    }\n\t  });\n\t\n\t  args.splice(lastC, 0, c);\n\t}\n\t\n\t/**\n\t * Invokes `console.log()` when available.\n\t * No-op when `console.log` is not a \"function\".\n\t *\n\t * @api public\n\t */\n\t\n\tfunction log() {\n\t  // this hackery is required for IE8/9, where\n\t  // the `console.log` function doesn't have 'apply'\n\t  return 'object' === typeof console\n\t    && console.log\n\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t}\n\t\n\t/**\n\t * Save `namespaces`.\n\t *\n\t * @param {String} namespaces\n\t * @api private\n\t */\n\t\n\tfunction save(namespaces) {\n\t  try {\n\t    if (null == namespaces) {\n\t      exports.storage.removeItem('debug');\n\t    } else {\n\t      exports.storage.debug = namespaces;\n\t    }\n\t  } catch(e) {}\n\t}\n\t\n\t/**\n\t * Load `namespaces`.\n\t *\n\t * @return {String} returns the previously persisted debug modes\n\t * @api private\n\t */\n\t\n\tfunction load() {\n\t  var r;\n\t  try {\n\t    r = exports.storage.debug;\n\t  } catch(e) {}\n\t\n\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t  if (!r && typeof process !== 'undefined' && 'env' in process) {\n\t    r = ({\"ENV\":\"production\"}).DEBUG;\n\t  }\n\t\n\t  return r;\n\t}\n\t\n\t/**\n\t * Enable namespaces listed in `localStorage.debug` initially.\n\t */\n\t\n\texports.enable(load());\n\t\n\t/**\n\t * Localstorage attempts to return the localstorage.\n\t *\n\t * This is necessary because safari throws\n\t * when a user disables cookies/localstorage\n\t * and you attempt to access it.\n\t *\n\t * @return {LocalStorage}\n\t * @api private\n\t */\n\t\n\tfunction localstorage() {\n\t  try {\n\t    return window.localStorage;\n\t  } catch (e) {}\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(89)))\n\n/***/ }),\n/* 89 */,\n/* 90 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t *\n\t * Expose `debug()` as the module.\n\t */\n\t\n\texports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\n\texports.coerce = coerce;\n\texports.disable = disable;\n\texports.enable = enable;\n\texports.enabled = enabled;\n\texports.humanize = __webpack_require__(91);\n\t\n\t/**\n\t * Active `debug` instances.\n\t */\n\texports.instances = [];\n\t\n\t/**\n\t * The currently active debug mode names, and names to skip.\n\t */\n\t\n\texports.names = [];\n\texports.skips = [];\n\t\n\t/**\n\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t *\n\t * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t */\n\t\n\texports.formatters = {};\n\t\n\t/**\n\t * Select a color.\n\t * @param {String} namespace\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction selectColor(namespace) {\n\t  var hash = 0, i;\n\t\n\t  for (i in namespace) {\n\t    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t    hash |= 0; // Convert to 32bit integer\n\t  }\n\t\n\t  return exports.colors[Math.abs(hash) % exports.colors.length];\n\t}\n\t\n\t/**\n\t * Create a debugger with the given `namespace`.\n\t *\n\t * @param {String} namespace\n\t * @return {Function}\n\t * @api public\n\t */\n\t\n\tfunction createDebug(namespace) {\n\t\n\t  var prevTime;\n\t\n\t  function debug() {\n\t    // disabled?\n\t    if (!debug.enabled) return;\n\t\n\t    var self = debug;\n\t\n\t    // set `diff` timestamp\n\t    var curr = +new Date();\n\t    var ms = curr - (prevTime || curr);\n\t    self.diff = ms;\n\t    self.prev = prevTime;\n\t    self.curr = curr;\n\t    prevTime = curr;\n\t\n\t    // turn the `arguments` into a proper Array\n\t    var args = new Array(arguments.length);\n\t    for (var i = 0; i < args.length; i++) {\n\t      args[i] = arguments[i];\n\t    }\n\t\n\t    args[0] = exports.coerce(args[0]);\n\t\n\t    if ('string' !== typeof args[0]) {\n\t      // anything else let's inspect with %O\n\t      args.unshift('%O');\n\t    }\n\t\n\t    // apply any `formatters` transformations\n\t    var index = 0;\n\t    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n\t      // if we encounter an escaped % then don't increase the array index\n\t      if (match === '%%') return match;\n\t      index++;\n\t      var formatter = exports.formatters[format];\n\t      if ('function' === typeof formatter) {\n\t        var val = args[index];\n\t        match = formatter.call(self, val);\n\t\n\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t        args.splice(index, 1);\n\t        index--;\n\t      }\n\t      return match;\n\t    });\n\t\n\t    // apply env-specific formatting (colors, etc.)\n\t    exports.formatArgs.call(self, args);\n\t\n\t    var logFn = debug.log || exports.log || console.log.bind(console);\n\t    logFn.apply(self, args);\n\t  }\n\t\n\t  debug.namespace = namespace;\n\t  debug.enabled = exports.enabled(namespace);\n\t  debug.useColors = exports.useColors();\n\t  debug.color = selectColor(namespace);\n\t  debug.destroy = destroy;\n\t\n\t  // env-specific initialization logic for debug instances\n\t  if ('function' === typeof exports.init) {\n\t    exports.init(debug);\n\t  }\n\t\n\t  exports.instances.push(debug);\n\t\n\t  return debug;\n\t}\n\t\n\tfunction destroy () {\n\t  var index = exports.instances.indexOf(this);\n\t  if (index !== -1) {\n\t    exports.instances.splice(index, 1);\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Enables a debug mode by namespaces. This can include modes\n\t * separated by a colon and wildcards.\n\t *\n\t * @param {String} namespaces\n\t * @api public\n\t */\n\t\n\tfunction enable(namespaces) {\n\t  exports.save(namespaces);\n\t\n\t  exports.names = [];\n\t  exports.skips = [];\n\t\n\t  var i;\n\t  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t  var len = split.length;\n\t\n\t  for (i = 0; i < len; i++) {\n\t    if (!split[i]) continue; // ignore empty strings\n\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t    if (namespaces[0] === '-') {\n\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t    } else {\n\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t    }\n\t  }\n\t\n\t  for (i = 0; i < exports.instances.length; i++) {\n\t    var instance = exports.instances[i];\n\t    instance.enabled = exports.enabled(instance.namespace);\n\t  }\n\t}\n\t\n\t/**\n\t * Disable debug output.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction disable() {\n\t  exports.enable('');\n\t}\n\t\n\t/**\n\t * Returns true if the given mode name is enabled, false otherwise.\n\t *\n\t * @param {String} name\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tfunction enabled(name) {\n\t  if (name[name.length - 1] === '*') {\n\t    return true;\n\t  }\n\t  var i, len;\n\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t    if (exports.skips[i].test(name)) {\n\t      return false;\n\t    }\n\t  }\n\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t    if (exports.names[i].test(name)) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Coerce `val`.\n\t *\n\t * @param {Mixed} val\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tfunction coerce(val) {\n\t  if (val instanceof Error) return val.stack || val.message;\n\t  return val;\n\t}\n\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Helpers.\n\t */\n\t\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\t\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\t\n\tmodule.exports = function(val, options) {\n\t  options = options || {};\n\t  var type = typeof val;\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ? fmtLong(val) : fmtShort(val);\n\t  }\n\t  throw new Error(\n\t    'val is not a non-empty string or a valid number. val=' +\n\t      JSON.stringify(val)\n\t  );\n\t};\n\t\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\t\n\tfunction parse(str) {\n\t  str = String(str);\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n\t    str\n\t  );\n\t  if (!match) {\n\t    return;\n\t  }\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\t\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\t  return ms + 'ms';\n\t}\n\t\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms';\n\t}\n\t\n\t/**\n\t * Pluralization helper.\n\t */\n\t\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return;\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name;\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t(function (factory) {\n\t    if (true) {\n\t        // Node/CommonJS\n\t        module.exports = factory();\n\t    } else if (typeof define === 'function' && define.amd) {\n\t        // AMD\n\t        define(factory);\n\t    } else {\n\t        // Browser globals (with support for web workers)\n\t        var glob;\n\t\n\t        try {\n\t            glob = window;\n\t        } catch (e) {\n\t            glob = self;\n\t        }\n\t\n\t        glob.SparkMD5 = factory();\n\t    }\n\t}(function (undefined) {\n\t\n\t    'use strict';\n\t\n\t    /*\n\t     * Fastest md5 implementation around (JKM md5).\n\t     * Credits: Joseph Myers\n\t     *\n\t     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n\t     * @see http://jsperf.com/md5-shootout/7\n\t     */\n\t\n\t    /* this function is much faster,\n\t      so if possible we use it. Some IEs\n\t      are the only ones I know of that\n\t      need the idiotic second function,\n\t      generated by an if clause.  */\n\t    var add32 = function (a, b) {\n\t        return (a + b) & 0xFFFFFFFF;\n\t    },\n\t        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\t\n\t\n\t    function cmn(q, a, b, x, s, t) {\n\t        a = add32(add32(a, q), add32(x, t));\n\t        return add32((a << s) | (a >>> (32 - s)), b);\n\t    }\n\t\n\t    function md5cycle(x, k) {\n\t        var a = x[0],\n\t            b = x[1],\n\t            c = x[2],\n\t            d = x[3];\n\t\n\t        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n\t        a  = (a << 7 | a >>> 25) + b | 0;\n\t        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n\t        d  = (d << 12 | d >>> 20) + a | 0;\n\t        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n\t        c  = (c << 17 | c >>> 15) + d | 0;\n\t        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n\t        b  = (b << 22 | b >>> 10) + c | 0;\n\t\n\t        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n\t        a  = (a << 5 | a >>> 27) + b | 0;\n\t        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n\t        d  = (d << 9 | d >>> 23) + a | 0;\n\t        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n\t        c  = (c << 14 | c >>> 18) + d | 0;\n\t        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n\t        b  = (b << 20 | b >>> 12) + c | 0;\n\t\n\t        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n\t        a  = (a << 4 | a >>> 28) + b | 0;\n\t        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n\t        d  = (d << 11 | d >>> 21) + a | 0;\n\t        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n\t        c  = (c << 16 | c >>> 16) + d | 0;\n\t        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n\t        b  = (b << 23 | b >>> 9) + c | 0;\n\t\n\t        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n\t        b  = (b << 21 |b >>> 11) + c | 0;\n\t        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n\t        a  = (a << 6 | a >>> 26) + b | 0;\n\t        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n\t        d  = (d << 10 | d >>> 22) + a | 0;\n\t        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n\t        c  = (c << 15 | c >>> 17) + d | 0;\n\t        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n\t        b  = (b << 21 | b >>> 11) + c | 0;\n\t\n\t        x[0] = a + x[0] | 0;\n\t        x[1] = b + x[1] | 0;\n\t        x[2] = c + x[2] | 0;\n\t        x[3] = d + x[3] | 0;\n\t    }\n\t\n\t    function md5blk(s) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md5blk_array(a) {\n\t        var md5blks = [],\n\t            i; /* Andy King said do it this way. */\n\t\n\t        for (i = 0; i < 64; i += 4) {\n\t            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n\t        }\n\t        return md5blks;\n\t    }\n\t\n\t    function md51(s) {\n\t        var n = s.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk(s.substring(i - 64, i)));\n\t        }\n\t        s = s.substring(i - 64);\n\t        length = s.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t        return state;\n\t    }\n\t\n\t    function md51_array(a) {\n\t        var n = a.length,\n\t            state = [1732584193, -271733879, -1732584194, 271733878],\n\t            i,\n\t            length,\n\t            tail,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        for (i = 64; i <= n; i += 64) {\n\t            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n\t        }\n\t\n\t        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n\t        // containing the last element of the parent array if the sub array specified starts\n\t        // beyond the length of the parent array - weird.\n\t        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n\t        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\t\n\t        length = a.length;\n\t        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(state, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Beware that the final length might not fit in 32 bits so we take care of that\n\t        tmp = n * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t\n\t        md5cycle(state, tail);\n\t\n\t        return state;\n\t    }\n\t\n\t    function rhex(n) {\n\t        var s = '',\n\t            j;\n\t        for (j = 0; j < 4; j += 1) {\n\t            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n\t        }\n\t        return s;\n\t    }\n\t\n\t    function hex(x) {\n\t        var i;\n\t        for (i = 0; i < x.length; i += 1) {\n\t            x[i] = rhex(x[i]);\n\t        }\n\t        return x.join('');\n\t    }\n\t\n\t    // In some cases the fast add32 function cannot be used..\n\t    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n\t        add32 = function (x, y) {\n\t            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n\t                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n\t            return (msw << 16) | (lsw & 0xFFFF);\n\t        };\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * ArrayBuffer slice polyfill.\n\t     *\n\t     * @see https://github.com/ttaubert/node-arraybuffer-slice\n\t     */\n\t\n\t    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n\t        (function () {\n\t            function clamp(val, length) {\n\t                val = (val | 0) || 0;\n\t\n\t                if (val < 0) {\n\t                    return Math.max(val + length, 0);\n\t                }\n\t\n\t                return Math.min(val, length);\n\t            }\n\t\n\t            ArrayBuffer.prototype.slice = function (from, to) {\n\t                var length = this.byteLength,\n\t                    begin = clamp(from, length),\n\t                    end = length,\n\t                    num,\n\t                    target,\n\t                    targetArray,\n\t                    sourceArray;\n\t\n\t                if (to !== undefined) {\n\t                    end = clamp(to, length);\n\t                }\n\t\n\t                if (begin > end) {\n\t                    return new ArrayBuffer(0);\n\t                }\n\t\n\t                num = end - begin;\n\t                target = new ArrayBuffer(num);\n\t                targetArray = new Uint8Array(target);\n\t\n\t                sourceArray = new Uint8Array(this, begin, num);\n\t                targetArray.set(sourceArray);\n\t\n\t                return target;\n\t            };\n\t        })();\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * Helpers.\n\t     */\n\t\n\t    function toUtf8(str) {\n\t        if (/[\\u0080-\\uFFFF]/.test(str)) {\n\t            str = unescape(encodeURIComponent(str));\n\t        }\n\t\n\t        return str;\n\t    }\n\t\n\t    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n\t        var length = str.length,\n\t           buff = new ArrayBuffer(length),\n\t           arr = new Uint8Array(buff),\n\t           i;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            arr[i] = str.charCodeAt(i);\n\t        }\n\t\n\t        return returnUInt8Array ? arr : buff;\n\t    }\n\t\n\t    function arrayBuffer2Utf8Str(buff) {\n\t        return String.fromCharCode.apply(null, new Uint8Array(buff));\n\t    }\n\t\n\t    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n\t        var result = new Uint8Array(first.byteLength + second.byteLength);\n\t\n\t        result.set(new Uint8Array(first));\n\t        result.set(new Uint8Array(second), first.byteLength);\n\t\n\t        return returnUInt8Array ? result : result.buffer;\n\t    }\n\t\n\t    function hexToBinaryString(hex) {\n\t        var bytes = [],\n\t            length = hex.length,\n\t            x;\n\t\n\t        for (x = 0; x < length - 1; x += 2) {\n\t            bytes.push(parseInt(hex.substr(x, 2), 16));\n\t        }\n\t\n\t        return String.fromCharCode.apply(String, bytes);\n\t    }\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation.\n\t     *\n\t     * Use this class to perform an incremental md5, otherwise use the\n\t     * static methods instead.\n\t     */\n\t\n\t    function SparkMD5() {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    }\n\t\n\t    /**\n\t     * Appends a string.\n\t     * A conversion will be applied if an utf8 string is detected.\n\t     *\n\t     * @param {String} str The string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.append = function (str) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then append as binary\n\t        this.appendBinary(toUtf8(str));\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Appends a binary string.\n\t     *\n\t     * @param {String} contents The binary string to be appended\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.appendBinary = function (contents) {\n\t        this._buff += contents;\n\t        this._length += contents.length;\n\t\n\t        var length = this._buff.length,\n\t            i;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n\t        }\n\t\n\t        this._buff = this._buff.substring(i - 64);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            i,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.reset = function () {\n\t        this._buff = '';\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.prototype.getState = function () {\n\t        return {\n\t            buff: this._buff,\n\t            length: this._length,\n\t            hash: this._hash\n\t        };\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5} The instance itself\n\t     */\n\t    SparkMD5.prototype.setState = function (state) {\n\t        this._buff = state.buff;\n\t        this._length = state.length;\n\t        this._hash = state.hash;\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Releases memory used by the incremental buffer and other additional\n\t     * resources. If you plan to use the instance again, use reset instead.\n\t     */\n\t    SparkMD5.prototype.destroy = function () {\n\t        delete this._hash;\n\t        delete this._buff;\n\t        delete this._length;\n\t    };\n\t\n\t    /**\n\t     * Finish the final calculation based on the tail.\n\t     *\n\t     * @param {Array}  tail   The tail (will be modified)\n\t     * @param {Number} length The length of the remaining buffer\n\t     */\n\t    SparkMD5.prototype._finish = function (tail, length) {\n\t        var i = length,\n\t            tmp,\n\t            lo,\n\t            hi;\n\t\n\t        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n\t        if (i > 55) {\n\t            md5cycle(this._hash, tail);\n\t            for (i = 0; i < 16; i += 1) {\n\t                tail[i] = 0;\n\t            }\n\t        }\n\t\n\t        // Do the final computation based on the tail and length\n\t        // Beware that the final length may not fit in 32 bits so we take care of that\n\t        tmp = this._length * 8;\n\t        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n\t        lo = parseInt(tmp[2], 16);\n\t        hi = parseInt(tmp[1], 16) || 0;\n\t\n\t        tail[14] = lo;\n\t        tail[15] = hi;\n\t        md5cycle(this._hash, tail);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a string.\n\t     * A conversion will be applied if utf8 string is detected.\n\t     *\n\t     * @param {String}  str The string\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hash = function (str, raw) {\n\t        // Converts the string to utf8 bytes if necessary\n\t        // Then compute it using the binary function\n\t        return SparkMD5.hashBinary(toUtf8(str), raw);\n\t    };\n\t\n\t    /**\n\t     * Performs the md5 hash on a binary string.\n\t     *\n\t     * @param {String}  content The binary string\n\t     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.hashBinary = function (content, raw) {\n\t        var hash = md51(content),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    // ---------------------------------------------------\n\t\n\t    /**\n\t     * SparkMD5 OOP implementation for array buffers.\n\t     *\n\t     * Use this class to perform an incremental md5 ONLY for array buffers.\n\t     */\n\t    SparkMD5.ArrayBuffer = function () {\n\t        // call reset to init the instance\n\t        this.reset();\n\t    };\n\t\n\t    /**\n\t     * Appends an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array to be appended\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n\t        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n\t            length = buff.length,\n\t            i;\n\t\n\t        this._length += arr.byteLength;\n\t\n\t        for (i = 64; i <= length; i += 64) {\n\t            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n\t        }\n\t\n\t        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Finishes the incremental computation, reseting the internal state and\n\t     * returning the result.\n\t     *\n\t     * @param {Boolean} raw True to get the raw string, false to get the hex string\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n\t        var buff = this._buff,\n\t            length = buff.length,\n\t            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n\t            i,\n\t            ret;\n\t\n\t        for (i = 0; i < length; i += 1) {\n\t            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n\t        }\n\t\n\t        this._finish(tail, length);\n\t        ret = hex(this._hash);\n\t\n\t        if (raw) {\n\t            ret = hexToBinaryString(ret);\n\t        }\n\t\n\t        this.reset();\n\t\n\t        return ret;\n\t    };\n\t\n\t    /**\n\t     * Resets the internal state of the computation.\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.reset = function () {\n\t        this._buff = new Uint8Array(0);\n\t        this._length = 0;\n\t        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\t\n\t        return this;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @return {Object} The state\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.getState = function () {\n\t        var state = SparkMD5.prototype.getState.call(this);\n\t\n\t        // Convert buffer to a string\n\t        state.buff = arrayBuffer2Utf8Str(state.buff);\n\t\n\t        return state;\n\t    };\n\t\n\t    /**\n\t     * Gets the internal state of the computation.\n\t     *\n\t     * @param {Object} state The state\n\t     *\n\t     * @return {SparkMD5.ArrayBuffer} The instance itself\n\t     */\n\t    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n\t        // Convert string to buffer\n\t        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\t\n\t        return SparkMD5.prototype.setState.call(this, state);\n\t    };\n\t\n\t    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\t\n\t    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\t\n\t    /**\n\t     * Performs the md5 hash on an array buffer.\n\t     *\n\t     * @param {ArrayBuffer} arr The array buffer\n\t     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n\t     *\n\t     * @return {String} The result\n\t     */\n\t    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n\t        var hash = md51_array(new Uint8Array(arr)),\n\t            ret = hex(hash);\n\t\n\t        return raw ? hexToBinaryString(ret) : ret;\n\t    };\n\t\n\t    return SparkMD5;\n\t}));\n\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * Stringify/parse functions that don't operate\n\t * recursively, so they avoid call stack exceeded\n\t * errors.\n\t */\n\texports.stringify = function stringify(input) {\n\t  var queue = [];\n\t  queue.push({obj: input});\n\t\n\t  var res = '';\n\t  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n\t  while ((next = queue.pop())) {\n\t    obj = next.obj;\n\t    prefix = next.prefix || '';\n\t    val = next.val || '';\n\t    res += prefix;\n\t    if (val) {\n\t      res += val;\n\t    } else if (typeof obj !== 'object') {\n\t      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n\t    } else if (obj === null) {\n\t      res += 'null';\n\t    } else if (Array.isArray(obj)) {\n\t      queue.push({val: ']'});\n\t      for (i = obj.length - 1; i >= 0; i--) {\n\t        arrayPrefix = i === 0 ? '' : ',';\n\t        queue.push({obj: obj[i], prefix: arrayPrefix});\n\t      }\n\t      queue.push({val: '['});\n\t    } else { // object\n\t      keys = [];\n\t      for (k in obj) {\n\t        if (obj.hasOwnProperty(k)) {\n\t          keys.push(k);\n\t        }\n\t      }\n\t      queue.push({val: '}'});\n\t      for (i = keys.length - 1; i >= 0; i--) {\n\t        key = keys[i];\n\t        value = obj[key];\n\t        objPrefix = (i > 0 ? ',' : '');\n\t        objPrefix += JSON.stringify(key) + ':';\n\t        queue.push({obj: value, prefix: objPrefix});\n\t      }\n\t      queue.push({val: '{'});\n\t    }\n\t  }\n\t  return res;\n\t};\n\t\n\t// Convenience function for the parse function.\n\t// This pop function is basically copied from\n\t// pouchCollate.parseIndexableString\n\tfunction pop(obj, stack, metaStack) {\n\t  var lastMetaElement = metaStack[metaStack.length - 1];\n\t  if (obj === lastMetaElement.element) {\n\t    // popping a meta-element, e.g. an object whose value is another object\n\t    metaStack.pop();\n\t    lastMetaElement = metaStack[metaStack.length - 1];\n\t  }\n\t  var element = lastMetaElement.element;\n\t  var lastElementIndex = lastMetaElement.index;\n\t  if (Array.isArray(element)) {\n\t    element.push(obj);\n\t  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n\t    var key = stack.pop();\n\t    element[key] = obj;\n\t  } else {\n\t    stack.push(obj); // obj with key only\n\t  }\n\t}\n\t\n\texports.parse = function (str) {\n\t  var stack = [];\n\t  var metaStack = []; // stack for arrays and objects\n\t  var i = 0;\n\t  var collationIndex,parsedNum,numChar;\n\t  var parsedString,lastCh,numConsecutiveSlashes,ch;\n\t  var arrayElement, objElement;\n\t  while (true) {\n\t    collationIndex = str[i++];\n\t    if (collationIndex === '}' ||\n\t        collationIndex === ']' ||\n\t        typeof collationIndex === 'undefined') {\n\t      if (stack.length === 1) {\n\t        return stack.pop();\n\t      } else {\n\t        pop(stack.pop(), stack, metaStack);\n\t        continue;\n\t      }\n\t    }\n\t    switch (collationIndex) {\n\t      case ' ':\n\t      case '\\t':\n\t      case '\\n':\n\t      case ':':\n\t      case ',':\n\t        break;\n\t      case 'n':\n\t        i += 3; // 'ull'\n\t        pop(null, stack, metaStack);\n\t        break;\n\t      case 't':\n\t        i += 3; // 'rue'\n\t        pop(true, stack, metaStack);\n\t        break;\n\t      case 'f':\n\t        i += 4; // 'alse'\n\t        pop(false, stack, metaStack);\n\t        break;\n\t      case '0':\n\t      case '1':\n\t      case '2':\n\t      case '3':\n\t      case '4':\n\t      case '5':\n\t      case '6':\n\t      case '7':\n\t      case '8':\n\t      case '9':\n\t      case '-':\n\t        parsedNum = '';\n\t        i--;\n\t        while (true) {\n\t          numChar = str[i++];\n\t          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n\t            parsedNum += numChar;\n\t          } else {\n\t            i--;\n\t            break;\n\t          }\n\t        }\n\t        pop(parseFloat(parsedNum), stack, metaStack);\n\t        break;\n\t      case '\"':\n\t        parsedString = '';\n\t        lastCh = void 0;\n\t        numConsecutiveSlashes = 0;\n\t        while (true) {\n\t          ch = str[i++];\n\t          if (ch !== '\"' || (lastCh === '\\\\' &&\n\t              numConsecutiveSlashes % 2 === 1)) {\n\t            parsedString += ch;\n\t            lastCh = ch;\n\t            if (lastCh === '\\\\') {\n\t              numConsecutiveSlashes++;\n\t            } else {\n\t              numConsecutiveSlashes = 0;\n\t            }\n\t          } else {\n\t            break;\n\t          }\n\t        }\n\t        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n\t        break;\n\t      case '[':\n\t        arrayElement = { element: [], index: stack.length };\n\t        stack.push(arrayElement.element);\n\t        metaStack.push(arrayElement);\n\t        break;\n\t      case '{':\n\t        objElement = { element: {}, index: stack.length };\n\t        stack.push(objElement.element);\n\t        metaStack.push(objElement);\n\t        break;\n\t      default:\n\t        throw new Error(\n\t          'unexpectedly reached end of input: ' + collationIndex);\n\t    }\n\t  }\n\t};\n\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar dragula = __webpack_require__(95);\n\tvar DragulaService = (function () {\n\t    function DragulaService() {\n\t        this.cancel = new core_1.EventEmitter();\n\t        this.cloned = new core_1.EventEmitter();\n\t        this.drag = new core_1.EventEmitter();\n\t        this.dragend = new core_1.EventEmitter();\n\t        this.drop = new core_1.EventEmitter();\n\t        this.out = new core_1.EventEmitter();\n\t        this.over = new core_1.EventEmitter();\n\t        this.remove = new core_1.EventEmitter();\n\t        this.shadow = new core_1.EventEmitter();\n\t        this.dropModel = new core_1.EventEmitter();\n\t        this.removeModel = new core_1.EventEmitter();\n\t        this.events = [\n\t            'cancel',\n\t            'cloned',\n\t            'drag',\n\t            'dragend',\n\t            'drop',\n\t            'out',\n\t            'over',\n\t            'remove',\n\t            'shadow',\n\t            'dropModel',\n\t            'removeModel'\n\t        ];\n\t        this.bags = [];\n\t    }\n\t    DragulaService.prototype.add = function (name, drake) {\n\t        var bag = this.find(name);\n\t        if (bag) {\n\t            throw new Error('Bag named: \"' + name + '\" already exists.');\n\t        }\n\t        bag = {\n\t            name: name,\n\t            drake: drake\n\t        };\n\t        this.bags.push(bag);\n\t        if (drake.models) {\n\t            this.handleModels(name, drake);\n\t        }\n\t        if (!bag.initEvents) {\n\t            this.setupEvents(bag);\n\t        }\n\t        return bag;\n\t    };\n\t    DragulaService.prototype.find = function (name) {\n\t        for (var i = 0; i < this.bags.length; i++) {\n\t            if (this.bags[i].name === name) {\n\t                return this.bags[i];\n\t            }\n\t        }\n\t    };\n\t    DragulaService.prototype.destroy = function (name) {\n\t        var bag = this.find(name);\n\t        var i = this.bags.indexOf(bag);\n\t        this.bags.splice(i, 1);\n\t        bag.drake.destroy();\n\t    };\n\t    DragulaService.prototype.setOptions = function (name, options) {\n\t        var bag = this.add(name, dragula(options));\n\t        this.handleModels(name, bag.drake);\n\t    };\n\t    DragulaService.prototype.handleModels = function (name, drake) {\n\t        var _this = this;\n\t        var dragElm;\n\t        var dragIndex;\n\t        var dropIndex;\n\t        var sourceModel;\n\t        drake.on('remove', function (el, source) {\n\t            if (!drake.models) {\n\t                return;\n\t            }\n\t            sourceModel = drake.models[drake.containers.indexOf(source)];\n\t            sourceModel.splice(dragIndex, 1);\n\t            _this.removeModel.emit([name, el, source]);\n\t        });\n\t        drake.on('drag', function (el, source) {\n\t            dragElm = el;\n\t            dragIndex = _this.domIndexOf(el, source);\n\t        });\n\t        drake.on('drop', function (dropElm, target, source) {\n\t            if (!drake.models || !target) {\n\t                return;\n\t            }\n\t            dropIndex = _this.domIndexOf(dropElm, target);\n\t            sourceModel = drake.models[drake.containers.indexOf(source)];\n\t            if (target === source) {\n\t                sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n\t            }\n\t            else {\n\t                var notCopy = dragElm === dropElm;\n\t                var targetModel = drake.models[drake.containers.indexOf(target)];\n\t                var dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));\n\t                if (notCopy) {\n\t                    sourceModel.splice(dragIndex, 1);\n\t                }\n\t                targetModel.splice(dropIndex, 0, dropElmModel);\n\t                target.removeChild(dropElm); // element must be removed for ngFor to apply correctly\n\t            }\n\t            _this.dropModel.emit([name, dropElm, target, source]);\n\t        });\n\t    };\n\t    DragulaService.prototype.setupEvents = function (bag) {\n\t        bag.initEvents = true;\n\t        var that = this;\n\t        var emitter = function (type) {\n\t            function replicate() {\n\t                var args = Array.prototype.slice.call(arguments);\n\t                that[type].emit([bag.name].concat(args));\n\t            }\n\t            bag.drake.on(type, replicate);\n\t        };\n\t        this.events.forEach(emitter);\n\t    };\n\t    DragulaService.prototype.domIndexOf = function (child, parent) {\n\t        return Array.prototype.indexOf.call(parent.children, child);\n\t    };\n\t    DragulaService = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], DragulaService);\n\t    return DragulaService;\n\t}());\n\texports.DragulaService = DragulaService;\n\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar emitter = __webpack_require__(96);\n\tvar crossvent = __webpack_require__(102);\n\tvar classes = __webpack_require__(105);\n\tvar doc = document;\n\tvar documentElement = doc.documentElement;\n\t\n\tfunction dragula (initialContainers, options) {\n\t  var len = arguments.length;\n\t  if (len === 1 && Array.isArray(initialContainers) === false) {\n\t    options = initialContainers;\n\t    initialContainers = [];\n\t  }\n\t  var _mirror; // mirror image\n\t  var _source; // source container\n\t  var _item; // item being dragged\n\t  var _offsetX; // reference x\n\t  var _offsetY; // reference y\n\t  var _moveX; // reference move x\n\t  var _moveY; // reference move y\n\t  var _initialSibling; // reference sibling when grabbed\n\t  var _currentSibling; // reference sibling now\n\t  var _copy; // item used for copying\n\t  var _renderTimer; // timer for setTimeout renderMirrorImage\n\t  var _lastDropTarget = null; // last container item was over\n\t  var _grabbed; // holds mousedown context until first mousemove\n\t\n\t  var o = options || {};\n\t  if (o.moves === void 0) { o.moves = always; }\n\t  if (o.accepts === void 0) { o.accepts = always; }\n\t  if (o.invalid === void 0) { o.invalid = invalidTarget; }\n\t  if (o.containers === void 0) { o.containers = initialContainers || []; }\n\t  if (o.isContainer === void 0) { o.isContainer = never; }\n\t  if (o.copy === void 0) { o.copy = false; }\n\t  if (o.copySortSource === void 0) { o.copySortSource = false; }\n\t  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\n\t  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\n\t  if (o.direction === void 0) { o.direction = 'vertical'; }\n\t  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\n\t  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\n\t\n\t  var drake = emitter({\n\t    containers: o.containers,\n\t    start: manualStart,\n\t    end: end,\n\t    cancel: cancel,\n\t    remove: remove,\n\t    destroy: destroy,\n\t    canMove: canMove,\n\t    dragging: false\n\t  });\n\t\n\t  if (o.removeOnSpill === true) {\n\t    drake.on('over', spillOver).on('out', spillOut);\n\t  }\n\t\n\t  events();\n\t\n\t  return drake;\n\t\n\t  function isContainer (el) {\n\t    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n\t  }\n\t\n\t  function events (remove) {\n\t    var op = remove ? 'remove' : 'add';\n\t    touchy(documentElement, op, 'mousedown', grab);\n\t    touchy(documentElement, op, 'mouseup', release);\n\t  }\n\t\n\t  function eventualMovements (remove) {\n\t    var op = remove ? 'remove' : 'add';\n\t    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n\t  }\n\t\n\t  function movements (remove) {\n\t    var op = remove ? 'remove' : 'add';\n\t    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n\t    crossvent[op](documentElement, 'click', preventGrabbed);\n\t  }\n\t\n\t  function destroy () {\n\t    events(true);\n\t    release({});\n\t  }\n\t\n\t  function preventGrabbed (e) {\n\t    if (_grabbed) {\n\t      e.preventDefault();\n\t    }\n\t  }\n\t\n\t  function grab (e) {\n\t    _moveX = e.clientX;\n\t    _moveY = e.clientY;\n\t\n\t    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n\t    if (ignore) {\n\t      return; // we only care about honest-to-god left clicks and touch events\n\t    }\n\t    var item = e.target;\n\t    var context = canStart(item);\n\t    if (!context) {\n\t      return;\n\t    }\n\t    _grabbed = context;\n\t    eventualMovements();\n\t    if (e.type === 'mousedown') {\n\t      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n\t        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n\t      } else {\n\t        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n\t      }\n\t    }\n\t  }\n\t\n\t  function startBecauseMouseMoved (e) {\n\t    if (!_grabbed) {\n\t      return;\n\t    }\n\t    if (whichMouseButton(e) === 0) {\n\t      release({});\n\t      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n\t    }\n\t    // truthy check fixes #239, equality fixes #207\n\t    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\n\t      return;\n\t    }\n\t    if (o.ignoreInputTextSelection) {\n\t      var clientX = getCoord('clientX', e);\n\t      var clientY = getCoord('clientY', e);\n\t      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n\t      if (isInput(elementBehindCursor)) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    var grabbed = _grabbed; // call to end() unsets _grabbed\n\t    eventualMovements(true);\n\t    movements();\n\t    end();\n\t    start(grabbed);\n\t\n\t    var offset = getOffset(_item);\n\t    _offsetX = getCoord('pageX', e) - offset.left;\n\t    _offsetY = getCoord('pageY', e) - offset.top;\n\t\n\t    classes.add(_copy || _item, 'gu-transit');\n\t    renderMirrorImage();\n\t    drag(e);\n\t  }\n\t\n\t  function canStart (item) {\n\t    if (drake.dragging && _mirror) {\n\t      return;\n\t    }\n\t    if (isContainer(item)) {\n\t      return; // don't drag container itself\n\t    }\n\t    var handle = item;\n\t    while (getParent(item) && isContainer(getParent(item)) === false) {\n\t      if (o.invalid(item, handle)) {\n\t        return;\n\t      }\n\t      item = getParent(item); // drag target should be a top element\n\t      if (!item) {\n\t        return;\n\t      }\n\t    }\n\t    var source = getParent(item);\n\t    if (!source) {\n\t      return;\n\t    }\n\t    if (o.invalid(item, handle)) {\n\t      return;\n\t    }\n\t\n\t    var movable = o.moves(item, source, handle, nextEl(item));\n\t    if (!movable) {\n\t      return;\n\t    }\n\t\n\t    return {\n\t      item: item,\n\t      source: source\n\t    };\n\t  }\n\t\n\t  function canMove (item) {\n\t    return !!canStart(item);\n\t  }\n\t\n\t  function manualStart (item) {\n\t    var context = canStart(item);\n\t    if (context) {\n\t      start(context);\n\t    }\n\t  }\n\t\n\t  function start (context) {\n\t    if (isCopy(context.item, context.source)) {\n\t      _copy = context.item.cloneNode(true);\n\t      drake.emit('cloned', _copy, context.item, 'copy');\n\t    }\n\t\n\t    _source = context.source;\n\t    _item = context.item;\n\t    _initialSibling = _currentSibling = nextEl(context.item);\n\t\n\t    drake.dragging = true;\n\t    drake.emit('drag', _item, _source);\n\t  }\n\t\n\t  function invalidTarget () {\n\t    return false;\n\t  }\n\t\n\t  function end () {\n\t    if (!drake.dragging) {\n\t      return;\n\t    }\n\t    var item = _copy || _item;\n\t    drop(item, getParent(item));\n\t  }\n\t\n\t  function ungrab () {\n\t    _grabbed = false;\n\t    eventualMovements(true);\n\t    movements(true);\n\t  }\n\t\n\t  function release (e) {\n\t    ungrab();\n\t\n\t    if (!drake.dragging) {\n\t      return;\n\t    }\n\t    var item = _copy || _item;\n\t    var clientX = getCoord('clientX', e);\n\t    var clientY = getCoord('clientY', e);\n\t    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n\t    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n\t    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\n\t      drop(item, dropTarget);\n\t    } else if (o.removeOnSpill) {\n\t      remove();\n\t    } else {\n\t      cancel();\n\t    }\n\t  }\n\t\n\t  function drop (item, target) {\n\t    var parent = getParent(item);\n\t    if (_copy && o.copySortSource && target === _source) {\n\t      parent.removeChild(_item);\n\t    }\n\t    if (isInitialPlacement(target)) {\n\t      drake.emit('cancel', item, _source, _source);\n\t    } else {\n\t      drake.emit('drop', item, target, _source, _currentSibling);\n\t    }\n\t    cleanup();\n\t  }\n\t\n\t  function remove () {\n\t    if (!drake.dragging) {\n\t      return;\n\t    }\n\t    var item = _copy || _item;\n\t    var parent = getParent(item);\n\t    if (parent) {\n\t      parent.removeChild(item);\n\t    }\n\t    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n\t    cleanup();\n\t  }\n\t\n\t  function cancel (revert) {\n\t    if (!drake.dragging) {\n\t      return;\n\t    }\n\t    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n\t    var item = _copy || _item;\n\t    var parent = getParent(item);\n\t    var initial = isInitialPlacement(parent);\n\t    if (initial === false && reverts) {\n\t      if (_copy) {\n\t        if (parent) {\n\t          parent.removeChild(_copy);\n\t        }\n\t      } else {\n\t        _source.insertBefore(item, _initialSibling);\n\t      }\n\t    }\n\t    if (initial || reverts) {\n\t      drake.emit('cancel', item, _source, _source);\n\t    } else {\n\t      drake.emit('drop', item, parent, _source, _currentSibling);\n\t    }\n\t    cleanup();\n\t  }\n\t\n\t  function cleanup () {\n\t    var item = _copy || _item;\n\t    ungrab();\n\t    removeMirrorImage();\n\t    if (item) {\n\t      classes.rm(item, 'gu-transit');\n\t    }\n\t    if (_renderTimer) {\n\t      clearTimeout(_renderTimer);\n\t    }\n\t    drake.dragging = false;\n\t    if (_lastDropTarget) {\n\t      drake.emit('out', item, _lastDropTarget, _source);\n\t    }\n\t    drake.emit('dragend', item);\n\t    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n\t  }\n\t\n\t  function isInitialPlacement (target, s) {\n\t    var sibling;\n\t    if (s !== void 0) {\n\t      sibling = s;\n\t    } else if (_mirror) {\n\t      sibling = _currentSibling;\n\t    } else {\n\t      sibling = nextEl(_copy || _item);\n\t    }\n\t    return target === _source && sibling === _initialSibling;\n\t  }\n\t\n\t  function findDropTarget (elementBehindCursor, clientX, clientY) {\n\t    var target = elementBehindCursor;\n\t    while (target && !accepted()) {\n\t      target = getParent(target);\n\t    }\n\t    return target;\n\t\n\t    function accepted () {\n\t      var droppable = isContainer(target);\n\t      if (droppable === false) {\n\t        return false;\n\t      }\n\t\n\t      var immediate = getImmediateChild(target, elementBehindCursor);\n\t      var reference = getReference(target, immediate, clientX, clientY);\n\t      var initial = isInitialPlacement(target, reference);\n\t      if (initial) {\n\t        return true; // should always be able to drop it right back where it was\n\t      }\n\t      return o.accepts(_item, target, _source, reference);\n\t    }\n\t  }\n\t\n\t  function drag (e) {\n\t    if (!_mirror) {\n\t      return;\n\t    }\n\t    e.preventDefault();\n\t\n\t    var clientX = getCoord('clientX', e);\n\t    var clientY = getCoord('clientY', e);\n\t    var x = clientX - _offsetX;\n\t    var y = clientY - _offsetY;\n\t\n\t    _mirror.style.left = x + 'px';\n\t    _mirror.style.top = y + 'px';\n\t\n\t    var item = _copy || _item;\n\t    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n\t    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n\t    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n\t    if (changed || dropTarget === null) {\n\t      out();\n\t      _lastDropTarget = dropTarget;\n\t      over();\n\t    }\n\t    var parent = getParent(item);\n\t    if (dropTarget === _source && _copy && !o.copySortSource) {\n\t      if (parent) {\n\t        parent.removeChild(item);\n\t      }\n\t      return;\n\t    }\n\t    var reference;\n\t    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n\t    if (immediate !== null) {\n\t      reference = getReference(dropTarget, immediate, clientX, clientY);\n\t    } else if (o.revertOnSpill === true && !_copy) {\n\t      reference = _initialSibling;\n\t      dropTarget = _source;\n\t    } else {\n\t      if (_copy && parent) {\n\t        parent.removeChild(item);\n\t      }\n\t      return;\n\t    }\n\t    if (\n\t      (reference === null && changed) ||\n\t      reference !== item &&\n\t      reference !== nextEl(item)\n\t    ) {\n\t      _currentSibling = reference;\n\t      dropTarget.insertBefore(item, reference);\n\t      drake.emit('shadow', item, dropTarget, _source);\n\t    }\n\t    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\n\t    function over () { if (changed) { moved('over'); } }\n\t    function out () { if (_lastDropTarget) { moved('out'); } }\n\t  }\n\t\n\t  function spillOver (el) {\n\t    classes.rm(el, 'gu-hide');\n\t  }\n\t\n\t  function spillOut (el) {\n\t    if (drake.dragging) { classes.add(el, 'gu-hide'); }\n\t  }\n\t\n\t  function renderMirrorImage () {\n\t    if (_mirror) {\n\t      return;\n\t    }\n\t    var rect = _item.getBoundingClientRect();\n\t    _mirror = _item.cloneNode(true);\n\t    _mirror.style.width = getRectWidth(rect) + 'px';\n\t    _mirror.style.height = getRectHeight(rect) + 'px';\n\t    classes.rm(_mirror, 'gu-transit');\n\t    classes.add(_mirror, 'gu-mirror');\n\t    o.mirrorContainer.appendChild(_mirror);\n\t    touchy(documentElement, 'add', 'mousemove', drag);\n\t    classes.add(o.mirrorContainer, 'gu-unselectable');\n\t    drake.emit('cloned', _mirror, _item, 'mirror');\n\t  }\n\t\n\t  function removeMirrorImage () {\n\t    if (_mirror) {\n\t      classes.rm(o.mirrorContainer, 'gu-unselectable');\n\t      touchy(documentElement, 'remove', 'mousemove', drag);\n\t      getParent(_mirror).removeChild(_mirror);\n\t      _mirror = null;\n\t    }\n\t  }\n\t\n\t  function getImmediateChild (dropTarget, target) {\n\t    var immediate = target;\n\t    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n\t      immediate = getParent(immediate);\n\t    }\n\t    if (immediate === documentElement) {\n\t      return null;\n\t    }\n\t    return immediate;\n\t  }\n\t\n\t  function getReference (dropTarget, target, x, y) {\n\t    var horizontal = o.direction === 'horizontal';\n\t    var reference = target !== dropTarget ? inside() : outside();\n\t    return reference;\n\t\n\t    function outside () { // slower, but able to figure out any position\n\t      var len = dropTarget.children.length;\n\t      var i;\n\t      var el;\n\t      var rect;\n\t      for (i = 0; i < len; i++) {\n\t        el = dropTarget.children[i];\n\t        rect = el.getBoundingClientRect();\n\t        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\n\t        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\n\t      }\n\t      return null;\n\t    }\n\t\n\t    function inside () { // faster, but only available if dropped inside a child element\n\t      var rect = target.getBoundingClientRect();\n\t      if (horizontal) {\n\t        return resolve(x > rect.left + getRectWidth(rect) / 2);\n\t      }\n\t      return resolve(y > rect.top + getRectHeight(rect) / 2);\n\t    }\n\t\n\t    function resolve (after) {\n\t      return after ? nextEl(target) : target;\n\t    }\n\t  }\n\t\n\t  function isCopy (item, container) {\n\t    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n\t  }\n\t}\n\t\n\tfunction touchy (el, op, type, fn) {\n\t  var touch = {\n\t    mouseup: 'touchend',\n\t    mousedown: 'touchstart',\n\t    mousemove: 'touchmove'\n\t  };\n\t  var pointers = {\n\t    mouseup: 'pointerup',\n\t    mousedown: 'pointerdown',\n\t    mousemove: 'pointermove'\n\t  };\n\t  var microsoft = {\n\t    mouseup: 'MSPointerUp',\n\t    mousedown: 'MSPointerDown',\n\t    mousemove: 'MSPointerMove'\n\t  };\n\t  if (global.navigator.pointerEnabled) {\n\t    crossvent[op](el, pointers[type], fn);\n\t  } else if (global.navigator.msPointerEnabled) {\n\t    crossvent[op](el, microsoft[type], fn);\n\t  } else {\n\t    crossvent[op](el, touch[type], fn);\n\t    crossvent[op](el, type, fn);\n\t  }\n\t}\n\t\n\tfunction whichMouseButton (e) {\n\t  if (e.touches !== void 0) { return e.touches.length; }\n\t  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\n\t  if (e.buttons !== void 0) { return e.buttons; }\n\t  var button = e.button;\n\t  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n\t    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n\t  }\n\t}\n\t\n\tfunction getOffset (el) {\n\t  var rect = el.getBoundingClientRect();\n\t  return {\n\t    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n\t    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n\t  };\n\t}\n\t\n\tfunction getScroll (scrollProp, offsetProp) {\n\t  if (typeof global[offsetProp] !== 'undefined') {\n\t    return global[offsetProp];\n\t  }\n\t  if (documentElement.clientHeight) {\n\t    return documentElement[scrollProp];\n\t  }\n\t  return doc.body[scrollProp];\n\t}\n\t\n\tfunction getElementBehindPoint (point, x, y) {\n\t  var p = point || {};\n\t  var state = p.className;\n\t  var el;\n\t  p.className += ' gu-hide';\n\t  el = doc.elementFromPoint(x, y);\n\t  p.className = state;\n\t  return el;\n\t}\n\t\n\tfunction never () { return false; }\n\tfunction always () { return true; }\n\tfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\n\tfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\n\tfunction getParent (el) { return el.parentNode === doc ? null : el.parentNode; }\n\tfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\n\tfunction isEditable (el) {\n\t  if (!el) { return false; } // no parents were editable\n\t  if (el.contentEditable === 'false') { return false; } // stop the lookup\n\t  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n\t  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n\t}\n\t\n\tfunction nextEl (el) {\n\t  return el.nextElementSibling || manually();\n\t  function manually () {\n\t    var sibling = el;\n\t    do {\n\t      sibling = sibling.nextSibling;\n\t    } while (sibling && sibling.nodeType !== 1);\n\t    return sibling;\n\t  }\n\t}\n\t\n\tfunction getEventHost (e) {\n\t  // on touchend event, we have to use `e.changedTouches`\n\t  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n\t  // see https://github.com/bevacqua/dragula/issues/34\n\t  if (e.targetTouches && e.targetTouches.length) {\n\t    return e.targetTouches[0];\n\t  }\n\t  if (e.changedTouches && e.changedTouches.length) {\n\t    return e.changedTouches[0];\n\t  }\n\t  return e;\n\t}\n\t\n\tfunction getCoord (coord, e) {\n\t  var host = getEventHost(e);\n\t  var missMap = {\n\t    pageX: 'clientX', // IE8\n\t    pageY: 'clientY' // IE8\n\t  };\n\t  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n\t    coord = missMap[coord];\n\t  }\n\t  return host[coord];\n\t}\n\t\n\tmodule.exports = dragula;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar atoa = __webpack_require__(97);\n\tvar debounce = __webpack_require__(98);\n\t\n\tmodule.exports = function emitter (thing, options) {\n\t  var opts = options || {};\n\t  var evt = {};\n\t  if (thing === undefined) { thing = {}; }\n\t  thing.on = function (type, fn) {\n\t    if (!evt[type]) {\n\t      evt[type] = [fn];\n\t    } else {\n\t      evt[type].push(fn);\n\t    }\n\t    return thing;\n\t  };\n\t  thing.once = function (type, fn) {\n\t    fn._once = true; // thing.off(fn) still works!\n\t    thing.on(type, fn);\n\t    return thing;\n\t  };\n\t  thing.off = function (type, fn) {\n\t    var c = arguments.length;\n\t    if (c === 1) {\n\t      delete evt[type];\n\t    } else if (c === 0) {\n\t      evt = {};\n\t    } else {\n\t      var et = evt[type];\n\t      if (!et) { return thing; }\n\t      et.splice(et.indexOf(fn), 1);\n\t    }\n\t    return thing;\n\t  };\n\t  thing.emit = function () {\n\t    var args = atoa(arguments);\n\t    return thing.emitterSnapshot(args.shift()).apply(this, args);\n\t  };\n\t  thing.emitterSnapshot = function (type) {\n\t    var et = (evt[type] || []).slice(0);\n\t    return function () {\n\t      var args = atoa(arguments);\n\t      var ctx = this || thing;\n\t      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n\t      et.forEach(function emitter (listen) {\n\t        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n\t        if (listen._once) { thing.off(type, listen); }\n\t      });\n\t      return thing;\n\t    };\n\t  };\n\t  return thing;\n\t};\n\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\n\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar ticky = __webpack_require__(99);\n\t\n\tmodule.exports = function debounce (fn, args, ctx) {\n\t  if (!fn) { return; }\n\t  ticky(function run () {\n\t    fn.apply(ctx || null, args || []);\n\t  });\n\t};\n\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(setImmediate) {var si = typeof setImmediate === 'function', tick;\n\tif (si) {\n\t  tick = function (fn) { setImmediate(fn); };\n\t} else {\n\t  tick = function (fn) { setTimeout(fn, 0); };\n\t}\n\t\n\tmodule.exports = tick;\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(100).setImmediate))\n\n/***/ }),\n/* 100 */,\n/* 101 */,\n/* 102 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar customEvent = __webpack_require__(103);\n\tvar eventmap = __webpack_require__(104);\n\tvar doc = global.document;\n\tvar addEvent = addEventEasy;\n\tvar removeEvent = removeEventEasy;\n\tvar hardCache = [];\n\t\n\tif (!global.addEventListener) {\n\t  addEvent = addEventHard;\n\t  removeEvent = removeEventHard;\n\t}\n\t\n\tmodule.exports = {\n\t  add: addEvent,\n\t  remove: removeEvent,\n\t  fabricate: fabricateEvent\n\t};\n\t\n\tfunction addEventEasy (el, type, fn, capturing) {\n\t  return el.addEventListener(type, fn, capturing);\n\t}\n\t\n\tfunction addEventHard (el, type, fn) {\n\t  return el.attachEvent('on' + type, wrap(el, type, fn));\n\t}\n\t\n\tfunction removeEventEasy (el, type, fn, capturing) {\n\t  return el.removeEventListener(type, fn, capturing);\n\t}\n\t\n\tfunction removeEventHard (el, type, fn) {\n\t  var listener = unwrap(el, type, fn);\n\t  if (listener) {\n\t    return el.detachEvent('on' + type, listener);\n\t  }\n\t}\n\t\n\tfunction fabricateEvent (el, type, model) {\n\t  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n\t  if (el.dispatchEvent) {\n\t    el.dispatchEvent(e);\n\t  } else {\n\t    el.fireEvent('on' + type, e);\n\t  }\n\t  function makeClassicEvent () {\n\t    var e;\n\t    if (doc.createEvent) {\n\t      e = doc.createEvent('Event');\n\t      e.initEvent(type, true, true);\n\t    } else if (doc.createEventObject) {\n\t      e = doc.createEventObject();\n\t    }\n\t    return e;\n\t  }\n\t  function makeCustomEvent () {\n\t    return new customEvent(type, { detail: model });\n\t  }\n\t}\n\t\n\tfunction wrapperFactory (el, type, fn) {\n\t  return function wrapper (originalEvent) {\n\t    var e = originalEvent || global.event;\n\t    e.target = e.target || e.srcElement;\n\t    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\n\t    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\n\t    e.which = e.which || e.keyCode;\n\t    fn.call(el, e);\n\t  };\n\t}\n\t\n\tfunction wrap (el, type, fn) {\n\t  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n\t  hardCache.push({\n\t    wrapper: wrapper,\n\t    element: el,\n\t    type: type,\n\t    fn: fn\n\t  });\n\t  return wrapper;\n\t}\n\t\n\tfunction unwrap (el, type, fn) {\n\t  var i = find(el, type, fn);\n\t  if (i) {\n\t    var wrapper = hardCache[i].wrapper;\n\t    hardCache.splice(i, 1); // free up a tad of memory\n\t    return wrapper;\n\t  }\n\t}\n\t\n\tfunction find (el, type, fn) {\n\t  var i, item;\n\t  for (i = 0; i < hardCache.length; i++) {\n\t    item = hardCache[i];\n\t    if (item.element === el && item.type === type && item.fn === fn) {\n\t      return i;\n\t    }\n\t  }\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\n\tvar NativeCustomEvent = global.CustomEvent;\n\t\n\tfunction useNative () {\n\t  try {\n\t    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n\t    return  'cat' === p.type && 'bar' === p.detail.foo;\n\t  } catch (e) {\n\t  }\n\t  return false;\n\t}\n\t\n\t/**\n\t * Cross-browser `CustomEvent` constructor.\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n\t *\n\t * @public\n\t */\n\t\n\tmodule.exports = useNative() ? NativeCustomEvent :\n\t\n\t// IE >= 9\n\t'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n\t  var e = document.createEvent('CustomEvent');\n\t  if (params) {\n\t    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n\t  } else {\n\t    e.initCustomEvent(type, false, false, void 0);\n\t  }\n\t  return e;\n\t} :\n\t\n\t// IE <= 8\n\tfunction CustomEvent (type, params) {\n\t  var e = document.createEventObject();\n\t  e.type = type;\n\t  if (params) {\n\t    e.bubbles = Boolean(params.bubbles);\n\t    e.cancelable = Boolean(params.cancelable);\n\t    e.detail = params.detail;\n\t  } else {\n\t    e.bubbles = false;\n\t    e.cancelable = false;\n\t    e.detail = void 0;\n\t  }\n\t  return e;\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tvar eventmap = [];\n\tvar eventname = '';\n\tvar ron = /^on/;\n\t\n\tfor (eventname in global) {\n\t  if (ron.test(eventname)) {\n\t    eventmap.push(eventname.slice(2));\n\t  }\n\t}\n\t\n\tmodule.exports = eventmap;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar cache = {};\n\tvar start = '(?:^|\\\\s)';\n\tvar end = '(?:\\\\s|$)';\n\t\n\tfunction lookupClass (className) {\n\t  var cached = cache[className];\n\t  if (cached) {\n\t    cached.lastIndex = 0;\n\t  } else {\n\t    cache[className] = cached = new RegExp(start + className + end, 'g');\n\t  }\n\t  return cached;\n\t}\n\t\n\tfunction addClass (el, className) {\n\t  var current = el.className;\n\t  if (!current.length) {\n\t    el.className = className;\n\t  } else if (!lookupClass(className).test(current)) {\n\t    el.className += ' ' + className;\n\t  }\n\t}\n\t\n\tfunction rmClass (el, className) {\n\t  el.className = el.className.replace(lookupClass(className), ' ').trim();\n\t}\n\t\n\tmodule.exports = {\n\t  add: addClass,\n\t  rm: rmClass\n\t};\n\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global, module) {/**\n\t * @license\n\t * Lodash <https://lodash.com/>\n\t * Copyright JS Foundation and other contributors <https://js.foundation/>\n\t * Released under MIT license <https://lodash.com/license>\n\t * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n\t * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n\t */\n\t;(function() {\n\t\n\t  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n\t  var undefined;\n\t\n\t  /** Used as the semantic version number. */\n\t  var VERSION = '4.17.4';\n\t\n\t  /** Used as the size to enable large array optimizations. */\n\t  var LARGE_ARRAY_SIZE = 200;\n\t\n\t  /** Error message constants. */\n\t  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n\t      FUNC_ERROR_TEXT = 'Expected a function';\n\t\n\t  /** Used to stand-in for `undefined` hash values. */\n\t  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\t\n\t  /** Used as the maximum memoize cache size. */\n\t  var MAX_MEMOIZE_SIZE = 500;\n\t\n\t  /** Used as the internal argument placeholder. */\n\t  var PLACEHOLDER = '__lodash_placeholder__';\n\t\n\t  /** Used to compose bitmasks for cloning. */\n\t  var CLONE_DEEP_FLAG = 1,\n\t      CLONE_FLAT_FLAG = 2,\n\t      CLONE_SYMBOLS_FLAG = 4;\n\t\n\t  /** Used to compose bitmasks for value comparisons. */\n\t  var COMPARE_PARTIAL_FLAG = 1,\n\t      COMPARE_UNORDERED_FLAG = 2;\n\t\n\t  /** Used to compose bitmasks for function metadata. */\n\t  var WRAP_BIND_FLAG = 1,\n\t      WRAP_BIND_KEY_FLAG = 2,\n\t      WRAP_CURRY_BOUND_FLAG = 4,\n\t      WRAP_CURRY_FLAG = 8,\n\t      WRAP_CURRY_RIGHT_FLAG = 16,\n\t      WRAP_PARTIAL_FLAG = 32,\n\t      WRAP_PARTIAL_RIGHT_FLAG = 64,\n\t      WRAP_ARY_FLAG = 128,\n\t      WRAP_REARG_FLAG = 256,\n\t      WRAP_FLIP_FLAG = 512;\n\t\n\t  /** Used as default options for `_.truncate`. */\n\t  var DEFAULT_TRUNC_LENGTH = 30,\n\t      DEFAULT_TRUNC_OMISSION = '...';\n\t\n\t  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n\t  var HOT_COUNT = 800,\n\t      HOT_SPAN = 16;\n\t\n\t  /** Used to indicate the type of lazy iteratees. */\n\t  var LAZY_FILTER_FLAG = 1,\n\t      LAZY_MAP_FLAG = 2,\n\t      LAZY_WHILE_FLAG = 3;\n\t\n\t  /** Used as references for various `Number` constants. */\n\t  var INFINITY = 1 / 0,\n\t      MAX_SAFE_INTEGER = 9007199254740991,\n\t      MAX_INTEGER = 1.7976931348623157e+308,\n\t      NAN = 0 / 0;\n\t\n\t  /** Used as references for the maximum length and index of an array. */\n\t  var MAX_ARRAY_LENGTH = 4294967295,\n\t      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n\t      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\t\n\t  /** Used to associate wrap methods with their bit flags. */\n\t  var wrapFlags = [\n\t    ['ary', WRAP_ARY_FLAG],\n\t    ['bind', WRAP_BIND_FLAG],\n\t    ['bindKey', WRAP_BIND_KEY_FLAG],\n\t    ['curry', WRAP_CURRY_FLAG],\n\t    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n\t    ['flip', WRAP_FLIP_FLAG],\n\t    ['partial', WRAP_PARTIAL_FLAG],\n\t    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n\t    ['rearg', WRAP_REARG_FLAG]\n\t  ];\n\t\n\t  /** `Object#toString` result references. */\n\t  var argsTag = '[object Arguments]',\n\t      arrayTag = '[object Array]',\n\t      asyncTag = '[object AsyncFunction]',\n\t      boolTag = '[object Boolean]',\n\t      dateTag = '[object Date]',\n\t      domExcTag = '[object DOMException]',\n\t      errorTag = '[object Error]',\n\t      funcTag = '[object Function]',\n\t      genTag = '[object GeneratorFunction]',\n\t      mapTag = '[object Map]',\n\t      numberTag = '[object Number]',\n\t      nullTag = '[object Null]',\n\t      objectTag = '[object Object]',\n\t      promiseTag = '[object Promise]',\n\t      proxyTag = '[object Proxy]',\n\t      regexpTag = '[object RegExp]',\n\t      setTag = '[object Set]',\n\t      stringTag = '[object String]',\n\t      symbolTag = '[object Symbol]',\n\t      undefinedTag = '[object Undefined]',\n\t      weakMapTag = '[object WeakMap]',\n\t      weakSetTag = '[object WeakSet]';\n\t\n\t  var arrayBufferTag = '[object ArrayBuffer]',\n\t      dataViewTag = '[object DataView]',\n\t      float32Tag = '[object Float32Array]',\n\t      float64Tag = '[object Float64Array]',\n\t      int8Tag = '[object Int8Array]',\n\t      int16Tag = '[object Int16Array]',\n\t      int32Tag = '[object Int32Array]',\n\t      uint8Tag = '[object Uint8Array]',\n\t      uint8ClampedTag = '[object Uint8ClampedArray]',\n\t      uint16Tag = '[object Uint16Array]',\n\t      uint32Tag = '[object Uint32Array]';\n\t\n\t  /** Used to match empty string literals in compiled template source. */\n\t  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n\t      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n\t      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\t\n\t  /** Used to match HTML entities and HTML characters. */\n\t  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n\t      reUnescapedHtml = /[&<>\"']/g,\n\t      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n\t      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\t\n\t  /** Used to match template delimiters. */\n\t  var reEscape = /<%-([\\s\\S]+?)%>/g,\n\t      reEvaluate = /<%([\\s\\S]+?)%>/g,\n\t      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\t\n\t  /** Used to match property names within property paths. */\n\t  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n\t      reIsPlainProp = /^\\w*$/,\n\t      reLeadingDot = /^\\./,\n\t      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\t\n\t  /**\n\t   * Used to match `RegExp`\n\t   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n\t   */\n\t  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n\t      reHasRegExpChar = RegExp(reRegExpChar.source);\n\t\n\t  /** Used to match leading and trailing whitespace. */\n\t  var reTrim = /^\\s+|\\s+$/g,\n\t      reTrimStart = /^\\s+/,\n\t      reTrimEnd = /\\s+$/;\n\t\n\t  /** Used to match wrap detail comments. */\n\t  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n\t      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n\t      reSplitDetails = /,? & /;\n\t\n\t  /** Used to match words composed of alphanumeric characters. */\n\t  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\t\n\t  /** Used to match backslashes in property paths. */\n\t  var reEscapeChar = /\\\\(\\\\)?/g;\n\t\n\t  /**\n\t   * Used to match\n\t   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n\t   */\n\t  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\t\n\t  /** Used to match `RegExp` flags from their coerced string values. */\n\t  var reFlags = /\\w*$/;\n\t\n\t  /** Used to detect bad signed hexadecimal string values. */\n\t  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\t\n\t  /** Used to detect binary string values. */\n\t  var reIsBinary = /^0b[01]+$/i;\n\t\n\t  /** Used to detect host constructors (Safari). */\n\t  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\t\n\t  /** Used to detect octal string values. */\n\t  var reIsOctal = /^0o[0-7]+$/i;\n\t\n\t  /** Used to detect unsigned integer values. */\n\t  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\t\n\t  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n\t  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\t\n\t  /** Used to ensure capturing order of template delimiters. */\n\t  var reNoMatch = /($^)/;\n\t\n\t  /** Used to match unescaped characters in compiled string literals. */\n\t  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\t\n\t  /** Used to compose unicode character classes. */\n\t  var rsAstralRange = '\\\\ud800-\\\\udfff',\n\t      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n\t      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n\t      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n\t      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n\t      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n\t      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n\t      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n\t      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n\t      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n\t      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n\t      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n\t      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n\t      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\t\n\t  /** Used to compose unicode capture groups. */\n\t  var rsApos = \"['\\u2019]\",\n\t      rsAstral = '[' + rsAstralRange + ']',\n\t      rsBreak = '[' + rsBreakRange + ']',\n\t      rsCombo = '[' + rsComboRange + ']',\n\t      rsDigits = '\\\\d+',\n\t      rsDingbat = '[' + rsDingbatRange + ']',\n\t      rsLower = '[' + rsLowerRange + ']',\n\t      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n\t      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n\t      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n\t      rsNonAstral = '[^' + rsAstralRange + ']',\n\t      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n\t      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n\t      rsUpper = '[' + rsUpperRange + ']',\n\t      rsZWJ = '\\\\u200d';\n\t\n\t  /** Used to compose unicode regexes. */\n\t  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n\t      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n\t      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n\t      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n\t      reOptMod = rsModifier + '?',\n\t      rsOptVar = '[' + rsVarRange + ']?',\n\t      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n\t      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n\t      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n\t      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n\t      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n\t      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\t\n\t  /** Used to match apostrophes. */\n\t  var reApos = RegExp(rsApos, 'g');\n\t\n\t  /**\n\t   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n\t   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n\t   */\n\t  var reComboMark = RegExp(rsCombo, 'g');\n\t\n\t  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\t  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\t\n\t  /** Used to match complex or compound words. */\n\t  var reUnicodeWord = RegExp([\n\t    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n\t    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n\t    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n\t    rsUpper + '+' + rsOptContrUpper,\n\t    rsOrdUpper,\n\t    rsOrdLower,\n\t    rsDigits,\n\t    rsEmoji\n\t  ].join('|'), 'g');\n\t\n\t  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\t  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\t\n\t  /** Used to detect strings that need a more robust regexp to match words. */\n\t  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\t\n\t  /** Used to assign default `context` object properties. */\n\t  var contextProps = [\n\t    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n\t    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n\t    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n\t    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n\t    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n\t  ];\n\t\n\t  /** Used to make template sourceURLs easier to identify. */\n\t  var templateCounter = -1;\n\t\n\t  /** Used to identify `toStringTag` values of typed arrays. */\n\t  var typedArrayTags = {};\n\t  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n\t  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n\t  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n\t  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n\t  typedArrayTags[uint32Tag] = true;\n\t  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n\t  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n\t  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n\t  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n\t  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n\t  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n\t  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n\t  typedArrayTags[weakMapTag] = false;\n\t\n\t  /** Used to identify `toStringTag` values supported by `_.clone`. */\n\t  var cloneableTags = {};\n\t  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n\t  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n\t  cloneableTags[boolTag] = cloneableTags[dateTag] =\n\t  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n\t  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n\t  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n\t  cloneableTags[numberTag] = cloneableTags[objectTag] =\n\t  cloneableTags[regexpTag] = cloneableTags[setTag] =\n\t  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n\t  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n\t  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n\t  cloneableTags[errorTag] = cloneableTags[funcTag] =\n\t  cloneableTags[weakMapTag] = false;\n\t\n\t  /** Used to map Latin Unicode letters to basic Latin letters. */\n\t  var deburredLetters = {\n\t    // Latin-1 Supplement block.\n\t    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n\t    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n\t    '\\xc7': 'C',  '\\xe7': 'c',\n\t    '\\xd0': 'D',  '\\xf0': 'd',\n\t    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n\t    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n\t    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n\t    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n\t    '\\xd1': 'N',  '\\xf1': 'n',\n\t    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n\t    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n\t    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n\t    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n\t    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n\t    '\\xc6': 'Ae', '\\xe6': 'ae',\n\t    '\\xde': 'Th', '\\xfe': 'th',\n\t    '\\xdf': 'ss',\n\t    // Latin Extended-A block.\n\t    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n\t    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n\t    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n\t    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n\t    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n\t    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n\t    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n\t    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n\t    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n\t    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n\t    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n\t    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n\t    '\\u0134': 'J',  '\\u0135': 'j',\n\t    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n\t    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n\t    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n\t    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n\t    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n\t    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n\t    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n\t    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n\t    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n\t    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n\t    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n\t    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n\t    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n\t    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n\t    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n\t    '\\u0174': 'W',  '\\u0175': 'w',\n\t    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n\t    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n\t    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n\t    '\\u0132': 'IJ', '\\u0133': 'ij',\n\t    '\\u0152': 'Oe', '\\u0153': 'oe',\n\t    '\\u0149': \"'n\", '\\u017f': 's'\n\t  };\n\t\n\t  /** Used to map characters to HTML entities. */\n\t  var htmlEscapes = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;'\n\t  };\n\t\n\t  /** Used to map HTML entities to characters. */\n\t  var htmlUnescapes = {\n\t    '&amp;': '&',\n\t    '&lt;': '<',\n\t    '&gt;': '>',\n\t    '&quot;': '\"',\n\t    '&#39;': \"'\"\n\t  };\n\t\n\t  /** Used to escape characters for inclusion in compiled string literals. */\n\t  var stringEscapes = {\n\t    '\\\\': '\\\\',\n\t    \"'\": \"'\",\n\t    '\\n': 'n',\n\t    '\\r': 'r',\n\t    '\\u2028': 'u2028',\n\t    '\\u2029': 'u2029'\n\t  };\n\t\n\t  /** Built-in method references without a dependency on `root`. */\n\t  var freeParseFloat = parseFloat,\n\t      freeParseInt = parseInt;\n\t\n\t  /** Detect free variable `global` from Node.js. */\n\t  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\t\n\t  /** Detect free variable `self`. */\n\t  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\t\n\t  /** Used as a reference to the global object. */\n\t  var root = freeGlobal || freeSelf || Function('return this')();\n\t\n\t  /** Detect free variable `exports`. */\n\t  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\t\n\t  /** Detect free variable `module`. */\n\t  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\t\n\t  /** Detect the popular CommonJS extension `module.exports`. */\n\t  var moduleExports = freeModule && freeModule.exports === freeExports;\n\t\n\t  /** Detect free variable `process` from Node.js. */\n\t  var freeProcess = moduleExports && freeGlobal.process;\n\t\n\t  /** Used to access faster Node.js helpers. */\n\t  var nodeUtil = (function() {\n\t    try {\n\t      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n\t    } catch (e) {}\n\t  }());\n\t\n\t  /* Node.js helper references. */\n\t  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n\t      nodeIsDate = nodeUtil && nodeUtil.isDate,\n\t      nodeIsMap = nodeUtil && nodeUtil.isMap,\n\t      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n\t      nodeIsSet = nodeUtil && nodeUtil.isSet,\n\t      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Adds the key-value `pair` to `map`.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to modify.\n\t   * @param {Array} pair The key-value pair to add.\n\t   * @returns {Object} Returns `map`.\n\t   */\n\t  function addMapEntry(map, pair) {\n\t    // Don't return `map.set` because it's not chainable in IE 11.\n\t    map.set(pair[0], pair[1]);\n\t    return map;\n\t  }\n\t\n\t  /**\n\t   * Adds `value` to `set`.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to modify.\n\t   * @param {*} value The value to add.\n\t   * @returns {Object} Returns `set`.\n\t   */\n\t  function addSetEntry(set, value) {\n\t    // Don't return `set.add` because it's not chainable in IE 11.\n\t    set.add(value);\n\t    return set;\n\t  }\n\t\n\t  /**\n\t   * A faster alternative to `Function#apply`, this function invokes `func`\n\t   * with the `this` binding of `thisArg` and the arguments of `args`.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to invoke.\n\t   * @param {*} thisArg The `this` binding of `func`.\n\t   * @param {Array} args The arguments to invoke `func` with.\n\t   * @returns {*} Returns the result of `func`.\n\t   */\n\t  function apply(func, thisArg, args) {\n\t    switch (args.length) {\n\t      case 0: return func.call(thisArg);\n\t      case 1: return func.call(thisArg, args[0]);\n\t      case 2: return func.call(thisArg, args[0], args[1]);\n\t      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n\t    }\n\t    return func.apply(thisArg, args);\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `baseAggregator` for arrays.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} setter The function to set `accumulator` values.\n\t   * @param {Function} iteratee The iteratee to transform keys.\n\t   * @param {Object} accumulator The initial aggregated object.\n\t   * @returns {Function} Returns `accumulator`.\n\t   */\n\t  function arrayAggregator(array, setter, iteratee, accumulator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      setter(accumulator, value, iteratee(value), array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEach` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEach(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (iteratee(array[index], index, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.forEachRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayEachRight(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t\n\t    while (length--) {\n\t      if (iteratee(array[length], length, array) === false) {\n\t        break;\n\t      }\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.every` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arrayEvery(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (!predicate(array[index], index, array)) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.filter` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {Array} Returns the new filtered array.\n\t   */\n\t  function arrayFilter(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (predicate(value, index, array)) {\n\t        result[resIndex++] = value;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.includes` for arrays without support for\n\t   * specifying an index to search from.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludes(array, value) {\n\t    var length = array == null ? 0 : array.length;\n\t    return !!length && baseIndexOf(array, value, 0) > -1;\n\t  }\n\t\n\t  /**\n\t   * This function is like `arrayIncludes` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to inspect.\n\t   * @param {*} target The value to search for.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n\t   */\n\t  function arrayIncludesWith(array, value, comparator) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(value, array[index])) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.map` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the new mapped array.\n\t   */\n\t  function arrayMap(array, iteratee) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length,\n\t        result = Array(length);\n\t\n\t    while (++index < length) {\n\t      result[index] = iteratee(array[index], index, array);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Appends the elements of `values` to `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {Array} values The values to append.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function arrayPush(array, values) {\n\t    var index = -1,\n\t        length = values.length,\n\t        offset = array.length;\n\t\n\t    while (++index < length) {\n\t      array[offset + index] = values[index];\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduce` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the first element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduce(array, iteratee, accumulator, initAccum) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    if (initAccum && length) {\n\t      accumulator = array[++index];\n\t    }\n\t    while (++index < length) {\n\t      accumulator = iteratee(accumulator, array[index], index, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.reduceRight` for arrays without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} [accumulator] The initial value.\n\t   * @param {boolean} [initAccum] Specify using the last element of `array` as\n\t   *  the initial value.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n\t    var length = array == null ? 0 : array.length;\n\t    if (initAccum && length) {\n\t      accumulator = array[--length];\n\t    }\n\t    while (length--) {\n\t      accumulator = iteratee(accumulator, array[length], length, array);\n\t    }\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.some` for arrays without support for iteratee\n\t   * shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} [array] The array to iterate over.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t   *  else `false`.\n\t   */\n\t  function arraySome(array, predicate) {\n\t    var index = -1,\n\t        length = array == null ? 0 : array.length;\n\t\n\t    while (++index < length) {\n\t      if (predicate(array[index], index, array)) {\n\t        return true;\n\t      }\n\t    }\n\t    return false;\n\t  }\n\t\n\t  /**\n\t   * Gets the size of an ASCII `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  var asciiSize = baseProperty('length');\n\t\n\t  /**\n\t   * Converts an ASCII `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function asciiToArray(string) {\n\t    return string.split('');\n\t  }\n\t\n\t  /**\n\t   * Splits an ASCII `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function asciiWords(string) {\n\t    return string.match(reAsciiWord) || [];\n\t  }\n\t\n\t  /**\n\t   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n\t   * without support for iteratee shorthands, which iterates over `collection`\n\t   * using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the found element or its key, else `undefined`.\n\t   */\n\t  function baseFindKey(collection, predicate, eachFunc) {\n\t    var result;\n\t    eachFunc(collection, function(value, key, collection) {\n\t      if (predicate(value, key, collection)) {\n\t        result = key;\n\t        return false;\n\t      }\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n\t   * support for iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {Function} predicate The function invoked per iteration.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {boolean} [fromRight] Specify iterating from right to left.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n\t    var length = array.length,\n\t        index = fromIndex + (fromRight ? 1 : -1);\n\t\n\t    while ((fromRight ? index-- : ++index < length)) {\n\t      if (predicate(array[index], index, array)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOf(array, value, fromIndex) {\n\t    return value === value\n\t      ? strictIndexOf(array, value, fromIndex)\n\t      : baseFindIndex(array, baseIsNaN, fromIndex);\n\t  }\n\t\n\t  /**\n\t   * This function is like `baseIndexOf` except that it accepts a comparator.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @param {Function} comparator The comparator invoked per element.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function baseIndexOfWith(array, value, fromIndex, comparator) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (comparator(array[index], value)) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.isNaN` without support for number objects.\n\t   *\n\t   * @private\n\t   * @param {*} value The value to check.\n\t   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t   */\n\t  function baseIsNaN(value) {\n\t    return value !== value;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.mean` and `_.meanBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the mean.\n\t   */\n\t  function baseMean(array, iteratee) {\n\t    var length = array == null ? 0 : array.length;\n\t    return length ? (baseSum(array, iteratee) / length) : NAN;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.property` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function baseProperty(key) {\n\t    return function(object) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.propertyOf` without support for deep paths.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @returns {Function} Returns the new accessor function.\n\t   */\n\t  function basePropertyOf(object) {\n\t    return function(key) {\n\t      return object == null ? undefined : object[key];\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n\t   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n\t   *\n\t   * @private\n\t   * @param {Array|Object} collection The collection to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @param {*} accumulator The initial value.\n\t   * @param {boolean} initAccum Specify using the first or last element of\n\t   *  `collection` as the initial value.\n\t   * @param {Function} eachFunc The function to iterate over `collection`.\n\t   * @returns {*} Returns the accumulated value.\n\t   */\n\t  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n\t    eachFunc(collection, function(value, index, collection) {\n\t      accumulator = initAccum\n\t        ? (initAccum = false, value)\n\t        : iteratee(accumulator, value, index, collection);\n\t    });\n\t    return accumulator;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sortBy` which uses `comparer` to define the\n\t   * sort order of `array` and replaces criteria objects with their corresponding\n\t   * values.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to sort.\n\t   * @param {Function} comparer The function to define sort order.\n\t   * @returns {Array} Returns `array`.\n\t   */\n\t  function baseSortBy(array, comparer) {\n\t    var length = array.length;\n\t\n\t    array.sort(comparer);\n\t    while (length--) {\n\t      array[length] = array[length].value;\n\t    }\n\t    return array;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.sum` and `_.sumBy` without support for\n\t   * iteratee shorthands.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to iterate over.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {number} Returns the sum.\n\t   */\n\t  function baseSum(array, iteratee) {\n\t    var result,\n\t        index = -1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      var current = iteratee(array[index]);\n\t      if (current !== undefined) {\n\t        result = result === undefined ? current : (result + current);\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.times` without support for iteratee shorthands\n\t   * or max array length checks.\n\t   *\n\t   * @private\n\t   * @param {number} n The number of times to invoke `iteratee`.\n\t   * @param {Function} iteratee The function invoked per iteration.\n\t   * @returns {Array} Returns the array of results.\n\t   */\n\t  function baseTimes(n, iteratee) {\n\t    var index = -1,\n\t        result = Array(n);\n\t\n\t    while (++index < n) {\n\t      result[index] = iteratee(index);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n\t   * of key-value pairs for `object` corresponding to the property names of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the key-value pairs.\n\t   */\n\t  function baseToPairs(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return [key, object[key]];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.unary` without support for storing metadata.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to cap arguments for.\n\t   * @returns {Function} Returns the new capped function.\n\t   */\n\t  function baseUnary(func) {\n\t    return function(value) {\n\t      return func(value);\n\t    };\n\t  }\n\t\n\t  /**\n\t   * The base implementation of `_.values` and `_.valuesIn` which creates an\n\t   * array of `object` property values corresponding to the property names\n\t   * of `props`.\n\t   *\n\t   * @private\n\t   * @param {Object} object The object to query.\n\t   * @param {Array} props The property names to get values for.\n\t   * @returns {Object} Returns the array of property values.\n\t   */\n\t  function baseValues(object, props) {\n\t    return arrayMap(props, function(key) {\n\t      return object[key];\n\t    });\n\t  }\n\t\n\t  /**\n\t   * Checks if a `cache` value for `key` exists.\n\t   *\n\t   * @private\n\t   * @param {Object} cache The cache to query.\n\t   * @param {string} key The key of the entry to check.\n\t   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t   */\n\t  function cacheHas(cache, key) {\n\t    return cache.has(key);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the first unmatched string symbol.\n\t   */\n\t  function charsStartIndex(strSymbols, chrSymbols) {\n\t    var index = -1,\n\t        length = strSymbols.length;\n\t\n\t    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n\t   * that is not found in the character symbols.\n\t   *\n\t   * @private\n\t   * @param {Array} strSymbols The string symbols to inspect.\n\t   * @param {Array} chrSymbols The character symbols to find.\n\t   * @returns {number} Returns the index of the last unmatched string symbol.\n\t   */\n\t  function charsEndIndex(strSymbols, chrSymbols) {\n\t    var index = strSymbols.length;\n\t\n\t    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of `placeholder` occurrences in `array`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} placeholder The placeholder to search for.\n\t   * @returns {number} Returns the placeholder count.\n\t   */\n\t  function countHolders(array, placeholder) {\n\t    var length = array.length,\n\t        result = 0;\n\t\n\t    while (length--) {\n\t      if (array[length] === placeholder) {\n\t        ++result;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n\t   * letters to basic Latin letters.\n\t   *\n\t   * @private\n\t   * @param {string} letter The matched letter to deburr.\n\t   * @returns {string} Returns the deburred letter.\n\t   */\n\t  var deburrLetter = basePropertyOf(deburredLetters);\n\t\n\t  /**\n\t   * Used by `_.escape` to convert characters to HTML entities.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\t\n\t  /**\n\t   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to escape.\n\t   * @returns {string} Returns the escaped character.\n\t   */\n\t  function escapeStringChar(chr) {\n\t    return '\\\\' + stringEscapes[chr];\n\t  }\n\t\n\t  /**\n\t   * Gets the value at `key` of `object`.\n\t   *\n\t   * @private\n\t   * @param {Object} [object] The object to query.\n\t   * @param {string} key The key of the property to get.\n\t   * @returns {*} Returns the property value.\n\t   */\n\t  function getValue(object, key) {\n\t    return object == null ? undefined : object[key];\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n\t   */\n\t  function hasUnicode(string) {\n\t    return reHasUnicode.test(string);\n\t  }\n\t\n\t  /**\n\t   * Checks if `string` contains a word composed of Unicode symbols.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {boolean} Returns `true` if a word is found, else `false`.\n\t   */\n\t  function hasUnicodeWord(string) {\n\t    return reHasUnicodeWord.test(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `iterator` to an array.\n\t   *\n\t   * @private\n\t   * @param {Object} iterator The iterator to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function iteratorToArray(iterator) {\n\t    var data,\n\t        result = [];\n\t\n\t    while (!(data = iterator.next()).done) {\n\t      result.push(data.value);\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `map` to its key-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} map The map to convert.\n\t   * @returns {Array} Returns the key-value pairs.\n\t   */\n\t  function mapToArray(map) {\n\t    var index = -1,\n\t        result = Array(map.size);\n\t\n\t    map.forEach(function(value, key) {\n\t      result[++index] = [key, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Creates a unary function that invokes `func` with its argument transformed.\n\t   *\n\t   * @private\n\t   * @param {Function} func The function to wrap.\n\t   * @param {Function} transform The argument transform.\n\t   * @returns {Function} Returns the new function.\n\t   */\n\t  function overArg(func, transform) {\n\t    return function(arg) {\n\t      return func(transform(arg));\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Replaces all `placeholder` elements in `array` with an internal placeholder\n\t   * and returns an array of their indexes.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to modify.\n\t   * @param {*} placeholder The placeholder to replace.\n\t   * @returns {Array} Returns the new array of placeholder indexes.\n\t   */\n\t  function replaceHolders(array, placeholder) {\n\t    var index = -1,\n\t        length = array.length,\n\t        resIndex = 0,\n\t        result = [];\n\t\n\t    while (++index < length) {\n\t      var value = array[index];\n\t      if (value === placeholder || value === PLACEHOLDER) {\n\t        array[index] = PLACEHOLDER;\n\t        result[resIndex++] = index;\n\t      }\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to an array of its values.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the values.\n\t   */\n\t  function setToArray(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = value;\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts `set` to its value-value pairs.\n\t   *\n\t   * @private\n\t   * @param {Object} set The set to convert.\n\t   * @returns {Array} Returns the value-value pairs.\n\t   */\n\t  function setToPairs(set) {\n\t    var index = -1,\n\t        result = Array(set.size);\n\t\n\t    set.forEach(function(value) {\n\t      result[++index] = [value, value];\n\t    });\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.indexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex - 1,\n\t        length = array.length;\n\t\n\t    while (++index < length) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return -1;\n\t  }\n\t\n\t  /**\n\t   * A specialized version of `_.lastIndexOf` which performs strict equality\n\t   * comparisons of values, i.e. `===`.\n\t   *\n\t   * @private\n\t   * @param {Array} array The array to inspect.\n\t   * @param {*} value The value to search for.\n\t   * @param {number} fromIndex The index to search from.\n\t   * @returns {number} Returns the index of the matched value, else `-1`.\n\t   */\n\t  function strictLastIndexOf(array, value, fromIndex) {\n\t    var index = fromIndex + 1;\n\t    while (index--) {\n\t      if (array[index] === value) {\n\t        return index;\n\t      }\n\t    }\n\t    return index;\n\t  }\n\t\n\t  /**\n\t   * Gets the number of symbols in `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function stringSize(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeSize(string)\n\t      : asciiSize(string);\n\t  }\n\t\n\t  /**\n\t   * Converts `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function stringToArray(string) {\n\t    return hasUnicode(string)\n\t      ? unicodeToArray(string)\n\t      : asciiToArray(string);\n\t  }\n\t\n\t  /**\n\t   * Used by `_.unescape` to convert HTML entities to characters.\n\t   *\n\t   * @private\n\t   * @param {string} chr The matched character to unescape.\n\t   * @returns {string} Returns the unescaped character.\n\t   */\n\t  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\t\n\t  /**\n\t   * Gets the size of a Unicode `string`.\n\t   *\n\t   * @private\n\t   * @param {string} string The string inspect.\n\t   * @returns {number} Returns the string size.\n\t   */\n\t  function unicodeSize(string) {\n\t    var result = reUnicode.lastIndex = 0;\n\t    while (reUnicode.test(string)) {\n\t      ++result;\n\t    }\n\t    return result;\n\t  }\n\t\n\t  /**\n\t   * Converts a Unicode `string` to an array.\n\t   *\n\t   * @private\n\t   * @param {string} string The string to convert.\n\t   * @returns {Array} Returns the converted array.\n\t   */\n\t  function unicodeToArray(string) {\n\t    return string.match(reUnicode) || [];\n\t  }\n\t\n\t  /**\n\t   * Splits a Unicode `string` into an array of its words.\n\t   *\n\t   * @private\n\t   * @param {string} The string to inspect.\n\t   * @returns {Array} Returns the words of `string`.\n\t   */\n\t  function unicodeWords(string) {\n\t    return string.match(reUnicodeWord) || [];\n\t  }\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  /**\n\t   * Create a new pristine `lodash` function using the `context` object.\n\t   *\n\t   * @static\n\t   * @memberOf _\n\t   * @since 1.1.0\n\t   * @category Util\n\t   * @param {Object} [context=root] The context object.\n\t   * @returns {Function} Returns a new `lodash` function.\n\t   * @example\n\t   *\n\t   * _.mixin({ 'foo': _.constant('foo') });\n\t   *\n\t   * var lodash = _.runInContext();\n\t   * lodash.mixin({ 'bar': lodash.constant('bar') });\n\t   *\n\t   * _.isFunction(_.foo);\n\t   * // => true\n\t   * _.isFunction(_.bar);\n\t   * // => false\n\t   *\n\t   * lodash.isFunction(lodash.foo);\n\t   * // => false\n\t   * lodash.isFunction(lodash.bar);\n\t   * // => true\n\t   *\n\t   * // Create a suped-up `defer` in Node.js.\n\t   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n\t   */\n\t  var runInContext = (function runInContext(context) {\n\t    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\t\n\t    /** Built-in constructor references. */\n\t    var Array = context.Array,\n\t        Date = context.Date,\n\t        Error = context.Error,\n\t        Function = context.Function,\n\t        Math = context.Math,\n\t        Object = context.Object,\n\t        RegExp = context.RegExp,\n\t        String = context.String,\n\t        TypeError = context.TypeError;\n\t\n\t    /** Used for built-in method references. */\n\t    var arrayProto = Array.prototype,\n\t        funcProto = Function.prototype,\n\t        objectProto = Object.prototype;\n\t\n\t    /** Used to detect overreaching core-js shims. */\n\t    var coreJsData = context['__core-js_shared__'];\n\t\n\t    /** Used to resolve the decompiled source of functions. */\n\t    var funcToString = funcProto.toString;\n\t\n\t    /** Used to check objects for own properties. */\n\t    var hasOwnProperty = objectProto.hasOwnProperty;\n\t\n\t    /** Used to generate unique IDs. */\n\t    var idCounter = 0;\n\t\n\t    /** Used to detect methods masquerading as native. */\n\t    var maskSrcKey = (function() {\n\t      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n\t      return uid ? ('Symbol(src)_1.' + uid) : '';\n\t    }());\n\t\n\t    /**\n\t     * Used to resolve the\n\t     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n\t     * of values.\n\t     */\n\t    var nativeObjectToString = objectProto.toString;\n\t\n\t    /** Used to infer the `Object` constructor. */\n\t    var objectCtorString = funcToString.call(Object);\n\t\n\t    /** Used to restore the original `_` reference in `_.noConflict`. */\n\t    var oldDash = root._;\n\t\n\t    /** Used to detect if a method is native. */\n\t    var reIsNative = RegExp('^' +\n\t      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n\t      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n\t    );\n\t\n\t    /** Built-in value references. */\n\t    var Buffer = moduleExports ? context.Buffer : undefined,\n\t        Symbol = context.Symbol,\n\t        Uint8Array = context.Uint8Array,\n\t        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n\t        getPrototype = overArg(Object.getPrototypeOf, Object),\n\t        objectCreate = Object.create,\n\t        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n\t        splice = arrayProto.splice,\n\t        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n\t        symIterator = Symbol ? Symbol.iterator : undefined,\n\t        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\t\n\t    var defineProperty = (function() {\n\t      try {\n\t        var func = getNative(Object, 'defineProperty');\n\t        func({}, '', {});\n\t        return func;\n\t      } catch (e) {}\n\t    }());\n\t\n\t    /** Mocked built-ins. */\n\t    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n\t        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n\t        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\t\n\t    /* Built-in method references for those with the same name as other `lodash` methods. */\n\t    var nativeCeil = Math.ceil,\n\t        nativeFloor = Math.floor,\n\t        nativeGetSymbols = Object.getOwnPropertySymbols,\n\t        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n\t        nativeIsFinite = context.isFinite,\n\t        nativeJoin = arrayProto.join,\n\t        nativeKeys = overArg(Object.keys, Object),\n\t        nativeMax = Math.max,\n\t        nativeMin = Math.min,\n\t        nativeNow = Date.now,\n\t        nativeParseInt = context.parseInt,\n\t        nativeRandom = Math.random,\n\t        nativeReverse = arrayProto.reverse;\n\t\n\t    /* Built-in method references that are verified to be native. */\n\t    var DataView = getNative(context, 'DataView'),\n\t        Map = getNative(context, 'Map'),\n\t        Promise = getNative(context, 'Promise'),\n\t        Set = getNative(context, 'Set'),\n\t        WeakMap = getNative(context, 'WeakMap'),\n\t        nativeCreate = getNative(Object, 'create');\n\t\n\t    /** Used to store function metadata. */\n\t    var metaMap = WeakMap && new WeakMap;\n\t\n\t    /** Used to lookup unminified function names. */\n\t    var realNames = {};\n\t\n\t    /** Used to detect maps, sets, and weakmaps. */\n\t    var dataViewCtorString = toSource(DataView),\n\t        mapCtorString = toSource(Map),\n\t        promiseCtorString = toSource(Promise),\n\t        setCtorString = toSource(Set),\n\t        weakMapCtorString = toSource(WeakMap);\n\t\n\t    /** Used to convert symbols to primitives and strings. */\n\t    var symbolProto = Symbol ? Symbol.prototype : undefined,\n\t        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n\t        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` object which wraps `value` to enable implicit method\n\t     * chain sequences. Methods that operate on and return arrays, collections,\n\t     * and functions can be chained together. Methods that retrieve a single value\n\t     * or may return a primitive value will automatically end the chain sequence\n\t     * and return the unwrapped value. Otherwise, the value must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n\t     * enabled using `_.chain`.\n\t     *\n\t     * The execution of chained methods is lazy, that is, it's deferred until\n\t     * `_#value` is implicitly or explicitly called.\n\t     *\n\t     * Lazy evaluation allows several methods to support shortcut fusion.\n\t     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n\t     * the creation of intermediate arrays and can greatly reduce the number of\n\t     * iteratee executions. Sections of a chain sequence qualify for shortcut\n\t     * fusion if the section is applied to an array and iteratees accept only\n\t     * one argument. The heuristic for whether a section qualifies for shortcut\n\t     * fusion is subject to change.\n\t     *\n\t     * Chaining is supported in custom builds as long as the `_#value` method is\n\t     * directly or indirectly included in the build.\n\t     *\n\t     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n\t     *\n\t     * The wrapper `Array` methods are:\n\t     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n\t     *\n\t     * The wrapper `String` methods are:\n\t     * `replace` and `split`\n\t     *\n\t     * The wrapper methods that support shortcut fusion are:\n\t     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n\t     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n\t     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n\t     *\n\t     * The chainable wrapper methods are:\n\t     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n\t     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n\t     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n\t     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n\t     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n\t     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n\t     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n\t     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n\t     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n\t     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n\t     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n\t     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n\t     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n\t     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n\t     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n\t     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n\t     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n\t     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n\t     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n\t     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n\t     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n\t     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n\t     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n\t     * `zipObject`, `zipObjectDeep`, and `zipWith`\n\t     *\n\t     * The wrapper methods that are **not** chainable by default are:\n\t     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n\t     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n\t     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n\t     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n\t     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n\t     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n\t     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n\t     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n\t     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n\t     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n\t     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n\t     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n\t     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n\t     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n\t     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n\t     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n\t     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n\t     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n\t     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n\t     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n\t     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n\t     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n\t     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n\t     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n\t     * `upperFirst`, `value`, and `words`\n\t     *\n\t     * @name _\n\t     * @constructor\n\t     * @category Seq\n\t     * @param {*} value The value to wrap in a `lodash` instance.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2, 3]);\n\t     *\n\t     * // Returns an unwrapped value.\n\t     * wrapped.reduce(_.add);\n\t     * // => 6\n\t     *\n\t     * // Returns a wrapped value.\n\t     * var squares = wrapped.map(square);\n\t     *\n\t     * _.isArray(squares);\n\t     * // => false\n\t     *\n\t     * _.isArray(squares.value());\n\t     * // => true\n\t     */\n\t    function lodash(value) {\n\t      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n\t        if (value instanceof LodashWrapper) {\n\t          return value;\n\t        }\n\t        if (hasOwnProperty.call(value, '__wrapped__')) {\n\t          return wrapperClone(value);\n\t        }\n\t      }\n\t      return new LodashWrapper(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.create` without support for assigning\n\t     * properties to the created object.\n\t     *\n\t     * @private\n\t     * @param {Object} proto The object to inherit from.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    var baseCreate = (function() {\n\t      function object() {}\n\t      return function(proto) {\n\t        if (!isObject(proto)) {\n\t          return {};\n\t        }\n\t        if (objectCreate) {\n\t          return objectCreate(proto);\n\t        }\n\t        object.prototype = proto;\n\t        var result = new object;\n\t        object.prototype = undefined;\n\t        return result;\n\t      };\n\t    }());\n\t\n\t    /**\n\t     * The function whose prototype chain sequence wrappers inherit from.\n\t     *\n\t     * @private\n\t     */\n\t    function baseLodash() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * The base constructor for creating `lodash` wrapper objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to wrap.\n\t     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n\t     */\n\t    function LodashWrapper(value, chainAll) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__chain__ = !!chainAll;\n\t      this.__index__ = 0;\n\t      this.__values__ = undefined;\n\t    }\n\t\n\t    /**\n\t     * By default, the template delimiters used by lodash are like those in\n\t     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n\t     * following template settings to use alternative delimiters.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {Object}\n\t     */\n\t    lodash.templateSettings = {\n\t\n\t      /**\n\t       * Used to detect `data` property values to be HTML-escaped.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'escape': reEscape,\n\t\n\t      /**\n\t       * Used to detect code to be evaluated.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'evaluate': reEvaluate,\n\t\n\t      /**\n\t       * Used to detect `data` property values to inject.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {RegExp}\n\t       */\n\t      'interpolate': reInterpolate,\n\t\n\t      /**\n\t       * Used to reference the data object in the template text.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {string}\n\t       */\n\t      'variable': '',\n\t\n\t      /**\n\t       * Used to import variables into the compiled template.\n\t       *\n\t       * @memberOf _.templateSettings\n\t       * @type {Object}\n\t       */\n\t      'imports': {\n\t\n\t        /**\n\t         * A reference to the `lodash` function.\n\t         *\n\t         * @memberOf _.templateSettings.imports\n\t         * @type {Function}\n\t         */\n\t        '_': lodash\n\t      }\n\t    };\n\t\n\t    // Ensure wrappers are instances of `baseLodash`.\n\t    lodash.prototype = baseLodash.prototype;\n\t    lodash.prototype.constructor = lodash;\n\t\n\t    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LodashWrapper.prototype.constructor = LodashWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {*} value The value to wrap.\n\t     */\n\t    function LazyWrapper(value) {\n\t      this.__wrapped__ = value;\n\t      this.__actions__ = [];\n\t      this.__dir__ = 1;\n\t      this.__filtered__ = false;\n\t      this.__iteratees__ = [];\n\t      this.__takeCount__ = MAX_ARRAY_LENGTH;\n\t      this.__views__ = [];\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the lazy wrapper object.\n\t     *\n\t     * @private\n\t     * @name clone\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the cloned `LazyWrapper` object.\n\t     */\n\t    function lazyClone() {\n\t      var result = new LazyWrapper(this.__wrapped__);\n\t      result.__actions__ = copyArray(this.__actions__);\n\t      result.__dir__ = this.__dir__;\n\t      result.__filtered__ = this.__filtered__;\n\t      result.__iteratees__ = copyArray(this.__iteratees__);\n\t      result.__takeCount__ = this.__takeCount__;\n\t      result.__views__ = copyArray(this.__views__);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses the direction of lazy iteration.\n\t     *\n\t     * @private\n\t     * @name reverse\n\t     * @memberOf LazyWrapper\n\t     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n\t     */\n\t    function lazyReverse() {\n\t      if (this.__filtered__) {\n\t        var result = new LazyWrapper(this);\n\t        result.__dir__ = -1;\n\t        result.__filtered__ = true;\n\t      } else {\n\t        result = this.clone();\n\t        result.__dir__ *= -1;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Extracts the unwrapped value from its lazy wrapper.\n\t     *\n\t     * @private\n\t     * @name value\n\t     * @memberOf LazyWrapper\n\t     * @returns {*} Returns the unwrapped value.\n\t     */\n\t    function lazyValue() {\n\t      var array = this.__wrapped__.value(),\n\t          dir = this.__dir__,\n\t          isArr = isArray(array),\n\t          isRight = dir < 0,\n\t          arrLength = isArr ? array.length : 0,\n\t          view = getView(0, arrLength, this.__views__),\n\t          start = view.start,\n\t          end = view.end,\n\t          length = end - start,\n\t          index = isRight ? end : (start - 1),\n\t          iteratees = this.__iteratees__,\n\t          iterLength = iteratees.length,\n\t          resIndex = 0,\n\t          takeCount = nativeMin(length, this.__takeCount__);\n\t\n\t      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n\t        return baseWrapperValue(array, this.__actions__);\n\t      }\n\t      var result = [];\n\t\n\t      outer:\n\t      while (length-- && resIndex < takeCount) {\n\t        index += dir;\n\t\n\t        var iterIndex = -1,\n\t            value = array[index];\n\t\n\t        while (++iterIndex < iterLength) {\n\t          var data = iteratees[iterIndex],\n\t              iteratee = data.iteratee,\n\t              type = data.type,\n\t              computed = iteratee(value);\n\t\n\t          if (type == LAZY_MAP_FLAG) {\n\t            value = computed;\n\t          } else if (!computed) {\n\t            if (type == LAZY_FILTER_FLAG) {\n\t              continue outer;\n\t            } else {\n\t              break outer;\n\t            }\n\t          }\n\t        }\n\t        result[resIndex++] = value;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n\t    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n\t    LazyWrapper.prototype.constructor = LazyWrapper;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a hash object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Hash(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the hash.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Hash\n\t     */\n\t    function hashClear() {\n\t      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the hash.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Hash\n\t     * @param {Object} hash The hash to modify.\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function hashDelete(key) {\n\t      var result = this.has(key) && delete this.__data__[key];\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the hash value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function hashGet(key) {\n\t      var data = this.__data__;\n\t      if (nativeCreate) {\n\t        var result = data[key];\n\t        return result === HASH_UNDEFINED ? undefined : result;\n\t      }\n\t      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if a hash value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function hashHas(key) {\n\t      var data = this.__data__;\n\t      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n\t    }\n\t\n\t    /**\n\t     * Sets the hash `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Hash\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the hash instance.\n\t     */\n\t    function hashSet(key, value) {\n\t      var data = this.__data__;\n\t      this.size += this.has(key) ? 0 : 1;\n\t      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Hash`.\n\t    Hash.prototype.clear = hashClear;\n\t    Hash.prototype['delete'] = hashDelete;\n\t    Hash.prototype.get = hashGet;\n\t    Hash.prototype.has = hashHas;\n\t    Hash.prototype.set = hashSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an list cache object.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function ListCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the list cache.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf ListCache\n\t     */\n\t    function listCacheClear() {\n\t      this.__data__ = [];\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the list cache.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function listCacheDelete(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        return false;\n\t      }\n\t      var lastIndex = data.length - 1;\n\t      if (index == lastIndex) {\n\t        data.pop();\n\t      } else {\n\t        splice.call(data, index, 1);\n\t      }\n\t      --this.size;\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Gets the list cache value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function listCacheGet(key) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      return index < 0 ? undefined : data[index][1];\n\t    }\n\t\n\t    /**\n\t     * Checks if a list cache value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function listCacheHas(key) {\n\t      return assocIndexOf(this.__data__, key) > -1;\n\t    }\n\t\n\t    /**\n\t     * Sets the list cache `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf ListCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the list cache instance.\n\t     */\n\t    function listCacheSet(key, value) {\n\t      var data = this.__data__,\n\t          index = assocIndexOf(data, key);\n\t\n\t      if (index < 0) {\n\t        ++this.size;\n\t        data.push([key, value]);\n\t      } else {\n\t        data[index][1] = value;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `ListCache`.\n\t    ListCache.prototype.clear = listCacheClear;\n\t    ListCache.prototype['delete'] = listCacheDelete;\n\t    ListCache.prototype.get = listCacheGet;\n\t    ListCache.prototype.has = listCacheHas;\n\t    ListCache.prototype.set = listCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a map cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function MapCache(entries) {\n\t      var index = -1,\n\t          length = entries == null ? 0 : entries.length;\n\t\n\t      this.clear();\n\t      while (++index < length) {\n\t        var entry = entries[index];\n\t        this.set(entry[0], entry[1]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the map.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf MapCache\n\t     */\n\t    function mapCacheClear() {\n\t      this.size = 0;\n\t      this.__data__ = {\n\t        'hash': new Hash,\n\t        'map': new (Map || ListCache),\n\t        'string': new Hash\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the map.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function mapCacheDelete(key) {\n\t      var result = getMapData(this, key)['delete'](key);\n\t      this.size -= result ? 1 : 0;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the map value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function mapCacheGet(key) {\n\t      return getMapData(this, key).get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a map value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function mapCacheHas(key) {\n\t      return getMapData(this, key).has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the map `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf MapCache\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the map cache instance.\n\t     */\n\t    function mapCacheSet(key, value) {\n\t      var data = getMapData(this, key),\n\t          size = data.size;\n\t\n\t      data.set(key, value);\n\t      this.size += data.size == size ? 0 : 1;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `MapCache`.\n\t    MapCache.prototype.clear = mapCacheClear;\n\t    MapCache.prototype['delete'] = mapCacheDelete;\n\t    MapCache.prototype.get = mapCacheGet;\n\t    MapCache.prototype.has = mapCacheHas;\n\t    MapCache.prototype.set = mapCacheSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     *\n\t     * Creates an array cache object to store unique values.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [values] The values to cache.\n\t     */\n\t    function SetCache(values) {\n\t      var index = -1,\n\t          length = values == null ? 0 : values.length;\n\t\n\t      this.__data__ = new MapCache;\n\t      while (++index < length) {\n\t        this.add(values[index]);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Adds `value` to the array cache.\n\t     *\n\t     * @private\n\t     * @name add\n\t     * @memberOf SetCache\n\t     * @alias push\n\t     * @param {*} value The value to cache.\n\t     * @returns {Object} Returns the cache instance.\n\t     */\n\t    function setCacheAdd(value) {\n\t      this.__data__.set(value, HASH_UNDEFINED);\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is in the array cache.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf SetCache\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns `true` if `value` is found, else `false`.\n\t     */\n\t    function setCacheHas(value) {\n\t      return this.__data__.has(value);\n\t    }\n\t\n\t    // Add methods to `SetCache`.\n\t    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n\t    SetCache.prototype.has = setCacheHas;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a stack cache object to store key-value pairs.\n\t     *\n\t     * @private\n\t     * @constructor\n\t     * @param {Array} [entries] The key-value pairs to cache.\n\t     */\n\t    function Stack(entries) {\n\t      var data = this.__data__ = new ListCache(entries);\n\t      this.size = data.size;\n\t    }\n\t\n\t    /**\n\t     * Removes all key-value entries from the stack.\n\t     *\n\t     * @private\n\t     * @name clear\n\t     * @memberOf Stack\n\t     */\n\t    function stackClear() {\n\t      this.__data__ = new ListCache;\n\t      this.size = 0;\n\t    }\n\t\n\t    /**\n\t     * Removes `key` and its value from the stack.\n\t     *\n\t     * @private\n\t     * @name delete\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to remove.\n\t     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n\t     */\n\t    function stackDelete(key) {\n\t      var data = this.__data__,\n\t          result = data['delete'](key);\n\t\n\t      this.size = data.size;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the stack value for `key`.\n\t     *\n\t     * @private\n\t     * @name get\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to get.\n\t     * @returns {*} Returns the entry value.\n\t     */\n\t    function stackGet(key) {\n\t      return this.__data__.get(key);\n\t    }\n\t\n\t    /**\n\t     * Checks if a stack value for `key` exists.\n\t     *\n\t     * @private\n\t     * @name has\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the entry to check.\n\t     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n\t     */\n\t    function stackHas(key) {\n\t      return this.__data__.has(key);\n\t    }\n\t\n\t    /**\n\t     * Sets the stack `key` to `value`.\n\t     *\n\t     * @private\n\t     * @name set\n\t     * @memberOf Stack\n\t     * @param {string} key The key of the value to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns the stack cache instance.\n\t     */\n\t    function stackSet(key, value) {\n\t      var data = this.__data__;\n\t      if (data instanceof ListCache) {\n\t        var pairs = data.__data__;\n\t        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n\t          pairs.push([key, value]);\n\t          this.size = ++data.size;\n\t          return this;\n\t        }\n\t        data = this.__data__ = new MapCache(pairs);\n\t      }\n\t      data.set(key, value);\n\t      this.size = data.size;\n\t      return this;\n\t    }\n\t\n\t    // Add methods to `Stack`.\n\t    Stack.prototype.clear = stackClear;\n\t    Stack.prototype['delete'] = stackDelete;\n\t    Stack.prototype.get = stackGet;\n\t    Stack.prototype.has = stackHas;\n\t    Stack.prototype.set = stackSet;\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of the enumerable property names of the array-like `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @param {boolean} inherited Specify returning inherited property names.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function arrayLikeKeys(value, inherited) {\n\t      var isArr = isArray(value),\n\t          isArg = !isArr && isArguments(value),\n\t          isBuff = !isArr && !isArg && isBuffer(value),\n\t          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n\t          skipIndexes = isArr || isArg || isBuff || isType,\n\t          result = skipIndexes ? baseTimes(value.length, String) : [],\n\t          length = result.length;\n\t\n\t      for (var key in value) {\n\t        if ((inherited || hasOwnProperty.call(value, key)) &&\n\t            !(skipIndexes && (\n\t               // Safari 9 has enumerable `arguments.length` in strict mode.\n\t               key == 'length' ||\n\t               // Node.js 0.10 has enumerable non-index properties on buffers.\n\t               (isBuff && (key == 'offset' || key == 'parent')) ||\n\t               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n\t               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n\t               // Skip index properties.\n\t               isIndex(key, length)\n\t            ))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sample` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function arraySample(array) {\n\t      var length = array.length;\n\t      return length ? array[baseRandom(0, length - 1)] : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.sampleSize` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function arraySampleSize(array, n) {\n\t      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` for arrays.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function arrayShuffle(array) {\n\t      return shuffleSelf(copyArray(array));\n\t    }\n\t\n\t    /**\n\t     * This function is like `assignValue` except that it doesn't assign\n\t     * `undefined` values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignMergeValue(object, key, value) {\n\t      if ((value !== undefined && !eq(object[key], value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function assignValue(object, key, value) {\n\t      var objValue = object[key];\n\t      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n\t          (value === undefined && !(key in object))) {\n\t        baseAssignValue(object, key, value);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the `key` is found in `array` of key-value pairs.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} key The key to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     */\n\t    function assocIndexOf(array, key) {\n\t      var length = array.length;\n\t      while (length--) {\n\t        if (eq(array[length][0], key)) {\n\t          return length;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * Aggregates elements of `collection` on `accumulator` with keys transformed\n\t     * by `iteratee` and values set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform keys.\n\t     * @param {Object} accumulator The initial aggregated object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseAggregator(collection, setter, iteratee, accumulator) {\n\t      baseEach(collection, function(value, key, collection) {\n\t        setter(accumulator, value, iteratee(value), collection);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assign` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssign(object, source) {\n\t      return object && copyObject(source, keys(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.assignIn` without support for multiple sources\n\t     * or `customizer` functions.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseAssignIn(object, source) {\n\t      return object && copyObject(source, keysIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `assignValue` and `assignMergeValue` without\n\t     * value checks.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {*} value The value to assign.\n\t     */\n\t    function baseAssignValue(object, key, value) {\n\t      if (key == '__proto__' && defineProperty) {\n\t        defineProperty(object, key, {\n\t          'configurable': true,\n\t          'enumerable': true,\n\t          'value': value,\n\t          'writable': true\n\t        });\n\t      } else {\n\t        object[key] = value;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.at` without support for individual paths.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Array} Returns the picked elements.\n\t     */\n\t    function baseAt(object, paths) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = Array(length),\n\t          skip = object == null;\n\t\n\t      while (++index < length) {\n\t        result[index] = skip ? undefined : get(object, paths[index]);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clamp` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     */\n\t    function baseClamp(number, lower, upper) {\n\t      if (number === number) {\n\t        if (upper !== undefined) {\n\t          number = number <= upper ? number : upper;\n\t        }\n\t        if (lower !== undefined) {\n\t          number = number >= lower ? number : lower;\n\t        }\n\t      }\n\t      return number;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n\t     * traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to clone.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Deep clone\n\t     *  2 - Flatten inherited properties\n\t     *  4 - Clone symbols\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @param {string} [key] The key of `value`.\n\t     * @param {Object} [object] The parent object of `value`.\n\t     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n\t     * @returns {*} Returns the cloned value.\n\t     */\n\t    function baseClone(value, bitmask, customizer, key, object, stack) {\n\t      var result,\n\t          isDeep = bitmask & CLONE_DEEP_FLAG,\n\t          isFlat = bitmask & CLONE_FLAT_FLAG,\n\t          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\t\n\t      if (customizer) {\n\t        result = object ? customizer(value, key, object, stack) : customizer(value);\n\t      }\n\t      if (result !== undefined) {\n\t        return result;\n\t      }\n\t      if (!isObject(value)) {\n\t        return value;\n\t      }\n\t      var isArr = isArray(value);\n\t      if (isArr) {\n\t        result = initCloneArray(value);\n\t        if (!isDeep) {\n\t          return copyArray(value, result);\n\t        }\n\t      } else {\n\t        var tag = getTag(value),\n\t            isFunc = tag == funcTag || tag == genTag;\n\t\n\t        if (isBuffer(value)) {\n\t          return cloneBuffer(value, isDeep);\n\t        }\n\t        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n\t          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n\t          if (!isDeep) {\n\t            return isFlat\n\t              ? copySymbolsIn(value, baseAssignIn(result, value))\n\t              : copySymbols(value, baseAssign(result, value));\n\t          }\n\t        } else {\n\t          if (!cloneableTags[tag]) {\n\t            return object ? value : {};\n\t          }\n\t          result = initCloneByTag(value, tag, baseClone, isDeep);\n\t        }\n\t      }\n\t      // Check for circular references and return its corresponding clone.\n\t      stack || (stack = new Stack);\n\t      var stacked = stack.get(value);\n\t      if (stacked) {\n\t        return stacked;\n\t      }\n\t      stack.set(value, result);\n\t\n\t      var keysFunc = isFull\n\t        ? (isFlat ? getAllKeysIn : getAllKeys)\n\t        : (isFlat ? keysIn : keys);\n\t\n\t      var props = isArr ? undefined : keysFunc(value);\n\t      arrayEach(props || value, function(subValue, key) {\n\t        if (props) {\n\t          key = subValue;\n\t          subValue = value[key];\n\t        }\n\t        // Recursively populate clone (susceptible to call stack limits).\n\t        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conforms` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseConforms(source) {\n\t      var props = keys(source);\n\t      return function(object) {\n\t        return baseConformsTo(object, source, props);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.conformsTo` which accepts `props` to check.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     */\n\t    function baseConformsTo(object, source, props) {\n\t      var length = props.length;\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (length--) {\n\t        var key = props[length],\n\t            predicate = source[key],\n\t            value = object[key];\n\t\n\t        if ((value === undefined && !(key in object)) || !predicate(value)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n\t     * to provide to `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {Array} args The arguments to provide to `func`.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    function baseDelay(func, wait, args) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return setTimeout(function() { func.apply(undefined, args); }, wait);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.difference` without support\n\t     * for excluding multiple arrays or iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Array} values The values to exclude.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     */\n\t    function baseDifference(array, values, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          isCommon = true,\n\t          length = array.length,\n\t          result = [],\n\t          valuesLength = values.length;\n\t\n\t      if (!length) {\n\t        return result;\n\t      }\n\t      if (iteratee) {\n\t        values = arrayMap(values, baseUnary(iteratee));\n\t      }\n\t      if (comparator) {\n\t        includes = arrayIncludesWith;\n\t        isCommon = false;\n\t      }\n\t      else if (values.length >= LARGE_ARRAY_SIZE) {\n\t        includes = cacheHas;\n\t        isCommon = false;\n\t        values = new SetCache(values);\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee == null ? value : iteratee(value);\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var valuesIndex = valuesLength;\n\t          while (valuesIndex--) {\n\t            if (values[valuesIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(values, computed, comparator)) {\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forEach` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEach = createBaseEach(baseForOwn);\n\t\n\t    /**\n\t     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     */\n\t    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\t\n\t    /**\n\t     * The base implementation of `_.every` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`\n\t     */\n\t    function baseEvery(collection, predicate) {\n\t      var result = true;\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = !!predicate(value, index, collection);\n\t        return result;\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.max` and `_.min` which accepts a\n\t     * `comparator` to determine the extremum value.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} iteratee The iteratee invoked per iteration.\n\t     * @param {Function} comparator The comparator used to compare values.\n\t     * @returns {*} Returns the extremum value.\n\t     */\n\t    function baseExtremum(array, iteratee, comparator) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            current = iteratee(value);\n\t\n\t        if (current != null && (computed === undefined\n\t              ? (current === current && !isSymbol(current))\n\t              : comparator(current, computed)\n\t            )) {\n\t          var computed = current,\n\t              result = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.fill` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function baseFill(array, value, start, end) {\n\t      var length = array.length;\n\t\n\t      start = toInteger(start);\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = (end === undefined || end > length) ? length : toInteger(end);\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      end = start > end ? 0 : toLength(end);\n\t      while (start < end) {\n\t        array[start++] = value;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.filter` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     */\n\t    function baseFilter(collection, predicate) {\n\t      var result = [];\n\t      baseEach(collection, function(value, index, collection) {\n\t        if (predicate(value, index, collection)) {\n\t          result.push(value);\n\t        }\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.flatten` with support for restricting flattening.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} depth The maximum recursion depth.\n\t     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n\t     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n\t     * @param {Array} [result=[]] The initial result value.\n\t     * @returns {Array} Returns the new flattened array.\n\t     */\n\t    function baseFlatten(array, depth, predicate, isStrict, result) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      predicate || (predicate = isFlattenable);\n\t      result || (result = []);\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (depth > 0 && predicate(value)) {\n\t          if (depth > 1) {\n\t            // Recursively flatten arrays (susceptible to call stack limits).\n\t            baseFlatten(value, depth - 1, predicate, isStrict, result);\n\t          } else {\n\t            arrayPush(result, value);\n\t          }\n\t        } else if (!isStrict) {\n\t          result[result.length] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `baseForOwn` which iterates over `object`\n\t     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseFor = createBaseFor();\n\t\n\t    /**\n\t     * This function is like `baseFor` except that it iterates over properties\n\t     * in the opposite order.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    var baseForRight = createBaseFor(true);\n\t\n\t    /**\n\t     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwn(object, iteratee) {\n\t      return object && baseFor(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseForOwnRight(object, iteratee) {\n\t      return object && baseForRight(object, iteratee, keys);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.functions` which creates an array of\n\t     * `object` function property names filtered from `props`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Array} props The property names to filter.\n\t     * @returns {Array} Returns the function names.\n\t     */\n\t    function baseFunctions(object, props) {\n\t      return arrayFilter(props, function(key) {\n\t        return isFunction(object[key]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.get` without support for default values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseGet(object, path) {\n\t      path = castPath(path, object);\n\t\n\t      var index = 0,\n\t          length = path.length;\n\t\n\t      while (object != null && index < length) {\n\t        object = object[toKey(path[index++])];\n\t      }\n\t      return (index && index == length) ? object : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n\t     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Function} keysFunc The function to get the keys of `object`.\n\t     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n\t      var result = keysFunc(object);\n\t      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `getTag` without fallbacks for buggy environments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    function baseGetTag(value) {\n\t      if (value == null) {\n\t        return value === undefined ? undefinedTag : nullTag;\n\t      }\n\t      return (symToStringTag && symToStringTag in Object(value))\n\t        ? getRawTag(value)\n\t        : objectToString(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.gt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseGt(value, other) {\n\t      return value > other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.has` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHas(object, key) {\n\t      return object != null && hasOwnProperty.call(object, key);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.hasIn` without support for deep paths.\n\t     *\n\t     * @private\n\t     * @param {Object} [object] The object to query.\n\t     * @param {Array|string} key The key to check.\n\t     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n\t     */\n\t    function baseHasIn(object, key) {\n\t      return object != null && key in Object(object);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.inRange` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} number The number to check.\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     */\n\t    function baseInRange(number, start, end) {\n\t      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.intersection`, without support\n\t     * for iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of shared values.\n\t     */\n\t    function baseIntersection(arrays, iteratee, comparator) {\n\t      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n\t          length = arrays[0].length,\n\t          othLength = arrays.length,\n\t          othIndex = othLength,\n\t          caches = Array(othLength),\n\t          maxLength = Infinity,\n\t          result = [];\n\t\n\t      while (othIndex--) {\n\t        var array = arrays[othIndex];\n\t        if (othIndex && iteratee) {\n\t          array = arrayMap(array, baseUnary(iteratee));\n\t        }\n\t        maxLength = nativeMin(array.length, maxLength);\n\t        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n\t          ? new SetCache(othIndex && array)\n\t          : undefined;\n\t      }\n\t      array = arrays[0];\n\t\n\t      var index = -1,\n\t          seen = caches[0];\n\t\n\t      outer:\n\t      while (++index < length && result.length < maxLength) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (!(seen\n\t              ? cacheHas(seen, computed)\n\t              : includes(result, computed, comparator)\n\t            )) {\n\t          othIndex = othLength;\n\t          while (--othIndex) {\n\t            var cache = caches[othIndex];\n\t            if (!(cache\n\t                  ? cacheHas(cache, computed)\n\t                  : includes(arrays[othIndex], computed, comparator))\n\t                ) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (seen) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invert` and `_.invertBy` which inverts\n\t     * `object` with values transformed by `iteratee` and set by `setter`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} setter The function to set `accumulator` values.\n\t     * @param {Function} iteratee The iteratee to transform values.\n\t     * @param {Object} accumulator The initial inverted object.\n\t     * @returns {Function} Returns `accumulator`.\n\t     */\n\t    function baseInverter(object, setter, iteratee, accumulator) {\n\t      baseForOwn(object, function(value, key, object) {\n\t        setter(accumulator, iteratee(value), key, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.invoke` without support for individual\n\t     * method arguments.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {Array} args The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     */\n\t    function baseInvoke(object, path, args) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      var func = object == null ? object : object[toKey(last(path))];\n\t      return func == null ? undefined : apply(func, object, args);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArguments`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     */\n\t    function baseIsArguments(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == argsTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     */\n\t    function baseIsArrayBuffer(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isDate` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     */\n\t    function baseIsDate(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == dateTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isEqual` which supports partial comparisons\n\t     * and tracks traversed objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {boolean} bitmask The bitmask flags.\n\t     *  1 - Unordered comparison\n\t     *  2 - Partial comparison\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     */\n\t    function baseIsEqual(value, other, bitmask, customizer, stack) {\n\t      if (value === other) {\n\t        return true;\n\t      }\n\t      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n\t        return value !== value && other !== other;\n\t      }\n\t      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqual` for arrays and objects which performs\n\t     * deep comparisons and tracks traversed objects enabling objects with circular\n\t     * references to be compared.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var objIsArr = isArray(object),\n\t          othIsArr = isArray(other),\n\t          objTag = objIsArr ? arrayTag : getTag(object),\n\t          othTag = othIsArr ? arrayTag : getTag(other);\n\t\n\t      objTag = objTag == argsTag ? objectTag : objTag;\n\t      othTag = othTag == argsTag ? objectTag : othTag;\n\t\n\t      var objIsObj = objTag == objectTag,\n\t          othIsObj = othTag == objectTag,\n\t          isSameTag = objTag == othTag;\n\t\n\t      if (isSameTag && isBuffer(object)) {\n\t        if (!isBuffer(other)) {\n\t          return false;\n\t        }\n\t        objIsArr = true;\n\t        objIsObj = false;\n\t      }\n\t      if (isSameTag && !objIsObj) {\n\t        stack || (stack = new Stack);\n\t        return (objIsArr || isTypedArray(object))\n\t          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n\t          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n\t      }\n\t      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n\t        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n\t            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\t\n\t        if (objIsWrapped || othIsWrapped) {\n\t          var objUnwrapped = objIsWrapped ? object.value() : object,\n\t              othUnwrapped = othIsWrapped ? other.value() : other;\n\t\n\t          stack || (stack = new Stack);\n\t          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n\t        }\n\t      }\n\t      if (!isSameTag) {\n\t        return false;\n\t      }\n\t      stack || (stack = new Stack);\n\t      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMap` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     */\n\t    function baseIsMap(value) {\n\t      return isObjectLike(value) && getTag(value) == mapTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Array} matchData The property names, values, and compare flags to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     */\n\t    function baseIsMatch(object, source, matchData, customizer) {\n\t      var index = matchData.length,\n\t          length = index,\n\t          noCustomizer = !customizer;\n\t\n\t      if (object == null) {\n\t        return !length;\n\t      }\n\t      object = Object(object);\n\t      while (index--) {\n\t        var data = matchData[index];\n\t        if ((noCustomizer && data[2])\n\t              ? data[1] !== object[data[0]]\n\t              : !(data[0] in object)\n\t            ) {\n\t          return false;\n\t        }\n\t      }\n\t      while (++index < length) {\n\t        data = matchData[index];\n\t        var key = data[0],\n\t            objValue = object[key],\n\t            srcValue = data[1];\n\t\n\t        if (noCustomizer && data[2]) {\n\t          if (objValue === undefined && !(key in object)) {\n\t            return false;\n\t          }\n\t        } else {\n\t          var stack = new Stack;\n\t          if (customizer) {\n\t            var result = customizer(objValue, srcValue, key, object, source, stack);\n\t          }\n\t          if (!(result === undefined\n\t                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n\t                : result\n\t              )) {\n\t            return false;\n\t          }\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isNative` without bad shim checks.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     */\n\t    function baseIsNative(value) {\n\t      if (!isObject(value) || isMasked(value)) {\n\t        return false;\n\t      }\n\t      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n\t      return pattern.test(toSource(value));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isRegExp` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     */\n\t    function baseIsRegExp(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isSet` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     */\n\t    function baseIsSet(value) {\n\t      return isObjectLike(value) && getTag(value) == setTag;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     */\n\t    function baseIsTypedArray(value) {\n\t      return isObjectLike(value) &&\n\t        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.iteratee`.\n\t     *\n\t     * @private\n\t     * @param {*} [value=_.identity] The value to convert to an iteratee.\n\t     * @returns {Function} Returns the iteratee.\n\t     */\n\t    function baseIteratee(value) {\n\t      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n\t      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n\t      if (typeof value == 'function') {\n\t        return value;\n\t      }\n\t      if (value == null) {\n\t        return identity;\n\t      }\n\t      if (typeof value == 'object') {\n\t        return isArray(value)\n\t          ? baseMatchesProperty(value[0], value[1])\n\t          : baseMatches(value);\n\t      }\n\t      return property(value);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeys(object) {\n\t      if (!isPrototype(object)) {\n\t        return nativeKeys(object);\n\t      }\n\t      var result = [];\n\t      for (var key in Object(object)) {\n\t        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function baseKeysIn(object) {\n\t      if (!isObject(object)) {\n\t        return nativeKeysIn(object);\n\t      }\n\t      var isProto = isPrototype(object),\n\t          result = [];\n\t\n\t      for (var key in object) {\n\t        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.lt` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     */\n\t    function baseLt(value, other) {\n\t      return value < other;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.map` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} iteratee The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     */\n\t    function baseMap(collection, iteratee) {\n\t      var index = -1,\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value, key, collection) {\n\t        result[++index] = iteratee(value, key, collection);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matches` which doesn't clone `source`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatches(source) {\n\t      var matchData = getMatchData(source);\n\t      if (matchData.length == 1 && matchData[0][2]) {\n\t        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n\t      }\n\t      return function(object) {\n\t        return object === source || baseIsMatch(object, source, matchData);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n\t     *\n\t     * @private\n\t     * @param {string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function baseMatchesProperty(path, srcValue) {\n\t      if (isKey(path) && isStrictComparable(srcValue)) {\n\t        return matchesStrictComparable(toKey(path), srcValue);\n\t      }\n\t      return function(object) {\n\t        var objValue = get(object, path);\n\t        return (objValue === undefined && objValue === srcValue)\n\t          ? hasIn(object, path)\n\t          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.merge` without support for multiple sources.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} [customizer] The function to customize merged values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMerge(object, source, srcIndex, customizer, stack) {\n\t      if (object === source) {\n\t        return;\n\t      }\n\t      baseFor(source, function(srcValue, key) {\n\t        if (isObject(srcValue)) {\n\t          stack || (stack = new Stack);\n\t          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n\t        }\n\t        else {\n\t          var newValue = customizer\n\t            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n\t            : undefined;\n\t\n\t          if (newValue === undefined) {\n\t            newValue = srcValue;\n\t          }\n\t          assignMergeValue(object, key, newValue);\n\t        }\n\t      }, keysIn);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseMerge` for arrays and objects which performs\n\t     * deep merges and tracks traversed objects enabling objects with circular\n\t     * references to be merged.\n\t     *\n\t     * @private\n\t     * @param {Object} object The destination object.\n\t     * @param {Object} source The source object.\n\t     * @param {string} key The key of the value to merge.\n\t     * @param {number} srcIndex The index of `source`.\n\t     * @param {Function} mergeFunc The function to merge values.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     */\n\t    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n\t      var objValue = object[key],\n\t          srcValue = source[key],\n\t          stacked = stack.get(srcValue);\n\t\n\t      if (stacked) {\n\t        assignMergeValue(object, key, stacked);\n\t        return;\n\t      }\n\t      var newValue = customizer\n\t        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n\t        : undefined;\n\t\n\t      var isCommon = newValue === undefined;\n\t\n\t      if (isCommon) {\n\t        var isArr = isArray(srcValue),\n\t            isBuff = !isArr && isBuffer(srcValue),\n\t            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\t\n\t        newValue = srcValue;\n\t        if (isArr || isBuff || isTyped) {\n\t          if (isArray(objValue)) {\n\t            newValue = objValue;\n\t          }\n\t          else if (isArrayLikeObject(objValue)) {\n\t            newValue = copyArray(objValue);\n\t          }\n\t          else if (isBuff) {\n\t            isCommon = false;\n\t            newValue = cloneBuffer(srcValue, true);\n\t          }\n\t          else if (isTyped) {\n\t            isCommon = false;\n\t            newValue = cloneTypedArray(srcValue, true);\n\t          }\n\t          else {\n\t            newValue = [];\n\t          }\n\t        }\n\t        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n\t          newValue = objValue;\n\t          if (isArguments(objValue)) {\n\t            newValue = toPlainObject(objValue);\n\t          }\n\t          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n\t            newValue = initCloneObject(srcValue);\n\t          }\n\t        }\n\t        else {\n\t          isCommon = false;\n\t        }\n\t      }\n\t      if (isCommon) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, newValue);\n\t        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      assignMergeValue(object, key, newValue);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.nth` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {number} n The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     */\n\t    function baseNth(array, n) {\n\t      var length = array.length;\n\t      if (!length) {\n\t        return;\n\t      }\n\t      n += n < 0 ? length : 0;\n\t      return isIndex(n, length) ? array[n] : undefined;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.orderBy` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n\t     * @param {string[]} orders The sort orders of `iteratees`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     */\n\t    function baseOrderBy(collection, iteratees, orders) {\n\t      var index = -1;\n\t      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\t\n\t      var result = baseMap(collection, function(value, key, collection) {\n\t        var criteria = arrayMap(iteratees, function(iteratee) {\n\t          return iteratee(value);\n\t        });\n\t        return { 'criteria': criteria, 'index': ++index, 'value': value };\n\t      });\n\t\n\t      return baseSortBy(result, function(object, other) {\n\t        return compareMultiple(object, other, orders);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pick` without support for individual\n\t     * property identifiers.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePick(object, paths) {\n\t      return basePickBy(object, paths, function(value, path) {\n\t        return hasIn(object, path);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Object} object The source object.\n\t     * @param {string[]} paths The property paths to pick.\n\t     * @param {Function} predicate The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function basePickBy(object, paths, predicate) {\n\t      var index = -1,\n\t          length = paths.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var path = paths[index],\n\t            value = baseGet(object, path);\n\t\n\t        if (predicate(value, path)) {\n\t          baseSet(result, castPath(path, object), value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseProperty` which supports deep paths.\n\t     *\n\t     * @private\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     */\n\t    function basePropertyDeep(path) {\n\t      return function(object) {\n\t        return baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAllBy` without support for iteratee\n\t     * shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAll(array, values, iteratee, comparator) {\n\t      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n\t          index = -1,\n\t          length = values.length,\n\t          seen = array;\n\t\n\t      if (array === values) {\n\t        values = copyArray(values);\n\t      }\n\t      if (iteratee) {\n\t        seen = arrayMap(array, baseUnary(iteratee));\n\t      }\n\t      while (++index < length) {\n\t        var fromIndex = 0,\n\t            value = values[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n\t          if (seen !== array) {\n\t            splice.call(seen, fromIndex, 1);\n\t          }\n\t          splice.call(array, fromIndex, 1);\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.pullAt` without support for individual\n\t     * indexes or capturing the removed elements.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to modify.\n\t     * @param {number[]} indexes The indexes of elements to remove.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function basePullAt(array, indexes) {\n\t      var length = array ? indexes.length : 0,\n\t          lastIndex = length - 1;\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        if (length == lastIndex || index !== previous) {\n\t          var previous = index;\n\t          if (isIndex(index)) {\n\t            splice.call(array, index, 1);\n\t          } else {\n\t            baseUnset(array, index);\n\t          }\n\t        }\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.random` without support for returning\n\t     * floating-point numbers.\n\t     *\n\t     * @private\n\t     * @param {number} lower The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the random number.\n\t     */\n\t    function baseRandom(lower, upper) {\n\t      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n\t     * coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} step The value to increment or decrement by.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the range of numbers.\n\t     */\n\t    function baseRange(start, end, step, fromRight) {\n\t      var index = -1,\n\t          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n\t          result = Array(length);\n\t\n\t      while (length--) {\n\t        result[fromRight ? length : ++index] = start;\n\t        start += step;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.repeat` which doesn't coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to repeat.\n\t     * @param {number} n The number of times to repeat the string.\n\t     * @returns {string} Returns the repeated string.\n\t     */\n\t    function baseRepeat(string, n) {\n\t      var result = '';\n\t      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return result;\n\t      }\n\t      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n\t      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n\t      do {\n\t        if (n % 2) {\n\t          result += string;\n\t        }\n\t        n = nativeFloor(n / 2);\n\t        if (n) {\n\t          string += string;\n\t        }\n\t      } while (n);\n\t\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function baseRest(func, start) {\n\t      return setToString(overRest(func, start, identity), func + '');\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sample`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     */\n\t    function baseSample(collection) {\n\t      return arraySample(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sampleSize` without param guards.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} n The number of elements to sample.\n\t     * @returns {Array} Returns the random elements.\n\t     */\n\t    function baseSampleSize(collection, n) {\n\t      var array = values(collection);\n\t      return shuffleSelf(array, baseClamp(n, 0, array.length));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.set`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseSet(object, path, value, customizer) {\n\t      if (!isObject(object)) {\n\t        return object;\n\t      }\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          lastIndex = length - 1,\n\t          nested = object;\n\t\n\t      while (nested != null && ++index < length) {\n\t        var key = toKey(path[index]),\n\t            newValue = value;\n\t\n\t        if (index != lastIndex) {\n\t          var objValue = nested[key];\n\t          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\t          if (newValue === undefined) {\n\t            newValue = isObject(objValue)\n\t              ? objValue\n\t              : (isIndex(path[index + 1]) ? [] : {});\n\t          }\n\t        }\n\t        assignValue(nested, key, newValue);\n\t        nested = nested[key];\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `setData` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetData = !metaMap ? identity : function(func, data) {\n\t      metaMap.set(func, data);\n\t      return func;\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `setToString` without support for hot loop shorting.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var baseSetToString = !defineProperty ? identity : function(func, string) {\n\t      return defineProperty(func, 'toString', {\n\t        'configurable': true,\n\t        'enumerable': false,\n\t        'value': constant(string),\n\t        'writable': true\n\t      });\n\t    };\n\t\n\t    /**\n\t     * The base implementation of `_.shuffle`.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     */\n\t    function baseShuffle(collection) {\n\t      return shuffleSelf(values(collection));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.slice` without an iteratee call guard.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseSlice(array, start, end) {\n\t      var index = -1,\n\t          length = array.length;\n\t\n\t      if (start < 0) {\n\t        start = -start > length ? 0 : (length + start);\n\t      }\n\t      end = end > length ? length : end;\n\t      if (end < 0) {\n\t        end += length;\n\t      }\n\t      length = start > end ? 0 : ((end - start) >>> 0);\n\t      start >>>= 0;\n\t\n\t      var result = Array(length);\n\t      while (++index < length) {\n\t        result[index] = array[index + start];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.some` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     */\n\t    function baseSome(collection, predicate) {\n\t      var result;\n\t\n\t      baseEach(collection, function(value, index, collection) {\n\t        result = predicate(value, index, collection);\n\t        return !result;\n\t      });\n\t      return !!result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n\t     * performs a binary search of `array` to determine the index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndex(array, value, retHighest) {\n\t      var low = 0,\n\t          high = array == null ? low : array.length;\n\t\n\t      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n\t        while (low < high) {\n\t          var mid = (low + high) >>> 1,\n\t              computed = array[mid];\n\t\n\t          if (computed !== null && !isSymbol(computed) &&\n\t              (retHighest ? (computed <= value) : (computed < value))) {\n\t            low = mid + 1;\n\t          } else {\n\t            high = mid;\n\t          }\n\t        }\n\t        return high;\n\t      }\n\t      return baseSortedIndexBy(array, value, identity, retHighest);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n\t     * which invokes `iteratee` for `value` and each element of `array` to compute\n\t     * their sort ranking. The iteratee is invoked with one argument; (value).\n\t     *\n\t     * @private\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} iteratee The iteratee invoked per element.\n\t     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     */\n\t    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n\t      value = iteratee(value);\n\t\n\t      var low = 0,\n\t          high = array == null ? 0 : array.length,\n\t          valIsNaN = value !== value,\n\t          valIsNull = value === null,\n\t          valIsSymbol = isSymbol(value),\n\t          valIsUndefined = value === undefined;\n\t\n\t      while (low < high) {\n\t        var mid = nativeFloor((low + high) / 2),\n\t            computed = iteratee(array[mid]),\n\t            othIsDefined = computed !== undefined,\n\t            othIsNull = computed === null,\n\t            othIsReflexive = computed === computed,\n\t            othIsSymbol = isSymbol(computed);\n\t\n\t        if (valIsNaN) {\n\t          var setLow = retHighest || othIsReflexive;\n\t        } else if (valIsUndefined) {\n\t          setLow = othIsReflexive && (retHighest || othIsDefined);\n\t        } else if (valIsNull) {\n\t          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n\t        } else if (valIsSymbol) {\n\t          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n\t        } else if (othIsNull || othIsSymbol) {\n\t          setLow = false;\n\t        } else {\n\t          setLow = retHighest ? (computed <= value) : (computed < value);\n\t        }\n\t        if (setLow) {\n\t          low = mid + 1;\n\t        } else {\n\t          high = mid;\n\t        }\n\t      }\n\t      return nativeMin(high, MAX_ARRAY_INDEX);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n\t     * support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseSortedUniq(array, iteratee) {\n\t      var index = -1,\n\t          length = array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        if (!index || !eq(computed, seen)) {\n\t          var seen = computed;\n\t          result[resIndex++] = value === 0 ? 0 : value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toNumber` which doesn't ensure correct\n\t     * conversions of binary, hexadecimal, or octal string values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     */\n\t    function baseToNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      return +value;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.toString` which doesn't convert nullish\n\t     * values to empty strings.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to process.\n\t     * @returns {string} Returns the string.\n\t     */\n\t    function baseToString(value) {\n\t      // Exit early for strings to avoid a performance hit in some environments.\n\t      if (typeof value == 'string') {\n\t        return value;\n\t      }\n\t      if (isArray(value)) {\n\t        // Recursively convert values (susceptible to call stack limits).\n\t        return arrayMap(value, baseToString) + '';\n\t      }\n\t      if (isSymbol(value)) {\n\t        return symbolToString ? symbolToString.call(value) : '';\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     */\n\t    function baseUniq(array, iteratee, comparator) {\n\t      var index = -1,\n\t          includes = arrayIncludes,\n\t          length = array.length,\n\t          isCommon = true,\n\t          result = [],\n\t          seen = result;\n\t\n\t      if (comparator) {\n\t        isCommon = false;\n\t        includes = arrayIncludesWith;\n\t      }\n\t      else if (length >= LARGE_ARRAY_SIZE) {\n\t        var set = iteratee ? null : createSet(array);\n\t        if (set) {\n\t          return setToArray(set);\n\t        }\n\t        isCommon = false;\n\t        includes = cacheHas;\n\t        seen = new SetCache;\n\t      }\n\t      else {\n\t        seen = iteratee ? [] : result;\n\t      }\n\t      outer:\n\t      while (++index < length) {\n\t        var value = array[index],\n\t            computed = iteratee ? iteratee(value) : value;\n\t\n\t        value = (comparator || value !== 0) ? value : 0;\n\t        if (isCommon && computed === computed) {\n\t          var seenIndex = seen.length;\n\t          while (seenIndex--) {\n\t            if (seen[seenIndex] === computed) {\n\t              continue outer;\n\t            }\n\t          }\n\t          if (iteratee) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t        else if (!includes(seen, computed, comparator)) {\n\t          if (seen !== result) {\n\t            seen.push(computed);\n\t          }\n\t          result.push(value);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.unset`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The property path to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     */\n\t    function baseUnset(object, path) {\n\t      path = castPath(path, object);\n\t      object = parent(object, path);\n\t      return object == null || delete object[toKey(last(path))];\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `_.update`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to update.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize path creation.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function baseUpdate(object, path, updater, customizer) {\n\t      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n\t     * without support for iteratee shorthands.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} predicate The function invoked per iteration.\n\t     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function baseWhile(array, predicate, isDrop, fromRight) {\n\t      var length = array.length,\n\t          index = fromRight ? length : -1;\n\t\n\t      while ((fromRight ? index-- : ++index < length) &&\n\t        predicate(array[index], index, array)) {}\n\t\n\t      return isDrop\n\t        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n\t        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n\t    }\n\t\n\t    /**\n\t     * The base implementation of `wrapperValue` which returns the result of\n\t     * performing a sequence of actions on the unwrapped `value`, where each\n\t     * successive action is supplied the return value of the previous.\n\t     *\n\t     * @private\n\t     * @param {*} value The unwrapped value.\n\t     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n\t     * @returns {*} Returns the resolved value.\n\t     */\n\t    function baseWrapperValue(value, actions) {\n\t      var result = value;\n\t      if (result instanceof LazyWrapper) {\n\t        result = result.value();\n\t      }\n\t      return arrayReduce(actions, function(result, action) {\n\t        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n\t      }, result);\n\t    }\n\t\n\t    /**\n\t     * The base implementation of methods like `_.xor`, without support for\n\t     * iteratee shorthands, that accepts an array of arrays to inspect.\n\t     *\n\t     * @private\n\t     * @param {Array} arrays The arrays to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of values.\n\t     */\n\t    function baseXor(arrays, iteratee, comparator) {\n\t      var length = arrays.length;\n\t      if (length < 2) {\n\t        return length ? baseUniq(arrays[0]) : [];\n\t      }\n\t      var index = -1,\n\t          result = Array(length);\n\t\n\t      while (++index < length) {\n\t        var array = arrays[index],\n\t            othIndex = -1;\n\t\n\t        while (++othIndex < length) {\n\t          if (othIndex != index) {\n\t            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n\t          }\n\t        }\n\t      }\n\t      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n\t    }\n\t\n\t    /**\n\t     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n\t     *\n\t     * @private\n\t     * @param {Array} props The property identifiers.\n\t     * @param {Array} values The property values.\n\t     * @param {Function} assignFunc The function to assign values.\n\t     * @returns {Object} Returns the new object.\n\t     */\n\t    function baseZipObject(props, values, assignFunc) {\n\t      var index = -1,\n\t          length = props.length,\n\t          valsLength = values.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var value = index < valsLength ? values[index] : undefined;\n\t        assignFunc(result, props[index], value);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to an empty array if it's not an array like object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array|Object} Returns the cast array-like object.\n\t     */\n\t    function castArrayLikeObject(value) {\n\t      return isArrayLikeObject(value) ? value : [];\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to `identity` if it's not a function.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Function} Returns cast function.\n\t     */\n\t    function castFunction(value) {\n\t      return typeof value == 'function' ? value : identity;\n\t    }\n\t\n\t    /**\n\t     * Casts `value` to a path array if it's not one.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {Array} Returns the cast property path array.\n\t     */\n\t    function castPath(value, object) {\n\t      if (isArray(value)) {\n\t        return value;\n\t      }\n\t      return isKey(value, object) ? [value] : stringToPath(toString(value));\n\t    }\n\t\n\t    /**\n\t     * A `baseRest` alias which can be replaced with `identity` by module\n\t     * replacement plugins.\n\t     *\n\t     * @private\n\t     * @type {Function}\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    var castRest = baseRest;\n\t\n\t    /**\n\t     * Casts `array` to a slice if it's needed.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to inspect.\n\t     * @param {number} start The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the cast slice.\n\t     */\n\t    function castSlice(array, start, end) {\n\t      var length = array.length;\n\t      end = end === undefined ? length : end;\n\t      return (!start && end >= length) ? array : baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n\t     *\n\t     * @private\n\t     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n\t     */\n\t    var clearTimeout = ctxClearTimeout || function(id) {\n\t      return root.clearTimeout(id);\n\t    };\n\t\n\t    /**\n\t     * Creates a clone of  `buffer`.\n\t     *\n\t     * @private\n\t     * @param {Buffer} buffer The buffer to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Buffer} Returns the cloned buffer.\n\t     */\n\t    function cloneBuffer(buffer, isDeep) {\n\t      if (isDeep) {\n\t        return buffer.slice();\n\t      }\n\t      var length = buffer.length,\n\t          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\t\n\t      buffer.copy(result);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `arrayBuffer`.\n\t     *\n\t     * @private\n\t     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n\t     * @returns {ArrayBuffer} Returns the cloned array buffer.\n\t     */\n\t    function cloneArrayBuffer(arrayBuffer) {\n\t      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n\t      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `dataView`.\n\t     *\n\t     * @private\n\t     * @param {Object} dataView The data view to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned data view.\n\t     */\n\t    function cloneDataView(dataView, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n\t      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned map.\n\t     */\n\t    function cloneMap(map, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n\t      return arrayReduce(array, addMapEntry, new map.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `regexp`.\n\t     *\n\t     * @private\n\t     * @param {Object} regexp The regexp to clone.\n\t     * @returns {Object} Returns the cloned regexp.\n\t     */\n\t    function cloneRegExp(regexp) {\n\t      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n\t      result.lastIndex = regexp.lastIndex;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `set`.\n\t     *\n\t     * @private\n\t     * @param {Object} set The set to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned set.\n\t     */\n\t    function cloneSet(set, isDeep, cloneFunc) {\n\t      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n\t      return arrayReduce(array, addSetEntry, new set.constructor);\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the `symbol` object.\n\t     *\n\t     * @private\n\t     * @param {Object} symbol The symbol object to clone.\n\t     * @returns {Object} Returns the cloned symbol object.\n\t     */\n\t    function cloneSymbol(symbol) {\n\t      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `typedArray`.\n\t     *\n\t     * @private\n\t     * @param {Object} typedArray The typed array to clone.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the cloned typed array.\n\t     */\n\t    function cloneTypedArray(typedArray, isDeep) {\n\t      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n\t      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n\t    }\n\t\n\t    /**\n\t     * Compares values to sort them in ascending order.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {number} Returns the sort order indicator for `value`.\n\t     */\n\t    function compareAscending(value, other) {\n\t      if (value !== other) {\n\t        var valIsDefined = value !== undefined,\n\t            valIsNull = value === null,\n\t            valIsReflexive = value === value,\n\t            valIsSymbol = isSymbol(value);\n\t\n\t        var othIsDefined = other !== undefined,\n\t            othIsNull = other === null,\n\t            othIsReflexive = other === other,\n\t            othIsSymbol = isSymbol(other);\n\t\n\t        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n\t            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n\t            (valIsNull && othIsDefined && othIsReflexive) ||\n\t            (!valIsDefined && othIsReflexive) ||\n\t            !valIsReflexive) {\n\t          return 1;\n\t        }\n\t        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n\t            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n\t            (othIsNull && valIsDefined && valIsReflexive) ||\n\t            (!othIsDefined && valIsReflexive) ||\n\t            !othIsReflexive) {\n\t          return -1;\n\t        }\n\t      }\n\t      return 0;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.orderBy` to compare multiple properties of a value to another\n\t     * and stable sort them.\n\t     *\n\t     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n\t     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n\t     * of corresponding values.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {boolean[]|string[]} orders The order to sort by for each property.\n\t     * @returns {number} Returns the sort order indicator for `object`.\n\t     */\n\t    function compareMultiple(object, other, orders) {\n\t      var index = -1,\n\t          objCriteria = object.criteria,\n\t          othCriteria = other.criteria,\n\t          length = objCriteria.length,\n\t          ordersLength = orders.length;\n\t\n\t      while (++index < length) {\n\t        var result = compareAscending(objCriteria[index], othCriteria[index]);\n\t        if (result) {\n\t          if (index >= ordersLength) {\n\t            return result;\n\t          }\n\t          var order = orders[index];\n\t          return result * (order == 'desc' ? -1 : 1);\n\t        }\n\t      }\n\t      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n\t      // that causes it, under certain circumstances, to provide the same value for\n\t      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n\t      // for more details.\n\t      //\n\t      // This also ensures a stable sort in V8 and other engines.\n\t      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\t      return object.index - other.index;\n\t    }\n\t\n\t    /**\n\t     * Creates an array that is the composition of partially applied arguments,\n\t     * placeholders, and provided arguments into a single array of arguments.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to prepend to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgs(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersLength = holders.length,\n\t          leftIndex = -1,\n\t          leftLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(leftLength + rangeLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++leftIndex < leftLength) {\n\t        result[leftIndex] = partials[leftIndex];\n\t      }\n\t      while (++argsIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[holders[argsIndex]] = args[argsIndex];\n\t        }\n\t      }\n\t      while (rangeLength--) {\n\t        result[leftIndex++] = args[argsIndex++];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This function is like `composeArgs` except that the arguments composition\n\t     * is tailored for `_.partialRight`.\n\t     *\n\t     * @private\n\t     * @param {Array} args The provided arguments.\n\t     * @param {Array} partials The arguments to append to those provided.\n\t     * @param {Array} holders The `partials` placeholder indexes.\n\t     * @params {boolean} [isCurried] Specify composing for a curried function.\n\t     * @returns {Array} Returns the new array of composed arguments.\n\t     */\n\t    function composeArgsRight(args, partials, holders, isCurried) {\n\t      var argsIndex = -1,\n\t          argsLength = args.length,\n\t          holdersIndex = -1,\n\t          holdersLength = holders.length,\n\t          rightIndex = -1,\n\t          rightLength = partials.length,\n\t          rangeLength = nativeMax(argsLength - holdersLength, 0),\n\t          result = Array(rangeLength + rightLength),\n\t          isUncurried = !isCurried;\n\t\n\t      while (++argsIndex < rangeLength) {\n\t        result[argsIndex] = args[argsIndex];\n\t      }\n\t      var offset = argsIndex;\n\t      while (++rightIndex < rightLength) {\n\t        result[offset + rightIndex] = partials[rightIndex];\n\t      }\n\t      while (++holdersIndex < holdersLength) {\n\t        if (isUncurried || argsIndex < argsLength) {\n\t          result[offset + holders[holdersIndex]] = args[argsIndex++];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Copies the values of `source` to `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} source The array to copy values from.\n\t     * @param {Array} [array=[]] The array to copy values to.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function copyArray(source, array) {\n\t      var index = -1,\n\t          length = source.length;\n\t\n\t      array || (array = Array(length));\n\t      while (++index < length) {\n\t        array[index] = source[index];\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Copies properties of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy properties from.\n\t     * @param {Array} props The property identifiers to copy.\n\t     * @param {Object} [object={}] The object to copy properties to.\n\t     * @param {Function} [customizer] The function to customize copied values.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copyObject(source, props, object, customizer) {\n\t      var isNew = !object;\n\t      object || (object = {});\n\t\n\t      var index = -1,\n\t          length = props.length;\n\t\n\t      while (++index < length) {\n\t        var key = props[index];\n\t\n\t        var newValue = customizer\n\t          ? customizer(object[key], source[key], key, object, source)\n\t          : undefined;\n\t\n\t        if (newValue === undefined) {\n\t          newValue = source[key];\n\t        }\n\t        if (isNew) {\n\t          baseAssignValue(object, key, newValue);\n\t        } else {\n\t          assignValue(object, key, newValue);\n\t        }\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Copies own symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbols(source, object) {\n\t      return copyObject(source, getSymbols(source), object);\n\t    }\n\t\n\t    /**\n\t     * Copies own and inherited symbols of `source` to `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} source The object to copy symbols from.\n\t     * @param {Object} [object={}] The object to copy symbols to.\n\t     * @returns {Object} Returns `object`.\n\t     */\n\t    function copySymbolsIn(source, object) {\n\t      return copyObject(source, getSymbolsIn(source), object);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.groupBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} [initializer] The accumulator object initializer.\n\t     * @returns {Function} Returns the new aggregator function.\n\t     */\n\t    function createAggregator(setter, initializer) {\n\t      return function(collection, iteratee) {\n\t        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n\t            accumulator = initializer ? initializer() : {};\n\t\n\t        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.assign`.\n\t     *\n\t     * @private\n\t     * @param {Function} assigner The function to assign values.\n\t     * @returns {Function} Returns the new assigner function.\n\t     */\n\t    function createAssigner(assigner) {\n\t      return baseRest(function(object, sources) {\n\t        var index = -1,\n\t            length = sources.length,\n\t            customizer = length > 1 ? sources[length - 1] : undefined,\n\t            guard = length > 2 ? sources[2] : undefined;\n\t\n\t        customizer = (assigner.length > 3 && typeof customizer == 'function')\n\t          ? (length--, customizer)\n\t          : undefined;\n\t\n\t        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n\t          customizer = length < 3 ? undefined : customizer;\n\t          length = 1;\n\t        }\n\t        object = Object(object);\n\t        while (++index < length) {\n\t          var source = sources[index];\n\t          if (source) {\n\t            assigner(object, source, index, customizer);\n\t          }\n\t        }\n\t        return object;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a `baseEach` or `baseEachRight` function.\n\t     *\n\t     * @private\n\t     * @param {Function} eachFunc The function to iterate over a collection.\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseEach(eachFunc, fromRight) {\n\t      return function(collection, iteratee) {\n\t        if (collection == null) {\n\t          return collection;\n\t        }\n\t        if (!isArrayLike(collection)) {\n\t          return eachFunc(collection, iteratee);\n\t        }\n\t        var length = collection.length,\n\t            index = fromRight ? length : -1,\n\t            iterable = Object(collection);\n\t\n\t        while ((fromRight ? index-- : ++index < length)) {\n\t          if (iteratee(iterable[index], index, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return collection;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new base function.\n\t     */\n\t    function createBaseFor(fromRight) {\n\t      return function(object, iteratee, keysFunc) {\n\t        var index = -1,\n\t            iterable = Object(object),\n\t            props = keysFunc(object),\n\t            length = props.length;\n\t\n\t        while (length--) {\n\t          var key = props[fromRight ? length : ++index];\n\t          if (iteratee(iterable[key], key, iterable) === false) {\n\t            break;\n\t          }\n\t        }\n\t        return object;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the optional `this`\n\t     * binding of `thisArg`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createBind(func, bitmask, thisArg) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return fn.apply(isBind ? thisArg : this, arguments);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.lowerFirst`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `String` case method to use.\n\t     * @returns {Function} Returns the new case function.\n\t     */\n\t    function createCaseFirst(methodName) {\n\t      return function(string) {\n\t        string = toString(string);\n\t\n\t        var strSymbols = hasUnicode(string)\n\t          ? stringToArray(string)\n\t          : undefined;\n\t\n\t        var chr = strSymbols\n\t          ? strSymbols[0]\n\t          : string.charAt(0);\n\t\n\t        var trailing = strSymbols\n\t          ? castSlice(strSymbols, 1).join('')\n\t          : string.slice(1);\n\t\n\t        return chr[methodName]() + trailing;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.camelCase`.\n\t     *\n\t     * @private\n\t     * @param {Function} callback The function to combine each word.\n\t     * @returns {Function} Returns the new compounder function.\n\t     */\n\t    function createCompounder(callback) {\n\t      return function(string) {\n\t        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that produces an instance of `Ctor` regardless of\n\t     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n\t     *\n\t     * @private\n\t     * @param {Function} Ctor The constructor to wrap.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCtor(Ctor) {\n\t      return function() {\n\t        // Use a `switch` statement to work with class constructors. See\n\t        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n\t        // for more details.\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return new Ctor;\n\t          case 1: return new Ctor(args[0]);\n\t          case 2: return new Ctor(args[0], args[1]);\n\t          case 3: return new Ctor(args[0], args[1], args[2]);\n\t          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n\t          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n\t          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n\t          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n\t        }\n\t        var thisBinding = baseCreate(Ctor.prototype),\n\t            result = Ctor.apply(thisBinding, args);\n\t\n\t        // Mimic the constructor's `return` behavior.\n\t        // See https://es5.github.io/#x13.2.2 for more details.\n\t        return isObject(result) ? result : thisBinding;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to enable currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {number} arity The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createCurry(func, bitmask, arity) {\n\t      var Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length,\n\t            placeholder = getHolder(wrapper);\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n\t          ? []\n\t          : replaceHolders(args, placeholder);\n\t\n\t        length -= holders.length;\n\t        if (length < arity) {\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n\t            args, holders, undefined, undefined, arity - length);\n\t        }\n\t        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t        return apply(fn, this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.find` or `_.findLast` function.\n\t     *\n\t     * @private\n\t     * @param {Function} findIndexFunc The function to find the collection index.\n\t     * @returns {Function} Returns the new find function.\n\t     */\n\t    function createFind(findIndexFunc) {\n\t      return function(collection, predicate, fromIndex) {\n\t        var iterable = Object(collection);\n\t        if (!isArrayLike(collection)) {\n\t          var iteratee = getIteratee(predicate, 3);\n\t          collection = keys(collection);\n\t          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n\t        }\n\t        var index = findIndexFunc(collection, predicate, fromIndex);\n\t        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.flow` or `_.flowRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new flow function.\n\t     */\n\t    function createFlow(fromRight) {\n\t      return flatRest(function(funcs) {\n\t        var length = funcs.length,\n\t            index = length,\n\t            prereq = LodashWrapper.prototype.thru;\n\t\n\t        if (fromRight) {\n\t          funcs.reverse();\n\t        }\n\t        while (index--) {\n\t          var func = funcs[index];\n\t          if (typeof func != 'function') {\n\t            throw new TypeError(FUNC_ERROR_TEXT);\n\t          }\n\t          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n\t            var wrapper = new LodashWrapper([], true);\n\t          }\n\t        }\n\t        index = wrapper ? index : length;\n\t        while (++index < length) {\n\t          func = funcs[index];\n\t\n\t          var funcName = getFuncName(func),\n\t              data = funcName == 'wrapper' ? getData(func) : undefined;\n\t\n\t          if (data && isLaziable(data[0]) &&\n\t                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n\t                !data[4].length && data[9] == 1\n\t              ) {\n\t            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n\t          } else {\n\t            wrapper = (func.length == 1 && isLaziable(func))\n\t              ? wrapper[funcName]()\n\t              : wrapper.thru(func);\n\t          }\n\t        }\n\t        return function() {\n\t          var args = arguments,\n\t              value = args[0];\n\t\n\t          if (wrapper && args.length == 1 && isArray(value)) {\n\t            return wrapper.plant(value).value();\n\t          }\n\t          var index = 0,\n\t              result = length ? funcs[index].apply(this, args) : value;\n\t\n\t          while (++index < length) {\n\t            result = funcs[index].call(this, result);\n\t          }\n\t          return result;\n\t        };\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with optional `this`\n\t     * binding of `thisArg`, partial application, and currying.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [partialsRight] The arguments to append to those provided\n\t     *  to the new function.\n\t     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n\t      var isAry = bitmask & WRAP_ARY_FLAG,\n\t          isBind = bitmask & WRAP_BIND_FLAG,\n\t          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n\t          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n\t          isFlip = bitmask & WRAP_FLIP_FLAG,\n\t          Ctor = isBindKey ? undefined : createCtor(func);\n\t\n\t      function wrapper() {\n\t        var length = arguments.length,\n\t            args = Array(length),\n\t            index = length;\n\t\n\t        while (index--) {\n\t          args[index] = arguments[index];\n\t        }\n\t        if (isCurried) {\n\t          var placeholder = getHolder(wrapper),\n\t              holdersCount = countHolders(args, placeholder);\n\t        }\n\t        if (partials) {\n\t          args = composeArgs(args, partials, holders, isCurried);\n\t        }\n\t        if (partialsRight) {\n\t          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n\t        }\n\t        length -= holdersCount;\n\t        if (isCurried && length < arity) {\n\t          var newHolders = replaceHolders(args, placeholder);\n\t          return createRecurry(\n\t            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n\t            args, newHolders, argPos, ary, arity - length\n\t          );\n\t        }\n\t        var thisBinding = isBind ? thisArg : this,\n\t            fn = isBindKey ? thisBinding[func] : func;\n\t\n\t        length = args.length;\n\t        if (argPos) {\n\t          args = reorder(args, argPos);\n\t        } else if (isFlip && length > 1) {\n\t          args.reverse();\n\t        }\n\t        if (isAry && ary < length) {\n\t          args.length = ary;\n\t        }\n\t        if (this && this !== root && this instanceof wrapper) {\n\t          fn = Ctor || createCtor(fn);\n\t        }\n\t        return fn.apply(thisBinding, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.invertBy`.\n\t     *\n\t     * @private\n\t     * @param {Function} setter The function to set accumulator values.\n\t     * @param {Function} toIteratee The function to resolve iteratees.\n\t     * @returns {Function} Returns the new inverter function.\n\t     */\n\t    function createInverter(setter, toIteratee) {\n\t      return function(object, iteratee) {\n\t        return baseInverter(object, setter, toIteratee(iteratee), {});\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a mathematical operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @param {number} [defaultValue] The value used for `undefined` arguments.\n\t     * @returns {Function} Returns the new mathematical operation function.\n\t     */\n\t    function createMathOperation(operator, defaultValue) {\n\t      return function(value, other) {\n\t        var result;\n\t        if (value === undefined && other === undefined) {\n\t          return defaultValue;\n\t        }\n\t        if (value !== undefined) {\n\t          result = value;\n\t        }\n\t        if (other !== undefined) {\n\t          if (result === undefined) {\n\t            return other;\n\t          }\n\t          if (typeof value == 'string' || typeof other == 'string') {\n\t            value = baseToString(value);\n\t            other = baseToString(other);\n\t          } else {\n\t            value = baseToNumber(value);\n\t            other = baseToNumber(other);\n\t          }\n\t          result = operator(value, other);\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.over`.\n\t     *\n\t     * @private\n\t     * @param {Function} arrayFunc The function to iterate over iteratees.\n\t     * @returns {Function} Returns the new over function.\n\t     */\n\t    function createOver(arrayFunc) {\n\t      return flatRest(function(iteratees) {\n\t        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n\t        return baseRest(function(args) {\n\t          var thisArg = this;\n\t          return arrayFunc(iteratees, function(iteratee) {\n\t            return apply(iteratee, thisArg, args);\n\t          });\n\t        });\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates the padding for `string` based on `length`. The `chars` string\n\t     * is truncated if the number of characters exceeds `length`.\n\t     *\n\t     * @private\n\t     * @param {number} length The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padding for `string`.\n\t     */\n\t    function createPadding(length, chars) {\n\t      chars = chars === undefined ? ' ' : baseToString(chars);\n\t\n\t      var charsLength = chars.length;\n\t      if (charsLength < 2) {\n\t        return charsLength ? baseRepeat(chars, length) : chars;\n\t      }\n\t      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n\t      return hasUnicode(chars)\n\t        ? castSlice(stringToArray(result), 0, length).join('')\n\t        : result.slice(0, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to invoke it with the `this` binding\n\t     * of `thisArg` and `partials` prepended to the arguments it receives.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {Array} partials The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createPartial(func, bitmask, thisArg, partials) {\n\t      var isBind = bitmask & WRAP_BIND_FLAG,\n\t          Ctor = createCtor(func);\n\t\n\t      function wrapper() {\n\t        var argsIndex = -1,\n\t            argsLength = arguments.length,\n\t            leftIndex = -1,\n\t            leftLength = partials.length,\n\t            args = Array(leftLength + argsLength),\n\t            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\t\n\t        while (++leftIndex < leftLength) {\n\t          args[leftIndex] = partials[leftIndex];\n\t        }\n\t        while (argsLength--) {\n\t          args[leftIndex++] = arguments[++argsIndex];\n\t        }\n\t        return apply(fn, isBind ? thisArg : this, args);\n\t      }\n\t      return wrapper;\n\t    }\n\t\n\t    /**\n\t     * Creates a `_.range` or `_.rangeRight` function.\n\t     *\n\t     * @private\n\t     * @param {boolean} [fromRight] Specify iterating from right to left.\n\t     * @returns {Function} Returns the new range function.\n\t     */\n\t    function createRange(fromRight) {\n\t      return function(start, end, step) {\n\t        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n\t          end = step = undefined;\n\t        }\n\t        // Ensure the sign of `-0` is preserved.\n\t        start = toFinite(start);\n\t        if (end === undefined) {\n\t          end = start;\n\t          start = 0;\n\t        } else {\n\t          end = toFinite(end);\n\t        }\n\t        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n\t        return baseRange(start, end, step, fromRight);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a relational operation on two values.\n\t     *\n\t     * @private\n\t     * @param {Function} operator The function to perform the operation.\n\t     * @returns {Function} Returns the new relational operation function.\n\t     */\n\t    function createRelationalOperation(operator) {\n\t      return function(value, other) {\n\t        if (!(typeof value == 'string' && typeof other == 'string')) {\n\t          value = toNumber(value);\n\t          other = toNumber(other);\n\t        }\n\t        return operator(value, other);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that wraps `func` to continue currying.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to wrap.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @param {Function} wrapFunc The function to create the `func` wrapper.\n\t     * @param {*} placeholder The placeholder value.\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to prepend to those provided to\n\t     *  the new function.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isCurry = bitmask & WRAP_CURRY_FLAG,\n\t          newHolders = isCurry ? holders : undefined,\n\t          newHoldersRight = isCurry ? undefined : holders,\n\t          newPartials = isCurry ? partials : undefined,\n\t          newPartialsRight = isCurry ? undefined : partials;\n\t\n\t      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n\t      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\t\n\t      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n\t        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n\t      }\n\t      var newData = [\n\t        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n\t        newHoldersRight, argPos, ary, arity\n\t      ];\n\t\n\t      var result = wrapFunc.apply(undefined, newData);\n\t      if (isLaziable(func)) {\n\t        setData(result, newData);\n\t      }\n\t      result.placeholder = placeholder;\n\t      return setWrapToString(result, func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Creates a function like `_.round`.\n\t     *\n\t     * @private\n\t     * @param {string} methodName The name of the `Math` method to use when rounding.\n\t     * @returns {Function} Returns the new round function.\n\t     */\n\t    function createRound(methodName) {\n\t      var func = Math[methodName];\n\t      return function(number, precision) {\n\t        number = toNumber(number);\n\t        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n\t        if (precision) {\n\t          // Shift with exponential notation to avoid floating-point issues.\n\t          // See [MDN](https://mdn.io/round#Examples) for more details.\n\t          var pair = (toString(number) + 'e').split('e'),\n\t              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\t\n\t          pair = (toString(value) + 'e').split('e');\n\t          return +(pair[0] + 'e' + (+pair[1] - precision));\n\t        }\n\t        return func(number);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a set object of `values`.\n\t     *\n\t     * @private\n\t     * @param {Array} values The values to add to the set.\n\t     * @returns {Object} Returns the new set.\n\t     */\n\t    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n\t      return new Set(values);\n\t    };\n\t\n\t    /**\n\t     * Creates a `_.toPairs` or `_.toPairsIn` function.\n\t     *\n\t     * @private\n\t     * @param {Function} keysFunc The function to get the keys of a given object.\n\t     * @returns {Function} Returns the new pairs function.\n\t     */\n\t    function createToPairs(keysFunc) {\n\t      return function(object) {\n\t        var tag = getTag(object);\n\t        if (tag == mapTag) {\n\t          return mapToArray(object);\n\t        }\n\t        if (tag == setTag) {\n\t          return setToPairs(object);\n\t        }\n\t        return baseToPairs(object, keysFunc(object));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that either curries or invokes `func` with optional\n\t     * `this` binding and partially applied arguments.\n\t     *\n\t     * @private\n\t     * @param {Function|string} func The function or method name to wrap.\n\t     * @param {number} bitmask The bitmask flags.\n\t     *    1 - `_.bind`\n\t     *    2 - `_.bindKey`\n\t     *    4 - `_.curry` or `_.curryRight` of a bound function\n\t     *    8 - `_.curry`\n\t     *   16 - `_.curryRight`\n\t     *   32 - `_.partial`\n\t     *   64 - `_.partialRight`\n\t     *  128 - `_.rearg`\n\t     *  256 - `_.ary`\n\t     *  512 - `_.flip`\n\t     * @param {*} [thisArg] The `this` binding of `func`.\n\t     * @param {Array} [partials] The arguments to be partially applied.\n\t     * @param {Array} [holders] The `partials` placeholder indexes.\n\t     * @param {Array} [argPos] The argument positions of the new function.\n\t     * @param {number} [ary] The arity cap of `func`.\n\t     * @param {number} [arity] The arity of `func`.\n\t     * @returns {Function} Returns the new wrapped function.\n\t     */\n\t    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n\t      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n\t      if (!isBindKey && typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var length = partials ? partials.length : 0;\n\t      if (!length) {\n\t        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n\t        partials = holders = undefined;\n\t      }\n\t      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n\t      arity = arity === undefined ? arity : toInteger(arity);\n\t      length -= holders ? holders.length : 0;\n\t\n\t      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n\t        var partialsRight = partials,\n\t            holdersRight = holders;\n\t\n\t        partials = holders = undefined;\n\t      }\n\t      var data = isBindKey ? undefined : getData(func);\n\t\n\t      var newData = [\n\t        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n\t        argPos, ary, arity\n\t      ];\n\t\n\t      if (data) {\n\t        mergeData(newData, data);\n\t      }\n\t      func = newData[0];\n\t      bitmask = newData[1];\n\t      thisArg = newData[2];\n\t      partials = newData[3];\n\t      holders = newData[4];\n\t      arity = newData[9] = newData[9] === undefined\n\t        ? (isBindKey ? 0 : func.length)\n\t        : nativeMax(newData[9] - length, 0);\n\t\n\t      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n\t        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n\t      }\n\t      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n\t        var result = createBind(func, bitmask, thisArg);\n\t      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n\t        result = createCurry(func, bitmask, arity);\n\t      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n\t        result = createPartial(func, bitmask, thisArg, partials);\n\t      } else {\n\t        result = createHybrid.apply(undefined, newData);\n\t      }\n\t      var setter = data ? baseSetData : setData;\n\t      return setWrapToString(setter(result, newData), func, bitmask);\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n\t     * of source objects to the destination object for all destination properties\n\t     * that resolve to `undefined`.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to assign.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n\t      if (objValue === undefined ||\n\t          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n\t        return srcValue;\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n\t     * objects into destination objects that are passed thru.\n\t     *\n\t     * @private\n\t     * @param {*} objValue The destination value.\n\t     * @param {*} srcValue The source value.\n\t     * @param {string} key The key of the property to merge.\n\t     * @param {Object} object The parent object of `objValue`.\n\t     * @param {Object} source The parent object of `srcValue`.\n\t     * @param {Object} [stack] Tracks traversed source values and their merged\n\t     *  counterparts.\n\t     * @returns {*} Returns the value to assign.\n\t     */\n\t    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n\t      if (isObject(objValue) && isObject(srcValue)) {\n\t        // Recursively merge objects and arrays (susceptible to call stack limits).\n\t        stack.set(srcValue, objValue);\n\t        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n\t        stack['delete'](srcValue);\n\t      }\n\t      return objValue;\n\t    }\n\t\n\t    /**\n\t     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n\t     * objects.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @param {string} key The key of the property to inspect.\n\t     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n\t     */\n\t    function customOmitClone(value) {\n\t      return isPlainObject(value) ? undefined : value;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for arrays with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to compare.\n\t     * @param {Array} other The other array to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `array` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n\t     */\n\t    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          arrLength = array.length,\n\t          othLength = other.length;\n\t\n\t      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n\t        return false;\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(array);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var index = -1,\n\t          result = true,\n\t          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\t\n\t      stack.set(array, other);\n\t      stack.set(other, array);\n\t\n\t      // Ignore non-index properties.\n\t      while (++index < arrLength) {\n\t        var arrValue = array[index],\n\t            othValue = other[index];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, arrValue, index, other, array, stack)\n\t            : customizer(arrValue, othValue, index, array, other, stack);\n\t        }\n\t        if (compared !== undefined) {\n\t          if (compared) {\n\t            continue;\n\t          }\n\t          result = false;\n\t          break;\n\t        }\n\t        // Recursively compare arrays (susceptible to call stack limits).\n\t        if (seen) {\n\t          if (!arraySome(other, function(othValue, othIndex) {\n\t                if (!cacheHas(seen, othIndex) &&\n\t                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n\t                  return seen.push(othIndex);\n\t                }\n\t              })) {\n\t            result = false;\n\t            break;\n\t          }\n\t        } else if (!(\n\t              arrValue === othValue ||\n\t                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t      }\n\t      stack['delete'](array);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for comparing objects of\n\t     * the same `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports comparing values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {string} tag The `toStringTag` of the objects to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n\t      switch (tag) {\n\t        case dataViewTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              (object.byteOffset != other.byteOffset)) {\n\t            return false;\n\t          }\n\t          object = object.buffer;\n\t          other = other.buffer;\n\t\n\t        case arrayBufferTag:\n\t          if ((object.byteLength != other.byteLength) ||\n\t              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n\t            return false;\n\t          }\n\t          return true;\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t        case numberTag:\n\t          // Coerce booleans to `1` or `0` and dates to milliseconds.\n\t          // Invalid dates are coerced to `NaN`.\n\t          return eq(+object, +other);\n\t\n\t        case errorTag:\n\t          return object.name == other.name && object.message == other.message;\n\t\n\t        case regexpTag:\n\t        case stringTag:\n\t          // Coerce regexes to strings and treat strings, primitives and objects,\n\t          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n\t          // for more details.\n\t          return object == (other + '');\n\t\n\t        case mapTag:\n\t          var convert = mapToArray;\n\t\n\t        case setTag:\n\t          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n\t          convert || (convert = setToArray);\n\t\n\t          if (object.size != other.size && !isPartial) {\n\t            return false;\n\t          }\n\t          // Assume cyclic values are equal.\n\t          var stacked = stack.get(object);\n\t          if (stacked) {\n\t            return stacked == other;\n\t          }\n\t          bitmask |= COMPARE_UNORDERED_FLAG;\n\t\n\t          // Recursively compare objects (susceptible to call stack limits).\n\t          stack.set(object, other);\n\t          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n\t          stack['delete'](object);\n\t          return result;\n\t\n\t        case symbolTag:\n\t          if (symbolValueOf) {\n\t            return symbolValueOf.call(object) == symbolValueOf.call(other);\n\t          }\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseIsEqualDeep` for objects with support for\n\t     * partial deep comparisons.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to compare.\n\t     * @param {Object} other The other object to compare.\n\t     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n\t     * @param {Function} customizer The function to customize comparisons.\n\t     * @param {Function} equalFunc The function to determine equivalents of values.\n\t     * @param {Object} stack Tracks traversed `object` and `other` objects.\n\t     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n\t     */\n\t    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n\t      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n\t          objProps = getAllKeys(object),\n\t          objLength = objProps.length,\n\t          othProps = getAllKeys(other),\n\t          othLength = othProps.length;\n\t\n\t      if (objLength != othLength && !isPartial) {\n\t        return false;\n\t      }\n\t      var index = objLength;\n\t      while (index--) {\n\t        var key = objProps[index];\n\t        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n\t          return false;\n\t        }\n\t      }\n\t      // Assume cyclic values are equal.\n\t      var stacked = stack.get(object);\n\t      if (stacked && stack.get(other)) {\n\t        return stacked == other;\n\t      }\n\t      var result = true;\n\t      stack.set(object, other);\n\t      stack.set(other, object);\n\t\n\t      var skipCtor = isPartial;\n\t      while (++index < objLength) {\n\t        key = objProps[index];\n\t        var objValue = object[key],\n\t            othValue = other[key];\n\t\n\t        if (customizer) {\n\t          var compared = isPartial\n\t            ? customizer(othValue, objValue, key, other, object, stack)\n\t            : customizer(objValue, othValue, key, object, other, stack);\n\t        }\n\t        // Recursively compare objects (susceptible to call stack limits).\n\t        if (!(compared === undefined\n\t              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n\t              : compared\n\t            )) {\n\t          result = false;\n\t          break;\n\t        }\n\t        skipCtor || (skipCtor = key == 'constructor');\n\t      }\n\t      if (result && !skipCtor) {\n\t        var objCtor = object.constructor,\n\t            othCtor = other.constructor;\n\t\n\t        // Non `Object` object instances with different constructors are not equal.\n\t        if (objCtor != othCtor &&\n\t            ('constructor' in object && 'constructor' in other) &&\n\t            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n\t              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n\t          result = false;\n\t        }\n\t      }\n\t      stack['delete'](object);\n\t      stack['delete'](other);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which flattens the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function flatRest(func) {\n\t      return setToString(overRest(func, undefined, flatten), func + '');\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable property names and symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeys(object) {\n\t      return baseGetAllKeys(object, keys, getSymbols);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable property names and\n\t     * symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names and symbols.\n\t     */\n\t    function getAllKeysIn(object) {\n\t      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n\t    }\n\t\n\t    /**\n\t     * Gets metadata for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {*} Returns the metadata for `func`.\n\t     */\n\t    var getData = !metaMap ? noop : function(func) {\n\t      return metaMap.get(func);\n\t    };\n\t\n\t    /**\n\t     * Gets the name of `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to query.\n\t     * @returns {string} Returns the function name.\n\t     */\n\t    function getFuncName(func) {\n\t      var result = (func.name + ''),\n\t          array = realNames[result],\n\t          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\t\n\t      while (length--) {\n\t        var data = array[length],\n\t            otherFunc = data.func;\n\t        if (otherFunc == null || otherFunc == func) {\n\t          return data.name;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the argument placeholder value for `func`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to inspect.\n\t     * @returns {*} Returns the placeholder value.\n\t     */\n\t    function getHolder(func) {\n\t      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n\t      return object.placeholder;\n\t    }\n\t\n\t    /**\n\t     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n\t     * this function returns the custom method, otherwise it returns `baseIteratee`.\n\t     * If arguments are provided, the chosen function is invoked with them and\n\t     * its result is returned.\n\t     *\n\t     * @private\n\t     * @param {*} [value] The value to convert to an iteratee.\n\t     * @param {number} [arity] The arity of the created iteratee.\n\t     * @returns {Function} Returns the chosen function or its result.\n\t     */\n\t    function getIteratee() {\n\t      var result = lodash.iteratee || iteratee;\n\t      result = result === iteratee ? baseIteratee : result;\n\t      return arguments.length ? result(arguments[0], arguments[1]) : result;\n\t    }\n\t\n\t    /**\n\t     * Gets the data for `map`.\n\t     *\n\t     * @private\n\t     * @param {Object} map The map to query.\n\t     * @param {string} key The reference key.\n\t     * @returns {*} Returns the map data.\n\t     */\n\t    function getMapData(map, key) {\n\t      var data = map.__data__;\n\t      return isKeyable(key)\n\t        ? data[typeof key == 'string' ? 'string' : 'hash']\n\t        : data.map;\n\t    }\n\t\n\t    /**\n\t     * Gets the property names, values, and compare flags of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the match data of `object`.\n\t     */\n\t    function getMatchData(object) {\n\t      var result = keys(object),\n\t          length = result.length;\n\t\n\t      while (length--) {\n\t        var key = result[length],\n\t            value = object[key];\n\t\n\t        result[length] = [key, value, isStrictComparable(value)];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the native function at `key` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {string} key The key of the method to get.\n\t     * @returns {*} Returns the function if it's native, else `undefined`.\n\t     */\n\t    function getNative(object, key) {\n\t      var value = getValue(object, key);\n\t      return baseIsNative(value) ? value : undefined;\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the raw `toStringTag`.\n\t     */\n\t    function getRawTag(value) {\n\t      var isOwn = hasOwnProperty.call(value, symToStringTag),\n\t          tag = value[symToStringTag];\n\t\n\t      try {\n\t        value[symToStringTag] = undefined;\n\t        var unmasked = true;\n\t      } catch (e) {}\n\t\n\t      var result = nativeObjectToString.call(value);\n\t      if (unmasked) {\n\t        if (isOwn) {\n\t          value[symToStringTag] = tag;\n\t        } else {\n\t          delete value[symToStringTag];\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n\t      if (object == null) {\n\t        return [];\n\t      }\n\t      object = Object(object);\n\t      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n\t        return propertyIsEnumerable.call(object, symbol);\n\t      });\n\t    };\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable symbols of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of symbols.\n\t     */\n\t    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n\t      var result = [];\n\t      while (object) {\n\t        arrayPush(result, getSymbols(object));\n\t        object = getPrototype(object);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    /**\n\t     * Gets the `toStringTag` of `value`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to query.\n\t     * @returns {string} Returns the `toStringTag`.\n\t     */\n\t    var getTag = baseGetTag;\n\t\n\t    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\t    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n\t        (Map && getTag(new Map) != mapTag) ||\n\t        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n\t        (Set && getTag(new Set) != setTag) ||\n\t        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n\t      getTag = function(value) {\n\t        var result = baseGetTag(value),\n\t            Ctor = result == objectTag ? value.constructor : undefined,\n\t            ctorString = Ctor ? toSource(Ctor) : '';\n\t\n\t        if (ctorString) {\n\t          switch (ctorString) {\n\t            case dataViewCtorString: return dataViewTag;\n\t            case mapCtorString: return mapTag;\n\t            case promiseCtorString: return promiseTag;\n\t            case setCtorString: return setTag;\n\t            case weakMapCtorString: return weakMapTag;\n\t          }\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n\t     *\n\t     * @private\n\t     * @param {number} start The start of the view.\n\t     * @param {number} end The end of the view.\n\t     * @param {Array} transforms The transformations to apply to the view.\n\t     * @returns {Object} Returns an object containing the `start` and `end`\n\t     *  positions of the view.\n\t     */\n\t    function getView(start, end, transforms) {\n\t      var index = -1,\n\t          length = transforms.length;\n\t\n\t      while (++index < length) {\n\t        var data = transforms[index],\n\t            size = data.size;\n\t\n\t        switch (data.type) {\n\t          case 'drop':      start += size; break;\n\t          case 'dropRight': end -= size; break;\n\t          case 'take':      end = nativeMin(end, start + size); break;\n\t          case 'takeRight': start = nativeMax(start, end - size); break;\n\t        }\n\t      }\n\t      return { 'start': start, 'end': end };\n\t    }\n\t\n\t    /**\n\t     * Extracts wrapper details from the `source` body comment.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to inspect.\n\t     * @returns {Array} Returns the wrapper details.\n\t     */\n\t    function getWrapDetails(source) {\n\t      var match = source.match(reWrapDetails);\n\t      return match ? match[1].split(reSplitDetails) : [];\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` exists on `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @param {Function} hasFunc The function to check properties.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     */\n\t    function hasPath(object, path, hasFunc) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length,\n\t          result = false;\n\t\n\t      while (++index < length) {\n\t        var key = toKey(path[index]);\n\t        if (!(result = object != null && hasFunc(object, key))) {\n\t          break;\n\t        }\n\t        object = object[key];\n\t      }\n\t      if (result || ++index != length) {\n\t        return result;\n\t      }\n\t      length = object == null ? 0 : object.length;\n\t      return !!length && isLength(length) && isIndex(key, length) &&\n\t        (isArray(object) || isArguments(object));\n\t    }\n\t\n\t    /**\n\t     * Initializes an array clone.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to clone.\n\t     * @returns {Array} Returns the initialized clone.\n\t     */\n\t    function initCloneArray(array) {\n\t      var length = array.length,\n\t          result = array.constructor(length);\n\t\n\t      // Add properties assigned by `RegExp#exec`.\n\t      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n\t        result.index = array.index;\n\t        result.input = array.input;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneObject(object) {\n\t      return (typeof object.constructor == 'function' && !isPrototype(object))\n\t        ? baseCreate(getPrototype(object))\n\t        : {};\n\t    }\n\t\n\t    /**\n\t     * Initializes an object clone based on its `toStringTag`.\n\t     *\n\t     * **Note:** This function only supports cloning values with tags of\n\t     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to clone.\n\t     * @param {string} tag The `toStringTag` of the object to clone.\n\t     * @param {Function} cloneFunc The function to clone values.\n\t     * @param {boolean} [isDeep] Specify a deep clone.\n\t     * @returns {Object} Returns the initialized clone.\n\t     */\n\t    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n\t      var Ctor = object.constructor;\n\t      switch (tag) {\n\t        case arrayBufferTag:\n\t          return cloneArrayBuffer(object);\n\t\n\t        case boolTag:\n\t        case dateTag:\n\t          return new Ctor(+object);\n\t\n\t        case dataViewTag:\n\t          return cloneDataView(object, isDeep);\n\t\n\t        case float32Tag: case float64Tag:\n\t        case int8Tag: case int16Tag: case int32Tag:\n\t        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n\t          return cloneTypedArray(object, isDeep);\n\t\n\t        case mapTag:\n\t          return cloneMap(object, isDeep, cloneFunc);\n\t\n\t        case numberTag:\n\t        case stringTag:\n\t          return new Ctor(object);\n\t\n\t        case regexpTag:\n\t          return cloneRegExp(object);\n\t\n\t        case setTag:\n\t          return cloneSet(object, isDeep, cloneFunc);\n\t\n\t        case symbolTag:\n\t          return cloneSymbol(object);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Inserts wrapper `details` in a comment at the top of the `source` body.\n\t     *\n\t     * @private\n\t     * @param {string} source The source to modify.\n\t     * @returns {Array} details The details to insert.\n\t     * @returns {string} Returns the modified source.\n\t     */\n\t    function insertWrapDetails(source, details) {\n\t      var length = details.length;\n\t      if (!length) {\n\t        return source;\n\t      }\n\t      var lastIndex = length - 1;\n\t      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n\t      details = details.join(length > 2 ? ', ' : ' ');\n\t      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a flattenable `arguments` object or array.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n\t     */\n\t    function isFlattenable(value) {\n\t      return isArray(value) || isArguments(value) ||\n\t        !!(spreadableSymbol && value && value[spreadableSymbol]);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like index.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n\t     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n\t     */\n\t    function isIndex(value, length) {\n\t      length = length == null ? MAX_SAFE_INTEGER : length;\n\t      return !!length &&\n\t        (typeof value == 'number' || reIsUint.test(value)) &&\n\t        (value > -1 && value % 1 == 0 && value < length);\n\t    }\n\t\n\t    /**\n\t     * Checks if the given arguments are from an iteratee call.\n\t     *\n\t     * @private\n\t     * @param {*} value The potential iteratee value argument.\n\t     * @param {*} index The potential iteratee index or key argument.\n\t     * @param {*} object The potential iteratee object argument.\n\t     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n\t     *  else `false`.\n\t     */\n\t    function isIterateeCall(value, index, object) {\n\t      if (!isObject(object)) {\n\t        return false;\n\t      }\n\t      var type = typeof index;\n\t      if (type == 'number'\n\t            ? (isArrayLike(object) && isIndex(index, object.length))\n\t            : (type == 'string' && index in object)\n\t          ) {\n\t        return eq(object[index], value);\n\t      }\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a property name and not a property path.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @param {Object} [object] The object to query keys on.\n\t     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n\t     */\n\t    function isKey(value, object) {\n\t      if (isArray(value)) {\n\t        return false;\n\t      }\n\t      var type = typeof value;\n\t      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n\t          value == null || isSymbol(value)) {\n\t        return true;\n\t      }\n\t      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n\t        (object != null && value in Object(object));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for use as unique object key.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n\t     */\n\t    function isKeyable(value) {\n\t      var type = typeof value;\n\t      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n\t        ? (value !== '__proto__')\n\t        : (value === null);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has a lazy counterpart.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n\t     *  else `false`.\n\t     */\n\t    function isLaziable(func) {\n\t      var funcName = getFuncName(func),\n\t          other = lodash[funcName];\n\t\n\t      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n\t        return false;\n\t      }\n\t      if (func === other) {\n\t        return true;\n\t      }\n\t      var data = getData(other);\n\t      return !!data && func === data[0];\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` has its source masked.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to check.\n\t     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n\t     */\n\t    function isMasked(func) {\n\t      return !!maskSrcKey && (maskSrcKey in func);\n\t    }\n\t\n\t    /**\n\t     * Checks if `func` is capable of being masked.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n\t     */\n\t    var isMaskable = coreJsData ? isFunction : stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is likely a prototype object.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n\t     */\n\t    function isPrototype(value) {\n\t      var Ctor = value && value.constructor,\n\t          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\t\n\t      return value === proto;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` if suitable for strict\n\t     *  equality comparisons, else `false`.\n\t     */\n\t    function isStrictComparable(value) {\n\t      return value === value && !isObject(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `matchesProperty` for source values suitable\n\t     * for strict equality comparisons, i.e. `===`.\n\t     *\n\t     * @private\n\t     * @param {string} key The key of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     */\n\t    function matchesStrictComparable(key, srcValue) {\n\t      return function(object) {\n\t        if (object == null) {\n\t          return false;\n\t        }\n\t        return object[key] === srcValue &&\n\t          (srcValue !== undefined || (key in Object(object)));\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.memoize` which clears the memoized function's\n\t     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @returns {Function} Returns the new memoized function.\n\t     */\n\t    function memoizeCapped(func) {\n\t      var result = memoize(func, function(key) {\n\t        if (cache.size === MAX_MEMOIZE_SIZE) {\n\t          cache.clear();\n\t        }\n\t        return key;\n\t      });\n\t\n\t      var cache = result.cache;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Merges the function metadata of `source` into `data`.\n\t     *\n\t     * Merging metadata reduces the number of wrappers used to invoke a function.\n\t     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n\t     * may be applied regardless of execution order. Methods like `_.ary` and\n\t     * `_.rearg` modify function arguments, making the order in which they are\n\t     * executed important, preventing the merging of metadata. However, we make\n\t     * an exception for a safe combined case where curried functions have `_.ary`\n\t     * and or `_.rearg` applied.\n\t     *\n\t     * @private\n\t     * @param {Array} data The destination metadata.\n\t     * @param {Array} source The source metadata.\n\t     * @returns {Array} Returns `data`.\n\t     */\n\t    function mergeData(data, source) {\n\t      var bitmask = data[1],\n\t          srcBitmask = source[1],\n\t          newBitmask = bitmask | srcBitmask,\n\t          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\t\n\t      var isCombo =\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n\t        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n\t        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\t\n\t      // Exit early if metadata can't be merged.\n\t      if (!(isCommon || isCombo)) {\n\t        return data;\n\t      }\n\t      // Use source `thisArg` if available.\n\t      if (srcBitmask & WRAP_BIND_FLAG) {\n\t        data[2] = source[2];\n\t        // Set when currying a bound function.\n\t        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n\t      }\n\t      // Compose partial arguments.\n\t      var value = source[3];\n\t      if (value) {\n\t        var partials = data[3];\n\t        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n\t        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n\t      }\n\t      // Compose partial right arguments.\n\t      value = source[5];\n\t      if (value) {\n\t        partials = data[5];\n\t        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n\t        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n\t      }\n\t      // Use source `argPos` if available.\n\t      value = source[7];\n\t      if (value) {\n\t        data[7] = value;\n\t      }\n\t      // Use source `ary` if it's smaller.\n\t      if (srcBitmask & WRAP_ARY_FLAG) {\n\t        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n\t      }\n\t      // Use source `arity` if one is not provided.\n\t      if (data[9] == null) {\n\t        data[9] = source[9];\n\t      }\n\t      // Use source `func` and merge bitmasks.\n\t      data[0] = source[0];\n\t      data[1] = newBitmask;\n\t\n\t      return data;\n\t    }\n\t\n\t    /**\n\t     * This function is like\n\t     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * except that it includes inherited enumerable properties.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     */\n\t    function nativeKeysIn(object) {\n\t      var result = [];\n\t      if (object != null) {\n\t        for (var key in Object(object)) {\n\t          result.push(key);\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string using `Object.prototype.toString`.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     */\n\t    function objectToString(value) {\n\t      return nativeObjectToString.call(value);\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `baseRest` which transforms the rest array.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @param {Function} transform The rest array transform.\n\t     * @returns {Function} Returns the new function.\n\t     */\n\t    function overRest(func, start, transform) {\n\t      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n\t      return function() {\n\t        var args = arguments,\n\t            index = -1,\n\t            length = nativeMax(args.length - start, 0),\n\t            array = Array(length);\n\t\n\t        while (++index < length) {\n\t          array[index] = args[start + index];\n\t        }\n\t        index = -1;\n\t        var otherArgs = Array(start + 1);\n\t        while (++index < start) {\n\t          otherArgs[index] = args[index];\n\t        }\n\t        otherArgs[start] = transform(array);\n\t        return apply(func, this, otherArgs);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Gets the parent value at `path` of `object`.\n\t     *\n\t     * @private\n\t     * @param {Object} object The object to query.\n\t     * @param {Array} path The path to get the parent value of.\n\t     * @returns {*} Returns the parent value.\n\t     */\n\t    function parent(object, path) {\n\t      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n\t    }\n\t\n\t    /**\n\t     * Reorder `array` according to the specified indexes where the element at\n\t     * the first index is assigned as the first element, the element at\n\t     * the second index is assigned as the second element, and so on.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to reorder.\n\t     * @param {Array} indexes The arranged array indexes.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function reorder(array, indexes) {\n\t      var arrLength = array.length,\n\t          length = nativeMin(indexes.length, arrLength),\n\t          oldArray = copyArray(array);\n\t\n\t      while (length--) {\n\t        var index = indexes[length];\n\t        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n\t      }\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Sets metadata for `func`.\n\t     *\n\t     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n\t     * period of time, it will trip its breaker and transition to an identity\n\t     * function to avoid garbage collection pauses in V8. See\n\t     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n\t     * for more details.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to associate metadata with.\n\t     * @param {*} data The metadata.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setData = shortOut(baseSetData);\n\t\n\t    /**\n\t     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @returns {number|Object} Returns the timer id or timeout object.\n\t     */\n\t    var setTimeout = ctxSetTimeout || function(func, wait) {\n\t      return root.setTimeout(func, wait);\n\t    };\n\t\n\t    /**\n\t     * Sets the `toString` method of `func` to return `string`.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to modify.\n\t     * @param {Function} string The `toString` result.\n\t     * @returns {Function} Returns `func`.\n\t     */\n\t    var setToString = shortOut(baseSetToString);\n\t\n\t    /**\n\t     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n\t     * with wrapper details in a comment at the top of the source body.\n\t     *\n\t     * @private\n\t     * @param {Function} wrapper The function to modify.\n\t     * @param {Function} reference The reference function.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Function} Returns `wrapper`.\n\t     */\n\t    function setWrapToString(wrapper, reference, bitmask) {\n\t      var source = (reference + '');\n\t      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that'll short out and invoke `identity` instead\n\t     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n\t     * milliseconds.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new shortable function.\n\t     */\n\t    function shortOut(func) {\n\t      var count = 0,\n\t          lastCalled = 0;\n\t\n\t      return function() {\n\t        var stamp = nativeNow(),\n\t            remaining = HOT_SPAN - (stamp - lastCalled);\n\t\n\t        lastCalled = stamp;\n\t        if (remaining > 0) {\n\t          if (++count >= HOT_COUNT) {\n\t            return arguments[0];\n\t          }\n\t        } else {\n\t          count = 0;\n\t        }\n\t        return func.apply(undefined, arguments);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n\t     *\n\t     * @private\n\t     * @param {Array} array The array to shuffle.\n\t     * @param {number} [size=array.length] The size of `array`.\n\t     * @returns {Array} Returns `array`.\n\t     */\n\t    function shuffleSelf(array, size) {\n\t      var index = -1,\n\t          length = array.length,\n\t          lastIndex = length - 1;\n\t\n\t      size = size === undefined ? length : size;\n\t      while (++index < size) {\n\t        var rand = baseRandom(index, lastIndex),\n\t            value = array[rand];\n\t\n\t        array[rand] = array[index];\n\t        array[index] = value;\n\t      }\n\t      array.length = size;\n\t      return array;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to a property path array.\n\t     *\n\t     * @private\n\t     * @param {string} string The string to convert.\n\t     * @returns {Array} Returns the property path array.\n\t     */\n\t    var stringToPath = memoizeCapped(function(string) {\n\t      var result = [];\n\t      if (reLeadingDot.test(string)) {\n\t        result.push('');\n\t      }\n\t      string.replace(rePropName, function(match, number, quote, string) {\n\t        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to a string key if it's not a string or symbol.\n\t     *\n\t     * @private\n\t     * @param {*} value The value to inspect.\n\t     * @returns {string|symbol} Returns the key.\n\t     */\n\t    function toKey(value) {\n\t      if (typeof value == 'string' || isSymbol(value)) {\n\t        return value;\n\t      }\n\t      var result = (value + '');\n\t      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n\t    }\n\t\n\t    /**\n\t     * Converts `func` to its source code.\n\t     *\n\t     * @private\n\t     * @param {Function} func The function to convert.\n\t     * @returns {string} Returns the source code.\n\t     */\n\t    function toSource(func) {\n\t      if (func != null) {\n\t        try {\n\t          return funcToString.call(func);\n\t        } catch (e) {}\n\t        try {\n\t          return (func + '');\n\t        } catch (e) {}\n\t      }\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * Updates wrapper `details` based on `bitmask` flags.\n\t     *\n\t     * @private\n\t     * @returns {Array} details The details to modify.\n\t     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n\t     * @returns {Array} Returns `details`.\n\t     */\n\t    function updateWrapDetails(details, bitmask) {\n\t      arrayEach(wrapFlags, function(pair) {\n\t        var value = '_.' + pair[0];\n\t        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n\t          details.push(value);\n\t        }\n\t      });\n\t      return details.sort();\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of `wrapper`.\n\t     *\n\t     * @private\n\t     * @param {Object} wrapper The wrapper to clone.\n\t     * @returns {Object} Returns the cloned wrapper.\n\t     */\n\t    function wrapperClone(wrapper) {\n\t      if (wrapper instanceof LazyWrapper) {\n\t        return wrapper.clone();\n\t      }\n\t      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n\t      result.__actions__ = copyArray(wrapper.__actions__);\n\t      result.__index__  = wrapper.__index__;\n\t      result.__values__ = wrapper.__values__;\n\t      return result;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an array of elements split into groups the length of `size`.\n\t     * If `array` can't be split evenly, the final chunk will be the remaining\n\t     * elements.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to process.\n\t     * @param {number} [size=1] The length of each chunk\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the new array of chunks.\n\t     * @example\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 2);\n\t     * // => [['a', 'b'], ['c', 'd']]\n\t     *\n\t     * _.chunk(['a', 'b', 'c', 'd'], 3);\n\t     * // => [['a', 'b', 'c'], ['d']]\n\t     */\n\t    function chunk(array, size, guard) {\n\t      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n\t        size = 1;\n\t      } else {\n\t        size = nativeMax(toInteger(size), 0);\n\t      }\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length || size < 1) {\n\t        return [];\n\t      }\n\t      var index = 0,\n\t          resIndex = 0,\n\t          result = Array(nativeCeil(length / size));\n\t\n\t      while (index < length) {\n\t        result[resIndex++] = baseSlice(array, index, (index += size));\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an array with all falsey values removed. The values `false`, `null`,\n\t     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to compact.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.compact([0, 1, false, 2, '', 3]);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function compact(array) {\n\t      var index = -1,\n\t          length = array == null ? 0 : array.length,\n\t          resIndex = 0,\n\t          result = [];\n\t\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (value) {\n\t          result[resIndex++] = value;\n\t        }\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a new array concatenating `array` with any additional arrays\n\t     * and/or values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to concatenate.\n\t     * @param {...*} [values] The values to concatenate.\n\t     * @returns {Array} Returns the new concatenated array.\n\t     * @example\n\t     *\n\t     * var array = [1];\n\t     * var other = _.concat(array, 2, [3], [[4]]);\n\t     *\n\t     * console.log(other);\n\t     * // => [1, 2, 3, [4]]\n\t     *\n\t     * console.log(array);\n\t     * // => [1]\n\t     */\n\t    function concat() {\n\t      var length = arguments.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      var args = Array(length - 1),\n\t          array = arguments[0],\n\t          index = length;\n\t\n\t      while (index--) {\n\t        args[index - 1] = arguments[index];\n\t      }\n\t      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of `array` values not included in the other given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.without, _.xor\n\t     * @example\n\t     *\n\t     * _.difference([2, 1], [2, 3]);\n\t     * // => [1]\n\t     */\n\t    var difference = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `iteratee` which\n\t     * is invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var differenceBy = baseRest(function(array, values) {\n\t      var iteratee = last(values);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.difference` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `array` to `values`. The order and\n\t     * references of result values are determined by the first array. The comparator\n\t     * is invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...Array} [values] The values to exclude.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     *\n\t     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }]\n\t     */\n\t    var differenceWith = baseRest(function(array, values) {\n\t      var comparator = last(values);\n\t      if (isArrayLikeObject(comparator)) {\n\t        comparator = undefined;\n\t      }\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.drop([1, 2, 3]);\n\t     * // => [2, 3]\n\t     *\n\t     * _.drop([1, 2, 3], 2);\n\t     * // => [3]\n\t     *\n\t     * _.drop([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.drop([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function drop(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements dropped from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to drop.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.dropRight([1, 2, 3]);\n\t     * // => [1, 2]\n\t     *\n\t     * _.dropRight([1, 2, 3], 2);\n\t     * // => [1]\n\t     *\n\t     * _.dropRight([1, 2, 3], 5);\n\t     * // => []\n\t     *\n\t     * _.dropRight([1, 2, 3], 0);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function dropRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the end.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.dropRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropRightWhile(users, ['active', false]);\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropRightWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` excluding elements dropped from the beginning.\n\t     * Elements are dropped until `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.dropWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.dropWhile(users, ['active', false]);\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.dropWhile(users, 'active');\n\t     * // => objects for ['barney', 'fred', 'pebbles']\n\t     */\n\t    function dropWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Fills elements of `array` with `value` from `start` up to, but not\n\t     * including, `end`.\n\t     *\n\t     * **Note:** This method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Array\n\t     * @param {Array} array The array to fill.\n\t     * @param {*} value The value to fill `array` with.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.fill(array, 'a');\n\t     * console.log(array);\n\t     * // => ['a', 'a', 'a']\n\t     *\n\t     * _.fill(Array(3), 2);\n\t     * // => [2, 2, 2]\n\t     *\n\t     * _.fill([4, 6, 8, 10], '*', 1, 3);\n\t     * // => [4, '*', '*', 10]\n\t     */\n\t    function fill(array, value, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      return baseFill(array, value, start, end);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the index of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n\t     * // => 0\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findIndex(users, { 'user': 'fred', 'active': false });\n\t     * // => 1\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findIndex(users, ['active', false]);\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findIndex(users, 'active');\n\t     * // => 2\n\t     */\n\t    function findIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findIndex` except that it iterates over elements\n\t     * of `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the found element, else `-1`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n\t     * // => 2\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n\t     * // => 0\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastIndex(users, ['active', false]);\n\t     * // => 2\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastIndex(users, 'active');\n\t     * // => 0\n\t     */\n\t    function findLastIndex(array, predicate, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length - 1;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = fromIndex < 0\n\t          ? nativeMax(length + index, 0)\n\t          : nativeMin(index, length - 1);\n\t      }\n\t      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n\t    }\n\t\n\t    /**\n\t     * Flattens `array` a single level deep.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flatten([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     */\n\t    function flatten(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, 1) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flattens `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n\t     * // => [1, 2, 3, 4, 5]\n\t     */\n\t    function flattenDeep(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseFlatten(array, INFINITY) : [];\n\t    }\n\t\n\t    /**\n\t     * Recursively flatten `array` up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Array\n\t     * @param {Array} array The array to flatten.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * var array = [1, [2, [3, [4]], 5]];\n\t     *\n\t     * _.flattenDepth(array, 1);\n\t     * // => [1, 2, [3, [4]], 5]\n\t     *\n\t     * _.flattenDepth(array, 2);\n\t     * // => [1, 2, 3, [4], 5]\n\t     */\n\t    function flattenDepth(array, depth) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(array, depth);\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.toPairs`; this method returns an object composed\n\t     * from key-value `pairs`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} pairs The key-value pairs.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.fromPairs([['a', 1], ['b', 2]]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function fromPairs(pairs) {\n\t      var index = -1,\n\t          length = pairs == null ? 0 : pairs.length,\n\t          result = {};\n\t\n\t      while (++index < length) {\n\t        var pair = pairs[index];\n\t        result[pair[0]] = pair[1];\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Gets the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias first\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the first element of `array`.\n\t     * @example\n\t     *\n\t     * _.head([1, 2, 3]);\n\t     * // => 1\n\t     *\n\t     * _.head([]);\n\t     * // => undefined\n\t     */\n\t    function head(array) {\n\t      return (array && array.length) ? array[0] : undefined;\n\t    }\n\t\n\t    /**\n\t     * Gets the index at which the first occurrence of `value` is found in `array`\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. If `fromIndex` is negative, it's used as the\n\t     * offset from the end of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.indexOf([1, 2, 1, 2], 2);\n\t     * // => 1\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.indexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 3\n\t     */\n\t    function indexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\t      if (index < 0) {\n\t        index = nativeMax(length + index, 0);\n\t      }\n\t      return baseIndexOf(array, value, index);\n\t    }\n\t\n\t    /**\n\t     * Gets all but the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.initial([1, 2, 3]);\n\t     * // => [1, 2]\n\t     */\n\t    function initial(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 0, -1) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values that are included in all given arrays\n\t     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons. The order and references of result values are\n\t     * determined by the first array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersection([2, 1], [2, 3]);\n\t     * // => [2]\n\t     */\n\t    var intersection = baseRest(function(arrays) {\n\t      var mapped = arrayMap(arrays, castArrayLikeObject);\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `iteratee`\n\t     * which is invoked for each element of each `arrays` to generate the criterion\n\t     * by which they're compared. The order and references of result values are\n\t     * determined by the first array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [2.1]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }]\n\t     */\n\t    var intersectionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      if (iteratee === last(mapped)) {\n\t        iteratee = undefined;\n\t      } else {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.intersection` except that it accepts `comparator`\n\t     * which is invoked to compare elements of `arrays`. The order and references\n\t     * of result values are determined by the first array. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of intersecting values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.intersectionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }]\n\t     */\n\t    var intersectionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays),\n\t          mapped = arrayMap(arrays, castArrayLikeObject);\n\t\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      if (comparator) {\n\t        mapped.pop();\n\t      }\n\t      return (mapped.length && mapped[0] === arrays[0])\n\t        ? baseIntersection(mapped, undefined, comparator)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Converts all elements in `array` into a string separated by `separator`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to convert.\n\t     * @param {string} [separator=','] The element separator.\n\t     * @returns {string} Returns the joined string.\n\t     * @example\n\t     *\n\t     * _.join(['a', 'b', 'c'], '~');\n\t     * // => 'a~b~c'\n\t     */\n\t    function join(array, separator) {\n\t      return array == null ? '' : nativeJoin.call(array, separator);\n\t    }\n\t\n\t    /**\n\t     * Gets the last element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {*} Returns the last element of `array`.\n\t     * @example\n\t     *\n\t     * _.last([1, 2, 3]);\n\t     * // => 3\n\t     */\n\t    function last(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? array[length - 1] : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it iterates over elements of\n\t     * `array` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=array.length-1] The index to search from.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.lastIndexOf([1, 2, 1, 2], 2);\n\t     * // => 3\n\t     *\n\t     * // Search from the `fromIndex`.\n\t     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n\t     * // => 1\n\t     */\n\t    function lastIndexOf(array, value, fromIndex) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return -1;\n\t      }\n\t      var index = length;\n\t      if (fromIndex !== undefined) {\n\t        index = toInteger(fromIndex);\n\t        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n\t      }\n\t      return value === value\n\t        ? strictLastIndexOf(array, value, index)\n\t        : baseFindIndex(array, baseIsNaN, index, true);\n\t    }\n\t\n\t    /**\n\t     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n\t     * element from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.11.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=0] The index of the element to return.\n\t     * @returns {*} Returns the nth element of `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     *\n\t     * _.nth(array, 1);\n\t     * // => 'b'\n\t     *\n\t     * _.nth(array, -2);\n\t     * // => 'c';\n\t     */\n\t    function nth(array, n) {\n\t      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n\t    }\n\t\n\t    /**\n\t     * Removes all given values from `array` using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n\t     * to remove elements from an array by predicate.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...*} [values] The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pull(array, 'a', 'c');\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    var pull = baseRest(pullAll);\n\t\n\t    /**\n\t     * This method is like `_.pull` except that it accepts an array of values to remove.\n\t     *\n\t     * **Note:** Unlike `_.difference`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n\t     *\n\t     * _.pullAll(array, ['a', 'c']);\n\t     * console.log(array);\n\t     * // => ['b', 'b']\n\t     */\n\t    function pullAll(array, values) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n\t     * invoked for each element of `array` and `values` to generate the criterion\n\t     * by which they're compared. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n\t     *\n\t     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n\t     * console.log(array);\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    function pullAllBy(array, values, iteratee) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, getIteratee(iteratee, 2))\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.pullAll` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array` to `values`. The comparator is\n\t     * invoked with two arguments: (arrVal, othVal).\n\t     *\n\t     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Array} values The values to remove.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n\t     *\n\t     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n\t     * console.log(array);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n\t     */\n\t    function pullAllWith(array, values, comparator) {\n\t      return (array && array.length && values && values.length)\n\t        ? basePullAll(array, values, undefined, comparator)\n\t        : array;\n\t    }\n\t\n\t    /**\n\t     * Removes elements from `array` corresponding to `indexes` and returns an\n\t     * array of removed elements.\n\t     *\n\t     * **Note:** Unlike `_.at`, this method mutates `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = ['a', 'b', 'c', 'd'];\n\t     * var pulled = _.pullAt(array, [1, 3]);\n\t     *\n\t     * console.log(array);\n\t     * // => ['a', 'c']\n\t     *\n\t     * console.log(pulled);\n\t     * // => ['b', 'd']\n\t     */\n\t    var pullAt = flatRest(function(array, indexes) {\n\t      var length = array == null ? 0 : array.length,\n\t          result = baseAt(array, indexes);\n\t\n\t      basePullAt(array, arrayMap(indexes, function(index) {\n\t        return isIndex(index, length) ? +index : index;\n\t      }).sort(compareAscending));\n\t\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Removes all elements from `array` that `predicate` returns truthy for\n\t     * and returns an array of the removed elements. The predicate is invoked\n\t     * with three arguments: (value, index, array).\n\t     *\n\t     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n\t     * to pull elements from an array by value.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new array of removed elements.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3, 4];\n\t     * var evens = _.remove(array, function(n) {\n\t     *   return n % 2 == 0;\n\t     * });\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 3]\n\t     *\n\t     * console.log(evens);\n\t     * // => [2, 4]\n\t     */\n\t    function remove(array, predicate) {\n\t      var result = [];\n\t      if (!(array && array.length)) {\n\t        return result;\n\t      }\n\t      var index = -1,\n\t          indexes = [],\n\t          length = array.length;\n\t\n\t      predicate = getIteratee(predicate, 3);\n\t      while (++index < length) {\n\t        var value = array[index];\n\t        if (predicate(value, index, array)) {\n\t          result.push(value);\n\t          indexes.push(index);\n\t        }\n\t      }\n\t      basePullAt(array, indexes);\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Reverses `array` so that the first element becomes the last, the second\n\t     * element becomes the second to last, and so on.\n\t     *\n\t     * **Note:** This method mutates `array` and is based on\n\t     * [`Array#reverse`](https://mdn.io/Array/reverse).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to modify.\n\t     * @returns {Array} Returns `array`.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _.reverse(array);\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function reverse(array) {\n\t      return array == null ? array : nativeReverse.call(array);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` from `start` up to, but not including, `end`.\n\t     *\n\t     * **Note:** This method is used instead of\n\t     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n\t     * returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to slice.\n\t     * @param {number} [start=0] The start position.\n\t     * @param {number} [end=array.length] The end position.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     */\n\t    function slice(array, start, end) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n\t        start = 0;\n\t        end = length;\n\t      }\n\t      else {\n\t        start = start == null ? 0 : toInteger(start);\n\t        end = end === undefined ? length : toInteger(end);\n\t      }\n\t      return baseSlice(array, start, end);\n\t    }\n\t\n\t    /**\n\t     * Uses a binary search to determine the lowest index at which `value`\n\t     * should be inserted into `array` in order to maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedIndex([30, 50], 40);\n\t     * // => 1\n\t     */\n\t    function sortedIndex(array, value) {\n\t      return baseSortedIndex(array, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 0\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 0\n\t     */\n\t    function sortedIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.indexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 1\n\t     */\n\t    function sortedIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value);\n\t        if (index < length && eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedIndex` except that it returns the highest\n\t     * index at which `value` should be inserted into `array` in order to\n\t     * maintain its sort order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n\t     * // => 4\n\t     */\n\t    function sortedLastIndex(array, value) {\n\t      return baseSortedIndex(array, value, true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n\t     * which is invoked for `value` and each element of `array` to compute their\n\t     * sort ranking. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The sorted array to inspect.\n\t     * @param {*} value The value to evaluate.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the index at which `value` should be inserted\n\t     *  into `array`.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n\t     *\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n\t     * // => 1\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n\t     * // => 1\n\t     */\n\t    function sortedLastIndexBy(array, value, iteratee) {\n\t      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.lastIndexOf` except that it performs a binary\n\t     * search on a sorted `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @returns {number} Returns the index of the matched value, else `-1`.\n\t     * @example\n\t     *\n\t     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n\t     * // => 3\n\t     */\n\t    function sortedLastIndexOf(array, value) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (length) {\n\t        var index = baseSortedIndex(array, value, true) - 1;\n\t        if (eq(array[index], value)) {\n\t          return index;\n\t        }\n\t      }\n\t      return -1;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniq([1, 1, 2]);\n\t     * // => [1, 2]\n\t     */\n\t    function sortedUniq(array) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniqBy` except that it's designed and optimized\n\t     * for sorted arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n\t     * // => [1.1, 2.3]\n\t     */\n\t    function sortedUniqBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Gets all but the first element of `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.tail([1, 2, 3]);\n\t     * // => [2, 3]\n\t     */\n\t    function tail(array) {\n\t      var length = array == null ? 0 : array.length;\n\t      return length ? baseSlice(array, 1, length) : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the beginning.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.take([1, 2, 3]);\n\t     * // => [1]\n\t     *\n\t     * _.take([1, 2, 3], 2);\n\t     * // => [1, 2]\n\t     *\n\t     * _.take([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.take([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function take(array, n, guard) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      return baseSlice(array, 0, n < 0 ? 0 : n);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with `n` elements taken from the end.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {number} [n=1] The number of elements to take.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * _.takeRight([1, 2, 3]);\n\t     * // => [3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 2);\n\t     * // => [2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 5);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * _.takeRight([1, 2, 3], 0);\n\t     * // => []\n\t     */\n\t    function takeRight(array, n, guard) {\n\t      var length = array == null ? 0 : array.length;\n\t      if (!length) {\n\t        return [];\n\t      }\n\t      n = (guard || n === undefined) ? 1 : toInteger(n);\n\t      n = length - n;\n\t      return baseSlice(array, n < 0 ? 0 : n, length);\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the end. Elements are\n\t     * taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': true },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': false }\n\t     * ];\n\t     *\n\t     * _.takeRightWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n\t     * // => objects for ['pebbles']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeRightWhile(users, ['active', false]);\n\t     * // => objects for ['fred', 'pebbles']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeRightWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeRightWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates a slice of `array` with elements taken from the beginning. Elements\n\t     * are taken until `predicate` returns falsey. The predicate is invoked with\n\t     * three arguments: (value, index, array).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to query.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the slice of `array`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'active': false },\n\t     *   { 'user': 'fred',    'active': false },\n\t     *   { 'user': 'pebbles', 'active': true }\n\t     * ];\n\t     *\n\t     * _.takeWhile(users, function(o) { return !o.active; });\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.takeWhile(users, ['active', false]);\n\t     * // => objects for ['barney', 'fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.takeWhile(users, 'active');\n\t     * // => []\n\t     */\n\t    function takeWhile(array, predicate) {\n\t      return (array && array.length)\n\t        ? baseWhile(array, getIteratee(predicate, 3))\n\t        : [];\n\t    }\n\t\n\t    /**\n\t     * Creates an array of unique values, in order, from all given arrays using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.union([2], [1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    var union = baseRest(function(arrays) {\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which uniqueness is computed. Result values are chosen from the first\n\t     * array in which the value occurs. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    var unionBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.union` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `arrays`. Result values are chosen from\n\t     * the first array in which the value occurs. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of combined values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.unionWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var unionWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates a duplicate-free version of an array, using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons, in which only the first occurrence of each element\n\t     * is kept. The order of result values is determined by the order they occur\n\t     * in the array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniq([2, 1, 2]);\n\t     * // => [2, 1]\n\t     */\n\t    function uniq(array) {\n\t      return (array && array.length) ? baseUniq(array) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * uniqueness is computed. The order of result values is determined by the\n\t     * order they occur in the array. The iteratee is invoked with one argument:\n\t     * (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n\t     * // => [2.1, 1.2]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 1 }, { 'x': 2 }]\n\t     */\n\t    function uniqBy(array, iteratee) {\n\t      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.uniq` except that it accepts `comparator` which\n\t     * is invoked to compare elements of `array`. The order of result values is\n\t     * determined by the order they occur in the array.The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new duplicate free array.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.uniqWith(objects, _.isEqual);\n\t     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n\t     */\n\t    function uniqWith(array, comparator) {\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts an array of grouped\n\t     * elements and creates an array regrouping the elements to their pre-zip\n\t     * configuration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.2.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     *\n\t     * _.unzip(zipped);\n\t     * // => [['a', 'b'], [1, 2], [true, false]]\n\t     */\n\t    function unzip(array) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var length = 0;\n\t      array = arrayFilter(array, function(group) {\n\t        if (isArrayLikeObject(group)) {\n\t          length = nativeMax(group.length, length);\n\t          return true;\n\t        }\n\t      });\n\t      return baseTimes(length, function(index) {\n\t        return arrayMap(array, baseProperty(index));\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n\t     * how regrouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {Array} array The array of grouped elements to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  regrouped values.\n\t     * @returns {Array} Returns the new array of regrouped elements.\n\t     * @example\n\t     *\n\t     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n\t     * // => [[1, 10, 100], [2, 20, 200]]\n\t     *\n\t     * _.unzipWith(zipped, _.add);\n\t     * // => [3, 30, 300]\n\t     */\n\t    function unzipWith(array, iteratee) {\n\t      if (!(array && array.length)) {\n\t        return [];\n\t      }\n\t      var result = unzip(array);\n\t      if (iteratee == null) {\n\t        return result;\n\t      }\n\t      return arrayMap(result, function(group) {\n\t        return apply(iteratee, undefined, group);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates an array excluding all given values using\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * for equality comparisons.\n\t     *\n\t     * **Note:** Unlike `_.pull`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {Array} array The array to inspect.\n\t     * @param {...*} [values] The values to exclude.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.xor\n\t     * @example\n\t     *\n\t     * _.without([2, 1, 2, 3], 1, 2);\n\t     * // => [3]\n\t     */\n\t    var without = baseRest(function(array, values) {\n\t      return isArrayLikeObject(array)\n\t        ? baseDifference(array, values)\n\t        : [];\n\t    });\n\t\n\t    /**\n\t     * Creates an array of unique values that is the\n\t     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n\t     * of the given arrays. The order of result values is determined by the order\n\t     * they occur in the arrays.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @see _.difference, _.without\n\t     * @example\n\t     *\n\t     * _.xor([2, 1], [2, 3]);\n\t     * // => [1, 3]\n\t     */\n\t    var xor = baseRest(function(arrays) {\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `iteratee` which is\n\t     * invoked for each element of each `arrays` to generate the criterion by\n\t     * which by which they're compared. The order of result values is determined\n\t     * by the order they occur in the arrays. The iteratee is invoked with one\n\t     * argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n\t     * // => [1.2, 3.4]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n\t     * // => [{ 'x': 2 }]\n\t     */\n\t    var xorBy = baseRest(function(arrays) {\n\t      var iteratee = last(arrays);\n\t      if (isArrayLikeObject(iteratee)) {\n\t        iteratee = undefined;\n\t      }\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.xor` except that it accepts `comparator` which is\n\t     * invoked to compare elements of `arrays`. The order of result values is\n\t     * determined by the order they occur in the arrays. The comparator is invoked\n\t     * with two arguments: (arrVal, othVal).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to inspect.\n\t     * @param {Function} [comparator] The comparator invoked per element.\n\t     * @returns {Array} Returns the new array of filtered values.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n\t     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n\t     *\n\t     * _.xorWith(objects, others, _.isEqual);\n\t     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n\t     */\n\t    var xorWith = baseRest(function(arrays) {\n\t      var comparator = last(arrays);\n\t      comparator = typeof comparator == 'function' ? comparator : undefined;\n\t      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of grouped elements, the first of which contains the\n\t     * first elements of the given arrays, the second of which contains the\n\t     * second elements of the given arrays, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zip(['a', 'b'], [1, 2], [true, false]);\n\t     * // => [['a', 1, true], ['b', 2, false]]\n\t     */\n\t    var zip = baseRest(unzip);\n\t\n\t    /**\n\t     * This method is like `_.fromPairs` except that it accepts two arrays,\n\t     * one of property identifiers and one of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.4.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObject(['a', 'b'], [1, 2]);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    function zipObject(props, values) {\n\t      return baseZipObject(props || [], values || [], assignValue);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zipObject` except that it supports property paths.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Array\n\t     * @param {Array} [props=[]] The property identifiers.\n\t     * @param {Array} [values=[]] The property values.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n\t     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n\t     */\n\t    function zipObjectDeep(props, values) {\n\t      return baseZipObject(props || [], values || [], baseSet);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.zip` except that it accepts `iteratee` to specify\n\t     * how grouped values should be combined. The iteratee is invoked with the\n\t     * elements of each group: (...group).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Array\n\t     * @param {...Array} [arrays] The arrays to process.\n\t     * @param {Function} [iteratee=_.identity] The function to combine\n\t     *  grouped values.\n\t     * @returns {Array} Returns the new array of grouped elements.\n\t     * @example\n\t     *\n\t     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n\t     *   return a + b + c;\n\t     * });\n\t     * // => [111, 222]\n\t     */\n\t    var zipWith = baseRest(function(arrays) {\n\t      var length = arrays.length,\n\t          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\t\n\t      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n\t      return unzipWith(arrays, iteratee);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n\t     * chain sequences enabled. The result of such sequences must be unwrapped\n\t     * with `_#value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Seq\n\t     * @param {*} value The value to wrap.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36 },\n\t     *   { 'user': 'fred',    'age': 40 },\n\t     *   { 'user': 'pebbles', 'age': 1 }\n\t     * ];\n\t     *\n\t     * var youngest = _\n\t     *   .chain(users)\n\t     *   .sortBy('age')\n\t     *   .map(function(o) {\n\t     *     return o.user + ' is ' + o.age;\n\t     *   })\n\t     *   .head()\n\t     *   .value();\n\t     * // => 'pebbles is 1'\n\t     */\n\t    function chain(value) {\n\t      var result = lodash(value);\n\t      result.__chain__ = true;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method invokes `interceptor` and returns `value`. The interceptor\n\t     * is invoked with one argument; (value). The purpose of this method is to\n\t     * \"tap into\" a method chain sequence in order to modify intermediate results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3])\n\t     *  .tap(function(array) {\n\t     *    // Mutate input array.\n\t     *    array.pop();\n\t     *  })\n\t     *  .reverse()\n\t     *  .value();\n\t     * // => [2, 1]\n\t     */\n\t    function tap(value, interceptor) {\n\t      interceptor(value);\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.tap` except that it returns the result of `interceptor`.\n\t     * The purpose of this method is to \"pass thru\" values replacing intermediate\n\t     * results in a method chain sequence.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Seq\n\t     * @param {*} value The value to provide to `interceptor`.\n\t     * @param {Function} interceptor The function to invoke.\n\t     * @returns {*} Returns the result of `interceptor`.\n\t     * @example\n\t     *\n\t     * _('  abc  ')\n\t     *  .chain()\n\t     *  .trim()\n\t     *  .thru(function(value) {\n\t     *    return [value];\n\t     *  })\n\t     *  .value();\n\t     * // => ['abc']\n\t     */\n\t    function thru(value, interceptor) {\n\t      return interceptor(value);\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.at`.\n\t     *\n\t     * @name at\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Seq\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _(object).at(['a[0].b.c', 'a[1]']).value();\n\t     * // => [3, 4]\n\t     */\n\t    var wrapperAt = flatRest(function(paths) {\n\t      var length = paths.length,\n\t          start = length ? paths[0] : 0,\n\t          value = this.__wrapped__,\n\t          interceptor = function(object) { return baseAt(object, paths); };\n\t\n\t      if (length > 1 || this.__actions__.length ||\n\t          !(value instanceof LazyWrapper) || !isIndex(start)) {\n\t        return this.thru(interceptor);\n\t      }\n\t      value = value.slice(start, +start + (length ? 1 : 0));\n\t      value.__actions__.push({\n\t        'func': thru,\n\t        'args': [interceptor],\n\t        'thisArg': undefined\n\t      });\n\t      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n\t        if (length && !array.length) {\n\t          array.push(undefined);\n\t        }\n\t        return array;\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n\t     *\n\t     * @name chain\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 }\n\t     * ];\n\t     *\n\t     * // A sequence without explicit chaining.\n\t     * _(users).head();\n\t     * // => { 'user': 'barney', 'age': 36 }\n\t     *\n\t     * // A sequence with explicit chaining.\n\t     * _(users)\n\t     *   .chain()\n\t     *   .head()\n\t     *   .pick('user')\n\t     *   .value();\n\t     * // => { 'user': 'barney' }\n\t     */\n\t    function wrapperChain() {\n\t      return chain(this);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence and returns the wrapped result.\n\t     *\n\t     * @name commit\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2];\n\t     * var wrapped = _(array).push(3);\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2]\n\t     *\n\t     * wrapped = wrapped.commit();\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * wrapped.last();\n\t     * // => 3\n\t     *\n\t     * console.log(array);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperCommit() {\n\t      return new LodashWrapper(this.value(), this.__chain__);\n\t    }\n\t\n\t    /**\n\t     * Gets the next value on a wrapped object following the\n\t     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n\t     *\n\t     * @name next\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the next iterator value.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 1 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': false, 'value': 2 }\n\t     *\n\t     * wrapped.next();\n\t     * // => { 'done': true, 'value': undefined }\n\t     */\n\t    function wrapperNext() {\n\t      if (this.__values__ === undefined) {\n\t        this.__values__ = toArray(this.value());\n\t      }\n\t      var done = this.__index__ >= this.__values__.length,\n\t          value = done ? undefined : this.__values__[this.__index__++];\n\t\n\t      return { 'done': done, 'value': value };\n\t    }\n\t\n\t    /**\n\t     * Enables the wrapper to be iterable.\n\t     *\n\t     * @name Symbol.iterator\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the wrapper object.\n\t     * @example\n\t     *\n\t     * var wrapped = _([1, 2]);\n\t     *\n\t     * wrapped[Symbol.iterator]() === wrapped;\n\t     * // => true\n\t     *\n\t     * Array.from(wrapped);\n\t     * // => [1, 2]\n\t     */\n\t    function wrapperToIterator() {\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n\t     *\n\t     * @name plant\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Seq\n\t     * @param {*} value The value to plant.\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var wrapped = _([1, 2]).map(square);\n\t     * var other = wrapped.plant([3, 4]);\n\t     *\n\t     * other.value();\n\t     * // => [9, 16]\n\t     *\n\t     * wrapped.value();\n\t     * // => [1, 4]\n\t     */\n\t    function wrapperPlant(value) {\n\t      var result,\n\t          parent = this;\n\t\n\t      while (parent instanceof baseLodash) {\n\t        var clone = wrapperClone(parent);\n\t        clone.__index__ = 0;\n\t        clone.__values__ = undefined;\n\t        if (result) {\n\t          previous.__wrapped__ = clone;\n\t        } else {\n\t          result = clone;\n\t        }\n\t        var previous = clone;\n\t        parent = parent.__wrapped__;\n\t      }\n\t      previous.__wrapped__ = value;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is the wrapper version of `_.reverse`.\n\t     *\n\t     * **Note:** This method mutates the wrapped array.\n\t     *\n\t     * @name reverse\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Seq\n\t     * @returns {Object} Returns the new `lodash` wrapper instance.\n\t     * @example\n\t     *\n\t     * var array = [1, 2, 3];\n\t     *\n\t     * _(array).reverse().value()\n\t     * // => [3, 2, 1]\n\t     *\n\t     * console.log(array);\n\t     * // => [3, 2, 1]\n\t     */\n\t    function wrapperReverse() {\n\t      var value = this.__wrapped__;\n\t      if (value instanceof LazyWrapper) {\n\t        var wrapped = value;\n\t        if (this.__actions__.length) {\n\t          wrapped = new LazyWrapper(this);\n\t        }\n\t        wrapped = wrapped.reverse();\n\t        wrapped.__actions__.push({\n\t          'func': thru,\n\t          'args': [reverse],\n\t          'thisArg': undefined\n\t        });\n\t        return new LodashWrapper(wrapped, this.__chain__);\n\t      }\n\t      return this.thru(reverse);\n\t    }\n\t\n\t    /**\n\t     * Executes the chain sequence to resolve the unwrapped value.\n\t     *\n\t     * @name value\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias toJSON, valueOf\n\t     * @category Seq\n\t     * @returns {*} Returns the resolved unwrapped value.\n\t     * @example\n\t     *\n\t     * _([1, 2, 3]).value();\n\t     * // => [1, 2, 3]\n\t     */\n\t    function wrapperValue() {\n\t      return baseWrapperValue(this.__wrapped__, this.__actions__);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the number of times the key was returned by `iteratee`. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': 1, '6': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.countBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': 2, '5': 1 }\n\t     */\n\t    var countBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        ++result[key];\n\t      } else {\n\t        baseAssignValue(result, key, 1);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n\t     * Iteration is stopped once `predicate` returns falsey. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** This method returns `true` for\n\t     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n\t     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n\t     * elements of empty collections.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.every([true, 1, null, 'yes'], Boolean);\n\t     * // => false\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.every(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.every(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.every(users, 'active');\n\t     * // => false\n\t     */\n\t    function every(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arrayEvery : baseEvery;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning an array of all elements\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * **Note:** Unlike `_.remove`, this method returns a new array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.reject\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * _.filter(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, { 'age': 36, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.filter(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function filter(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection`, returning the first element\n\t     * `predicate` returns truthy for. The predicate is invoked with three\n\t     * arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': true },\n\t     *   { 'user': 'fred',    'age': 40, 'active': false },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n\t     * ];\n\t     *\n\t     * _.find(users, function(o) { return o.age < 40; });\n\t     * // => object for 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.find(users, { 'age': 1, 'active': true });\n\t     * // => object for 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.find(users, ['active', false]);\n\t     * // => object for 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.find(users, 'active');\n\t     * // => object for 'barney'\n\t     */\n\t    var find = createFind(findIndex);\n\t\n\t    /**\n\t     * This method is like `_.find` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param {number} [fromIndex=collection.length-1] The index to search from.\n\t     * @returns {*} Returns the matched element, else `undefined`.\n\t     * @example\n\t     *\n\t     * _.findLast([1, 2, 3, 4], function(n) {\n\t     *   return n % 2 == 1;\n\t     * });\n\t     * // => 3\n\t     */\n\t    var findLast = createFind(findLastIndex);\n\t\n\t    /**\n\t     * Creates a flattened array of values by running each element in `collection`\n\t     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n\t     * with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [n, n];\n\t     * }\n\t     *\n\t     * _.flatMap([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMap(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), 1);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDeep([1, 2], duplicate);\n\t     * // => [1, 1, 2, 2]\n\t     */\n\t    function flatMapDeep(collection, iteratee) {\n\t      return baseFlatten(map(collection, iteratee), INFINITY);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.flatMap` except that it recursively flattens the\n\t     * mapped results up to `depth` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {number} [depth=1] The maximum recursion depth.\n\t     * @returns {Array} Returns the new flattened array.\n\t     * @example\n\t     *\n\t     * function duplicate(n) {\n\t     *   return [[[n, n]]];\n\t     * }\n\t     *\n\t     * _.flatMapDepth([1, 2], duplicate, 2);\n\t     * // => [[1, 1], [2, 2]]\n\t     */\n\t    function flatMapDepth(collection, iteratee, depth) {\n\t      depth = depth === undefined ? 1 : toInteger(depth);\n\t      return baseFlatten(map(collection, iteratee), depth);\n\t    }\n\t\n\t    /**\n\t     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n\t     * The iteratee is invoked with three arguments: (value, index|key, collection).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n\t     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n\t     * or `_.forOwn` for object iteration.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @alias each\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEachRight\n\t     * @example\n\t     *\n\t     * _.forEach([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `1` then `2`.\n\t     *\n\t     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forEach(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEach : baseEach;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forEach` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @alias eachRight\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array|Object} Returns `collection`.\n\t     * @see _.forEach\n\t     * @example\n\t     *\n\t     * _.forEachRight([1, 2], function(value) {\n\t     *   console.log(value);\n\t     * });\n\t     * // => Logs `2` then `1`.\n\t     */\n\t    function forEachRight(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The order of grouped values\n\t     * is determined by the order they occur in `collection`. The corresponding\n\t     * value of each key is an array of elements responsible for generating the\n\t     * key. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n\t     * // => { '4': [4.2], '6': [6.1, 6.3] }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.groupBy(['one', 'two', 'three'], 'length');\n\t     * // => { '3': ['one', 'two'], '5': ['three'] }\n\t     */\n\t    var groupBy = createAggregator(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, key)) {\n\t        result[key].push(value);\n\t      } else {\n\t        baseAssignValue(result, key, [value]);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is in `collection`. If `collection` is a string, it's\n\t     * checked for a substring of `value`, otherwise\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n\t     * the offset from the end of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @param {*} value The value to search for.\n\t     * @param {number} [fromIndex=0] The index to search from.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n\t     * @example\n\t     *\n\t     * _.includes([1, 2, 3], 1);\n\t     * // => true\n\t     *\n\t     * _.includes([1, 2, 3], 1, 2);\n\t     * // => false\n\t     *\n\t     * _.includes({ 'a': 1, 'b': 2 }, 1);\n\t     * // => true\n\t     *\n\t     * _.includes('abcd', 'bc');\n\t     * // => true\n\t     */\n\t    function includes(collection, value, fromIndex, guard) {\n\t      collection = isArrayLike(collection) ? collection : values(collection);\n\t      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\t\n\t      var length = collection.length;\n\t      if (fromIndex < 0) {\n\t        fromIndex = nativeMax(length + fromIndex, 0);\n\t      }\n\t      return isString(collection)\n\t        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n\t        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n\t    }\n\t\n\t    /**\n\t     * Invokes the method at `path` of each element in `collection`, returning\n\t     * an array of the results of each invoked method. Any additional arguments\n\t     * are provided to each invoked method. If `path` is a function, it's invoked\n\t     * for, and `this` bound to, each element in `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array|Function|string} path The path of the method to invoke or\n\t     *  the function invoked per iteration.\n\t     * @param {...*} [args] The arguments to invoke each method with.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n\t     * // => [[1, 5, 7], [1, 2, 3]]\n\t     *\n\t     * _.invokeMap([123, 456], String.prototype.split, '');\n\t     * // => [['1', '2', '3'], ['4', '5', '6']]\n\t     */\n\t    var invokeMap = baseRest(function(collection, path, args) {\n\t      var index = -1,\n\t          isFunc = typeof path == 'function',\n\t          result = isArrayLike(collection) ? Array(collection.length) : [];\n\t\n\t      baseEach(collection, function(value) {\n\t        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n\t      });\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of keys generated from the results of running\n\t     * each element of `collection` thru `iteratee`. The corresponding value of\n\t     * each key is the last element responsible for generating the key. The\n\t     * iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n\t     * @returns {Object} Returns the composed aggregate object.\n\t     * @example\n\t     *\n\t     * var array = [\n\t     *   { 'dir': 'left', 'code': 97 },\n\t     *   { 'dir': 'right', 'code': 100 }\n\t     * ];\n\t     *\n\t     * _.keyBy(array, function(o) {\n\t     *   return String.fromCharCode(o.code);\n\t     * });\n\t     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n\t     *\n\t     * _.keyBy(array, 'dir');\n\t     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n\t     */\n\t    var keyBy = createAggregator(function(result, value, key) {\n\t      baseAssignValue(result, key, value);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values by running each element in `collection` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n\t     *\n\t     * The guarded methods are:\n\t     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n\t     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n\t     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n\t     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new mapped array.\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * _.map([4, 8], square);\n\t     * // => [16, 64]\n\t     *\n\t     * _.map({ 'a': 4, 'b': 8 }, square);\n\t     * // => [16, 64] (iteration order is not guaranteed)\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney' },\n\t     *   { 'user': 'fred' }\n\t     * ];\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, 'user');\n\t     * // => ['barney', 'fred']\n\t     */\n\t    function map(collection, iteratee) {\n\t      var func = isArray(collection) ? arrayMap : baseMap;\n\t      return func(collection, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sortBy` except that it allows specifying the sort\n\t     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n\t     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n\t     * descending or \"asc\" for ascending sort order of corresponding values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @param {string[]} [orders] The sort orders of `iteratees`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 34 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 36 }\n\t     * ];\n\t     *\n\t     * // Sort by `user` in ascending order and by `age` in descending order.\n\t     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     */\n\t    function orderBy(collection, iteratees, orders, guard) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      if (!isArray(iteratees)) {\n\t        iteratees = iteratees == null ? [] : [iteratees];\n\t      }\n\t      orders = guard ? undefined : orders;\n\t      if (!isArray(orders)) {\n\t        orders = orders == null ? [] : [orders];\n\t      }\n\t      return baseOrderBy(collection, iteratees, orders);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements split into two groups, the first of which\n\t     * contains elements `predicate` returns truthy for, the second of which\n\t     * contains elements `predicate` returns falsey for. The predicate is\n\t     * invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of grouped elements.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney',  'age': 36, 'active': false },\n\t     *   { 'user': 'fred',    'age': 40, 'active': true },\n\t     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n\t     * ];\n\t     *\n\t     * _.partition(users, function(o) { return o.active; });\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.partition(users, { 'age': 1, 'active': false });\n\t     * // => objects for [['pebbles'], ['barney', 'fred']]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.partition(users, ['active', false]);\n\t     * // => objects for [['barney', 'pebbles'], ['fred']]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.partition(users, 'active');\n\t     * // => objects for [['fred'], ['barney', 'pebbles']]\n\t     */\n\t    var partition = createAggregator(function(result, value, key) {\n\t      result[key ? 0 : 1].push(value);\n\t    }, function() { return [[], []]; });\n\t\n\t    /**\n\t     * Reduces `collection` to a value which is the accumulated result of running\n\t     * each element in `collection` thru `iteratee`, where each successive\n\t     * invocation is supplied the return value of the previous. If `accumulator`\n\t     * is not given, the first element of `collection` is used as the initial\n\t     * value. The iteratee is invoked with four arguments:\n\t     * (accumulator, value, index|key, collection).\n\t     *\n\t     * Many lodash methods are guarded to work as iteratees for methods like\n\t     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n\t     *\n\t     * The guarded methods are:\n\t     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n\t     * and `sortBy`\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduceRight\n\t     * @example\n\t     *\n\t     * _.reduce([1, 2], function(sum, n) {\n\t     *   return sum + n;\n\t     * }, 0);\n\t     * // => 3\n\t     *\n\t     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     *   return result;\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n\t     */\n\t    function reduce(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduce : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.reduce` except that it iterates over elements of\n\t     * `collection` from right to left.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The initial value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @see _.reduce\n\t     * @example\n\t     *\n\t     * var array = [[0, 1], [2, 3], [4, 5]];\n\t     *\n\t     * _.reduceRight(array, function(flattened, other) {\n\t     *   return flattened.concat(other);\n\t     * }, []);\n\t     * // => [4, 5, 2, 3, 0, 1]\n\t     */\n\t    function reduceRight(collection, iteratee, accumulator) {\n\t      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n\t          initAccum = arguments.length < 3;\n\t\n\t      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.filter`; this method returns the elements of `collection`\n\t     * that `predicate` does **not** return truthy for.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the new filtered array.\n\t     * @see _.filter\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': false },\n\t     *   { 'user': 'fred',   'age': 40, 'active': true }\n\t     * ];\n\t     *\n\t     * _.reject(users, function(o) { return !o.active; });\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.reject(users, { 'age': 40, 'active': true });\n\t     * // => objects for ['barney']\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.reject(users, ['active', false]);\n\t     * // => objects for ['fred']\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.reject(users, 'active');\n\t     * // => objects for ['barney']\n\t     */\n\t    function reject(collection, predicate) {\n\t      var func = isArray(collection) ? arrayFilter : baseFilter;\n\t      return func(collection, negate(getIteratee(predicate, 3)));\n\t    }\n\t\n\t    /**\n\t     * Gets a random element from `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @returns {*} Returns the random element.\n\t     * @example\n\t     *\n\t     * _.sample([1, 2, 3, 4]);\n\t     * // => 2\n\t     */\n\t    function sample(collection) {\n\t      var func = isArray(collection) ? arraySample : baseSample;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets `n` random elements at unique keys from `collection` up to the\n\t     * size of `collection`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to sample.\n\t     * @param {number} [n=1] The number of elements to sample.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the random elements.\n\t     * @example\n\t     *\n\t     * _.sampleSize([1, 2, 3], 2);\n\t     * // => [3, 1]\n\t     *\n\t     * _.sampleSize([1, 2, 3], 4);\n\t     * // => [2, 3, 1]\n\t     */\n\t    function sampleSize(collection, n, guard) {\n\t      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n\t      return func(collection, n);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of shuffled values, using a version of the\n\t     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to shuffle.\n\t     * @returns {Array} Returns the new shuffled array.\n\t     * @example\n\t     *\n\t     * _.shuffle([1, 2, 3, 4]);\n\t     * // => [4, 1, 3, 2]\n\t     */\n\t    function shuffle(collection) {\n\t      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n\t      return func(collection);\n\t    }\n\t\n\t    /**\n\t     * Gets the size of `collection` by returning its length for array-like\n\t     * values or the number of own enumerable string keyed properties for objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object|string} collection The collection to inspect.\n\t     * @returns {number} Returns the collection size.\n\t     * @example\n\t     *\n\t     * _.size([1, 2, 3]);\n\t     * // => 3\n\t     *\n\t     * _.size({ 'a': 1, 'b': 2 });\n\t     * // => 2\n\t     *\n\t     * _.size('pebbles');\n\t     * // => 7\n\t     */\n\t    function size(collection) {\n\t      if (collection == null) {\n\t        return 0;\n\t      }\n\t      if (isArrayLike(collection)) {\n\t        return isString(collection) ? stringSize(collection) : collection.length;\n\t      }\n\t      var tag = getTag(collection);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return collection.size;\n\t      }\n\t      return baseKeys(collection).length;\n\t    }\n\t\n\t    /**\n\t     * Checks if `predicate` returns truthy for **any** element of `collection`.\n\t     * Iteration is stopped once `predicate` returns truthy. The predicate is\n\t     * invoked with three arguments: (value, index|key, collection).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {boolean} Returns `true` if any element passes the predicate check,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.some([null, 0, 'yes', false], Boolean);\n\t     * // => true\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'active': true },\n\t     *   { 'user': 'fred',   'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.some(users, { 'user': 'barney', 'active': false });\n\t     * // => false\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.some(users, ['active', false]);\n\t     * // => true\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.some(users, 'active');\n\t     * // => true\n\t     */\n\t    function some(collection, predicate, guard) {\n\t      var func = isArray(collection) ? arraySome : baseSome;\n\t      if (guard && isIterateeCall(collection, predicate, guard)) {\n\t        predicate = undefined;\n\t      }\n\t      return func(collection, getIteratee(predicate, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of elements, sorted in ascending order by the results of\n\t     * running each element in a collection thru each iteratee. This method\n\t     * performs a stable sort, that is, it preserves the original sort order of\n\t     * equal elements. The iteratees are invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Collection\n\t     * @param {Array|Object} collection The collection to iterate over.\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to sort by.\n\t     * @returns {Array} Returns the new sorted array.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'fred',   'age': 48 },\n\t     *   { 'user': 'barney', 'age': 36 },\n\t     *   { 'user': 'fred',   'age': 40 },\n\t     *   { 'user': 'barney', 'age': 34 }\n\t     * ];\n\t     *\n\t     * _.sortBy(users, [function(o) { return o.user; }]);\n\t     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n\t     *\n\t     * _.sortBy(users, ['user', 'age']);\n\t     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n\t     */\n\t    var sortBy = baseRest(function(collection, iteratees) {\n\t      if (collection == null) {\n\t        return [];\n\t      }\n\t      var length = iteratees.length;\n\t      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n\t        iteratees = [];\n\t      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n\t        iteratees = [iteratees[0]];\n\t      }\n\t      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n\t    });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Gets the timestamp of the number of milliseconds that have elapsed since\n\t     * the Unix epoch (1 January 1970 00:00:00 UTC).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Date\n\t     * @returns {number} Returns the timestamp.\n\t     * @example\n\t     *\n\t     * _.defer(function(stamp) {\n\t     *   console.log(_.now() - stamp);\n\t     * }, _.now());\n\t     * // => Logs the number of milliseconds it took for the deferred invocation.\n\t     */\n\t    var now = ctxNow || function() {\n\t      return root.Date.now();\n\t    };\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The opposite of `_.before`; this method creates a function that invokes\n\t     * `func` once it's called `n` or more times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {number} n The number of calls before `func` is invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var saves = ['profile', 'settings'];\n\t     *\n\t     * var done = _.after(saves.length, function() {\n\t     *   console.log('done saving!');\n\t     * });\n\t     *\n\t     * _.forEach(saves, function(type) {\n\t     *   asyncSave({ 'type': type, 'complete': done });\n\t     * });\n\t     * // => Logs 'done saving!' after the two async saves have completed.\n\t     */\n\t    function after(n, func) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n < 1) {\n\t          return func.apply(this, arguments);\n\t        }\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with up to `n` arguments,\n\t     * ignoring any additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @param {number} [n=func.length] The arity cap.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function ary(func, n, guard) {\n\t      n = guard ? undefined : n;\n\t      n = (func && n == null) ? func.length : n;\n\t      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func`, with the `this` binding and arguments\n\t     * of the created function, while it's called less than `n` times. Subsequent\n\t     * calls to the created function return the result of the last `func` invocation.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {number} n The number of calls at which `func` is no longer invoked.\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * jQuery(element).on('click', _.before(5, addContactToList));\n\t     * // => Allows adding up to 4 contacts to the list.\n\t     */\n\t    function before(n, func) {\n\t      var result;\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      n = toInteger(n);\n\t      return function() {\n\t        if (--n > 0) {\n\t          result = func.apply(this, arguments);\n\t        }\n\t        if (n <= 1) {\n\t          func = undefined;\n\t        }\n\t        return result;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n\t     * and `partials` prepended to the arguments it receives.\n\t     *\n\t     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n\t     * property of bound functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to bind.\n\t     * @param {*} thisArg The `this` binding of `func`.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, punctuation) {\n\t     *   return greeting + ' ' + this.user + punctuation;\n\t     * }\n\t     *\n\t     * var object = { 'user': 'fred' };\n\t     *\n\t     * var bound = _.bind(greet, object, 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bind(greet, object, _, '!');\n\t     * bound('hi');\n\t     * // => 'hi fred!'\n\t     */\n\t    var bind = baseRest(function(func, thisArg, partials) {\n\t      var bitmask = WRAP_BIND_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bind));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(func, bitmask, thisArg, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `object[key]` with `partials`\n\t     * prepended to the arguments it receives.\n\t     *\n\t     * This method differs from `_.bind` by allowing bound functions to reference\n\t     * methods that may be redefined or don't yet exist. See\n\t     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n\t     * for more details.\n\t     *\n\t     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Function\n\t     * @param {Object} object The object to invoke the method on.\n\t     * @param {string} key The key of the method.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new bound function.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'user': 'fred',\n\t     *   'greet': function(greeting, punctuation) {\n\t     *     return greeting + ' ' + this.user + punctuation;\n\t     *   }\n\t     * };\n\t     *\n\t     * var bound = _.bindKey(object, 'greet', 'hi');\n\t     * bound('!');\n\t     * // => 'hi fred!'\n\t     *\n\t     * object.greet = function(greeting, punctuation) {\n\t     *   return greeting + 'ya ' + this.user + punctuation;\n\t     * };\n\t     *\n\t     * bound('!');\n\t     * // => 'hiya fred!'\n\t     *\n\t     * // Bound with placeholders.\n\t     * var bound = _.bindKey(object, 'greet', _, '!');\n\t     * bound('hi');\n\t     * // => 'hiya fred!'\n\t     */\n\t    var bindKey = baseRest(function(object, key, partials) {\n\t      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n\t      if (partials.length) {\n\t        var holders = replaceHolders(partials, getHolder(bindKey));\n\t        bitmask |= WRAP_PARTIAL_FLAG;\n\t      }\n\t      return createWrap(key, bitmask, object, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that accepts arguments of `func` and either invokes\n\t     * `func` returning its result, if at least `arity` number of arguments have\n\t     * been provided, or returns a function that accepts the remaining `func`\n\t     * arguments, and so on. The arity of `func` may be specified if `func.length`\n\t     * is not sufficient.\n\t     *\n\t     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n\t     * may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curry(abc);\n\t     *\n\t     * curried(1)(2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2)(3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(1)(_, 3)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curry(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curry.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.curry` except that arguments are applied to `func`\n\t     * in the manner of `_.partialRight` instead of `_.partial`.\n\t     *\n\t     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for provided arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of curried functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to curry.\n\t     * @param {number} [arity=func.length] The arity of `func`.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the new curried function.\n\t     * @example\n\t     *\n\t     * var abc = function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * };\n\t     *\n\t     * var curried = _.curryRight(abc);\n\t     *\n\t     * curried(3)(2)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(2, 3)(1);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * curried(1, 2, 3);\n\t     * // => [1, 2, 3]\n\t     *\n\t     * // Curried with placeholders.\n\t     * curried(3)(1, _)(2);\n\t     * // => [1, 2, 3]\n\t     */\n\t    function curryRight(func, arity, guard) {\n\t      arity = guard ? undefined : arity;\n\t      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n\t      result.placeholder = curryRight.placeholder;\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates a debounced function that delays invoking `func` until after `wait`\n\t     * milliseconds have elapsed since the last time the debounced function was\n\t     * invoked. The debounced function comes with a `cancel` method to cancel\n\t     * delayed `func` invocations and a `flush` method to immediately invoke them.\n\t     * Provide `options` to indicate whether `func` should be invoked on the\n\t     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n\t     * with the last arguments provided to the debounced function. Subsequent\n\t     * calls to the debounced function return the result of the last `func`\n\t     * invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the debounced function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.debounce` and `_.throttle`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to debounce.\n\t     * @param {number} [wait=0] The number of milliseconds to delay.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=false]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {number} [options.maxWait]\n\t     *  The maximum time `func` is allowed to be delayed before it's invoked.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new debounced function.\n\t     * @example\n\t     *\n\t     * // Avoid costly calculations while the window size is in flux.\n\t     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n\t     *\n\t     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n\t     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n\t     *   'leading': true,\n\t     *   'trailing': false\n\t     * }));\n\t     *\n\t     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n\t     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n\t     * var source = new EventSource('/stream');\n\t     * jQuery(source).on('message', debounced);\n\t     *\n\t     * // Cancel the trailing debounced invocation.\n\t     * jQuery(window).on('popstate', debounced.cancel);\n\t     */\n\t    function debounce(func, wait, options) {\n\t      var lastArgs,\n\t          lastThis,\n\t          maxWait,\n\t          result,\n\t          timerId,\n\t          lastCallTime,\n\t          lastInvokeTime = 0,\n\t          leading = false,\n\t          maxing = false,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      wait = toNumber(wait) || 0;\n\t      if (isObject(options)) {\n\t        leading = !!options.leading;\n\t        maxing = 'maxWait' in options;\n\t        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t\n\t      function invokeFunc(time) {\n\t        var args = lastArgs,\n\t            thisArg = lastThis;\n\t\n\t        lastArgs = lastThis = undefined;\n\t        lastInvokeTime = time;\n\t        result = func.apply(thisArg, args);\n\t        return result;\n\t      }\n\t\n\t      function leadingEdge(time) {\n\t        // Reset any `maxWait` timer.\n\t        lastInvokeTime = time;\n\t        // Start the timer for the trailing edge.\n\t        timerId = setTimeout(timerExpired, wait);\n\t        // Invoke the leading edge.\n\t        return leading ? invokeFunc(time) : result;\n\t      }\n\t\n\t      function remainingWait(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime,\n\t            result = wait - timeSinceLastCall;\n\t\n\t        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n\t      }\n\t\n\t      function shouldInvoke(time) {\n\t        var timeSinceLastCall = time - lastCallTime,\n\t            timeSinceLastInvoke = time - lastInvokeTime;\n\t\n\t        // Either this is the first call, activity has stopped and we're at the\n\t        // trailing edge, the system time has gone backwards and we're treating\n\t        // it as the trailing edge, or we've hit the `maxWait` limit.\n\t        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n\t          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n\t      }\n\t\n\t      function timerExpired() {\n\t        var time = now();\n\t        if (shouldInvoke(time)) {\n\t          return trailingEdge(time);\n\t        }\n\t        // Restart the timer.\n\t        timerId = setTimeout(timerExpired, remainingWait(time));\n\t      }\n\t\n\t      function trailingEdge(time) {\n\t        timerId = undefined;\n\t\n\t        // Only invoke if we have `lastArgs` which means `func` has been\n\t        // debounced at least once.\n\t        if (trailing && lastArgs) {\n\t          return invokeFunc(time);\n\t        }\n\t        lastArgs = lastThis = undefined;\n\t        return result;\n\t      }\n\t\n\t      function cancel() {\n\t        if (timerId !== undefined) {\n\t          clearTimeout(timerId);\n\t        }\n\t        lastInvokeTime = 0;\n\t        lastArgs = lastCallTime = lastThis = timerId = undefined;\n\t      }\n\t\n\t      function flush() {\n\t        return timerId === undefined ? result : trailingEdge(now());\n\t      }\n\t\n\t      function debounced() {\n\t        var time = now(),\n\t            isInvoking = shouldInvoke(time);\n\t\n\t        lastArgs = arguments;\n\t        lastThis = this;\n\t        lastCallTime = time;\n\t\n\t        if (isInvoking) {\n\t          if (timerId === undefined) {\n\t            return leadingEdge(lastCallTime);\n\t          }\n\t          if (maxing) {\n\t            // Handle invocations in a tight loop.\n\t            timerId = setTimeout(timerExpired, wait);\n\t            return invokeFunc(lastCallTime);\n\t          }\n\t        }\n\t        if (timerId === undefined) {\n\t          timerId = setTimeout(timerExpired, wait);\n\t        }\n\t        return result;\n\t      }\n\t      debounced.cancel = cancel;\n\t      debounced.flush = flush;\n\t      return debounced;\n\t    }\n\t\n\t    /**\n\t     * Defers invoking the `func` until the current call stack has cleared. Any\n\t     * additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to defer.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.defer(function(text) {\n\t     *   console.log(text);\n\t     * }, 'deferred');\n\t     * // => Logs 'deferred' after one millisecond.\n\t     */\n\t    var defer = baseRest(function(func, args) {\n\t      return baseDelay(func, 1, args);\n\t    });\n\t\n\t    /**\n\t     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n\t     * provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to delay.\n\t     * @param {number} wait The number of milliseconds to delay invocation.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {number} Returns the timer id.\n\t     * @example\n\t     *\n\t     * _.delay(function(text) {\n\t     *   console.log(text);\n\t     * }, 1000, 'later');\n\t     * // => Logs 'later' after one second.\n\t     */\n\t    var delay = baseRest(function(func, wait, args) {\n\t      return baseDelay(func, toNumber(wait) || 0, args);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments reversed.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to flip arguments for.\n\t     * @returns {Function} Returns the new flipped function.\n\t     * @example\n\t     *\n\t     * var flipped = _.flip(function() {\n\t     *   return _.toArray(arguments);\n\t     * });\n\t     *\n\t     * flipped('a', 'b', 'c', 'd');\n\t     * // => ['d', 'c', 'b', 'a']\n\t     */\n\t    function flip(func) {\n\t      return createWrap(func, WRAP_FLIP_FLAG);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that memoizes the result of `func`. If `resolver` is\n\t     * provided, it determines the cache key for storing the result based on the\n\t     * arguments provided to the memoized function. By default, the first argument\n\t     * provided to the memoized function is used as the map cache key. The `func`\n\t     * is invoked with the `this` binding of the memoized function.\n\t     *\n\t     * **Note:** The cache is exposed as the `cache` property on the memoized\n\t     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n\t     * constructor with one whose instances implement the\n\t     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n\t     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to have its output memoized.\n\t     * @param {Function} [resolver] The function to resolve the cache key.\n\t     * @returns {Function} Returns the new memoized function.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     * var other = { 'c': 3, 'd': 4 };\n\t     *\n\t     * var values = _.memoize(_.values);\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * values(other);\n\t     * // => [3, 4]\n\t     *\n\t     * object.a = 2;\n\t     * values(object);\n\t     * // => [1, 2]\n\t     *\n\t     * // Modify the result cache.\n\t     * values.cache.set(object, ['a', 'b']);\n\t     * values(object);\n\t     * // => ['a', 'b']\n\t     *\n\t     * // Replace `_.memoize.Cache`.\n\t     * _.memoize.Cache = WeakMap;\n\t     */\n\t    function memoize(func, resolver) {\n\t      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      var memoized = function() {\n\t        var args = arguments,\n\t            key = resolver ? resolver.apply(this, args) : args[0],\n\t            cache = memoized.cache;\n\t\n\t        if (cache.has(key)) {\n\t          return cache.get(key);\n\t        }\n\t        var result = func.apply(this, args);\n\t        memoized.cache = cache.set(key, result) || cache;\n\t        return result;\n\t      };\n\t      memoized.cache = new (memoize.Cache || MapCache);\n\t      return memoized;\n\t    }\n\t\n\t    // Expose `MapCache`.\n\t    memoize.Cache = MapCache;\n\t\n\t    /**\n\t     * Creates a function that negates the result of the predicate `func`. The\n\t     * `func` predicate is invoked with the `this` binding and arguments of the\n\t     * created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} predicate The predicate to negate.\n\t     * @returns {Function} Returns the new negated function.\n\t     * @example\n\t     *\n\t     * function isEven(n) {\n\t     *   return n % 2 == 0;\n\t     * }\n\t     *\n\t     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n\t     * // => [1, 3, 5]\n\t     */\n\t    function negate(predicate) {\n\t      if (typeof predicate != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      return function() {\n\t        var args = arguments;\n\t        switch (args.length) {\n\t          case 0: return !predicate.call(this);\n\t          case 1: return !predicate.call(this, args[0]);\n\t          case 2: return !predicate.call(this, args[0], args[1]);\n\t          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n\t        }\n\t        return !predicate.apply(this, args);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates a function that is restricted to invoking `func` once. Repeat calls\n\t     * to the function return the value of the first invocation. The `func` is\n\t     * invoked with the `this` binding and arguments of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to restrict.\n\t     * @returns {Function} Returns the new restricted function.\n\t     * @example\n\t     *\n\t     * var initialize = _.once(createApplication);\n\t     * initialize();\n\t     * initialize();\n\t     * // => `createApplication` is invoked once\n\t     */\n\t    function once(func) {\n\t      return before(2, func);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with its arguments transformed.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Function\n\t     * @param {Function} func The function to wrap.\n\t     * @param {...(Function|Function[])} [transforms=[_.identity]]\n\t     *  The argument transforms.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * function doubled(n) {\n\t     *   return n * 2;\n\t     * }\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var func = _.overArgs(function(x, y) {\n\t     *   return [x, y];\n\t     * }, [square, doubled]);\n\t     *\n\t     * func(9, 3);\n\t     * // => [81, 6]\n\t     *\n\t     * func(10, 5);\n\t     * // => [100, 10]\n\t     */\n\t    var overArgs = castRest(function(func, transforms) {\n\t      transforms = (transforms.length == 1 && isArray(transforms[0]))\n\t        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n\t        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\t\n\t      var funcsLength = transforms.length;\n\t      return baseRest(function(args) {\n\t        var index = -1,\n\t            length = nativeMin(args.length, funcsLength);\n\t\n\t        while (++index < length) {\n\t          args[index] = transforms[index].call(this, args[index]);\n\t        }\n\t        return apply(func, this, args);\n\t      });\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with `partials` prepended to the\n\t     * arguments it receives. This method is like `_.bind` except it does **not**\n\t     * alter the `this` binding.\n\t     *\n\t     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var sayHelloTo = _.partial(greet, 'hello');\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var greetFred = _.partial(greet, _, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     */\n\t    var partial = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partial));\n\t      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.partial` except that partially applied arguments\n\t     * are appended to the arguments it receives.\n\t     *\n\t     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n\t     * builds, may be used as a placeholder for partially applied arguments.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of partially\n\t     * applied functions.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to partially apply arguments to.\n\t     * @param {...*} [partials] The arguments to be partially applied.\n\t     * @returns {Function} Returns the new partially applied function.\n\t     * @example\n\t     *\n\t     * function greet(greeting, name) {\n\t     *   return greeting + ' ' + name;\n\t     * }\n\t     *\n\t     * var greetFred = _.partialRight(greet, 'fred');\n\t     * greetFred('hi');\n\t     * // => 'hi fred'\n\t     *\n\t     * // Partially applied with placeholders.\n\t     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n\t     * sayHelloTo('fred');\n\t     * // => 'hello fred'\n\t     */\n\t    var partialRight = baseRest(function(func, partials) {\n\t      var holders = replaceHolders(partials, getHolder(partialRight));\n\t      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with arguments arranged according\n\t     * to the specified `indexes` where the argument value at the first index is\n\t     * provided as the first argument, the argument value at the second index is\n\t     * provided as the second argument, and so on.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to rearrange arguments for.\n\t     * @param {...(number|number[])} indexes The arranged argument indexes.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var rearged = _.rearg(function(a, b, c) {\n\t     *   return [a, b, c];\n\t     * }, [2, 0, 1]);\n\t     *\n\t     * rearged('b', 'c', 'a')\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    var rearg = flatRest(function(func, indexes) {\n\t      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n\t    });\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * created function and arguments from `start` and beyond provided as\n\t     * an array.\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [rest parameter](https://mdn.io/rest_parameters).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to apply a rest parameter to.\n\t     * @param {number} [start=func.length-1] The start position of the rest parameter.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.rest(function(what, names) {\n\t     *   return what + ' ' + _.initial(names).join(', ') +\n\t     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n\t     * });\n\t     *\n\t     * say('hello', 'fred', 'barney', 'pebbles');\n\t     * // => 'hello fred, barney, & pebbles'\n\t     */\n\t    function rest(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start === undefined ? start : toInteger(start);\n\t      return baseRest(func, start);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the `this` binding of the\n\t     * create function and an array of arguments much like\n\t     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n\t     *\n\t     * **Note:** This method is based on the\n\t     * [spread operator](https://mdn.io/spread_operator).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Function\n\t     * @param {Function} func The function to spread arguments over.\n\t     * @param {number} [start=0] The start position of the spread.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var say = _.spread(function(who, what) {\n\t     *   return who + ' says ' + what;\n\t     * });\n\t     *\n\t     * say(['fred', 'hello']);\n\t     * // => 'fred says hello'\n\t     *\n\t     * var numbers = Promise.all([\n\t     *   Promise.resolve(40),\n\t     *   Promise.resolve(36)\n\t     * ]);\n\t     *\n\t     * numbers.then(_.spread(function(x, y) {\n\t     *   return x + y;\n\t     * }));\n\t     * // => a Promise of 76\n\t     */\n\t    function spread(func, start) {\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n\t      return baseRest(function(args) {\n\t        var array = args[start],\n\t            otherArgs = castSlice(args, 0, start);\n\t\n\t        if (array) {\n\t          arrayPush(otherArgs, array);\n\t        }\n\t        return apply(func, this, otherArgs);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a throttled function that only invokes `func` at most once per\n\t     * every `wait` milliseconds. The throttled function comes with a `cancel`\n\t     * method to cancel delayed `func` invocations and a `flush` method to\n\t     * immediately invoke them. Provide `options` to indicate whether `func`\n\t     * should be invoked on the leading and/or trailing edge of the `wait`\n\t     * timeout. The `func` is invoked with the last arguments provided to the\n\t     * throttled function. Subsequent calls to the throttled function return the\n\t     * result of the last `func` invocation.\n\t     *\n\t     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n\t     * invoked on the trailing edge of the timeout only if the throttled function\n\t     * is invoked more than once during the `wait` timeout.\n\t     *\n\t     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n\t     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n\t     *\n\t     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n\t     * for details over the differences between `_.throttle` and `_.debounce`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {Function} func The function to throttle.\n\t     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.leading=true]\n\t     *  Specify invoking on the leading edge of the timeout.\n\t     * @param {boolean} [options.trailing=true]\n\t     *  Specify invoking on the trailing edge of the timeout.\n\t     * @returns {Function} Returns the new throttled function.\n\t     * @example\n\t     *\n\t     * // Avoid excessively updating the position while scrolling.\n\t     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n\t     *\n\t     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n\t     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n\t     * jQuery(element).on('click', throttled);\n\t     *\n\t     * // Cancel the trailing throttled invocation.\n\t     * jQuery(window).on('popstate', throttled.cancel);\n\t     */\n\t    function throttle(func, wait, options) {\n\t      var leading = true,\n\t          trailing = true;\n\t\n\t      if (typeof func != 'function') {\n\t        throw new TypeError(FUNC_ERROR_TEXT);\n\t      }\n\t      if (isObject(options)) {\n\t        leading = 'leading' in options ? !!options.leading : leading;\n\t        trailing = 'trailing' in options ? !!options.trailing : trailing;\n\t      }\n\t      return debounce(func, wait, {\n\t        'leading': leading,\n\t        'maxWait': wait,\n\t        'trailing': trailing\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that accepts up to one argument, ignoring any\n\t     * additional arguments.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Function\n\t     * @param {Function} func The function to cap arguments for.\n\t     * @returns {Function} Returns the new capped function.\n\t     * @example\n\t     *\n\t     * _.map(['6', '8', '10'], _.unary(parseInt));\n\t     * // => [6, 8, 10]\n\t     */\n\t    function unary(func) {\n\t      return ary(func, 1);\n\t    }\n\t\n\t    /**\n\t     * Creates a function that provides `value` to `wrapper` as its first\n\t     * argument. Any additional arguments provided to the function are appended\n\t     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n\t     * binding of the created function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Function\n\t     * @param {*} value The value to wrap.\n\t     * @param {Function} [wrapper=identity] The wrapper function.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var p = _.wrap(_.escape, function(func, text) {\n\t     *   return '<p>' + func(text) + '</p>';\n\t     * });\n\t     *\n\t     * p('fred, barney, & pebbles');\n\t     * // => '<p>fred, barney, &amp; pebbles</p>'\n\t     */\n\t    function wrap(value, wrapper) {\n\t      return partial(castFunction(wrapper), value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Casts `value` as an array if it's not one.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.4.0\n\t     * @category Lang\n\t     * @param {*} value The value to inspect.\n\t     * @returns {Array} Returns the cast array.\n\t     * @example\n\t     *\n\t     * _.castArray(1);\n\t     * // => [1]\n\t     *\n\t     * _.castArray({ 'a': 1 });\n\t     * // => [{ 'a': 1 }]\n\t     *\n\t     * _.castArray('abc');\n\t     * // => ['abc']\n\t     *\n\t     * _.castArray(null);\n\t     * // => [null]\n\t     *\n\t     * _.castArray(undefined);\n\t     * // => [undefined]\n\t     *\n\t     * _.castArray();\n\t     * // => []\n\t     *\n\t     * var array = [1, 2, 3];\n\t     * console.log(_.castArray(array) === array);\n\t     * // => true\n\t     */\n\t    function castArray() {\n\t      if (!arguments.length) {\n\t        return [];\n\t      }\n\t      var value = arguments[0];\n\t      return isArray(value) ? value : [value];\n\t    }\n\t\n\t    /**\n\t     * Creates a shallow clone of `value`.\n\t     *\n\t     * **Note:** This method is loosely based on the\n\t     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n\t     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n\t     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n\t     * arrays. The own enumerable properties of `arguments` objects are cloned\n\t     * as plain objects. An empty object is returned for uncloneable values such\n\t     * as error objects, functions, DOM nodes, and WeakMaps.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeep\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var shallow = _.clone(objects);\n\t     * console.log(shallow[0] === objects[0]);\n\t     * // => true\n\t     */\n\t    function clone(value) {\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it accepts `customizer` which\n\t     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n\t     * cloning is handled by the method instead. The `customizer` is invoked with\n\t     * up to four arguments; (value [, index|key, object, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the cloned value.\n\t     * @see _.cloneDeepWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(false);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 0\n\t     */\n\t    function cloneWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.clone` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.clone\n\t     * @example\n\t     *\n\t     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n\t     *\n\t     * var deep = _.cloneDeep(objects);\n\t     * console.log(deep[0] === objects[0]);\n\t     * // => false\n\t     */\n\t    function cloneDeep(value) {\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.cloneWith` except that it recursively clones `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to recursively clone.\n\t     * @param {Function} [customizer] The function to customize cloning.\n\t     * @returns {*} Returns the deep cloned value.\n\t     * @see _.cloneWith\n\t     * @example\n\t     *\n\t     * function customizer(value) {\n\t     *   if (_.isElement(value)) {\n\t     *     return value.cloneNode(true);\n\t     *   }\n\t     * }\n\t     *\n\t     * var el = _.cloneDeepWith(document.body, customizer);\n\t     *\n\t     * console.log(el === document.body);\n\t     * // => false\n\t     * console.log(el.nodeName);\n\t     * // => 'BODY'\n\t     * console.log(el.childNodes.length);\n\t     * // => 20\n\t     */\n\t    function cloneDeepWith(value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `object` conforms to `source` by invoking the predicate\n\t     * properties of `source` with the corresponding property values of `object`.\n\t     *\n\t     * **Note:** This method is equivalent to `_.conforms` when `source` is\n\t     * partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n\t     * // => true\n\t     *\n\t     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n\t     * // => false\n\t     */\n\t    function conformsTo(object, source) {\n\t      return source == null || baseConformsTo(object, source, keys(source));\n\t    }\n\t\n\t    /**\n\t     * Performs a\n\t     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n\t     * comparison between two values to determine if they are equivalent.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.eq(object, object);\n\t     * // => true\n\t     *\n\t     * _.eq(object, other);\n\t     * // => false\n\t     *\n\t     * _.eq('a', 'a');\n\t     * // => true\n\t     *\n\t     * _.eq('a', Object('a'));\n\t     * // => false\n\t     *\n\t     * _.eq(NaN, NaN);\n\t     * // => true\n\t     */\n\t    function eq(value, other) {\n\t      return value === other || (value !== value && other !== other);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is greater than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n\t     *  else `false`.\n\t     * @see _.lt\n\t     * @example\n\t     *\n\t     * _.gt(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.gt(1, 3);\n\t     * // => false\n\t     */\n\t    var gt = createRelationalOperation(baseGt);\n\t\n\t    /**\n\t     * Checks if `value` is greater than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.lte\n\t     * @example\n\t     *\n\t     * _.gte(3, 1);\n\t     * // => true\n\t     *\n\t     * _.gte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.gte(1, 3);\n\t     * // => false\n\t     */\n\t    var gte = createRelationalOperation(function(value, other) {\n\t      return value >= other;\n\t    });\n\t\n\t    /**\n\t     * Checks if `value` is likely an `arguments` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArguments(function() { return arguments; }());\n\t     * // => true\n\t     *\n\t     * _.isArguments([1, 2, 3]);\n\t     * // => false\n\t     */\n\t    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n\t      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n\t        !propertyIsEnumerable.call(value, 'callee');\n\t    };\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `Array` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArray([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArray(document.body.children);\n\t     * // => false\n\t     *\n\t     * _.isArray('abc');\n\t     * // => false\n\t     *\n\t     * _.isArray(_.noop);\n\t     * // => false\n\t     */\n\t    var isArray = Array.isArray;\n\t\n\t    /**\n\t     * Checks if `value` is classified as an `ArrayBuffer` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayBuffer(new ArrayBuffer(2));\n\t     * // => true\n\t     *\n\t     * _.isArrayBuffer(new Array(2));\n\t     * // => false\n\t     */\n\t    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\t\n\t    /**\n\t     * Checks if `value` is array-like. A value is considered array-like if it's\n\t     * not a function and has a `value.length` that's an integer greater than or\n\t     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLike('abc');\n\t     * // => true\n\t     *\n\t     * _.isArrayLike(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLike(value) {\n\t      return value != null && isLength(value.length) && !isFunction(value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isArrayLike` except that it also checks if `value`\n\t     * is an object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an array-like object,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isArrayLikeObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject(document.body.children);\n\t     * // => true\n\t     *\n\t     * _.isArrayLikeObject('abc');\n\t     * // => false\n\t     *\n\t     * _.isArrayLikeObject(_.noop);\n\t     * // => false\n\t     */\n\t    function isArrayLikeObject(value) {\n\t      return isObjectLike(value) && isArrayLike(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a boolean primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBoolean(false);\n\t     * // => true\n\t     *\n\t     * _.isBoolean(null);\n\t     * // => false\n\t     */\n\t    function isBoolean(value) {\n\t      return value === true || value === false ||\n\t        (isObjectLike(value) && baseGetTag(value) == boolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a buffer.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isBuffer(new Buffer(2));\n\t     * // => true\n\t     *\n\t     * _.isBuffer(new Uint8Array(2));\n\t     * // => false\n\t     */\n\t    var isBuffer = nativeIsBuffer || stubFalse;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Date` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isDate(new Date);\n\t     * // => true\n\t     *\n\t     * _.isDate('Mon April 23 2012');\n\t     * // => false\n\t     */\n\t    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\t\n\t    /**\n\t     * Checks if `value` is likely a DOM element.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n\t     * @example\n\t     *\n\t     * _.isElement(document.body);\n\t     * // => true\n\t     *\n\t     * _.isElement('<body>');\n\t     * // => false\n\t     */\n\t    function isElement(value) {\n\t      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an empty object, collection, map, or set.\n\t     *\n\t     * Objects are considered empty if they have no own enumerable string keyed\n\t     * properties.\n\t     *\n\t     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n\t     * jQuery-like collections are considered empty if they have a `length` of `0`.\n\t     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n\t     * @example\n\t     *\n\t     * _.isEmpty(null);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(true);\n\t     * // => true\n\t     *\n\t     * _.isEmpty(1);\n\t     * // => true\n\t     *\n\t     * _.isEmpty([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isEmpty({ 'a': 1 });\n\t     * // => false\n\t     */\n\t    function isEmpty(value) {\n\t      if (value == null) {\n\t        return true;\n\t      }\n\t      if (isArrayLike(value) &&\n\t          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n\t            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n\t        return !value.length;\n\t      }\n\t      var tag = getTag(value);\n\t      if (tag == mapTag || tag == setTag) {\n\t        return !value.size;\n\t      }\n\t      if (isPrototype(value)) {\n\t        return !baseKeys(value).length;\n\t      }\n\t      for (var key in value) {\n\t        if (hasOwnProperty.call(value, key)) {\n\t          return false;\n\t        }\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Performs a deep comparison between two values to determine if they are\n\t     * equivalent.\n\t     *\n\t     * **Note:** This method supports comparing arrays, array buffers, booleans,\n\t     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n\t     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n\t     * by their own, not inherited, enumerable properties. Functions and DOM\n\t     * nodes are compared by strict equality, i.e. `===`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     * var other = { 'a': 1 };\n\t     *\n\t     * _.isEqual(object, other);\n\t     * // => true\n\t     *\n\t     * object === other;\n\t     * // => false\n\t     */\n\t    function isEqual(value, other) {\n\t      return baseIsEqual(value, other);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isEqual` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with up to\n\t     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, othValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var array = ['hello', 'goodbye'];\n\t     * var other = ['hi', 'goodbye'];\n\t     *\n\t     * _.isEqualWith(array, other, customizer);\n\t     * // => true\n\t     */\n\t    function isEqualWith(value, other, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      var result = customizer ? customizer(value, other) : undefined;\n\t      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n\t     * `SyntaxError`, `TypeError`, or `URIError` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isError(new Error);\n\t     * // => true\n\t     *\n\t     * _.isError(Error);\n\t     * // => false\n\t     */\n\t    function isError(value) {\n\t      if (!isObjectLike(value)) {\n\t        return false;\n\t      }\n\t      var tag = baseGetTag(value);\n\t      return tag == errorTag || tag == domExcTag ||\n\t        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a finite primitive number.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFinite(3);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isFinite(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isFinite('3');\n\t     * // => false\n\t     */\n\t    function isFinite(value) {\n\t      return typeof value == 'number' && nativeIsFinite(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Function` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n\t     * @example\n\t     *\n\t     * _.isFunction(_);\n\t     * // => true\n\t     *\n\t     * _.isFunction(/abc/);\n\t     * // => false\n\t     */\n\t    function isFunction(value) {\n\t      if (!isObject(value)) {\n\t        return false;\n\t      }\n\t      // The use of `Object#toString` avoids issues with the `typeof` operator\n\t      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\t      var tag = baseGetTag(value);\n\t      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is an integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isInteger('3');\n\t     * // => false\n\t     */\n\t    function isInteger(value) {\n\t      return typeof value == 'number' && value == toInteger(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a valid array-like length.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n\t     * @example\n\t     *\n\t     * _.isLength(3);\n\t     * // => true\n\t     *\n\t     * _.isLength(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isLength(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isLength('3');\n\t     * // => false\n\t     */\n\t    function isLength(value) {\n\t      return typeof value == 'number' &&\n\t        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is the\n\t     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n\t     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObject({});\n\t     * // => true\n\t     *\n\t     * _.isObject([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObject(_.noop);\n\t     * // => true\n\t     *\n\t     * _.isObject(null);\n\t     * // => false\n\t     */\n\t    function isObject(value) {\n\t      var type = typeof value;\n\t      return value != null && (type == 'object' || type == 'function');\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is object-like. A value is object-like if it's not `null`\n\t     * and has a `typeof` result of \"object\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n\t     * @example\n\t     *\n\t     * _.isObjectLike({});\n\t     * // => true\n\t     *\n\t     * _.isObjectLike([1, 2, 3]);\n\t     * // => true\n\t     *\n\t     * _.isObjectLike(_.noop);\n\t     * // => false\n\t     *\n\t     * _.isObjectLike(null);\n\t     * // => false\n\t     */\n\t    function isObjectLike(value) {\n\t      return value != null && typeof value == 'object';\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Map` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isMap(new Map);\n\t     * // => true\n\t     *\n\t     * _.isMap(new WeakMap);\n\t     * // => false\n\t     */\n\t    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\t\n\t    /**\n\t     * Performs a partial deep comparison between `object` and `source` to\n\t     * determine if `object` contains equivalent property values.\n\t     *\n\t     * **Note:** This method is equivalent to `_.matches` when `source` is\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2 };\n\t     *\n\t     * _.isMatch(object, { 'b': 2 });\n\t     * // => true\n\t     *\n\t     * _.isMatch(object, { 'b': 1 });\n\t     * // => false\n\t     */\n\t    function isMatch(object, source) {\n\t      return object === source || baseIsMatch(object, source, getMatchData(source));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.isMatch` except that it accepts `customizer` which\n\t     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n\t     * are handled by the method instead. The `customizer` is invoked with five\n\t     * arguments: (objValue, srcValue, index|key, object, source).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Object} source The object of property values to match.\n\t     * @param {Function} [customizer] The function to customize comparisons.\n\t     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n\t     * @example\n\t     *\n\t     * function isGreeting(value) {\n\t     *   return /^h(?:i|ello)$/.test(value);\n\t     * }\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n\t     *     return true;\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'greeting': 'hello' };\n\t     * var source = { 'greeting': 'hi' };\n\t     *\n\t     * _.isMatchWith(object, source, customizer);\n\t     * // => true\n\t     */\n\t    function isMatchWith(object, source, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return baseIsMatch(object, source, getMatchData(source), customizer);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `NaN`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n\t     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n\t     * `undefined` and other non-number values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNaN(NaN);\n\t     * // => true\n\t     *\n\t     * _.isNaN(new Number(NaN));\n\t     * // => true\n\t     *\n\t     * isNaN(undefined);\n\t     * // => true\n\t     *\n\t     * _.isNaN(undefined);\n\t     * // => false\n\t     */\n\t    function isNaN(value) {\n\t      // An `NaN` primitive is the only value that is not equal to itself.\n\t      // Perform the `toStringTag` check first to avoid errors with some\n\t      // ActiveX objects in IE.\n\t      return isNumber(value) && value != +value;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a pristine native function.\n\t     *\n\t     * **Note:** This method can't reliably detect native functions in the presence\n\t     * of the core-js package because core-js circumvents this kind of detection.\n\t     * Despite multiple requests, the core-js maintainer has made it clear: any\n\t     * attempt to fix the detection will be obstructed. As a result, we're left\n\t     * with little choice but to throw an error. Unfortunately, this also affects\n\t     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n\t     * which rely on core-js.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a native function,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.isNative(Array.prototype.push);\n\t     * // => true\n\t     *\n\t     * _.isNative(_);\n\t     * // => false\n\t     */\n\t    function isNative(value) {\n\t      if (isMaskable(value)) {\n\t        throw new Error(CORE_ERROR_TEXT);\n\t      }\n\t      return baseIsNative(value);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNull(null);\n\t     * // => true\n\t     *\n\t     * _.isNull(void 0);\n\t     * // => false\n\t     */\n\t    function isNull(value) {\n\t      return value === null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is `null` or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNil(null);\n\t     * // => true\n\t     *\n\t     * _.isNil(void 0);\n\t     * // => true\n\t     *\n\t     * _.isNil(NaN);\n\t     * // => false\n\t     */\n\t    function isNil(value) {\n\t      return value == null;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Number` primitive or object.\n\t     *\n\t     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n\t     * classified as numbers, use the `_.isFinite` method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n\t     * @example\n\t     *\n\t     * _.isNumber(3);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Number.MIN_VALUE);\n\t     * // => true\n\t     *\n\t     * _.isNumber(Infinity);\n\t     * // => true\n\t     *\n\t     * _.isNumber('3');\n\t     * // => false\n\t     */\n\t    function isNumber(value) {\n\t      return typeof value == 'number' ||\n\t        (isObjectLike(value) && baseGetTag(value) == numberTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is a plain object, that is, an object created by the\n\t     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.8.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * _.isPlainObject(new Foo);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject([1, 2, 3]);\n\t     * // => false\n\t     *\n\t     * _.isPlainObject({ 'x': 0, 'y': 0 });\n\t     * // => true\n\t     *\n\t     * _.isPlainObject(Object.create(null));\n\t     * // => true\n\t     */\n\t    function isPlainObject(value) {\n\t      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n\t        return false;\n\t      }\n\t      var proto = getPrototype(value);\n\t      if (proto === null) {\n\t        return true;\n\t      }\n\t      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n\t      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n\t        funcToString.call(Ctor) == objectCtorString;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `RegExp` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.1.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n\t     * @example\n\t     *\n\t     * _.isRegExp(/abc/);\n\t     * // => true\n\t     *\n\t     * _.isRegExp('/abc/');\n\t     * // => false\n\t     */\n\t    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\t\n\t    /**\n\t     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n\t     * double precision number which isn't the result of a rounded unsafe integer.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSafeInteger(3);\n\t     * // => true\n\t     *\n\t     * _.isSafeInteger(Number.MIN_VALUE);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger(Infinity);\n\t     * // => false\n\t     *\n\t     * _.isSafeInteger('3');\n\t     * // => false\n\t     */\n\t    function isSafeInteger(value) {\n\t      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Set` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSet(new Set);\n\t     * // => true\n\t     *\n\t     * _.isSet(new WeakSet);\n\t     * // => false\n\t     */\n\t    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `String` primitive or object.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n\t     * @example\n\t     *\n\t     * _.isString('abc');\n\t     * // => true\n\t     *\n\t     * _.isString(1);\n\t     * // => false\n\t     */\n\t    function isString(value) {\n\t      return typeof value == 'string' ||\n\t        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `Symbol` primitive or object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n\t     * @example\n\t     *\n\t     * _.isSymbol(Symbol.iterator);\n\t     * // => true\n\t     *\n\t     * _.isSymbol('abc');\n\t     * // => false\n\t     */\n\t    function isSymbol(value) {\n\t      return typeof value == 'symbol' ||\n\t        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a typed array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n\t     * @example\n\t     *\n\t     * _.isTypedArray(new Uint8Array);\n\t     * // => true\n\t     *\n\t     * _.isTypedArray([]);\n\t     * // => false\n\t     */\n\t    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\t\n\t    /**\n\t     * Checks if `value` is `undefined`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n\t     * @example\n\t     *\n\t     * _.isUndefined(void 0);\n\t     * // => true\n\t     *\n\t     * _.isUndefined(null);\n\t     * // => false\n\t     */\n\t    function isUndefined(value) {\n\t      return value === undefined;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakMap` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakMap(new WeakMap);\n\t     * // => true\n\t     *\n\t     * _.isWeakMap(new Map);\n\t     * // => false\n\t     */\n\t    function isWeakMap(value) {\n\t      return isObjectLike(value) && getTag(value) == weakMapTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is classified as a `WeakSet` object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.3.0\n\t     * @category Lang\n\t     * @param {*} value The value to check.\n\t     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n\t     * @example\n\t     *\n\t     * _.isWeakSet(new WeakSet);\n\t     * // => true\n\t     *\n\t     * _.isWeakSet(new Set);\n\t     * // => false\n\t     */\n\t    function isWeakSet(value) {\n\t      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n\t    }\n\t\n\t    /**\n\t     * Checks if `value` is less than `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than `other`,\n\t     *  else `false`.\n\t     * @see _.gt\n\t     * @example\n\t     *\n\t     * _.lt(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lt(3, 3);\n\t     * // => false\n\t     *\n\t     * _.lt(3, 1);\n\t     * // => false\n\t     */\n\t    var lt = createRelationalOperation(baseLt);\n\t\n\t    /**\n\t     * Checks if `value` is less than or equal to `other`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.9.0\n\t     * @category Lang\n\t     * @param {*} value The value to compare.\n\t     * @param {*} other The other value to compare.\n\t     * @returns {boolean} Returns `true` if `value` is less than or equal to\n\t     *  `other`, else `false`.\n\t     * @see _.gte\n\t     * @example\n\t     *\n\t     * _.lte(1, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 3);\n\t     * // => true\n\t     *\n\t     * _.lte(3, 1);\n\t     * // => false\n\t     */\n\t    var lte = createRelationalOperation(function(value, other) {\n\t      return value <= other;\n\t    });\n\t\n\t    /**\n\t     * Converts `value` to an array.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the converted array.\n\t     * @example\n\t     *\n\t     * _.toArray({ 'a': 1, 'b': 2 });\n\t     * // => [1, 2]\n\t     *\n\t     * _.toArray('abc');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toArray(1);\n\t     * // => []\n\t     *\n\t     * _.toArray(null);\n\t     * // => []\n\t     */\n\t    function toArray(value) {\n\t      if (!value) {\n\t        return [];\n\t      }\n\t      if (isArrayLike(value)) {\n\t        return isString(value) ? stringToArray(value) : copyArray(value);\n\t      }\n\t      if (symIterator && value[symIterator]) {\n\t        return iteratorToArray(value[symIterator]());\n\t      }\n\t      var tag = getTag(value),\n\t          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\t\n\t      return func(value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a finite number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.12.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted number.\n\t     * @example\n\t     *\n\t     * _.toFinite(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toFinite(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toFinite(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toFinite('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toFinite(value) {\n\t      if (!value) {\n\t        return value === 0 ? value : 0;\n\t      }\n\t      value = toNumber(value);\n\t      if (value === INFINITY || value === -INFINITY) {\n\t        var sign = (value < 0 ? -1 : 1);\n\t        return sign * MAX_INTEGER;\n\t      }\n\t      return value === value ? value : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer.\n\t     *\n\t     * **Note:** This method is loosely based on\n\t     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toInteger(Infinity);\n\t     * // => 1.7976931348623157e+308\n\t     *\n\t     * _.toInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toInteger(value) {\n\t      var result = toFinite(value),\n\t          remainder = result % 1;\n\t\n\t      return result === result ? (remainder ? result - remainder : result) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to an integer suitable for use as the length of an\n\t     * array-like object.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toLength(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toLength(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toLength(Infinity);\n\t     * // => 4294967295\n\t     *\n\t     * _.toLength('3.2');\n\t     * // => 3\n\t     */\n\t    function toLength(value) {\n\t      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to process.\n\t     * @returns {number} Returns the number.\n\t     * @example\n\t     *\n\t     * _.toNumber(3.2);\n\t     * // => 3.2\n\t     *\n\t     * _.toNumber(Number.MIN_VALUE);\n\t     * // => 5e-324\n\t     *\n\t     * _.toNumber(Infinity);\n\t     * // => Infinity\n\t     *\n\t     * _.toNumber('3.2');\n\t     * // => 3.2\n\t     */\n\t    function toNumber(value) {\n\t      if (typeof value == 'number') {\n\t        return value;\n\t      }\n\t      if (isSymbol(value)) {\n\t        return NAN;\n\t      }\n\t      if (isObject(value)) {\n\t        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n\t        value = isObject(other) ? (other + '') : other;\n\t      }\n\t      if (typeof value != 'string') {\n\t        return value === 0 ? value : +value;\n\t      }\n\t      value = value.replace(reTrim, '');\n\t      var isBinary = reIsBinary.test(value);\n\t      return (isBinary || reIsOctal.test(value))\n\t        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n\t        : (reIsBadHex.test(value) ? NAN : +value);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a plain object flattening inherited enumerable string\n\t     * keyed properties of `value` to own properties of the plain object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {Object} Returns the converted plain object.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.assign({ 'a': 1 }, new Foo);\n\t     * // => { 'a': 1, 'b': 2 }\n\t     *\n\t     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n\t     * // => { 'a': 1, 'b': 2, 'c': 3 }\n\t     */\n\t    function toPlainObject(value) {\n\t      return copyObject(value, keysIn(value));\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a safe integer. A safe integer can be compared and\n\t     * represented correctly.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.toSafeInteger(3.2);\n\t     * // => 3\n\t     *\n\t     * _.toSafeInteger(Number.MIN_VALUE);\n\t     * // => 0\n\t     *\n\t     * _.toSafeInteger(Infinity);\n\t     * // => 9007199254740991\n\t     *\n\t     * _.toSafeInteger('3.2');\n\t     * // => 3\n\t     */\n\t    function toSafeInteger(value) {\n\t      return value\n\t        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n\t        : (value === 0 ? value : 0);\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a string. An empty string is returned for `null`\n\t     * and `undefined` values. The sign of `-0` is preserved.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Lang\n\t     * @param {*} value The value to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.toString(null);\n\t     * // => ''\n\t     *\n\t     * _.toString(-0);\n\t     * // => '-0'\n\t     *\n\t     * _.toString([1, 2, 3]);\n\t     * // => '1,2,3'\n\t     */\n\t    function toString(value) {\n\t      return value == null ? '' : baseToString(value);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Assigns own enumerable string keyed properties of source objects to the\n\t     * destination object. Source objects are applied from left to right.\n\t     * Subsequent sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object` and is loosely based on\n\t     * [`Object.assign`](https://mdn.io/Object/assign).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assign({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var assign = createAssigner(function(object, source) {\n\t      if (isPrototype(source) || isArrayLike(source)) {\n\t        copyObject(source, keys(source), object);\n\t        return;\n\t      }\n\t      for (var key in source) {\n\t        if (hasOwnProperty.call(source, key)) {\n\t          assignValue(object, key, source[key]);\n\t        }\n\t      }\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it iterates over own and\n\t     * inherited source properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extend\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assign\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     * }\n\t     *\n\t     * function Bar() {\n\t     *   this.c = 3;\n\t     * }\n\t     *\n\t     * Foo.prototype.b = 2;\n\t     * Bar.prototype.d = 4;\n\t     *\n\t     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n\t     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n\t     */\n\t    var assignIn = createAssigner(function(object, source) {\n\t      copyObject(source, keysIn(source), object);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assignIn` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias extendWith\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignInWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keysIn(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it accepts `customizer`\n\t     * which is invoked to produce the assigned values. If `customizer` returns\n\t     * `undefined`, assignment is handled by the method instead. The `customizer`\n\t     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.assignInWith\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   return _.isUndefined(objValue) ? srcValue : objValue;\n\t     * }\n\t     *\n\t     * var defaults = _.partialRight(_.assignWith, customizer);\n\t     *\n\t     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      copyObject(source, keys(source), object, customizer);\n\t    });\n\t\n\t    /**\n\t     * Creates an array of values corresponding to `paths` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Array} Returns the picked values.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n\t     *\n\t     * _.at(object, ['a[0].b.c', 'a[1]']);\n\t     * // => [3, 4]\n\t     */\n\t    var at = flatRest(baseAt);\n\t\n\t    /**\n\t     * Creates an object that inherits from the `prototype` object. If a\n\t     * `properties` object is given, its own enumerable string keyed properties\n\t     * are assigned to the created object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Object\n\t     * @param {Object} prototype The object to inherit from.\n\t     * @param {Object} [properties] The properties to assign to the object.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * function Shape() {\n\t     *   this.x = 0;\n\t     *   this.y = 0;\n\t     * }\n\t     *\n\t     * function Circle() {\n\t     *   Shape.call(this);\n\t     * }\n\t     *\n\t     * Circle.prototype = _.create(Shape.prototype, {\n\t     *   'constructor': Circle\n\t     * });\n\t     *\n\t     * var circle = new Circle;\n\t     * circle instanceof Circle;\n\t     * // => true\n\t     *\n\t     * circle instanceof Shape;\n\t     * // => true\n\t     */\n\t    function create(prototype, properties) {\n\t      var result = baseCreate(prototype);\n\t      return properties == null ? result : baseAssign(result, properties);\n\t    }\n\t\n\t    /**\n\t     * Assigns own and inherited enumerable string keyed properties of source\n\t     * objects to the destination object for all destination properties that\n\t     * resolve to `undefined`. Source objects are applied from left to right.\n\t     * Once a property is set, additional values of the same property are ignored.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaultsDeep\n\t     * @example\n\t     *\n\t     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n\t     * // => { 'a': 1, 'b': 2 }\n\t     */\n\t    var defaults = baseRest(function(args) {\n\t      args.push(undefined, customDefaultsAssignIn);\n\t      return apply(assignInWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.defaults` except that it recursively assigns\n\t     * default properties.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.defaults\n\t     * @example\n\t     *\n\t     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n\t     * // => { 'a': { 'b': 2, 'c': 3 } }\n\t     */\n\t    var defaultsDeep = baseRest(function(args) {\n\t      args.push(undefined, customDefaultsMerge);\n\t      return apply(mergeWith, undefined, args);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.find` except that it returns the key of the first\n\t     * element `predicate` returns truthy for instead of the element itself.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findKey(users, function(o) { return o.age < 40; });\n\t     * // => 'barney' (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findKey(users, { 'age': 1, 'active': true });\n\t     * // => 'pebbles'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findKey(users, 'active');\n\t     * // => 'barney'\n\t     */\n\t    function findKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.findKey` except that it iterates over elements of\n\t     * a collection in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n\t     * @returns {string|undefined} Returns the key of the matched element,\n\t     *  else `undefined`.\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'barney':  { 'age': 36, 'active': true },\n\t     *   'fred':    { 'age': 40, 'active': false },\n\t     *   'pebbles': { 'age': 1,  'active': true }\n\t     * };\n\t     *\n\t     * _.findLastKey(users, function(o) { return o.age < 40; });\n\t     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.findLastKey(users, { 'age': 36, 'active': true });\n\t     * // => 'barney'\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.findLastKey(users, ['active', false]);\n\t     * // => 'fred'\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.findLastKey(users, 'active');\n\t     * // => 'pebbles'\n\t     */\n\t    function findLastKey(object, predicate) {\n\t      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own and inherited enumerable string keyed properties of an\n\t     * object and invokes `iteratee` for each property. The iteratee is invoked\n\t     * with three arguments: (value, key, object). Iteratee functions may exit\n\t     * iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forInRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forIn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n\t     */\n\t    function forIn(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forIn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forInRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n\t     */\n\t    function forInRight(object, iteratee) {\n\t      return object == null\n\t        ? object\n\t        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n\t    }\n\t\n\t    /**\n\t     * Iterates over own enumerable string keyed properties of an object and\n\t     * invokes `iteratee` for each property. The iteratee is invoked with three\n\t     * arguments: (value, key, object). Iteratee functions may exit iteration\n\t     * early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwnRight\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwn(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n\t     */\n\t    function forOwn(object, iteratee) {\n\t      return object && baseForOwn(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.forOwn` except that it iterates over properties of\n\t     * `object` in the opposite order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns `object`.\n\t     * @see _.forOwn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.forOwnRight(new Foo, function(value, key) {\n\t     *   console.log(key);\n\t     * });\n\t     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n\t     */\n\t    function forOwnRight(object, iteratee) {\n\t      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own enumerable properties\n\t     * of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functionsIn\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functions(new Foo);\n\t     * // => ['a', 'b']\n\t     */\n\t    function functions(object) {\n\t      return object == null ? [] : baseFunctions(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of function property names from own and inherited\n\t     * enumerable properties of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to inspect.\n\t     * @returns {Array} Returns the function names.\n\t     * @see _.functions\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = _.constant('a');\n\t     *   this.b = _.constant('b');\n\t     * }\n\t     *\n\t     * Foo.prototype.c = _.constant('c');\n\t     *\n\t     * _.functionsIn(new Foo);\n\t     * // => ['a', 'b', 'c']\n\t     */\n\t    function functionsIn(object) {\n\t      return object == null ? [] : baseFunctions(object, keysIn(object));\n\t    }\n\t\n\t    /**\n\t     * Gets the value at `path` of `object`. If the resolved value is\n\t     * `undefined`, the `defaultValue` is returned in its place.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.get(object, 'a[0].b.c');\n\t     * // => 3\n\t     *\n\t     * _.get(object, ['a', '0', 'b', 'c']);\n\t     * // => 3\n\t     *\n\t     * _.get(object, 'a.b.c', 'default');\n\t     * // => 'default'\n\t     */\n\t    function get(object, path, defaultValue) {\n\t      var result = object == null ? undefined : baseGet(object, path);\n\t      return result === undefined ? defaultValue : result;\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct property of `object`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': { 'b': 2 } };\n\t     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.has(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.has(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.has(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.has(other, 'a');\n\t     * // => false\n\t     */\n\t    function has(object, path) {\n\t      return object != null && hasPath(object, path, baseHas);\n\t    }\n\t\n\t    /**\n\t     * Checks if `path` is a direct or inherited property of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path to check.\n\t     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n\t     * @example\n\t     *\n\t     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n\t     *\n\t     * _.hasIn(object, 'a');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'a.b');\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, ['a', 'b']);\n\t     * // => true\n\t     *\n\t     * _.hasIn(object, 'b');\n\t     * // => false\n\t     */\n\t    function hasIn(object, path) {\n\t      return object != null && hasPath(object, path, baseHasIn);\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the inverted keys and values of `object`.\n\t     * If `object` contains duplicate values, subsequent values overwrite\n\t     * property assignments of previous values.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invert(object);\n\t     * // => { '1': 'c', '2': 'b' }\n\t     */\n\t    var invert = createInverter(function(result, value, key) {\n\t      result[value] = key;\n\t    }, constant(identity));\n\t\n\t    /**\n\t     * This method is like `_.invert` except that the inverted object is generated\n\t     * from the results of running each element of `object` thru `iteratee`. The\n\t     * corresponding inverted value of each inverted key is an array of keys\n\t     * responsible for generating the inverted value. The iteratee is invoked\n\t     * with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.1.0\n\t     * @category Object\n\t     * @param {Object} object The object to invert.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {Object} Returns the new inverted object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n\t     *\n\t     * _.invertBy(object);\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     *\n\t     * _.invertBy(object, function(value) {\n\t     *   return 'group' + value;\n\t     * });\n\t     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n\t     */\n\t    var invertBy = createInverter(function(result, value, key) {\n\t      if (hasOwnProperty.call(result, value)) {\n\t        result[value].push(key);\n\t      } else {\n\t        result[value] = [key];\n\t      }\n\t    }, getIteratee);\n\t\n\t    /**\n\t     * Invokes the method at `path` of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {*} Returns the result of the invoked method.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n\t     *\n\t     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n\t     * // => [2, 3]\n\t     */\n\t    var invoke = baseRest(baseInvoke);\n\t\n\t    /**\n\t     * Creates an array of the own enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects. See the\n\t     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n\t     * for more details.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keys(new Foo);\n\t     * // => ['a', 'b'] (iteration order is not guaranteed)\n\t     *\n\t     * _.keys('hi');\n\t     * // => ['0', '1']\n\t     */\n\t    function keys(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable property names of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property names.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.keysIn(new Foo);\n\t     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n\t     */\n\t    function keysIn(object) {\n\t      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.mapValues`; this method creates an object with the\n\t     * same values as `object` and keys generated by running each own enumerable\n\t     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n\t     * with three arguments: (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.8.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapValues\n\t     * @example\n\t     *\n\t     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n\t     *   return key + value;\n\t     * });\n\t     * // => { 'a1': 1, 'b2': 2 }\n\t     */\n\t    function mapKeys(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, iteratee(value, key, object), value);\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Creates an object with the same keys as `object` and values generated\n\t     * by running each own enumerable string keyed property of `object` thru\n\t     * `iteratee`. The iteratee is invoked with three arguments:\n\t     * (value, key, object).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Object} Returns the new mapped object.\n\t     * @see _.mapKeys\n\t     * @example\n\t     *\n\t     * var users = {\n\t     *   'fred':    { 'user': 'fred',    'age': 40 },\n\t     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n\t     * };\n\t     *\n\t     * _.mapValues(users, function(o) { return o.age; });\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.mapValues(users, 'age');\n\t     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n\t     */\n\t    function mapValues(object, iteratee) {\n\t      var result = {};\n\t      iteratee = getIteratee(iteratee, 3);\n\t\n\t      baseForOwn(object, function(value, key, object) {\n\t        baseAssignValue(result, key, iteratee(value, key, object));\n\t      });\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.assign` except that it recursively merges own and\n\t     * inherited enumerable string keyed properties of source objects into the\n\t     * destination object. Source properties that resolve to `undefined` are\n\t     * skipped if a destination value exists. Array and plain object properties\n\t     * are merged recursively. Other objects and value types are overridden by\n\t     * assignment. Source objects are applied from left to right. Subsequent\n\t     * sources overwrite property assignments of previous sources.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.5.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} [sources] The source objects.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {\n\t     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n\t     * };\n\t     *\n\t     * var other = {\n\t     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n\t     * };\n\t     *\n\t     * _.merge(object, other);\n\t     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n\t     */\n\t    var merge = createAssigner(function(object, source, srcIndex) {\n\t      baseMerge(object, source, srcIndex);\n\t    });\n\t\n\t    /**\n\t     * This method is like `_.merge` except that it accepts `customizer` which\n\t     * is invoked to produce the merged values of the destination and source\n\t     * properties. If `customizer` returns `undefined`, merging is handled by the\n\t     * method instead. The `customizer` is invoked with six arguments:\n\t     * (objValue, srcValue, key, object, source, stack).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The destination object.\n\t     * @param {...Object} sources The source objects.\n\t     * @param {Function} customizer The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function customizer(objValue, srcValue) {\n\t     *   if (_.isArray(objValue)) {\n\t     *     return objValue.concat(srcValue);\n\t     *   }\n\t     * }\n\t     *\n\t     * var object = { 'a': [1], 'b': [2] };\n\t     * var other = { 'a': [3], 'b': [4] };\n\t     *\n\t     * _.mergeWith(object, other, customizer);\n\t     * // => { 'a': [1, 3], 'b': [2, 4] }\n\t     */\n\t    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n\t      baseMerge(object, source, srcIndex, customizer);\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pick`; this method creates an object composed of the\n\t     * own and inherited enumerable property paths of `object` that are not omitted.\n\t     *\n\t     * **Note:** This method is considerably slower than `_.pick`.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to omit.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omit(object, ['a', 'c']);\n\t     * // => { 'b': '2' }\n\t     */\n\t    var omit = flatRest(function(object, paths) {\n\t      var result = {};\n\t      if (object == null) {\n\t        return result;\n\t      }\n\t      var isDeep = false;\n\t      paths = arrayMap(paths, function(path) {\n\t        path = castPath(path, object);\n\t        isDeep || (isDeep = path.length > 1);\n\t        return path;\n\t      });\n\t      copyObject(object, getAllKeysIn(object), result);\n\t      if (isDeep) {\n\t        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n\t      }\n\t      var length = paths.length;\n\t      while (length--) {\n\t        baseUnset(result, paths[length]);\n\t      }\n\t      return result;\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.pickBy`; this method creates an object composed of\n\t     * the own and inherited enumerable string keyed properties of `object` that\n\t     * `predicate` doesn't return truthy for. The predicate is invoked with two\n\t     * arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.omitBy(object, _.isNumber);\n\t     * // => { 'b': '2' }\n\t     */\n\t    function omitBy(object, predicate) {\n\t      return pickBy(object, negate(getIteratee(predicate)));\n\t    }\n\t\n\t    /**\n\t     * Creates an object composed of the picked `object` properties.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {...(string|string[])} [paths] The property paths to pick.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pick(object, ['a', 'c']);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    var pick = flatRest(function(object, paths) {\n\t      return object == null ? {} : basePick(object, paths);\n\t    });\n\t\n\t    /**\n\t     * Creates an object composed of the `object` properties `predicate` returns\n\t     * truthy for. The predicate is invoked with two arguments: (value, key).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The source object.\n\t     * @param {Function} [predicate=_.identity] The function invoked per property.\n\t     * @returns {Object} Returns the new object.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n\t     *\n\t     * _.pickBy(object, _.isNumber);\n\t     * // => { 'a': 1, 'c': 3 }\n\t     */\n\t    function pickBy(object, predicate) {\n\t      if (object == null) {\n\t        return {};\n\t      }\n\t      var props = arrayMap(getAllKeysIn(object), function(prop) {\n\t        return [prop];\n\t      });\n\t      predicate = getIteratee(predicate);\n\t      return basePickBy(object, props, function(value, path) {\n\t        return predicate(value, path[0]);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.get` except that if the resolved value is a\n\t     * function it's invoked with the `this` binding of its parent object and\n\t     * its result is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @param {Array|string} path The path of the property to resolve.\n\t     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n\t     *\n\t     * _.result(object, 'a[0].b.c1');\n\t     * // => 3\n\t     *\n\t     * _.result(object, 'a[0].b.c2');\n\t     * // => 4\n\t     *\n\t     * _.result(object, 'a[0].b.c3', 'default');\n\t     * // => 'default'\n\t     *\n\t     * _.result(object, 'a[0].b.c3', _.constant('default'));\n\t     * // => 'default'\n\t     */\n\t    function result(object, path, defaultValue) {\n\t      path = castPath(path, object);\n\t\n\t      var index = -1,\n\t          length = path.length;\n\t\n\t      // Ensure the loop is entered when path is empty.\n\t      if (!length) {\n\t        length = 1;\n\t        object = undefined;\n\t      }\n\t      while (++index < length) {\n\t        var value = object == null ? undefined : object[toKey(path[index])];\n\t        if (value === undefined) {\n\t          index = length;\n\t          value = defaultValue;\n\t        }\n\t        object = isFunction(value) ? value.call(object) : value;\n\t      }\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n\t     * it's created. Arrays are created for missing index properties while objects\n\t     * are created for all other missing properties. Use `_.setWith` to customize\n\t     * `path` creation.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.set(object, 'a[0].b.c', 4);\n\t     * console.log(object.a[0].b.c);\n\t     * // => 4\n\t     *\n\t     * _.set(object, ['x', '0', 'y', 'z'], 5);\n\t     * console.log(object.x[0].y.z);\n\t     * // => 5\n\t     */\n\t    function set(object, path, value) {\n\t      return object == null ? object : baseSet(object, path, value);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {*} value The value to set.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.setWith(object, '[0][1]', 'a', Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function setWith(object, path, value, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseSet(object, path, value, customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of own enumerable string keyed-value pairs for `object`\n\t     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n\t     * entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entries\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairs(new Foo);\n\t     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairs = createToPairs(keys);\n\t\n\t    /**\n\t     * Creates an array of own and inherited enumerable string keyed-value pairs\n\t     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n\t     * or set, its entries are returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @alias entriesIn\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the key-value pairs.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.toPairsIn(new Foo);\n\t     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n\t     */\n\t    var toPairsIn = createToPairs(keysIn);\n\t\n\t    /**\n\t     * An alternative to `_.reduce`; this method transforms `object` to a new\n\t     * `accumulator` object which is the result of running each of its own\n\t     * enumerable string keyed properties thru `iteratee`, with each invocation\n\t     * potentially mutating the `accumulator` object. If `accumulator` is not\n\t     * provided, a new object with the same `[[Prototype]]` will be used. The\n\t     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n\t     * Iteratee functions may exit iteration early by explicitly returning `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.3.0\n\t     * @category Object\n\t     * @param {Object} object The object to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @param {*} [accumulator] The custom accumulator value.\n\t     * @returns {*} Returns the accumulated value.\n\t     * @example\n\t     *\n\t     * _.transform([2, 3, 4], function(result, n) {\n\t     *   result.push(n *= n);\n\t     *   return n % 2 == 0;\n\t     * }, []);\n\t     * // => [4, 9]\n\t     *\n\t     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n\t     *   (result[value] || (result[value] = [])).push(key);\n\t     * }, {});\n\t     * // => { '1': ['a', 'c'], '2': ['b'] }\n\t     */\n\t    function transform(object, iteratee, accumulator) {\n\t      var isArr = isArray(object),\n\t          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\t\n\t      iteratee = getIteratee(iteratee, 4);\n\t      if (accumulator == null) {\n\t        var Ctor = object && object.constructor;\n\t        if (isArrLike) {\n\t          accumulator = isArr ? new Ctor : [];\n\t        }\n\t        else if (isObject(object)) {\n\t          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n\t        }\n\t        else {\n\t          accumulator = {};\n\t        }\n\t      }\n\t      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n\t        return iteratee(accumulator, value, index, object);\n\t      });\n\t      return accumulator;\n\t    }\n\t\n\t    /**\n\t     * Removes the property at `path` of `object`.\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to unset.\n\t     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n\t     * _.unset(object, 'a[0].b.c');\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     *\n\t     * _.unset(object, ['a', '0', 'b', 'c']);\n\t     * // => true\n\t     *\n\t     * console.log(object);\n\t     * // => { 'a': [{ 'b': {} }] };\n\t     */\n\t    function unset(object, path) {\n\t      return object == null ? true : baseUnset(object, path);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.set` except that accepts `updater` to produce the\n\t     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n\t     * is invoked with one argument: (value).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n\t     *\n\t     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n\t     * console.log(object.a[0].b.c);\n\t     * // => 9\n\t     *\n\t     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n\t     * console.log(object.x[0].y.z);\n\t     * // => 0\n\t     */\n\t    function update(object, path, updater) {\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.update` except that it accepts `customizer` which is\n\t     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n\t     * path creation is handled by the method instead. The `customizer` is invoked\n\t     * with three arguments: (nsValue, key, nsObject).\n\t     *\n\t     * **Note:** This method mutates `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.6.0\n\t     * @category Object\n\t     * @param {Object} object The object to modify.\n\t     * @param {Array|string} path The path of the property to set.\n\t     * @param {Function} updater The function to produce the updated value.\n\t     * @param {Function} [customizer] The function to customize assigned values.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var object = {};\n\t     *\n\t     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n\t     * // => { '0': { '1': 'a' } }\n\t     */\n\t    function updateWith(object, path, updater, customizer) {\n\t      customizer = typeof customizer == 'function' ? customizer : undefined;\n\t      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own enumerable string keyed property values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.values(new Foo);\n\t     * // => [1, 2] (iteration order is not guaranteed)\n\t     *\n\t     * _.values('hi');\n\t     * // => ['h', 'i']\n\t     */\n\t    function values(object) {\n\t      return object == null ? [] : baseValues(object, keys(object));\n\t    }\n\t\n\t    /**\n\t     * Creates an array of the own and inherited enumerable string keyed property\n\t     * values of `object`.\n\t     *\n\t     * **Note:** Non-object values are coerced to objects.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Object\n\t     * @param {Object} object The object to query.\n\t     * @returns {Array} Returns the array of property values.\n\t     * @example\n\t     *\n\t     * function Foo() {\n\t     *   this.a = 1;\n\t     *   this.b = 2;\n\t     * }\n\t     *\n\t     * Foo.prototype.c = 3;\n\t     *\n\t     * _.valuesIn(new Foo);\n\t     * // => [1, 2, 3] (iteration order is not guaranteed)\n\t     */\n\t    function valuesIn(object) {\n\t      return object == null ? [] : baseValues(object, keysIn(object));\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Number\n\t     * @param {number} number The number to clamp.\n\t     * @param {number} [lower] The lower bound.\n\t     * @param {number} upper The upper bound.\n\t     * @returns {number} Returns the clamped number.\n\t     * @example\n\t     *\n\t     * _.clamp(-10, -5, 5);\n\t     * // => -5\n\t     *\n\t     * _.clamp(10, -5, 5);\n\t     * // => 5\n\t     */\n\t    function clamp(number, lower, upper) {\n\t      if (upper === undefined) {\n\t        upper = lower;\n\t        lower = undefined;\n\t      }\n\t      if (upper !== undefined) {\n\t        upper = toNumber(upper);\n\t        upper = upper === upper ? upper : 0;\n\t      }\n\t      if (lower !== undefined) {\n\t        lower = toNumber(lower);\n\t        lower = lower === lower ? lower : 0;\n\t      }\n\t      return baseClamp(toNumber(number), lower, upper);\n\t    }\n\t\n\t    /**\n\t     * Checks if `n` is between `start` and up to, but not including, `end`. If\n\t     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n\t     * If `start` is greater than `end` the params are swapped to support\n\t     * negative ranges.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.3.0\n\t     * @category Number\n\t     * @param {number} number The number to check.\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n\t     * @see _.range, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.inRange(3, 2, 4);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 8);\n\t     * // => true\n\t     *\n\t     * _.inRange(4, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(2, 2);\n\t     * // => false\n\t     *\n\t     * _.inRange(1.2, 2);\n\t     * // => true\n\t     *\n\t     * _.inRange(5.2, 4);\n\t     * // => false\n\t     *\n\t     * _.inRange(-3, -2, -6);\n\t     * // => true\n\t     */\n\t    function inRange(number, start, end) {\n\t      start = toFinite(start);\n\t      if (end === undefined) {\n\t        end = start;\n\t        start = 0;\n\t      } else {\n\t        end = toFinite(end);\n\t      }\n\t      number = toNumber(number);\n\t      return baseInRange(number, start, end);\n\t    }\n\t\n\t    /**\n\t     * Produces a random number between the inclusive `lower` and `upper` bounds.\n\t     * If only one argument is provided a number between `0` and the given number\n\t     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n\t     * floats, a floating-point number is returned instead of an integer.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.7.0\n\t     * @category Number\n\t     * @param {number} [lower=0] The lower bound.\n\t     * @param {number} [upper=1] The upper bound.\n\t     * @param {boolean} [floating] Specify returning a floating-point number.\n\t     * @returns {number} Returns the random number.\n\t     * @example\n\t     *\n\t     * _.random(0, 5);\n\t     * // => an integer between 0 and 5\n\t     *\n\t     * _.random(5);\n\t     * // => also an integer between 0 and 5\n\t     *\n\t     * _.random(5, true);\n\t     * // => a floating-point number between 0 and 5\n\t     *\n\t     * _.random(1.2, 5.2);\n\t     * // => a floating-point number between 1.2 and 5.2\n\t     */\n\t    function random(lower, upper, floating) {\n\t      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n\t        upper = floating = undefined;\n\t      }\n\t      if (floating === undefined) {\n\t        if (typeof upper == 'boolean') {\n\t          floating = upper;\n\t          upper = undefined;\n\t        }\n\t        else if (typeof lower == 'boolean') {\n\t          floating = lower;\n\t          lower = undefined;\n\t        }\n\t      }\n\t      if (lower === undefined && upper === undefined) {\n\t        lower = 0;\n\t        upper = 1;\n\t      }\n\t      else {\n\t        lower = toFinite(lower);\n\t        if (upper === undefined) {\n\t          upper = lower;\n\t          lower = 0;\n\t        } else {\n\t          upper = toFinite(upper);\n\t        }\n\t      }\n\t      if (lower > upper) {\n\t        var temp = lower;\n\t        lower = upper;\n\t        upper = temp;\n\t      }\n\t      if (floating || lower % 1 || upper % 1) {\n\t        var rand = nativeRandom();\n\t        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n\t      }\n\t      return baseRandom(lower, upper);\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the camel cased string.\n\t     * @example\n\t     *\n\t     * _.camelCase('Foo Bar');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('--foo-bar--');\n\t     * // => 'fooBar'\n\t     *\n\t     * _.camelCase('__FOO_BAR__');\n\t     * // => 'fooBar'\n\t     */\n\t    var camelCase = createCompounder(function(result, word, index) {\n\t      word = word.toLowerCase();\n\t      return result + (index ? capitalize(word) : word);\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case and the remaining\n\t     * to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to capitalize.\n\t     * @returns {string} Returns the capitalized string.\n\t     * @example\n\t     *\n\t     * _.capitalize('FRED');\n\t     * // => 'Fred'\n\t     */\n\t    function capitalize(string) {\n\t      return upperFirst(toString(string).toLowerCase());\n\t    }\n\t\n\t    /**\n\t     * Deburrs `string` by converting\n\t     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n\t     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n\t     * letters to basic Latin letters and removing\n\t     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to deburr.\n\t     * @returns {string} Returns the deburred string.\n\t     * @example\n\t     *\n\t     * _.deburr('déjà vu');\n\t     * // => 'deja vu'\n\t     */\n\t    function deburr(string) {\n\t      string = toString(string);\n\t      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n\t    }\n\t\n\t    /**\n\t     * Checks if `string` ends with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=string.length] The position to search up to.\n\t     * @returns {boolean} Returns `true` if `string` ends with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.endsWith('abc', 'c');\n\t     * // => true\n\t     *\n\t     * _.endsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.endsWith('abc', 'b', 2);\n\t     * // => true\n\t     */\n\t    function endsWith(string, target, position) {\n\t      string = toString(string);\n\t      target = baseToString(target);\n\t\n\t      var length = string.length;\n\t      position = position === undefined\n\t        ? length\n\t        : baseClamp(toInteger(position), 0, length);\n\t\n\t      var end = position;\n\t      position -= target.length;\n\t      return position >= 0 && string.slice(position, end) == target;\n\t    }\n\t\n\t    /**\n\t     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n\t     * corresponding HTML entities.\n\t     *\n\t     * **Note:** No other characters are escaped. To escape additional\n\t     * characters use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * Though the \">\" character is escaped for symmetry, characters like\n\t     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n\t     * unless they're part of a tag or unquoted attribute value. See\n\t     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n\t     * (under \"semi-related fun fact\") for more details.\n\t     *\n\t     * When working with HTML you should always\n\t     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n\t     * XSS vectors.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escape('fred, barney, & pebbles');\n\t     * // => 'fred, barney, &amp; pebbles'\n\t     */\n\t    function escape(string) {\n\t      string = toString(string);\n\t      return (string && reHasUnescapedHtml.test(string))\n\t        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n\t     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to escape.\n\t     * @returns {string} Returns the escaped string.\n\t     * @example\n\t     *\n\t     * _.escapeRegExp('[lodash](https://lodash.com/)');\n\t     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n\t     */\n\t    function escapeRegExp(string) {\n\t      string = toString(string);\n\t      return (string && reHasRegExpChar.test(string))\n\t        ? string.replace(reRegExpChar, '\\\\$&')\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the kebab cased string.\n\t     * @example\n\t     *\n\t     * _.kebabCase('Foo Bar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('fooBar');\n\t     * // => 'foo-bar'\n\t     *\n\t     * _.kebabCase('__FOO_BAR__');\n\t     * // => 'foo-bar'\n\t     */\n\t    var kebabCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '-' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.lowerCase('--Foo-Bar--');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('fooBar');\n\t     * // => 'foo bar'\n\t     *\n\t     * _.lowerCase('__FOO_BAR__');\n\t     * // => 'foo bar'\n\t     */\n\t    var lowerCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to lower case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.lowerFirst('Fred');\n\t     * // => 'fred'\n\t     *\n\t     * _.lowerFirst('FRED');\n\t     * // => 'fRED'\n\t     */\n\t    var lowerFirst = createCaseFirst('toLowerCase');\n\t\n\t    /**\n\t     * Pads `string` on the left and right sides if it's shorter than `length`.\n\t     * Padding characters are truncated if they can't be evenly divided by `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.pad('abc', 8);\n\t     * // => '  abc   '\n\t     *\n\t     * _.pad('abc', 8, '_-');\n\t     * // => '_-abc_-_'\n\t     *\n\t     * _.pad('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function pad(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      if (!length || strLength >= length) {\n\t        return string;\n\t      }\n\t      var mid = (length - strLength) / 2;\n\t      return (\n\t        createPadding(nativeFloor(mid), chars) +\n\t        string +\n\t        createPadding(nativeCeil(mid), chars)\n\t      );\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the right side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padEnd('abc', 6);\n\t     * // => 'abc   '\n\t     *\n\t     * _.padEnd('abc', 6, '_-');\n\t     * // => 'abc_-_'\n\t     *\n\t     * _.padEnd('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padEnd(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (string + createPadding(length - strLength, chars))\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Pads `string` on the left side if it's shorter than `length`. Padding\n\t     * characters are truncated if they exceed `length`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to pad.\n\t     * @param {number} [length=0] The padding length.\n\t     * @param {string} [chars=' '] The string used as padding.\n\t     * @returns {string} Returns the padded string.\n\t     * @example\n\t     *\n\t     * _.padStart('abc', 6);\n\t     * // => '   abc'\n\t     *\n\t     * _.padStart('abc', 6, '_-');\n\t     * // => '_-_abc'\n\t     *\n\t     * _.padStart('abc', 3);\n\t     * // => 'abc'\n\t     */\n\t    function padStart(string, length, chars) {\n\t      string = toString(string);\n\t      length = toInteger(length);\n\t\n\t      var strLength = length ? stringSize(string) : 0;\n\t      return (length && strLength < length)\n\t        ? (createPadding(length - strLength, chars) + string)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to an integer of the specified radix. If `radix` is\n\t     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n\t     * hexadecimal, in which case a `radix` of `16` is used.\n\t     *\n\t     * **Note:** This method aligns with the\n\t     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 1.1.0\n\t     * @category String\n\t     * @param {string} string The string to convert.\n\t     * @param {number} [radix=10] The radix to interpret `value` by.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {number} Returns the converted integer.\n\t     * @example\n\t     *\n\t     * _.parseInt('08');\n\t     * // => 8\n\t     *\n\t     * _.map(['6', '08', '10'], _.parseInt);\n\t     * // => [6, 8, 10]\n\t     */\n\t    function parseInt(string, radix, guard) {\n\t      if (guard || radix == null) {\n\t        radix = 0;\n\t      } else if (radix) {\n\t        radix = +radix;\n\t      }\n\t      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n\t    }\n\t\n\t    /**\n\t     * Repeats the given string `n` times.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to repeat.\n\t     * @param {number} [n=1] The number of times to repeat the string.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the repeated string.\n\t     * @example\n\t     *\n\t     * _.repeat('*', 3);\n\t     * // => '***'\n\t     *\n\t     * _.repeat('abc', 2);\n\t     * // => 'abcabc'\n\t     *\n\t     * _.repeat('abc', 0);\n\t     * // => ''\n\t     */\n\t    function repeat(string, n, guard) {\n\t      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n\t        n = 1;\n\t      } else {\n\t        n = toInteger(n);\n\t      }\n\t      return baseRepeat(toString(string), n);\n\t    }\n\t\n\t    /**\n\t     * Replaces matches for `pattern` in `string` with `replacement`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#replace`](https://mdn.io/String/replace).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to modify.\n\t     * @param {RegExp|string} pattern The pattern to replace.\n\t     * @param {Function|string} replacement The match replacement.\n\t     * @returns {string} Returns the modified string.\n\t     * @example\n\t     *\n\t     * _.replace('Hi Fred', 'Fred', 'Barney');\n\t     * // => 'Hi Barney'\n\t     */\n\t    function replace() {\n\t      var args = arguments,\n\t          string = toString(args[0]);\n\t\n\t      return args.length < 3 ? string : string.replace(args[1], args[2]);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the snake cased string.\n\t     * @example\n\t     *\n\t     * _.snakeCase('Foo Bar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('fooBar');\n\t     * // => 'foo_bar'\n\t     *\n\t     * _.snakeCase('--FOO-BAR--');\n\t     * // => 'foo_bar'\n\t     */\n\t    var snakeCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? '_' : '') + word.toLowerCase();\n\t    });\n\t\n\t    /**\n\t     * Splits `string` by `separator`.\n\t     *\n\t     * **Note:** This method is based on\n\t     * [`String#split`](https://mdn.io/String/split).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to split.\n\t     * @param {RegExp|string} separator The separator pattern to split by.\n\t     * @param {number} [limit] The length to truncate results to.\n\t     * @returns {Array} Returns the string segments.\n\t     * @example\n\t     *\n\t     * _.split('a-b-c', '-', 2);\n\t     * // => ['a', 'b']\n\t     */\n\t    function split(string, separator, limit) {\n\t      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n\t        separator = limit = undefined;\n\t      }\n\t      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n\t      if (!limit) {\n\t        return [];\n\t      }\n\t      string = toString(string);\n\t      if (string && (\n\t            typeof separator == 'string' ||\n\t            (separator != null && !isRegExp(separator))\n\t          )) {\n\t        separator = baseToString(separator);\n\t        if (!separator && hasUnicode(string)) {\n\t          return castSlice(stringToArray(string), 0, limit);\n\t        }\n\t      }\n\t      return string.split(separator, limit);\n\t    }\n\t\n\t    /**\n\t     * Converts `string` to\n\t     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.1.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the start cased string.\n\t     * @example\n\t     *\n\t     * _.startCase('--foo-bar--');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('fooBar');\n\t     * // => 'Foo Bar'\n\t     *\n\t     * _.startCase('__FOO_BAR__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var startCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + upperFirst(word);\n\t    });\n\t\n\t    /**\n\t     * Checks if `string` starts with the given target string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {string} [target] The string to search for.\n\t     * @param {number} [position=0] The position to search from.\n\t     * @returns {boolean} Returns `true` if `string` starts with `target`,\n\t     *  else `false`.\n\t     * @example\n\t     *\n\t     * _.startsWith('abc', 'a');\n\t     * // => true\n\t     *\n\t     * _.startsWith('abc', 'b');\n\t     * // => false\n\t     *\n\t     * _.startsWith('abc', 'b', 1);\n\t     * // => true\n\t     */\n\t    function startsWith(string, target, position) {\n\t      string = toString(string);\n\t      position = position == null\n\t        ? 0\n\t        : baseClamp(toInteger(position), 0, string.length);\n\t\n\t      target = baseToString(target);\n\t      return string.slice(position, position + target.length) == target;\n\t    }\n\t\n\t    /**\n\t     * Creates a compiled template function that can interpolate data properties\n\t     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n\t     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n\t     * properties may be accessed as free variables in the template. If a setting\n\t     * object is given, it takes precedence over `_.templateSettings` values.\n\t     *\n\t     * **Note:** In the development build `_.template` utilizes\n\t     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n\t     * for easier debugging.\n\t     *\n\t     * For more information on precompiling templates see\n\t     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n\t     *\n\t     * For more information on Chrome extension sandboxes see\n\t     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category String\n\t     * @param {string} [string=''] The template string.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {RegExp} [options.escape=_.templateSettings.escape]\n\t     *  The HTML \"escape\" delimiter.\n\t     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n\t     *  The \"evaluate\" delimiter.\n\t     * @param {Object} [options.imports=_.templateSettings.imports]\n\t     *  An object to import into the template as free variables.\n\t     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n\t     *  The \"interpolate\" delimiter.\n\t     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n\t     *  The sourceURL of the compiled template.\n\t     * @param {string} [options.variable='obj']\n\t     *  The data object variable name.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Function} Returns the compiled template function.\n\t     * @example\n\t     *\n\t     * // Use the \"interpolate\" delimiter to create a compiled template.\n\t     * var compiled = _.template('hello <%= user %>!');\n\t     * compiled({ 'user': 'fred' });\n\t     * // => 'hello fred!'\n\t     *\n\t     * // Use the HTML \"escape\" delimiter to escape data property values.\n\t     * var compiled = _.template('<b><%- value %></b>');\n\t     * compiled({ 'value': '<script>' });\n\t     * // => '<b>&lt;script&gt;</b>'\n\t     *\n\t     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n\t     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the internal `print` function in \"evaluate\" delimiters.\n\t     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n\t     * compiled({ 'user': 'barney' });\n\t     * // => 'hello barney!'\n\t     *\n\t     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n\t     * // Disable support by replacing the \"interpolate\" delimiter.\n\t     * var compiled = _.template('hello ${ user }!');\n\t     * compiled({ 'user': 'pebbles' });\n\t     * // => 'hello pebbles!'\n\t     *\n\t     * // Use backslashes to treat delimiters as plain text.\n\t     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n\t     * compiled({ 'value': 'ignored' });\n\t     * // => '<%- value %>'\n\t     *\n\t     * // Use the `imports` option to import `jQuery` as `jq`.\n\t     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n\t     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n\t     * compiled({ 'users': ['fred', 'barney'] });\n\t     * // => '<li>fred</li><li>barney</li>'\n\t     *\n\t     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n\t     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n\t     * compiled(data);\n\t     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n\t     *\n\t     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n\t     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n\t     * compiled.source;\n\t     * // => function(data) {\n\t     * //   var __t, __p = '';\n\t     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n\t     * //   return __p;\n\t     * // }\n\t     *\n\t     * // Use custom template delimiters.\n\t     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n\t     * var compiled = _.template('hello {{ user }}!');\n\t     * compiled({ 'user': 'mustache' });\n\t     * // => 'hello mustache!'\n\t     *\n\t     * // Use the `source` property to inline compiled templates for meaningful\n\t     * // line numbers in error messages and stack traces.\n\t     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n\t     *   var JST = {\\\n\t     *     \"main\": ' + _.template(mainText).source + '\\\n\t     *   };\\\n\t     * ');\n\t     */\n\t    function template(string, options, guard) {\n\t      // Based on John Resig's `tmpl` implementation\n\t      // (http://ejohn.org/blog/javascript-micro-templating/)\n\t      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n\t      var settings = lodash.templateSettings;\n\t\n\t      if (guard && isIterateeCall(string, options, guard)) {\n\t        options = undefined;\n\t      }\n\t      string = toString(string);\n\t      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\t\n\t      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n\t          importsKeys = keys(imports),\n\t          importsValues = baseValues(imports, importsKeys);\n\t\n\t      var isEscaping,\n\t          isEvaluating,\n\t          index = 0,\n\t          interpolate = options.interpolate || reNoMatch,\n\t          source = \"__p += '\";\n\t\n\t      // Compile the regexp to match each delimiter.\n\t      var reDelimiters = RegExp(\n\t        (options.escape || reNoMatch).source + '|' +\n\t        interpolate.source + '|' +\n\t        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n\t        (options.evaluate || reNoMatch).source + '|$'\n\t      , 'g');\n\t\n\t      // Use a sourceURL for easier debugging.\n\t      var sourceURL = '//# sourceURL=' +\n\t        ('sourceURL' in options\n\t          ? options.sourceURL\n\t          : ('lodash.templateSources[' + (++templateCounter) + ']')\n\t        ) + '\\n';\n\t\n\t      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n\t        interpolateValue || (interpolateValue = esTemplateValue);\n\t\n\t        // Escape characters that can't be included in string literals.\n\t        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\t\n\t        // Replace delimiters with snippets.\n\t        if (escapeValue) {\n\t          isEscaping = true;\n\t          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n\t        }\n\t        if (evaluateValue) {\n\t          isEvaluating = true;\n\t          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n\t        }\n\t        if (interpolateValue) {\n\t          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n\t        }\n\t        index = offset + match.length;\n\t\n\t        // The JS engine embedded in Adobe products needs `match` returned in\n\t        // order to produce the correct `offset` value.\n\t        return match;\n\t      });\n\t\n\t      source += \"';\\n\";\n\t\n\t      // If `variable` is not specified wrap a with-statement around the generated\n\t      // code to add the data object to the top of the scope chain.\n\t      var variable = options.variable;\n\t      if (!variable) {\n\t        source = 'with (obj) {\\n' + source + '\\n}\\n';\n\t      }\n\t      // Cleanup code by stripping empty strings.\n\t      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n\t        .replace(reEmptyStringMiddle, '$1')\n\t        .replace(reEmptyStringTrailing, '$1;');\n\t\n\t      // Frame code as the function body.\n\t      source = 'function(' + (variable || 'obj') + ') {\\n' +\n\t        (variable\n\t          ? ''\n\t          : 'obj || (obj = {});\\n'\n\t        ) +\n\t        \"var __t, __p = ''\" +\n\t        (isEscaping\n\t           ? ', __e = _.escape'\n\t           : ''\n\t        ) +\n\t        (isEvaluating\n\t          ? ', __j = Array.prototype.join;\\n' +\n\t            \"function print() { __p += __j.call(arguments, '') }\\n\"\n\t          : ';\\n'\n\t        ) +\n\t        source +\n\t        'return __p\\n}';\n\t\n\t      var result = attempt(function() {\n\t        return Function(importsKeys, sourceURL + 'return ' + source)\n\t          .apply(undefined, importsValues);\n\t      });\n\t\n\t      // Provide the compiled function's source by its `toString` method or\n\t      // the `source` property as a convenience for inlining compiled templates.\n\t      result.source = source;\n\t      if (isError(result)) {\n\t        throw result;\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to lower case just like\n\t     * [String#toLowerCase](https://mdn.io/toLowerCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the lower cased string.\n\t     * @example\n\t     *\n\t     * _.toLower('--Foo-Bar--');\n\t     * // => '--foo-bar--'\n\t     *\n\t     * _.toLower('fooBar');\n\t     * // => 'foobar'\n\t     *\n\t     * _.toLower('__FOO_BAR__');\n\t     * // => '__foo_bar__'\n\t     */\n\t    function toLower(value) {\n\t      return toString(value).toLowerCase();\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as a whole, to upper case just like\n\t     * [String#toUpperCase](https://mdn.io/toUpperCase).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.toUpper('--foo-bar--');\n\t     * // => '--FOO-BAR--'\n\t     *\n\t     * _.toUpper('fooBar');\n\t     * // => 'FOOBAR'\n\t     *\n\t     * _.toUpper('__foo_bar__');\n\t     * // => '__FOO_BAR__'\n\t     */\n\t    function toUpper(value) {\n\t      return toString(value).toUpperCase();\n\t    }\n\t\n\t    /**\n\t     * Removes leading and trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trim('  abc  ');\n\t     * // => 'abc'\n\t     *\n\t     * _.trim('-_-abc-_-', '_-');\n\t     * // => 'abc'\n\t     *\n\t     * _.map(['  foo  ', '  bar  '], _.trim);\n\t     * // => ['foo', 'bar']\n\t     */\n\t    function trim(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrim, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          chrSymbols = stringToArray(chars),\n\t          start = charsStartIndex(strSymbols, chrSymbols),\n\t          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\t\n\t      return castSlice(strSymbols, start, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes trailing whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimEnd('  abc  ');\n\t     * // => '  abc'\n\t     *\n\t     * _.trimEnd('-_-abc-_-', '_-');\n\t     * // => '-_-abc'\n\t     */\n\t    function trimEnd(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimEnd, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\t\n\t      return castSlice(strSymbols, 0, end).join('');\n\t    }\n\t\n\t    /**\n\t     * Removes leading whitespace or specified characters from `string`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to trim.\n\t     * @param {string} [chars=whitespace] The characters to trim.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {string} Returns the trimmed string.\n\t     * @example\n\t     *\n\t     * _.trimStart('  abc  ');\n\t     * // => 'abc  '\n\t     *\n\t     * _.trimStart('-_-abc-_-', '_-');\n\t     * // => 'abc-_-'\n\t     */\n\t    function trimStart(string, chars, guard) {\n\t      string = toString(string);\n\t      if (string && (guard || chars === undefined)) {\n\t        return string.replace(reTrimStart, '');\n\t      }\n\t      if (!string || !(chars = baseToString(chars))) {\n\t        return string;\n\t      }\n\t      var strSymbols = stringToArray(string),\n\t          start = charsStartIndex(strSymbols, stringToArray(chars));\n\t\n\t      return castSlice(strSymbols, start).join('');\n\t    }\n\t\n\t    /**\n\t     * Truncates `string` if it's longer than the given maximum string length.\n\t     * The last characters of the truncated string are replaced with the omission\n\t     * string which defaults to \"...\".\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to truncate.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {number} [options.length=30] The maximum string length.\n\t     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n\t     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n\t     * @returns {string} Returns the truncated string.\n\t     * @example\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino');\n\t     * // => 'hi-diddly-ho there, neighbo...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': ' '\n\t     * });\n\t     * // => 'hi-diddly-ho there,...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'length': 24,\n\t     *   'separator': /,? +/\n\t     * });\n\t     * // => 'hi-diddly-ho there...'\n\t     *\n\t     * _.truncate('hi-diddly-ho there, neighborino', {\n\t     *   'omission': ' [...]'\n\t     * });\n\t     * // => 'hi-diddly-ho there, neig [...]'\n\t     */\n\t    function truncate(string, options) {\n\t      var length = DEFAULT_TRUNC_LENGTH,\n\t          omission = DEFAULT_TRUNC_OMISSION;\n\t\n\t      if (isObject(options)) {\n\t        var separator = 'separator' in options ? options.separator : separator;\n\t        length = 'length' in options ? toInteger(options.length) : length;\n\t        omission = 'omission' in options ? baseToString(options.omission) : omission;\n\t      }\n\t      string = toString(string);\n\t\n\t      var strLength = string.length;\n\t      if (hasUnicode(string)) {\n\t        var strSymbols = stringToArray(string);\n\t        strLength = strSymbols.length;\n\t      }\n\t      if (length >= strLength) {\n\t        return string;\n\t      }\n\t      var end = length - stringSize(omission);\n\t      if (end < 1) {\n\t        return omission;\n\t      }\n\t      var result = strSymbols\n\t        ? castSlice(strSymbols, 0, end).join('')\n\t        : string.slice(0, end);\n\t\n\t      if (separator === undefined) {\n\t        return result + omission;\n\t      }\n\t      if (strSymbols) {\n\t        end += (result.length - end);\n\t      }\n\t      if (isRegExp(separator)) {\n\t        if (string.slice(end).search(separator)) {\n\t          var match,\n\t              substring = result;\n\t\n\t          if (!separator.global) {\n\t            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n\t          }\n\t          separator.lastIndex = 0;\n\t          while ((match = separator.exec(substring))) {\n\t            var newEnd = match.index;\n\t          }\n\t          result = result.slice(0, newEnd === undefined ? end : newEnd);\n\t        }\n\t      } else if (string.indexOf(baseToString(separator), end) != end) {\n\t        var index = result.lastIndexOf(separator);\n\t        if (index > -1) {\n\t          result = result.slice(0, index);\n\t        }\n\t      }\n\t      return result + omission;\n\t    }\n\t\n\t    /**\n\t     * The inverse of `_.escape`; this method converts the HTML entities\n\t     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n\t     * their corresponding characters.\n\t     *\n\t     * **Note:** No other HTML entities are unescaped. To unescape additional\n\t     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 0.6.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to unescape.\n\t     * @returns {string} Returns the unescaped string.\n\t     * @example\n\t     *\n\t     * _.unescape('fred, barney, &amp; pebbles');\n\t     * // => 'fred, barney, & pebbles'\n\t     */\n\t    function unescape(string) {\n\t      string = toString(string);\n\t      return (string && reHasEscapedHtml.test(string))\n\t        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n\t        : string;\n\t    }\n\t\n\t    /**\n\t     * Converts `string`, as space separated words, to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the upper cased string.\n\t     * @example\n\t     *\n\t     * _.upperCase('--foo-bar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('fooBar');\n\t     * // => 'FOO BAR'\n\t     *\n\t     * _.upperCase('__foo_bar__');\n\t     * // => 'FOO BAR'\n\t     */\n\t    var upperCase = createCompounder(function(result, word, index) {\n\t      return result + (index ? ' ' : '') + word.toUpperCase();\n\t    });\n\t\n\t    /**\n\t     * Converts the first character of `string` to upper case.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to convert.\n\t     * @returns {string} Returns the converted string.\n\t     * @example\n\t     *\n\t     * _.upperFirst('fred');\n\t     * // => 'Fred'\n\t     *\n\t     * _.upperFirst('FRED');\n\t     * // => 'FRED'\n\t     */\n\t    var upperFirst = createCaseFirst('toUpperCase');\n\t\n\t    /**\n\t     * Splits `string` into an array of its words.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category String\n\t     * @param {string} [string=''] The string to inspect.\n\t     * @param {RegExp|string} [pattern] The pattern to match words.\n\t     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n\t     * @returns {Array} Returns the words of `string`.\n\t     * @example\n\t     *\n\t     * _.words('fred, barney, & pebbles');\n\t     * // => ['fred', 'barney', 'pebbles']\n\t     *\n\t     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n\t     * // => ['fred', 'barney', '&', 'pebbles']\n\t     */\n\t    function words(string, pattern, guard) {\n\t      string = toString(string);\n\t      pattern = guard ? undefined : pattern;\n\t\n\t      if (pattern === undefined) {\n\t        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n\t      }\n\t      return string.match(pattern) || [];\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Attempts to invoke `func`, returning either the result or the caught error\n\t     * object. Any additional arguments are provided to `func` when it's invoked.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Function} func The function to attempt.\n\t     * @param {...*} [args] The arguments to invoke `func` with.\n\t     * @returns {*} Returns the `func` result or error object.\n\t     * @example\n\t     *\n\t     * // Avoid throwing errors for invalid selectors.\n\t     * var elements = _.attempt(function(selector) {\n\t     *   return document.querySelectorAll(selector);\n\t     * }, '>_>');\n\t     *\n\t     * if (_.isError(elements)) {\n\t     *   elements = [];\n\t     * }\n\t     */\n\t    var attempt = baseRest(function(func, args) {\n\t      try {\n\t        return apply(func, undefined, args);\n\t      } catch (e) {\n\t        return isError(e) ? e : new Error(e);\n\t      }\n\t    });\n\t\n\t    /**\n\t     * Binds methods of an object to the object itself, overwriting the existing\n\t     * method.\n\t     *\n\t     * **Note:** This method doesn't set the \"length\" property of bound functions.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Object} object The object to bind and assign the bound methods to.\n\t     * @param {...(string|string[])} methodNames The object method names to bind.\n\t     * @returns {Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * var view = {\n\t     *   'label': 'docs',\n\t     *   'click': function() {\n\t     *     console.log('clicked ' + this.label);\n\t     *   }\n\t     * };\n\t     *\n\t     * _.bindAll(view, ['click']);\n\t     * jQuery(element).on('click', view.click);\n\t     * // => Logs 'clicked docs' when clicked.\n\t     */\n\t    var bindAll = flatRest(function(object, methodNames) {\n\t      arrayEach(methodNames, function(key) {\n\t        key = toKey(key);\n\t        baseAssignValue(object, key, bind(object[key], object));\n\t      });\n\t      return object;\n\t    });\n\t\n\t    /**\n\t     * Creates a function that iterates over `pairs` and invokes the corresponding\n\t     * function of the first predicate to return truthy. The predicate-function\n\t     * pairs are invoked with the `this` binding and arguments of the created\n\t     * function.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Array} pairs The predicate-function pairs.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @example\n\t     *\n\t     * var func = _.cond([\n\t     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n\t     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n\t     *   [_.stubTrue,                      _.constant('no match')]\n\t     * ]);\n\t     *\n\t     * func({ 'a': 1, 'b': 2 });\n\t     * // => 'matches A'\n\t     *\n\t     * func({ 'a': 0, 'b': 1 });\n\t     * // => 'matches B'\n\t     *\n\t     * func({ 'a': '1', 'b': '2' });\n\t     * // => 'no match'\n\t     */\n\t    function cond(pairs) {\n\t      var length = pairs == null ? 0 : pairs.length,\n\t          toIteratee = getIteratee();\n\t\n\t      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n\t        if (typeof pair[1] != 'function') {\n\t          throw new TypeError(FUNC_ERROR_TEXT);\n\t        }\n\t        return [toIteratee(pair[0]), pair[1]];\n\t      });\n\t\n\t      return baseRest(function(args) {\n\t        var index = -1;\n\t        while (++index < length) {\n\t          var pair = pairs[index];\n\t          if (apply(pair[0], this, args)) {\n\t            return apply(pair[1], this, args);\n\t          }\n\t        }\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the predicate properties of `source` with\n\t     * the corresponding property values of a given object, returning `true` if\n\t     * all predicates return truthy, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.conformsTo` with\n\t     * `source` partially applied.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property predicates to conform to.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 2, 'b': 1 },\n\t     *   { 'a': 1, 'b': 2 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n\t     * // => [{ 'a': 1, 'b': 2 }]\n\t     */\n\t    function conforms(source) {\n\t      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns `value`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {*} value The value to return from the new function.\n\t     * @returns {Function} Returns the new constant function.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.constant({ 'a': 1 }));\n\t     *\n\t     * console.log(objects);\n\t     * // => [{ 'a': 1 }, { 'a': 1 }]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => true\n\t     */\n\t    function constant(value) {\n\t      return function() {\n\t        return value;\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Checks `value` to determine whether a default value should be returned in\n\t     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n\t     * or `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.14.0\n\t     * @category Util\n\t     * @param {*} value The value to check.\n\t     * @param {*} defaultValue The default value.\n\t     * @returns {*} Returns the resolved value.\n\t     * @example\n\t     *\n\t     * _.defaultTo(1, 10);\n\t     * // => 1\n\t     *\n\t     * _.defaultTo(undefined, 10);\n\t     * // => 10\n\t     */\n\t    function defaultTo(value, defaultValue) {\n\t      return (value == null || value !== value) ? defaultValue : value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that returns the result of invoking the given functions\n\t     * with the `this` binding of the created function, where each successive\n\t     * invocation is supplied the return value of the previous.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flowRight\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flow([_.add, square]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flow = createFlow();\n\t\n\t    /**\n\t     * This method is like `_.flow` except that it creates a function that\n\t     * invokes the given functions from right to left.\n\t     *\n\t     * @static\n\t     * @since 3.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n\t     * @returns {Function} Returns the new composite function.\n\t     * @see _.flow\n\t     * @example\n\t     *\n\t     * function square(n) {\n\t     *   return n * n;\n\t     * }\n\t     *\n\t     * var addSquare = _.flowRight([square, _.add]);\n\t     * addSquare(1, 2);\n\t     * // => 9\n\t     */\n\t    var flowRight = createFlow(true);\n\t\n\t    /**\n\t     * This method returns the first argument it receives.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} value Any value.\n\t     * @returns {*} Returns `value`.\n\t     * @example\n\t     *\n\t     * var object = { 'a': 1 };\n\t     *\n\t     * console.log(_.identity(object) === object);\n\t     * // => true\n\t     */\n\t    function identity(value) {\n\t      return value;\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `func` with the arguments of the created\n\t     * function. If `func` is a property name, the created function returns the\n\t     * property value for a given element. If `func` is an array or object, the\n\t     * created function returns `true` for elements that contain the equivalent\n\t     * source properties, otherwise it returns `false`.\n\t     *\n\t     * @static\n\t     * @since 4.0.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {*} [func=_.identity] The value to convert to a callback.\n\t     * @returns {Function} Returns the callback.\n\t     * @example\n\t     *\n\t     * var users = [\n\t     *   { 'user': 'barney', 'age': 36, 'active': true },\n\t     *   { 'user': 'fred',   'age': 40, 'active': false }\n\t     * ];\n\t     *\n\t     * // The `_.matches` iteratee shorthand.\n\t     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n\t     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n\t     *\n\t     * // The `_.matchesProperty` iteratee shorthand.\n\t     * _.filter(users, _.iteratee(['user', 'fred']));\n\t     * // => [{ 'user': 'fred', 'age': 40 }]\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.map(users, _.iteratee('user'));\n\t     * // => ['barney', 'fred']\n\t     *\n\t     * // Create custom iteratee shorthands.\n\t     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n\t     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n\t     *     return func.test(string);\n\t     *   };\n\t     * });\n\t     *\n\t     * _.filter(['abc', 'def'], /ef/);\n\t     * // => ['def']\n\t     */\n\t    function iteratee(func) {\n\t      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between a given\n\t     * object and `source`, returning `true` if the given object has equivalent\n\t     * property values, else `false`.\n\t     *\n\t     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n\t     * partially applied.\n\t     *\n\t     * Partial comparisons will match empty array and empty object `source`\n\t     * values against any array or object value, respectively. See `_.isEqual`\n\t     * for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} source The object of property values to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n\t     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n\t     */\n\t    function matches(source) {\n\t      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that performs a partial deep comparison between the\n\t     * value at `path` of a given object to `srcValue`, returning `true` if the\n\t     * object value is equivalent, else `false`.\n\t     *\n\t     * **Note:** Partial comparisons will match empty array and empty object\n\t     * `srcValue` values against any array or object value, respectively. See\n\t     * `_.isEqual` for a list of supported value comparisons.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.2.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @param {*} srcValue The value to match.\n\t     * @returns {Function} Returns the new spec function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': 1, 'b': 2, 'c': 3 },\n\t     *   { 'a': 4, 'b': 5, 'c': 6 }\n\t     * ];\n\t     *\n\t     * _.find(objects, _.matchesProperty('a', 4));\n\t     * // => { 'a': 4, 'b': 5, 'c': 6 }\n\t     */\n\t    function matchesProperty(path, srcValue) {\n\t      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes the method at `path` of a given object.\n\t     * Any additional arguments are provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the method to invoke.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': _.constant(2) } },\n\t     *   { 'a': { 'b': _.constant(1) } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.method('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(objects, _.method(['a', 'b']));\n\t     * // => [2, 1]\n\t     */\n\t    var method = baseRest(function(path, args) {\n\t      return function(object) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * The opposite of `_.method`; this method creates a function that invokes\n\t     * the method at a given path of `object`. Any additional arguments are\n\t     * provided to the invoked method.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.7.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @param {...*} [args] The arguments to invoke the method with.\n\t     * @returns {Function} Returns the new invoker function.\n\t     * @example\n\t     *\n\t     * var array = _.times(3, _.constant),\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    var methodOf = baseRest(function(object, args) {\n\t      return function(path) {\n\t        return baseInvoke(object, path, args);\n\t      };\n\t    });\n\t\n\t    /**\n\t     * Adds all own enumerable string keyed function properties of a source\n\t     * object to the destination object. If `object` is a function, then methods\n\t     * are added to its prototype as well.\n\t     *\n\t     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n\t     * avoid conflicts caused by modifying the original.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {Function|Object} [object=lodash] The destination object.\n\t     * @param {Object} source The object of functions to add.\n\t     * @param {Object} [options={}] The options object.\n\t     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n\t     * @returns {Function|Object} Returns `object`.\n\t     * @example\n\t     *\n\t     * function vowels(string) {\n\t     *   return _.filter(string, function(v) {\n\t     *     return /[aeiou]/i.test(v);\n\t     *   });\n\t     * }\n\t     *\n\t     * _.mixin({ 'vowels': vowels });\n\t     * _.vowels('fred');\n\t     * // => ['e']\n\t     *\n\t     * _('fred').vowels().value();\n\t     * // => ['e']\n\t     *\n\t     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n\t     * _('fred').vowels();\n\t     * // => ['e']\n\t     */\n\t    function mixin(object, source, options) {\n\t      var props = keys(source),\n\t          methodNames = baseFunctions(source, props);\n\t\n\t      if (options == null &&\n\t          !(isObject(source) && (methodNames.length || !props.length))) {\n\t        options = source;\n\t        source = object;\n\t        object = this;\n\t        methodNames = baseFunctions(source, keys(source));\n\t      }\n\t      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n\t          isFunc = isFunction(object);\n\t\n\t      arrayEach(methodNames, function(methodName) {\n\t        var func = source[methodName];\n\t        object[methodName] = func;\n\t        if (isFunc) {\n\t          object.prototype[methodName] = function() {\n\t            var chainAll = this.__chain__;\n\t            if (chain || chainAll) {\n\t              var result = object(this.__wrapped__),\n\t                  actions = result.__actions__ = copyArray(this.__actions__);\n\t\n\t              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n\t              result.__chain__ = chainAll;\n\t              return result;\n\t            }\n\t            return func.apply(object, arrayPush([this.value()], arguments));\n\t          };\n\t        }\n\t      });\n\t\n\t      return object;\n\t    }\n\t\n\t    /**\n\t     * Reverts the `_` variable to its previous value and returns a reference to\n\t     * the `lodash` function.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @returns {Function} Returns the `lodash` function.\n\t     * @example\n\t     *\n\t     * var lodash = _.noConflict();\n\t     */\n\t    function noConflict() {\n\t      if (root._ === this) {\n\t        root._ = oldDash;\n\t      }\n\t      return this;\n\t    }\n\t\n\t    /**\n\t     * This method returns `undefined`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.3.0\n\t     * @category Util\n\t     * @example\n\t     *\n\t     * _.times(2, _.noop);\n\t     * // => [undefined, undefined]\n\t     */\n\t    function noop() {\n\t      // No operation performed.\n\t    }\n\t\n\t    /**\n\t     * Creates a function that gets the argument at index `n`. If `n` is negative,\n\t     * the nth argument from the end is returned.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [n=0] The index of the argument to return.\n\t     * @returns {Function} Returns the new pass-thru function.\n\t     * @example\n\t     *\n\t     * var func = _.nthArg(1);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'b'\n\t     *\n\t     * var func = _.nthArg(-2);\n\t     * func('a', 'b', 'c', 'd');\n\t     * // => 'c'\n\t     */\n\t    function nthArg(n) {\n\t      n = toInteger(n);\n\t      return baseRest(function(args) {\n\t        return baseNth(args, n);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Creates a function that invokes `iteratees` with the arguments it receives\n\t     * and returns their results.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n\t     *  The iteratees to invoke.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.over([Math.max, Math.min]);\n\t     *\n\t     * func(1, 2, 3, 4);\n\t     * // => [4, 1]\n\t     */\n\t    var over = createOver(arrayMap);\n\t\n\t    /**\n\t     * Creates a function that checks if **all** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overEvery([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => false\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overEvery = createOver(arrayEvery);\n\t\n\t    /**\n\t     * Creates a function that checks if **any** of the `predicates` return\n\t     * truthy when invoked with the arguments it receives.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {...(Function|Function[])} [predicates=[_.identity]]\n\t     *  The predicates to check.\n\t     * @returns {Function} Returns the new function.\n\t     * @example\n\t     *\n\t     * var func = _.overSome([Boolean, isFinite]);\n\t     *\n\t     * func('1');\n\t     * // => true\n\t     *\n\t     * func(null);\n\t     * // => true\n\t     *\n\t     * func(NaN);\n\t     * // => false\n\t     */\n\t    var overSome = createOver(arraySome);\n\t\n\t    /**\n\t     * Creates a function that returns the value at `path` of a given object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 2.4.0\n\t     * @category Util\n\t     * @param {Array|string} path The path of the property to get.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var objects = [\n\t     *   { 'a': { 'b': 2 } },\n\t     *   { 'a': { 'b': 1 } }\n\t     * ];\n\t     *\n\t     * _.map(objects, _.property('a.b'));\n\t     * // => [2, 1]\n\t     *\n\t     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n\t     * // => [1, 2]\n\t     */\n\t    function property(path) {\n\t      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n\t    }\n\t\n\t    /**\n\t     * The opposite of `_.property`; this method creates a function that returns\n\t     * the value at a given path of `object`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.0.0\n\t     * @category Util\n\t     * @param {Object} object The object to query.\n\t     * @returns {Function} Returns the new accessor function.\n\t     * @example\n\t     *\n\t     * var array = [0, 1, 2],\n\t     *     object = { 'a': array, 'b': array, 'c': array };\n\t     *\n\t     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     *\n\t     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n\t     * // => [2, 0]\n\t     */\n\t    function propertyOf(object) {\n\t      return function(path) {\n\t        return object == null ? undefined : baseGet(object, path);\n\t      };\n\t    }\n\t\n\t    /**\n\t     * Creates an array of numbers (positive and/or negative) progressing from\n\t     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n\t     * `start` is specified without an `end` or `step`. If `end` is not specified,\n\t     * it's set to `start` with `start` then set to `0`.\n\t     *\n\t     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n\t     * floating-point values which can produce unexpected results.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.rangeRight\n\t     * @example\n\t     *\n\t     * _.range(4);\n\t     * // => [0, 1, 2, 3]\n\t     *\n\t     * _.range(-4);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 5);\n\t     * // => [1, 2, 3, 4]\n\t     *\n\t     * _.range(0, 20, 5);\n\t     * // => [0, 5, 10, 15]\n\t     *\n\t     * _.range(0, -4, -1);\n\t     * // => [0, -1, -2, -3]\n\t     *\n\t     * _.range(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.range(0);\n\t     * // => []\n\t     */\n\t    var range = createRange();\n\t\n\t    /**\n\t     * This method is like `_.range` except that it populates values in\n\t     * descending order.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {number} [start=0] The start of the range.\n\t     * @param {number} end The end of the range.\n\t     * @param {number} [step=1] The value to increment or decrement by.\n\t     * @returns {Array} Returns the range of numbers.\n\t     * @see _.inRange, _.range\n\t     * @example\n\t     *\n\t     * _.rangeRight(4);\n\t     * // => [3, 2, 1, 0]\n\t     *\n\t     * _.rangeRight(-4);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 5);\n\t     * // => [4, 3, 2, 1]\n\t     *\n\t     * _.rangeRight(0, 20, 5);\n\t     * // => [15, 10, 5, 0]\n\t     *\n\t     * _.rangeRight(0, -4, -1);\n\t     * // => [-3, -2, -1, 0]\n\t     *\n\t     * _.rangeRight(1, 4, 0);\n\t     * // => [1, 1, 1]\n\t     *\n\t     * _.rangeRight(0);\n\t     * // => []\n\t     */\n\t    var rangeRight = createRange(true);\n\t\n\t    /**\n\t     * This method returns a new empty array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Array} Returns the new empty array.\n\t     * @example\n\t     *\n\t     * var arrays = _.times(2, _.stubArray);\n\t     *\n\t     * console.log(arrays);\n\t     * // => [[], []]\n\t     *\n\t     * console.log(arrays[0] === arrays[1]);\n\t     * // => false\n\t     */\n\t    function stubArray() {\n\t      return [];\n\t    }\n\t\n\t    /**\n\t     * This method returns `false`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `false`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubFalse);\n\t     * // => [false, false]\n\t     */\n\t    function stubFalse() {\n\t      return false;\n\t    }\n\t\n\t    /**\n\t     * This method returns a new empty object.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {Object} Returns the new empty object.\n\t     * @example\n\t     *\n\t     * var objects = _.times(2, _.stubObject);\n\t     *\n\t     * console.log(objects);\n\t     * // => [{}, {}]\n\t     *\n\t     * console.log(objects[0] === objects[1]);\n\t     * // => false\n\t     */\n\t    function stubObject() {\n\t      return {};\n\t    }\n\t\n\t    /**\n\t     * This method returns an empty string.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {string} Returns the empty string.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubString);\n\t     * // => ['', '']\n\t     */\n\t    function stubString() {\n\t      return '';\n\t    }\n\t\n\t    /**\n\t     * This method returns `true`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.13.0\n\t     * @category Util\n\t     * @returns {boolean} Returns `true`.\n\t     * @example\n\t     *\n\t     * _.times(2, _.stubTrue);\n\t     * // => [true, true]\n\t     */\n\t    function stubTrue() {\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Invokes the iteratee `n` times, returning an array of the results of\n\t     * each invocation. The iteratee is invoked with one argument; (index).\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {number} n The number of times to invoke `iteratee`.\n\t     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n\t     * @returns {Array} Returns the array of results.\n\t     * @example\n\t     *\n\t     * _.times(3, String);\n\t     * // => ['0', '1', '2']\n\t     *\n\t     *  _.times(4, _.constant(0));\n\t     * // => [0, 0, 0, 0]\n\t     */\n\t    function times(n, iteratee) {\n\t      n = toInteger(n);\n\t      if (n < 1 || n > MAX_SAFE_INTEGER) {\n\t        return [];\n\t      }\n\t      var index = MAX_ARRAY_LENGTH,\n\t          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\t\n\t      iteratee = getIteratee(iteratee);\n\t      n -= MAX_ARRAY_LENGTH;\n\t\n\t      var result = baseTimes(length, iteratee);\n\t      while (++index < n) {\n\t        iteratee(index);\n\t      }\n\t      return result;\n\t    }\n\t\n\t    /**\n\t     * Converts `value` to a property path array.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Util\n\t     * @param {*} value The value to convert.\n\t     * @returns {Array} Returns the new property path array.\n\t     * @example\n\t     *\n\t     * _.toPath('a.b.c');\n\t     * // => ['a', 'b', 'c']\n\t     *\n\t     * _.toPath('a[0].b.c');\n\t     * // => ['a', '0', 'b', 'c']\n\t     */\n\t    function toPath(value) {\n\t      if (isArray(value)) {\n\t        return arrayMap(value, toKey);\n\t      }\n\t      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n\t    }\n\t\n\t    /**\n\t     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Util\n\t     * @param {string} [prefix=''] The value to prefix the ID with.\n\t     * @returns {string} Returns the unique ID.\n\t     * @example\n\t     *\n\t     * _.uniqueId('contact_');\n\t     * // => 'contact_104'\n\t     *\n\t     * _.uniqueId();\n\t     * // => '105'\n\t     */\n\t    function uniqueId(prefix) {\n\t      var id = ++idCounter;\n\t      return toString(prefix) + id;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * Adds two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {number} augend The first number in an addition.\n\t     * @param {number} addend The second number in an addition.\n\t     * @returns {number} Returns the total.\n\t     * @example\n\t     *\n\t     * _.add(6, 4);\n\t     * // => 10\n\t     */\n\t    var add = createMathOperation(function(augend, addend) {\n\t      return augend + addend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes `number` rounded up to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round up.\n\t     * @param {number} [precision=0] The precision to round up to.\n\t     * @returns {number} Returns the rounded up number.\n\t     * @example\n\t     *\n\t     * _.ceil(4.006);\n\t     * // => 5\n\t     *\n\t     * _.ceil(6.004, 2);\n\t     * // => 6.01\n\t     *\n\t     * _.ceil(6040, -2);\n\t     * // => 6100\n\t     */\n\t    var ceil = createRound('ceil');\n\t\n\t    /**\n\t     * Divide two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} dividend The first number in a division.\n\t     * @param {number} divisor The second number in a division.\n\t     * @returns {number} Returns the quotient.\n\t     * @example\n\t     *\n\t     * _.divide(6, 4);\n\t     * // => 1.5\n\t     */\n\t    var divide = createMathOperation(function(dividend, divisor) {\n\t      return dividend / divisor;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded down to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round down.\n\t     * @param {number} [precision=0] The precision to round down to.\n\t     * @returns {number} Returns the rounded down number.\n\t     * @example\n\t     *\n\t     * _.floor(4.006);\n\t     * // => 4\n\t     *\n\t     * _.floor(0.046, 2);\n\t     * // => 0.04\n\t     *\n\t     * _.floor(4060, -2);\n\t     * // => 4000\n\t     */\n\t    var floor = createRound('floor');\n\t\n\t    /**\n\t     * Computes the maximum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * _.max([4, 2, 8, 6]);\n\t     * // => 8\n\t     *\n\t     * _.max([]);\n\t     * // => undefined\n\t     */\n\t    function max(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.max` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the maximum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.maxBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 2 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.maxBy(objects, 'n');\n\t     * // => { 'n': 2 }\n\t     */\n\t    function maxBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Computes the mean of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * _.mean([4, 2, 8, 6]);\n\t     * // => 5\n\t     */\n\t    function mean(array) {\n\t      return baseMean(array, identity);\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.mean` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be averaged.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the mean.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.meanBy(objects, function(o) { return o.n; });\n\t     * // => 5\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.meanBy(objects, 'n');\n\t     * // => 5\n\t     */\n\t    function meanBy(array, iteratee) {\n\t      return baseMean(array, getIteratee(iteratee, 2));\n\t    }\n\t\n\t    /**\n\t     * Computes the minimum value of `array`. If `array` is empty or falsey,\n\t     * `undefined` is returned.\n\t     *\n\t     * @static\n\t     * @since 0.1.0\n\t     * @memberOf _\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * _.min([4, 2, 8, 6]);\n\t     * // => 2\n\t     *\n\t     * _.min([]);\n\t     * // => undefined\n\t     */\n\t    function min(array) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, identity, baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.min` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the criterion by which\n\t     * the value is ranked. The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {*} Returns the minimum value.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n\t     *\n\t     * _.minBy(objects, function(o) { return o.n; });\n\t     * // => { 'n': 1 }\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.minBy(objects, 'n');\n\t     * // => { 'n': 1 }\n\t     */\n\t    function minBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n\t        : undefined;\n\t    }\n\t\n\t    /**\n\t     * Multiply two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.7.0\n\t     * @category Math\n\t     * @param {number} multiplier The first number in a multiplication.\n\t     * @param {number} multiplicand The second number in a multiplication.\n\t     * @returns {number} Returns the product.\n\t     * @example\n\t     *\n\t     * _.multiply(6, 4);\n\t     * // => 24\n\t     */\n\t    var multiply = createMathOperation(function(multiplier, multiplicand) {\n\t      return multiplier * multiplicand;\n\t    }, 1);\n\t\n\t    /**\n\t     * Computes `number` rounded to `precision`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.10.0\n\t     * @category Math\n\t     * @param {number} number The number to round.\n\t     * @param {number} [precision=0] The precision to round to.\n\t     * @returns {number} Returns the rounded number.\n\t     * @example\n\t     *\n\t     * _.round(4.006);\n\t     * // => 4\n\t     *\n\t     * _.round(4.006, 2);\n\t     * // => 4.01\n\t     *\n\t     * _.round(4060, -2);\n\t     * // => 4100\n\t     */\n\t    var round = createRound('round');\n\t\n\t    /**\n\t     * Subtract two numbers.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {number} minuend The first number in a subtraction.\n\t     * @param {number} subtrahend The second number in a subtraction.\n\t     * @returns {number} Returns the difference.\n\t     * @example\n\t     *\n\t     * _.subtract(6, 4);\n\t     * // => 2\n\t     */\n\t    var subtract = createMathOperation(function(minuend, subtrahend) {\n\t      return minuend - subtrahend;\n\t    }, 0);\n\t\n\t    /**\n\t     * Computes the sum of the values in `array`.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 3.4.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * _.sum([4, 2, 8, 6]);\n\t     * // => 20\n\t     */\n\t    function sum(array) {\n\t      return (array && array.length)\n\t        ? baseSum(array, identity)\n\t        : 0;\n\t    }\n\t\n\t    /**\n\t     * This method is like `_.sum` except that it accepts `iteratee` which is\n\t     * invoked for each element in `array` to generate the value to be summed.\n\t     * The iteratee is invoked with one argument: (value).\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @since 4.0.0\n\t     * @category Math\n\t     * @param {Array} array The array to iterate over.\n\t     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n\t     * @returns {number} Returns the sum.\n\t     * @example\n\t     *\n\t     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n\t     *\n\t     * _.sumBy(objects, function(o) { return o.n; });\n\t     * // => 20\n\t     *\n\t     * // The `_.property` iteratee shorthand.\n\t     * _.sumBy(objects, 'n');\n\t     * // => 20\n\t     */\n\t    function sumBy(array, iteratee) {\n\t      return (array && array.length)\n\t        ? baseSum(array, getIteratee(iteratee, 2))\n\t        : 0;\n\t    }\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return wrapped values in chain sequences.\n\t    lodash.after = after;\n\t    lodash.ary = ary;\n\t    lodash.assign = assign;\n\t    lodash.assignIn = assignIn;\n\t    lodash.assignInWith = assignInWith;\n\t    lodash.assignWith = assignWith;\n\t    lodash.at = at;\n\t    lodash.before = before;\n\t    lodash.bind = bind;\n\t    lodash.bindAll = bindAll;\n\t    lodash.bindKey = bindKey;\n\t    lodash.castArray = castArray;\n\t    lodash.chain = chain;\n\t    lodash.chunk = chunk;\n\t    lodash.compact = compact;\n\t    lodash.concat = concat;\n\t    lodash.cond = cond;\n\t    lodash.conforms = conforms;\n\t    lodash.constant = constant;\n\t    lodash.countBy = countBy;\n\t    lodash.create = create;\n\t    lodash.curry = curry;\n\t    lodash.curryRight = curryRight;\n\t    lodash.debounce = debounce;\n\t    lodash.defaults = defaults;\n\t    lodash.defaultsDeep = defaultsDeep;\n\t    lodash.defer = defer;\n\t    lodash.delay = delay;\n\t    lodash.difference = difference;\n\t    lodash.differenceBy = differenceBy;\n\t    lodash.differenceWith = differenceWith;\n\t    lodash.drop = drop;\n\t    lodash.dropRight = dropRight;\n\t    lodash.dropRightWhile = dropRightWhile;\n\t    lodash.dropWhile = dropWhile;\n\t    lodash.fill = fill;\n\t    lodash.filter = filter;\n\t    lodash.flatMap = flatMap;\n\t    lodash.flatMapDeep = flatMapDeep;\n\t    lodash.flatMapDepth = flatMapDepth;\n\t    lodash.flatten = flatten;\n\t    lodash.flattenDeep = flattenDeep;\n\t    lodash.flattenDepth = flattenDepth;\n\t    lodash.flip = flip;\n\t    lodash.flow = flow;\n\t    lodash.flowRight = flowRight;\n\t    lodash.fromPairs = fromPairs;\n\t    lodash.functions = functions;\n\t    lodash.functionsIn = functionsIn;\n\t    lodash.groupBy = groupBy;\n\t    lodash.initial = initial;\n\t    lodash.intersection = intersection;\n\t    lodash.intersectionBy = intersectionBy;\n\t    lodash.intersectionWith = intersectionWith;\n\t    lodash.invert = invert;\n\t    lodash.invertBy = invertBy;\n\t    lodash.invokeMap = invokeMap;\n\t    lodash.iteratee = iteratee;\n\t    lodash.keyBy = keyBy;\n\t    lodash.keys = keys;\n\t    lodash.keysIn = keysIn;\n\t    lodash.map = map;\n\t    lodash.mapKeys = mapKeys;\n\t    lodash.mapValues = mapValues;\n\t    lodash.matches = matches;\n\t    lodash.matchesProperty = matchesProperty;\n\t    lodash.memoize = memoize;\n\t    lodash.merge = merge;\n\t    lodash.mergeWith = mergeWith;\n\t    lodash.method = method;\n\t    lodash.methodOf = methodOf;\n\t    lodash.mixin = mixin;\n\t    lodash.negate = negate;\n\t    lodash.nthArg = nthArg;\n\t    lodash.omit = omit;\n\t    lodash.omitBy = omitBy;\n\t    lodash.once = once;\n\t    lodash.orderBy = orderBy;\n\t    lodash.over = over;\n\t    lodash.overArgs = overArgs;\n\t    lodash.overEvery = overEvery;\n\t    lodash.overSome = overSome;\n\t    lodash.partial = partial;\n\t    lodash.partialRight = partialRight;\n\t    lodash.partition = partition;\n\t    lodash.pick = pick;\n\t    lodash.pickBy = pickBy;\n\t    lodash.property = property;\n\t    lodash.propertyOf = propertyOf;\n\t    lodash.pull = pull;\n\t    lodash.pullAll = pullAll;\n\t    lodash.pullAllBy = pullAllBy;\n\t    lodash.pullAllWith = pullAllWith;\n\t    lodash.pullAt = pullAt;\n\t    lodash.range = range;\n\t    lodash.rangeRight = rangeRight;\n\t    lodash.rearg = rearg;\n\t    lodash.reject = reject;\n\t    lodash.remove = remove;\n\t    lodash.rest = rest;\n\t    lodash.reverse = reverse;\n\t    lodash.sampleSize = sampleSize;\n\t    lodash.set = set;\n\t    lodash.setWith = setWith;\n\t    lodash.shuffle = shuffle;\n\t    lodash.slice = slice;\n\t    lodash.sortBy = sortBy;\n\t    lodash.sortedUniq = sortedUniq;\n\t    lodash.sortedUniqBy = sortedUniqBy;\n\t    lodash.split = split;\n\t    lodash.spread = spread;\n\t    lodash.tail = tail;\n\t    lodash.take = take;\n\t    lodash.takeRight = takeRight;\n\t    lodash.takeRightWhile = takeRightWhile;\n\t    lodash.takeWhile = takeWhile;\n\t    lodash.tap = tap;\n\t    lodash.throttle = throttle;\n\t    lodash.thru = thru;\n\t    lodash.toArray = toArray;\n\t    lodash.toPairs = toPairs;\n\t    lodash.toPairsIn = toPairsIn;\n\t    lodash.toPath = toPath;\n\t    lodash.toPlainObject = toPlainObject;\n\t    lodash.transform = transform;\n\t    lodash.unary = unary;\n\t    lodash.union = union;\n\t    lodash.unionBy = unionBy;\n\t    lodash.unionWith = unionWith;\n\t    lodash.uniq = uniq;\n\t    lodash.uniqBy = uniqBy;\n\t    lodash.uniqWith = uniqWith;\n\t    lodash.unset = unset;\n\t    lodash.unzip = unzip;\n\t    lodash.unzipWith = unzipWith;\n\t    lodash.update = update;\n\t    lodash.updateWith = updateWith;\n\t    lodash.values = values;\n\t    lodash.valuesIn = valuesIn;\n\t    lodash.without = without;\n\t    lodash.words = words;\n\t    lodash.wrap = wrap;\n\t    lodash.xor = xor;\n\t    lodash.xorBy = xorBy;\n\t    lodash.xorWith = xorWith;\n\t    lodash.zip = zip;\n\t    lodash.zipObject = zipObject;\n\t    lodash.zipObjectDeep = zipObjectDeep;\n\t    lodash.zipWith = zipWith;\n\t\n\t    // Add aliases.\n\t    lodash.entries = toPairs;\n\t    lodash.entriesIn = toPairsIn;\n\t    lodash.extend = assignIn;\n\t    lodash.extendWith = assignInWith;\n\t\n\t    // Add methods to `lodash.prototype`.\n\t    mixin(lodash, lodash);\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    // Add methods that return unwrapped values in chain sequences.\n\t    lodash.add = add;\n\t    lodash.attempt = attempt;\n\t    lodash.camelCase = camelCase;\n\t    lodash.capitalize = capitalize;\n\t    lodash.ceil = ceil;\n\t    lodash.clamp = clamp;\n\t    lodash.clone = clone;\n\t    lodash.cloneDeep = cloneDeep;\n\t    lodash.cloneDeepWith = cloneDeepWith;\n\t    lodash.cloneWith = cloneWith;\n\t    lodash.conformsTo = conformsTo;\n\t    lodash.deburr = deburr;\n\t    lodash.defaultTo = defaultTo;\n\t    lodash.divide = divide;\n\t    lodash.endsWith = endsWith;\n\t    lodash.eq = eq;\n\t    lodash.escape = escape;\n\t    lodash.escapeRegExp = escapeRegExp;\n\t    lodash.every = every;\n\t    lodash.find = find;\n\t    lodash.findIndex = findIndex;\n\t    lodash.findKey = findKey;\n\t    lodash.findLast = findLast;\n\t    lodash.findLastIndex = findLastIndex;\n\t    lodash.findLastKey = findLastKey;\n\t    lodash.floor = floor;\n\t    lodash.forEach = forEach;\n\t    lodash.forEachRight = forEachRight;\n\t    lodash.forIn = forIn;\n\t    lodash.forInRight = forInRight;\n\t    lodash.forOwn = forOwn;\n\t    lodash.forOwnRight = forOwnRight;\n\t    lodash.get = get;\n\t    lodash.gt = gt;\n\t    lodash.gte = gte;\n\t    lodash.has = has;\n\t    lodash.hasIn = hasIn;\n\t    lodash.head = head;\n\t    lodash.identity = identity;\n\t    lodash.includes = includes;\n\t    lodash.indexOf = indexOf;\n\t    lodash.inRange = inRange;\n\t    lodash.invoke = invoke;\n\t    lodash.isArguments = isArguments;\n\t    lodash.isArray = isArray;\n\t    lodash.isArrayBuffer = isArrayBuffer;\n\t    lodash.isArrayLike = isArrayLike;\n\t    lodash.isArrayLikeObject = isArrayLikeObject;\n\t    lodash.isBoolean = isBoolean;\n\t    lodash.isBuffer = isBuffer;\n\t    lodash.isDate = isDate;\n\t    lodash.isElement = isElement;\n\t    lodash.isEmpty = isEmpty;\n\t    lodash.isEqual = isEqual;\n\t    lodash.isEqualWith = isEqualWith;\n\t    lodash.isError = isError;\n\t    lodash.isFinite = isFinite;\n\t    lodash.isFunction = isFunction;\n\t    lodash.isInteger = isInteger;\n\t    lodash.isLength = isLength;\n\t    lodash.isMap = isMap;\n\t    lodash.isMatch = isMatch;\n\t    lodash.isMatchWith = isMatchWith;\n\t    lodash.isNaN = isNaN;\n\t    lodash.isNative = isNative;\n\t    lodash.isNil = isNil;\n\t    lodash.isNull = isNull;\n\t    lodash.isNumber = isNumber;\n\t    lodash.isObject = isObject;\n\t    lodash.isObjectLike = isObjectLike;\n\t    lodash.isPlainObject = isPlainObject;\n\t    lodash.isRegExp = isRegExp;\n\t    lodash.isSafeInteger = isSafeInteger;\n\t    lodash.isSet = isSet;\n\t    lodash.isString = isString;\n\t    lodash.isSymbol = isSymbol;\n\t    lodash.isTypedArray = isTypedArray;\n\t    lodash.isUndefined = isUndefined;\n\t    lodash.isWeakMap = isWeakMap;\n\t    lodash.isWeakSet = isWeakSet;\n\t    lodash.join = join;\n\t    lodash.kebabCase = kebabCase;\n\t    lodash.last = last;\n\t    lodash.lastIndexOf = lastIndexOf;\n\t    lodash.lowerCase = lowerCase;\n\t    lodash.lowerFirst = lowerFirst;\n\t    lodash.lt = lt;\n\t    lodash.lte = lte;\n\t    lodash.max = max;\n\t    lodash.maxBy = maxBy;\n\t    lodash.mean = mean;\n\t    lodash.meanBy = meanBy;\n\t    lodash.min = min;\n\t    lodash.minBy = minBy;\n\t    lodash.stubArray = stubArray;\n\t    lodash.stubFalse = stubFalse;\n\t    lodash.stubObject = stubObject;\n\t    lodash.stubString = stubString;\n\t    lodash.stubTrue = stubTrue;\n\t    lodash.multiply = multiply;\n\t    lodash.nth = nth;\n\t    lodash.noConflict = noConflict;\n\t    lodash.noop = noop;\n\t    lodash.now = now;\n\t    lodash.pad = pad;\n\t    lodash.padEnd = padEnd;\n\t    lodash.padStart = padStart;\n\t    lodash.parseInt = parseInt;\n\t    lodash.random = random;\n\t    lodash.reduce = reduce;\n\t    lodash.reduceRight = reduceRight;\n\t    lodash.repeat = repeat;\n\t    lodash.replace = replace;\n\t    lodash.result = result;\n\t    lodash.round = round;\n\t    lodash.runInContext = runInContext;\n\t    lodash.sample = sample;\n\t    lodash.size = size;\n\t    lodash.snakeCase = snakeCase;\n\t    lodash.some = some;\n\t    lodash.sortedIndex = sortedIndex;\n\t    lodash.sortedIndexBy = sortedIndexBy;\n\t    lodash.sortedIndexOf = sortedIndexOf;\n\t    lodash.sortedLastIndex = sortedLastIndex;\n\t    lodash.sortedLastIndexBy = sortedLastIndexBy;\n\t    lodash.sortedLastIndexOf = sortedLastIndexOf;\n\t    lodash.startCase = startCase;\n\t    lodash.startsWith = startsWith;\n\t    lodash.subtract = subtract;\n\t    lodash.sum = sum;\n\t    lodash.sumBy = sumBy;\n\t    lodash.template = template;\n\t    lodash.times = times;\n\t    lodash.toFinite = toFinite;\n\t    lodash.toInteger = toInteger;\n\t    lodash.toLength = toLength;\n\t    lodash.toLower = toLower;\n\t    lodash.toNumber = toNumber;\n\t    lodash.toSafeInteger = toSafeInteger;\n\t    lodash.toString = toString;\n\t    lodash.toUpper = toUpper;\n\t    lodash.trim = trim;\n\t    lodash.trimEnd = trimEnd;\n\t    lodash.trimStart = trimStart;\n\t    lodash.truncate = truncate;\n\t    lodash.unescape = unescape;\n\t    lodash.uniqueId = uniqueId;\n\t    lodash.upperCase = upperCase;\n\t    lodash.upperFirst = upperFirst;\n\t\n\t    // Add aliases.\n\t    lodash.each = forEach;\n\t    lodash.eachRight = forEachRight;\n\t    lodash.first = head;\n\t\n\t    mixin(lodash, (function() {\n\t      var source = {};\n\t      baseForOwn(lodash, function(func, methodName) {\n\t        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n\t          source[methodName] = func;\n\t        }\n\t      });\n\t      return source;\n\t    }()), { 'chain': false });\n\t\n\t    /*------------------------------------------------------------------------*/\n\t\n\t    /**\n\t     * The semantic version number.\n\t     *\n\t     * @static\n\t     * @memberOf _\n\t     * @type {string}\n\t     */\n\t    lodash.VERSION = VERSION;\n\t\n\t    // Assign default placeholders.\n\t    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n\t      lodash[methodName].placeholder = lodash;\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n\t    arrayEach(['drop', 'take'], function(methodName, index) {\n\t      LazyWrapper.prototype[methodName] = function(n) {\n\t        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\t\n\t        var result = (this.__filtered__ && !index)\n\t          ? new LazyWrapper(this)\n\t          : this.clone();\n\t\n\t        if (result.__filtered__) {\n\t          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n\t        } else {\n\t          result.__views__.push({\n\t            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n\t            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n\t          });\n\t        }\n\t        return result;\n\t      };\n\t\n\t      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n\t        return this.reverse()[methodName](n).reverse();\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods that accept an `iteratee` value.\n\t    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n\t      var type = index + 1,\n\t          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\t\n\t      LazyWrapper.prototype[methodName] = function(iteratee) {\n\t        var result = this.clone();\n\t        result.__iteratees__.push({\n\t          'iteratee': getIteratee(iteratee, 3),\n\t          'type': type\n\t        });\n\t        result.__filtered__ = result.__filtered__ || isFilter;\n\t        return result;\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n\t    arrayEach(['head', 'last'], function(methodName, index) {\n\t      var takeName = 'take' + (index ? 'Right' : '');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this[takeName](1).value()[0];\n\t      };\n\t    });\n\t\n\t    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n\t    arrayEach(['initial', 'tail'], function(methodName, index) {\n\t      var dropName = 'drop' + (index ? '' : 'Right');\n\t\n\t      LazyWrapper.prototype[methodName] = function() {\n\t        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n\t      };\n\t    });\n\t\n\t    LazyWrapper.prototype.compact = function() {\n\t      return this.filter(identity);\n\t    };\n\t\n\t    LazyWrapper.prototype.find = function(predicate) {\n\t      return this.filter(predicate).head();\n\t    };\n\t\n\t    LazyWrapper.prototype.findLast = function(predicate) {\n\t      return this.reverse().find(predicate);\n\t    };\n\t\n\t    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n\t      if (typeof path == 'function') {\n\t        return new LazyWrapper(this);\n\t      }\n\t      return this.map(function(value) {\n\t        return baseInvoke(value, path, args);\n\t      });\n\t    });\n\t\n\t    LazyWrapper.prototype.reject = function(predicate) {\n\t      return this.filter(negate(getIteratee(predicate)));\n\t    };\n\t\n\t    LazyWrapper.prototype.slice = function(start, end) {\n\t      start = toInteger(start);\n\t\n\t      var result = this;\n\t      if (result.__filtered__ && (start > 0 || end < 0)) {\n\t        return new LazyWrapper(result);\n\t      }\n\t      if (start < 0) {\n\t        result = result.takeRight(-start);\n\t      } else if (start) {\n\t        result = result.drop(start);\n\t      }\n\t      if (end !== undefined) {\n\t        end = toInteger(end);\n\t        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n\t      }\n\t      return result;\n\t    };\n\t\n\t    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n\t      return this.reverse().takeWhile(predicate).reverse();\n\t    };\n\t\n\t    LazyWrapper.prototype.toArray = function() {\n\t      return this.take(MAX_ARRAY_LENGTH);\n\t    };\n\t\n\t    // Add `LazyWrapper` methods to `lodash.prototype`.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n\t          isTaker = /^(?:head|last)$/.test(methodName),\n\t          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n\t          retUnwrapped = isTaker || /^find/.test(methodName);\n\t\n\t      if (!lodashFunc) {\n\t        return;\n\t      }\n\t      lodash.prototype[methodName] = function() {\n\t        var value = this.__wrapped__,\n\t            args = isTaker ? [1] : arguments,\n\t            isLazy = value instanceof LazyWrapper,\n\t            iteratee = args[0],\n\t            useLazy = isLazy || isArray(value);\n\t\n\t        var interceptor = function(value) {\n\t          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n\t          return (isTaker && chainAll) ? result[0] : result;\n\t        };\n\t\n\t        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n\t          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n\t          isLazy = useLazy = false;\n\t        }\n\t        var chainAll = this.__chain__,\n\t            isHybrid = !!this.__actions__.length,\n\t            isUnwrapped = retUnwrapped && !chainAll,\n\t            onlyLazy = isLazy && !isHybrid;\n\t\n\t        if (!retUnwrapped && useLazy) {\n\t          value = onlyLazy ? value : new LazyWrapper(this);\n\t          var result = func.apply(value, args);\n\t          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n\t          return new LodashWrapper(result, chainAll);\n\t        }\n\t        if (isUnwrapped && onlyLazy) {\n\t          return func.apply(this, args);\n\t        }\n\t        result = this.thru(interceptor);\n\t        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n\t      };\n\t    });\n\t\n\t    // Add `Array` methods to `lodash.prototype`.\n\t    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n\t      var func = arrayProto[methodName],\n\t          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n\t          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\t\n\t      lodash.prototype[methodName] = function() {\n\t        var args = arguments;\n\t        if (retUnwrapped && !this.__chain__) {\n\t          var value = this.value();\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        }\n\t        return this[chainName](function(value) {\n\t          return func.apply(isArray(value) ? value : [], args);\n\t        });\n\t      };\n\t    });\n\t\n\t    // Map minified method names to their real names.\n\t    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n\t      var lodashFunc = lodash[methodName];\n\t      if (lodashFunc) {\n\t        var key = (lodashFunc.name + ''),\n\t            names = realNames[key] || (realNames[key] = []);\n\t\n\t        names.push({ 'name': methodName, 'func': lodashFunc });\n\t      }\n\t    });\n\t\n\t    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n\t      'name': 'wrapper',\n\t      'func': undefined\n\t    }];\n\t\n\t    // Add methods to `LazyWrapper`.\n\t    LazyWrapper.prototype.clone = lazyClone;\n\t    LazyWrapper.prototype.reverse = lazyReverse;\n\t    LazyWrapper.prototype.value = lazyValue;\n\t\n\t    // Add chain sequence methods to the `lodash` wrapper.\n\t    lodash.prototype.at = wrapperAt;\n\t    lodash.prototype.chain = wrapperChain;\n\t    lodash.prototype.commit = wrapperCommit;\n\t    lodash.prototype.next = wrapperNext;\n\t    lodash.prototype.plant = wrapperPlant;\n\t    lodash.prototype.reverse = wrapperReverse;\n\t    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\t\n\t    // Add lazy aliases.\n\t    lodash.prototype.first = lodash.prototype.head;\n\t\n\t    if (symIterator) {\n\t      lodash.prototype[symIterator] = wrapperToIterator;\n\t    }\n\t    return lodash;\n\t  });\n\t\n\t  /*--------------------------------------------------------------------------*/\n\t\n\t  // Export lodash.\n\t  var _ = runInContext();\n\t\n\t  // Some AMD build optimizers, like r.js, check for condition patterns like:\n\t  if (true) {\n\t    // Expose Lodash on the global object to prevent errors when Lodash is\n\t    // loaded by a script tag in the presence of an AMD loader.\n\t    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n\t    // Use `_.noConflict` to remove Lodash from the global object.\n\t    root._ = _;\n\t\n\t    // Define as an anonymous module so, through path mapping, it can be\n\t    // referenced as the \"underscore\" module.\n\t    !(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t      return _;\n\t    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t  }\n\t  // Check for `exports` after `define` in case a build optimizer adds it.\n\t  else if (freeModule) {\n\t    // Export for Node.js.\n\t    (freeModule.exports = _)._ = _;\n\t    // Export for CommonJS support.\n\t    freeExports._ = _;\n\t  }\n\t  else {\n\t    // Export to the global object.\n\t    root._ = _;\n\t  }\n\t}.call(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(107)(module)))\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-danger\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a>\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Preserver </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Recycle Bin</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-bars' : 'fa fa-th'}}\\\"></i>\\n            </a>\\n          </li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\">\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div class=\\\"panel-body my-note module line-clamp\\\">\\n        <p><strong>{{text.doc?.title}}</strong></p>\\n        <p>{{text.doc?.note}}</p>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <li class=\\\"dropup\\\">\\n            <a class=\\\"btn btn-link btn-raised\\\"\\n              title=\\\"Delete forever\\\" data-target=\\\"#deleteNote\\\" data-toggle=\\\"modal\\\" (click)=\\\"setDeleteNote(text, noteRow)\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </a>\\n          </li>\\n          <li>\\n            <a class=\\\"btn btn-link btn-raised\\\"\\n              title=\\\"Restore\\\" (click)=\\\"restoreNote(text, noteRow)\\\">\\n              <i class=\\\"fa fa-undo\\\"></i>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"modal fade\\\" id=\\\"{{'note' + text.doc._id}}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"{{'modal-content ' + text.doc.color}}\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">\\n                <p class=\\\"\\\"><strong>{{text.doc.title}}</strong></p>\\n              </h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <p class=\\\"edit-saved-textera\\\">{{text.doc.note}}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"deleteNote\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Delete note forever?</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p></p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm delete-model-btn\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteNote()\\\">DELETE</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <div class=\\\"empty-notes-icon empty-bin\\\"></div>\\n    <div class=\\\"empty-notes\\\">No notes in Recycle Bin</div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar angular2_notifications_1 = __webpack_require__(29);\n\tvar services_1 = __webpack_require__(74);\n\tvar _ = __webpack_require__(106);\n\tvar HomeComponent = (function () {\n\t    function HomeComponent(_dragulaService, _notesService, _notificationsService) {\n\t        var _this = this;\n\t        this._dragulaService = _dragulaService;\n\t        this._notesService = _notesService;\n\t        this._notificationsService = _notificationsService;\n\t        this.spinner = true;\n\t        this.displayList = false;\n\t        this.inputFocusClass = false;\n\t        this.notes_table = NOTES_TABLE;\n\t        this.emptyHtmlMsg = false;\n\t        this.notes = [];\n\t        this.draft = {};\n\t        this.editNoteDraft = {};\n\t        this.toEditNote = null;\n\t        this.remindMe = {\n\t            date: null,\n\t            repeat: 'doesnotrepeat',\n\t            noteToSet: null\n\t        };\n\t        this.order = [];\n\t        this.orderNotes = [];\n\t        this.notificationOptions = {\n\t            timeOut: 2000,\n\t            lastOnBottom: true,\n\t            clickToClose: true,\n\t            showProgressBar: false,\n\t            pauseOnHover: true,\n\t            preventDuplicates: false,\n\t            theClass: \"notes-notifications notes\",\n\t            rtl: false\n\t        };\n\t        var yesterday = new Date();\n\t        yesterday.setDate(yesterday.getDate() - 1);\n\t        this.date2MinDate = yesterday;\n\t        _dragulaService.dropModel.subscribe(function (value) {\n\t            _this.onDropModel(value.slice(1));\n\t        });\n\t        this.displayList = localStorage.getItem(\"displayNotesTypeList\") == 'true' ? true : false;\n\t    }\n\t    HomeComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.subscription = this._notesService.notes_tables$.subscribe(function (notes_table) { return _this.notes_table = notes_table; });\n\t        this.refreshNotesTables();\n\t    };\n\t    HomeComponent.prototype._setInputFocus = function (isFocus) {\n\t        this.inputFocusClass = isFocus;\n\t    };\n\t    HomeComponent.prototype.onDropModel = function (args) {\n\t        var el = args[0], target = args[1], source = args[2];\n\t        var order = [];\n\t        this.notes.forEach(function (row) {\n\t            order.push(row.doc._id);\n\t        });\n\t        localStorage.setItem(\"order\", JSON.stringify(order));\n\t    };\n\t    HomeComponent.prototype.ngOnDestroy = function () {\n\t        this.subscription.unsubscribe();\n\t    };\n\t    HomeComponent.prototype.refreshNotesTables = function () {\n\t        var _this = this;\n\t        this._notesService.getNotes('notes').then(function (alldoc) {\n\t            _this.notes_table = alldoc.rows;\n\t            var testNotes = [];\n\t            testNotes = _this.notes_table;\n\t            if (localStorage.getItem('order')) {\n\t                _this.order = JSON.parse(localStorage.getItem(\"order\"));\n\t            }\n\t            _this.notes = [];\n\t            _this.order.forEach(function (el) {\n\t                testNotes.forEach(function (row) {\n\t                    if (String(row.doc._id) === String(el)) {\n\t                        _this.notes.push(row);\n\t                    }\n\t                });\n\t            });\n\t            if (_.isEmpty(_this.notes)) {\n\t                _this.emptyHtmlMsg = true;\n\t            }\n\t            else {\n\t                _this.emptyHtmlMsg = false;\n\t            }\n\t            _this.spinner = false;\n\t        }, function (err) {\n\t            _this.spinner = false;\n\t        });\n\t    };\n\t    HomeComponent.prototype.saveNote = function (e, notetextarea) {\n\t        var _this = this;\n\t        if (_.trim(this.draft.title) || _.trim(this.draft.note)) {\n\t            this.draft._id = 'note_' + Math.floor(Date.now() / 1000);\n\t            this.draft.color = \"label-default\";\n\t            this.draft.time = new Date().toISOString();\n\t            this.draft.label = \"\";\n\t            this.draft.reminder = null;\n\t            this.draft.restore = \"note\";\n\t            this._notesService.saveNote('notes', this.draft)\n\t                .then(function (res) {\n\t                notetextarea.placeholder = \"Write a note\";\n\t                notetextarea.style.height = \"auto\";\n\t                notetextarea.style.height = \"48px\";\n\t                _this.updateOrder(_this.draft);\n\t                _this.inputFocusClass = false;\n\t                _this.draft = {};\n\t                _this.refreshNotesTables();\n\t            }, function (err) {\n\t                _this.draft = {};\n\t                notetextarea.placeholder = \"Write a note\";\n\t                notetextarea.style.height = \"auto\";\n\t                notetextarea.style.height = \"48px\";\n\t            });\n\t        }\n\t        else {\n\t            notetextarea.placeholder = \"Write a note\";\n\t            notetextarea.style.height = \"auto\";\n\t            notetextarea.style.height = \"48px\";\n\t            notetextarea.value = null;\n\t            this.inputFocusClass = false;\n\t        }\n\t    };\n\t    HomeComponent.prototype.deleteNote = function (note, noteRow) {\n\t        var _this = this;\n\t        noteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n\t        setTimeout(function () {\n\t            _this._notesService.deleteNote('notes', note.doc)\n\t                .then(function (res) {\n\t                _this._notificationsService.success(\"Done\", \"Note moved to Recycle Bin\");\n\t                _this.deleteFromOrder(note);\n\t                _this.refreshNotesTables();\n\t            });\n\t            var binNote = note.doc;\n\t            delete binNote._rev;\n\t            _this._notesService.saveNote('binNotes', binNote);\n\t        }, 200);\n\t    };\n\t    HomeComponent.prototype.setNoteColor = function (color, note) {\n\t        var _this = this;\n\t        if (note.doc.color != color) {\n\t            note.doc.color = color;\n\t            this._notesService.updateNote('notes', note.doc)\n\t                .then(function (res) {\n\t                _this.refreshNotesTables();\n\t            });\n\t        }\n\t    };\n\t    HomeComponent.prototype.setRemindMeNote = function (note) {\n\t        this.remindMe.noteToSet = note;\n\t    };\n\t    HomeComponent.prototype.setReminderClick = function () {\n\t        var _this = this;\n\t        if (this.remindMe.date) {\n\t            this.remindMe.noteToSet.doc.reminder = {\n\t                date: this.remindMe.date.toString(),\n\t                repeat: this.remindMe.repeat\n\t            };\n\t            this._notesService.updateNote('notes', this.remindMe.noteToSet.doc)\n\t                .then(function (res) {\n\t                _this.remindMe.date = null;\n\t                _this.remindMe.repeat = 'doesnotrepeat';\n\t                _this.remindMe.noteToSet = null;\n\t                _this._notesService.updateReminderTable('notes');\n\t                _this.refreshNotesTables();\n\t                _this._notificationsService.alert(\"Done\", \"Reminder set\");\n\t            }, function (err) {\n\t                _this.editNoteDraft = {};\n\t            });\n\t        }\n\t    };\n\t    HomeComponent.prototype.removeReminder = function (note) {\n\t        note.doc.reminder = null;\n\t        this._notesService.updateNote('notes', note.doc);\n\t        this._notesService.updateReminderTable('notes');\n\t        this.refreshNotesTables();\n\t    };\n\t    HomeComponent.prototype.updateModalNote = function (note) {\n\t        var _this = this;\n\t        note.doc.note = this.editNoteDraft.note;\n\t        note.doc.title = this.editNoteDraft.title;\n\t        this._notesService.updateNote('notes', note.doc)\n\t            .then(function (res) {\n\t            _this.editNoteDraft = {};\n\t            _this.refreshNotesTables();\n\t        }, function (err) {\n\t            _this.editNoteDraft = {};\n\t        });\n\t    };\n\t    HomeComponent.prototype.editModalNoteClick = function (note) {\n\t        this.toEditNote = note;\n\t        this.editNoteDraft.title = note.doc.title;\n\t        this.editNoteDraft.note = note.doc.note;\n\t    };\n\t    HomeComponent.prototype.makeArchive = function (note, noteRow) {\n\t        var _this = this;\n\t        noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n\t        setTimeout(function () {\n\t            _this._notesService.deleteNote('notes', note.doc)\n\t                .then(function (res) {\n\t                _this._notificationsService.success(\"Done\", \"Note archived\");\n\t                _this.deleteFromOrder(note);\n\t                _this.refreshNotesTables();\n\t            });\n\t            var archive_note = note;\n\t            delete archive_note.doc._rev;\n\t            archive_note.doc.restore = \"archive\";\n\t            _this._notesService.saveNote('archiveNotes', archive_note.doc)\n\t                .then(function (res) {\n\t                _this.updateArchiveOrder(archive_note.doc);\n\t            });\n\t        }, 200);\n\t    };\n\t    HomeComponent.prototype.displayTypeChange = function () {\n\t        this.displayList = this.displayList ? false : true;\n\t        localStorage.setItem(\"displayNotesTypeList\", String(this.displayList));\n\t    };\n\t    HomeComponent.prototype.deleteFromOrder = function (note) {\n\t        var index = this.order.indexOf(this.order.filter(function (row) {\n\t            return String(row) === String(note.doc._id);\n\t        })[0]);\n\t        if (index !== -1) {\n\t            this.order.splice(index, 1);\n\t            localStorage.setItem(\"order\", JSON.stringify(this.order));\n\t        }\n\t    };\n\t    HomeComponent.prototype.updateOrder = function (draft) {\n\t        var newOrder = [];\n\t        if (localStorage.getItem('order')) {\n\t            newOrder = JSON.parse(localStorage.getItem('order'));\n\t            newOrder.unshift(draft._id);\n\t        }\n\t        else {\n\t            newOrder.push(draft._id);\n\t        }\n\t        localStorage.setItem(\"order\", JSON.stringify(newOrder));\n\t    };\n\t    HomeComponent.prototype.updateArchiveOrder = function (draft) {\n\t        var newArchiveOrder = [];\n\t        if (localStorage.getItem('archiveOrder')) {\n\t            newArchiveOrder = JSON.parse(localStorage.getItem('archiveOrder'));\n\t            newArchiveOrder.unshift(draft._id);\n\t        }\n\t        else {\n\t            newArchiveOrder.push(draft._id);\n\t        }\n\t        localStorage.setItem(\"archiveOrder\", JSON.stringify(newArchiveOrder));\n\t    };\n\t    HomeComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'Home',\n\t            template: __webpack_require__(110)\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof services_1.DragulaService !== 'undefined' && services_1.DragulaService) === 'function' && _a) || Object, (typeof (_b = typeof services_1.NotesTableService !== 'undefined' && services_1.NotesTableService) === 'function' && _b) || Object, (typeof (_c = typeof angular2_notifications_1.NotificationsService !== 'undefined' && angular2_notifications_1.NotificationsService) === 'function' && _c) || Object])\n\t    ], HomeComponent);\n\t    return HomeComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.HomeComponent = HomeComponent;\n\tvar NOTES_TABLE = [];\n\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a> -->\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Keeper </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Notes</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-th' : 'fa fa-bars'}}\\\"></i>\\n            </a>\\n          </li>\\n          <!-- <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li> -->\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container\\\">\\n      <div class=\\\"panel panel-default note-editor animated bounceInDown\\\">\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group label-floating\\\" *ngIf=\\\"inputFocusClass\\\">\\n             <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"draft.title\\\" >\\n          </div>\\n          <div class=\\\"form-group label-floating\\\">\\n             <textarea class=\\\"form-control\\\" #textarea autosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"draft.note\\\" (focus)=\\\"_setInputFocus(true)\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"inputFocusClass\\\">\\n            <button class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"saveNote($event, textarea)\\\">Save</button>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\" [dragula]='\\\"another-bag\\\"' [dragulaModel]='notes'>\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div data-toggle=\\\"modal\\\" data-target=\\\"#note_edit_modal\\\" (click)=\\\"editModalNoteClick(text)\\\">\\n        <div class=\\\"panel-body my-note module line-clamp\\\">\\n          <p><strong>{{text.doc.title}}</strong></p>\\n          <p>{{text.doc.note}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <!-- <li><a data-toggle=\\\"modal\\\"\\n                 data-target=\\\"#remind_me_modal\\\"\\n                 (click)=\\\"setRemindMeNote(text)\\\"\\n                 class=\\\"btn btn-link btn-raised\\\"\\n                 title=\\\"Remind\\\">\\n                <i class=\\\"fa fa-bell\\\"></i>\\n              </a>\\n          </li> -->\\n          <!-- <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Archive\\\" (click)=\\\"makeArchive(text, noteRow)\\\">\\n            <i class=\\\"fa fa-download\\\"></i>\\n          </a></li> -->\\n          <li class=\\\"dropup\\\">\\n            <a data-target=\\\"#\\\" class=\\\"btn btn-link btn-raised dropup\\\"\\n              title=\\\"Color\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-th-large\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-default', text)\\\" class=\\\"btn btn-default btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary', text)\\\" class=\\\"btn btn-primary btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-success', text)\\\" class=\\\"btn btn-success btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-info', text)\\\" class=\\\"btn btn-info btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-warning', text)\\\" class=\\\"btn btn-warning btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-danger', text)\\\" class=\\\"btn btn-danger btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-darkgray', text)\\\" class=\\\"btn btn-darkgray btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary-old', text)\\\" class=\\\"btn btn-primary-old btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n            </ul>\\n          </li>\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n                title=\\\"Delete\\\" (click)=\\\"deleteNote(text, noteRow)\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"{{text.doc.color + ' reminder-info'}}\\\" *ngIf=\\\"text.doc.reminder\\\">\\n        <i class=\\\"fa fa-clock-o\\\"></i> {{text.doc.reminder?.date}}<span class=\\\"pull-right\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"removeReminder(text)\\\"><i class=\\\"fa fa-times-circle\\\"></i></a></span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"note_edit_modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"toEditNote\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"{{'modal-content edit-saved ' + toEditNote?.doc?.color}}\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">\\n            <div class=\\\"form-group label-floating\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control edit-saved-input\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"editNoteDraft.title\\\" [value]=\\\"toEditNote?.doc?.title\\\" >\\n            </div>\\n          </h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <textarea class=\\\"form-control edit-saved-textera\\\" #editSavedTextarea modaleditorautosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"editNoteDraft.note\\\" [value]=\\\"editNoteDraft?.doc?.note\\\"></textarea>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateModalNote(toEditNote)\\\">Done</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"remind_me_modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Remind Me</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <label><i class=\\\"fa fa-clock-o\\\"></i> Set date and time</label>\\n          <div class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"\\n                    readonly=\\\"readonly\\\"\\n                    required\\n                    placeholder=\\\"Set your schedule here\\\"\\n                    [(ngModel)]=\\\"remindMe.date\\\"\\n                    [min-date]=\\\"date2MinDate\\\"\\n                    ngui-datetime-picker>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <select id=\\\"s1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"remindMe.repeat\\\">\\n              <option value=\\\"doesnotrepeat\\\">Doesn't repeat</option>\\n              <option value=\\\"daily\\\">Daily</option>\\n              <option value=\\\"weekly\\\">Weekly</option>\\n              <option value=\\\"monthly\\\">Monthly</option>\\n              <option value=\\\"yearly\\\">Yearly</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"remindMe.date = null\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"setReminderClick()\\\">SET</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <h3 class=\\\"empty-notes-icon empty-notes-main\\\"><i class=\\\"fa fa-file-text-o fa-5x\\\"></i></h3>\\n    <div class=\\\"empty-notes\\\">Notes that you add appear here</div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar AboutComponent = (function () {\n\t    function AboutComponent() {\n\t    }\n\t    AboutComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'about',\n\t            template: __webpack_require__(112),\n\t            styles: [__webpack_require__(113)]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], AboutComponent);\n\t    return AboutComponent;\n\t}());\n\texports.AboutComponent = AboutComponent;\n\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"about\\\">\\n\\n  <div class=\\\"profile-card\\\">\\n\\n    <div class=\\\"header\\\">\\n\\n      <a href=\\\"#\\\" [routerLink]=\\\"['/notes']\\\">\\n        <img [src]=\\\"'/public/images/logo.png'\\\" />\\n      </a>\\n\\n      <h1>Keeper</h1>\\n\\n    </div>\\n\\n    <div class=\\\"profile-bio\\\">\\n\\n      <p>Organize your life with preserver application for keeping track of notes, tasks, and to-do lists.</p>\\n\\n    </div>\\n\\n    <ul class=\\\"profile-social-links\\\">\\n\\n      <li>\\n        <a href=\\\"#\\\" [routerLink]=\\\"['/notes']\\\">\\n          <i class=\\\"fa fa-arrow-left\\\"></i>\\n        </a>\\n      </li>\\n\\n      <!-- <li>\\n        <a href=\\\"https://github.com/hsbalar/Preserver\\\" target=\\\"_blank\\\">\\n          <i class=\\\"fa fa-github\\\"></i>\\n        </a>\\n      </li>\\n\\n      <li>\\n        <a href=\\\"https://twitter.com/Hsbalar\\\" target=\\\"_blank\\\">\\n          <i class=\\\"fa fa-twitter\\\"></i>\\n        </a>\\n      </li> -->\\n\\n    </ul>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \".about {\\n\\tbackground: #bcdee7 url(\\\"/public/images/bg.png\\\") no-repeat center center fixed;\\n    background-size: 120% auto;\\n    position: fixed;\\n\\tpadding: 0px;\\n\\tmargin: 0px;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tfont: normal 14px/1.618em \\\"Hind\\\", sans-serif;\\n\\t-webkit-font-smoothing: antialiased;\\n}\\n\\nh1, h2 {\\n    font-weight: 400;\\n    margin: 0px 0px 5px 0px;\\n}\\nh1 {\\n    font-size: 24px;\\n}\\nh2 {\\n    font-size: 16px;\\n}\\np {\\n    margin: 0px;\\n}\\n\\n.back {\\n    bottom: 0;\\n    padding: 40px 0px 0px 20px;\\n}\\n\\n.profile-card {\\n\\tbackground: #FFB300;\\n\\twidth: 56px;\\n\\theight: 56px;\\n\\tposition: absolute;\\n\\tleft: 50%;\\n\\ttop: 50%;\\n    z-index: 2;\\n\\toverflow: hidden;\\n    opacity: 0;\\n    margin-top: 70px;\\n\\t-webkit-transform: translate(-50%, -50%);\\n\\ttransform: translate(-50%, -50%);\\n\\t-webkit-border-radius: 50%;\\n\\tborder-radius: 50%;\\n\\t-webkit-box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\\n\\tbox-shadow: 0px 3px 6px rgba(0 ,0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\\n    -webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 1.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_landscape 0.5s 1.2s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n    animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 1.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_landscape 0.5s 1.2s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n}\\n.profile-card .header {\\n    padding: 40px 20px 30px 20px;\\n    display: inline-block;\\n\\tbackground: #FFFFFF;\\n    color: #000000;\\n    margin-top: 50px;\\n    opacity: 0;\\n    text-align: center;\\n    -webkit-animation: moveIn 1s 1.1s ease forwards;\\n    animation: moveIn 1s 1.1s ease forwards;\\n}\\n.profile-card .header h1 {\\n    color: #FF5722;\\n}\\n.profile-card .header a {\\n    display: inline-block;\\n    text-align: center;\\n    position: relative;\\n    margin: 25px 30px;\\n}\\n\\n.profile-card .header a > img {\\n    width: 120px;\\n    max-width: 100%;\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n    -webkit-transition: -webkit-box-shadow 0.3s ease;\\n    transition: box-shadow 0.3s ease;\\n}\\n.profile-card .header a:hover > img {\\n    -webkit-box-shadow: 0px 0px 0px 12px rgba(0, 0, 0, 0.1);\\n    box-shadow: 0px 0px 0px 12px rgba(0, 0, 0, 0.1);\\n}\\n.profile-card .profile-bio {\\n    width: 175px;\\n    height: 180px;\\n    display: inline-block;\\n    padding: 50px 20px 30px 20px;\\n\\tbackground: #FFFFFF;\\n    color: #333333;\\n    margin-top: 50px;\\n    text-align: center;\\n    opacity: 0;\\n    -webkit-animation: moveIn 1s 1s ease forwards;\\n    animation: moveIn 1s 1s ease forwards;\\n}\\n.profile-social-links {\\n    width: 218px;\\n    display: inline-block;\\n    margin: 0px;\\n    padding: 15px 20px;\\n\\tbackground: #FFFFFF;\\n    margin-top: 50px;\\n    text-align: center;\\n    opacity: 0;\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    -webkit-animation: moveIn 1s 1.1s ease forwards;\\n    animation: moveIn 1s 1.1s ease forwards;\\n}\\n.profile-social-links li {\\n    list-style: none;\\n    margin: -5px 0px 0px 0px;\\n    padding: 0px;\\n    float: left;\\n    width: 33.3%;\\n    text-align: center;\\n}\\n.profile-social-links li a {\\n    display: inline-block;\\n    width: 24px;\\n    height: 24px;\\n    padding: 6px;\\n    position: relative;\\n    overflow: hidden!important;\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n}\\n.profile-social-links li a {\\n    position: relative;\\n    z-index: 1;\\n}\\n.profile-social-links li a:before {\\n    display: block;\\n    content: \\\"\\\";\\n    background: rgba(0, 0, 0, 0.3);\\n    position: absolute;\\n    left: 0px;\\n    top: 0px;\\n    width: 36px;\\n    height: 36px;\\n    opacity: 1;\\n    -webkit-transition: transform 0.4s ease, opacity 1s ease-out;\\n    transition: transform 0.4s ease, opacity 1s ease-out;\\n    -webkit-transform: scale3d(0, 0, 1);\\n    transform: scale3d(0, 0, 1);\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n}\\n.profile-social-links li a:hover:before {\\n    -webkit-animation: ripple 1s ease forwards;\\n    animation: ripple 1s ease forwards;\\n}\\n.profile-social-links li a,\\n.profile-social-links li a {\\n    width: 24px;\\n}\\n\\n\\n@media screen and (min-aspect-ratio: 4/3) {\\n    body {\\n        background-size: 100% auto;\\n    }\\n    body:before {\\n        width: 0px;\\n    }\\n    @-webkit-keyframes puff {\\n        0% {\\n            top: 100%;\\n            width: 0px;\\n            padding-bottom: 0px;\\n        }\\n    \\t100% {\\n            top: 50%;\\n            width: 100%;\\n            padding-bottom: 100%;\\n        }\\n    }\\n    @keyframes puff {\\n        0% {\\n            top: 100%;\\n            width: 0px;\\n            padding-bottom: 0px;\\n        }\\n    \\t100% {\\n            top: 50%;\\n            width: 100%;\\n            padding-bottom: 100%;\\n        }\\n    }\\n}\\n@media screen and (min-height: 480px) {\\n\\t.profile-card {\\n\\t\\t-webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 1s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t\\tanimation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 1s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t}\\n\\t.profile-card header {\\n        width: auto;\\n        height: auto;\\n        padding: 30px 20px;\\n        display: block;\\n        float: none;\\n        border-right: none;\\n    }\\n    .profile-card .profile-bio {\\n        width: auto;\\n        height: auto;\\n        padding: 15px 20px 30px 20px;\\n        display: block;\\n        float: none;\\n    }\\n    .profile-social-links {\\n        width: 100%;\\n        display: block;\\n        float: none;\\n    }\\n}\\n@media screen and (min-aspect-ratio: 4/3) {\\n    body {\\n        background-size: 100% auto;\\n    }\\n    body:before {\\n        width: 0px;\\n\\t\\t-webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 2.7s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t\\tanimation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 2.7s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t}\\n}\\n@-webkit-keyframes init {\\n    0% {\\n    \\twidth: 0px;\\n    \\theight: 0px;\\n    }\\n\\t100% {\\n        width: 56px;\\n        height: 56px;\\n        margin-top: 0px;\\n        opacity: 1;\\n    }\\n}\\n@keyframes init {\\n    0% {\\n    \\twidth: 0px;\\n    \\theight: 0px;\\n    }\\n\\t100% {\\n        width: 56px;\\n        height: 56px;\\n        margin-top: 0px;\\n        opacity: 1;\\n    }\\n}\\n@-webkit-keyframes puff_portrait {\\n    0% {\\n        top: 100%;\\n        height: 0px;\\n        padding: 0px;\\n    }\\n\\t100% {\\n        top: 50%;\\n        height: 100%;\\n        padding: 0px 100%;\\n    }\\n}\\n@keyframes puff_portrait {\\n    0% {\\n        top: 100%;\\n        height: 0px;\\n        padding: 0px;\\n    }\\n\\t100% {\\n        top: 50%;\\n        height: 100%;\\n        padding: 0px 100%;\\n    }\\n}\\n@-webkit-keyframes puff_landscape {\\n\\t0% {\\n\\t\\ttop: 100%;\\n\\t\\twidth: 0px;\\n\\t\\tpadding-bottom: 0px;\\n\\t}\\n\\t100% {\\n\\t\\ttop: 50%;\\n\\t\\twidth: 100%;\\n\\t\\tpadding-bottom: 100%;\\n\\t}\\n}\\n@keyframes puff_landscape {\\n\\t0% {\\n\\t\\ttop: 100%;\\n\\t\\twidth: 0px;\\n\\t\\tpadding-bottom: 0px;\\n\\t}\\n\\t100% {\\n\\t\\ttop: 50%;\\n\\t\\twidth: 100%;\\n\\t\\tpadding-bottom: 100%;\\n\\t}\\n}\\n@-webkit-keyframes borderRadius {\\n    0% {\\n        -webkit-border-radius: 50%;\\n    }\\n\\t100% {\\n        -webkit-border-radius: 0px;\\n    }\\n}\\n@keyframes borderRadius {\\n    0% {\\n        -webkit-border-radius: 50%;\\n    }\\n\\t100% {\\n        border-radius: 0px;\\n    }\\n}\\n@-webkit-keyframes moveDown {\\n    0% {\\n   \\t    top: 50%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 100%;\\n    }\\n}\\n@keyframes moveDown {\\n    0% {\\n   \\t    top: 50%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 100%;\\n    }\\n}\\n@-webkit-keyframes moveUp {\\n    0% {\\n        background: #FFB300;\\n        top: 100%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 50%;\\n       background: #E0E0E0;\\n    }\\n}\\n@keyframes moveUp {\\n    0% {\\n        background: #FFB300;\\n        top: 100%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 50%;\\n       background: #E0E0E0;\\n    }\\n}\\n@-webkit-keyframes materia_landscape {\\n    0% {\\n        background: #E0E0E0;\\n    }\\n    50% {\\n        -webkit-border-radius: 4px;\\n    }\\n    100% {\\n        width: 440px;\\n        height: 280px;\\n        background: #FFFFFF;\\n        -webkit-border-radius: 4px;\\n    }\\n}\\n@keyframes materia_landscape {\\n    0% {\\n        background: #E0E0E0;\\n    }\\n    50% {\\n        border-radius: 4px;\\n    }\\n    100% {\\n        width: 440px;\\n        height: 280px;\\n        background: #FFFFFF;\\n        border-radius: 4px;\\n    }\\n}\\n@-webkit-keyframes materia_portrait {\\n\\t0% {\\n\\t\\tbackground: #E0E0E0;\\n\\t}\\n\\t50% {\\n\\t\\t-webkit-border-radius: 4px;\\n\\t}\\n\\t100% {\\n\\t\\twidth: 280px;\\n\\t\\theight: 440px;\\n\\t\\tbackground: #FFFFFF;\\n\\t\\t-webkit-border-radius: 4px;\\n\\t}\\n}\\n@keyframes materia_portrait {\\n\\t0% {\\n\\t\\tbackground: #E0E0E0;\\n\\t}\\n\\t50% {\\n\\t\\tborder-radius: 4px;\\n\\t}\\n\\t100% {\\n\\t\\twidth: 280px;\\n\\t\\theight: 440px;\\n\\t\\tbackground: #FFFFFF;\\n\\t\\tborder-radius: 4px;\\n\\t}\\n}\\n@-webkit-keyframes moveIn {\\n    0% {\\n        margin-top: 50px;\\n        opacity: 0;\\n    }\\n\\t100% {\\n        opacity: 1;\\n        margin-top: -20px;\\n    }\\n}\\n@keyframes moveIn {\\n    0% {\\n        margin-top: 50px;\\n        opacity: 0;\\n    }\\n\\t100% {\\n        opacity: 1;\\n        margin-top: -20px;\\n    }\\n}\\n@-webkit-keyframes scaleIn {\\n    0% {\\n        -webkit-transform: scale(0);\\n    }\\n\\t100% {\\n        -webkit-transform: scale(1);\\n    }\\n}\\n@keyframes scaleIn {\\n    0% {\\n        transform: scale(0);\\n    }\\n\\t100% {\\n        transform: scale(1);\\n    }\\n}\\n@-webkit-keyframes ripple {\\n    0% {\\n        transform: scale3d(0, 0, 0);\\n    }\\n    50%, 100% {\\n        -webkit-transform: scale3d(1, 1, 1);\\n    }\\n    100% {\\n        opacity: 0;\\n    }\\n}\\n@keyframes ripple {\\n    0% {\\n        transform: scale3d(0, 0, 0);\\n    }\\n    50%, 100% {\\n        transform: scale3d(1, 1, 1);\\n    }\\n    100% {\\n        opacity: 0;\\n    }\\n}\\n\"\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar angular2_notifications_1 = __webpack_require__(29);\n\tvar services_1 = __webpack_require__(74);\n\tvar _ = __webpack_require__(106);\n\tvar ArchiveComponent = (function () {\n\t    function ArchiveComponent(_dragulaService, _notesService, _notificationsService) {\n\t        var _this = this;\n\t        this._dragulaService = _dragulaService;\n\t        this._notesService = _notesService;\n\t        this._notificationsService = _notificationsService;\n\t        this.spinner = true;\n\t        this.displayList = false;\n\t        this.emptyHtmlMsg = false;\n\t        this.notes_table = NOTES_TABLE;\n\t        this.notes = [];\n\t        this.editNoteDraft = {};\n\t        this.toEditNote = null;\n\t        this.remindMe = {\n\t            date: null,\n\t            repeat: 'doesnotrepeat',\n\t            noteToSet: null\n\t        };\n\t        this.order = [];\n\t        this.orderNotes = [];\n\t        this.notificationOptions = {\n\t            timeOut: 2000,\n\t            lastOnBottom: true,\n\t            clickToClose: true,\n\t            showProgressBar: false,\n\t            pauseOnHover: true,\n\t            preventDuplicates: false,\n\t            theClass: \"notes-notifications archive\",\n\t            rtl: false\n\t        };\n\t        var yesterday = new Date();\n\t        yesterday.setDate(yesterday.getDate() - 1);\n\t        this.date2MinDate = yesterday;\n\t        _dragulaService.dropModel.subscribe(function (value) {\n\t            _this.onDropModel(value.slice(1));\n\t        });\n\t        this.displayList = localStorage.getItem(\"displayArchiveTypeList\") == 'true' ? true : false;\n\t    }\n\t    ArchiveComponent.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        this.subscription = this._notesService.notes_tables$.subscribe(function (notes_table) { return _this.notes_table = notes_table; });\n\t        this.refreshNotesTables();\n\t    };\n\t    ArchiveComponent.prototype.onDropModel = function (args) {\n\t        var el = args[0], target = args[1], source = args[2];\n\t        var order = [];\n\t        this.notes.forEach(function (row) {\n\t            order.push(row.doc._id);\n\t        });\n\t        localStorage.setItem('archiveOrder', JSON.stringify(order));\n\t    };\n\t    ArchiveComponent.prototype.ngOnDestroy = function () {\n\t        this.subscription.unsubscribe();\n\t    };\n\t    ArchiveComponent.prototype.refreshNotesTables = function () {\n\t        var _this = this;\n\t        this._notesService.getNotes('archiveNotes').then(function (alldoc) {\n\t            _this.notes_table = alldoc.rows;\n\t            var testNotes = [];\n\t            testNotes = _this.notes_table;\n\t            if (localStorage.getItem('archiveOrder')) {\n\t                _this.order = JSON.parse(localStorage.getItem('archiveOrder'));\n\t            }\n\t            _this.notes = [];\n\t            _this.order.forEach(function (el) {\n\t                testNotes.forEach(function (row) {\n\t                    if (String(row.doc._id) === String(el)) {\n\t                        _this.notes.push(row);\n\t                    }\n\t                });\n\t            });\n\t            if (_.isEmpty(_this.notes)) {\n\t                _this.emptyHtmlMsg = true;\n\t            }\n\t            else {\n\t                _this.emptyHtmlMsg = false;\n\t            }\n\t            _this.spinner = false;\n\t        }, function (err) {\n\t            _this.spinner = false;\n\t        });\n\t    };\n\t    ArchiveComponent.prototype.deleteNote = function (note, noteRow) {\n\t        var _this = this;\n\t        noteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n\t        setTimeout(function () {\n\t            _this._notesService.deleteNote('archiveNotes', note.doc)\n\t                .then(function (res) {\n\t                _this._notificationsService.success(\"Done\", \"Note moved to Recycle Bin\");\n\t                _this.deleteFromOrder(note);\n\t                _this.refreshNotesTables();\n\t            }, function (err) {\n\t                console.log(\"Error\", err);\n\t            });\n\t            var binNote = note.doc;\n\t            delete binNote._rev;\n\t            _this._notesService.saveNote('binNotes', binNote);\n\t        }, 150);\n\t    };\n\t    ArchiveComponent.prototype.setNoteColor = function (color, note) {\n\t        var _this = this;\n\t        if (note.doc.color != color) {\n\t            note.doc.color = color;\n\t            this._notesService.updateNote('archiveNotes', note.doc)\n\t                .then(function (res) {\n\t                _this.refreshNotesTables();\n\t            });\n\t        }\n\t    };\n\t    ArchiveComponent.prototype.setRemindMeNote = function (note) {\n\t        this.remindMe.noteToSet = note;\n\t    };\n\t    ArchiveComponent.prototype.setReminderClick = function () {\n\t        var _this = this;\n\t        if (this.remindMe.date) {\n\t            this.remindMe.noteToSet.doc.reminder = {\n\t                date: this.remindMe.date.toString(),\n\t                repeat: this.remindMe.repeat\n\t            };\n\t            this._notesService.updateNote('archiveNotes', this.remindMe.noteToSet.doc)\n\t                .then(function (res) {\n\t                _this.remindMe.date = null;\n\t                _this.remindMe.repeat = 'doesnotrepeat';\n\t                _this.remindMe.noteToSet = null;\n\t                _this._notesService.updateReminderTable('archiveNotes');\n\t                _this.refreshNotesTables();\n\t                _this._notificationsService.alert(\"Done\", \"Reminder set\");\n\t            }, function (err) {\n\t                _this.editNoteDraft = {};\n\t            });\n\t        }\n\t    };\n\t    ArchiveComponent.prototype.removeReminder = function (note) {\n\t        note.doc.reminder = null;\n\t        this._notesService.updateNote('archiveNotes', note.doc);\n\t        this._notesService.updateReminderTable('archiveNotes');\n\t        this.refreshNotesTables();\n\t    };\n\t    ArchiveComponent.prototype.updateModalNote = function (note) {\n\t        var _this = this;\n\t        note.doc.note = this.editNoteDraft.note;\n\t        note.doc.title = this.editNoteDraft.title;\n\t        this._notesService.updateNote('archiveNotes', note.doc)\n\t            .then(function (res) {\n\t            _this.editNoteDraft = {};\n\t            _this.refreshNotesTables();\n\t        }, function (err) {\n\t            _this.editNoteDraft = {};\n\t        });\n\t    };\n\t    ArchiveComponent.prototype.editModalNoteClick = function (note) {\n\t        this.toEditNote = note;\n\t        this.editNoteDraft.title = note.doc.title;\n\t        this.editNoteDraft.note = note.doc.note;\n\t    };\n\t    ArchiveComponent.prototype.unArchive = function (note, noteRow) {\n\t        var _this = this;\n\t        noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n\t        setTimeout(function () {\n\t            _this._notesService.deleteNote('archiveNotes', note.doc)\n\t                .then(function (res) {\n\t                _this._notificationsService.success(\"Done\", \"Note unarchived\");\n\t                _this.deleteFromOrder(note);\n\t                _this.refreshNotesTables();\n\t            });\n\t            var archive_note = note;\n\t            delete archive_note.doc._rev;\n\t            archive_note.doc.restore = \"note\";\n\t            _this._notesService.saveNote('notes', archive_note.doc)\n\t                .then(function (res) {\n\t                _this.updateNotesOrder(archive_note.doc);\n\t            });\n\t        }, 100);\n\t    };\n\t    ArchiveComponent.prototype.displayTypeChange = function () {\n\t        this.displayList = this.displayList ? false : true;\n\t        localStorage.setItem(\"displayArchiveTypeList\", String(this.displayList));\n\t    };\n\t    ArchiveComponent.prototype.deleteFromOrder = function (note) {\n\t        var index = this.order.indexOf(this.order.filter(function (row) {\n\t            return String(row) === String(note.doc._id);\n\t        })[0]);\n\t        if (index !== -1) {\n\t            this.order.splice(index, 1);\n\t            localStorage.setItem('archiveOrder', JSON.stringify(this.order));\n\t        }\n\t    };\n\t    ArchiveComponent.prototype.updateNotesOrder = function (draft) {\n\t        var newOrder = [];\n\t        if (localStorage.getItem('order')) {\n\t            newOrder = JSON.parse(localStorage.getItem('order'));\n\t            newOrder.unshift(draft._id);\n\t        }\n\t        else {\n\t            newOrder.push(draft._id);\n\t        }\n\t        localStorage.setItem(\"order\", JSON.stringify(newOrder));\n\t    };\n\t    ArchiveComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'archive',\n\t            template: __webpack_require__(115)\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof services_1.DragulaService !== 'undefined' && services_1.DragulaService) === 'function' && _a) || Object, (typeof (_b = typeof services_1.NotesTableService !== 'undefined' && services_1.NotesTableService) === 'function' && _b) || Object, (typeof (_c = typeof angular2_notifications_1.NotificationsService !== 'undefined' && angular2_notifications_1.NotificationsService) === 'function' && _c) || Object])\n\t    ], ArchiveComponent);\n\t    return ArchiveComponent;\n\t    var _a, _b, _c;\n\t}());\n\texports.ArchiveComponent = ArchiveComponent;\n\tvar NOTES_TABLE = [];\n\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a>\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/About']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Preserver </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Archive</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-th' : 'fa fa-bars'}}\\\"></i>\\n            </a>\\n          </li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/About']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\" [dragula]='\\\"another-bag\\\"' [dragulaModel]='notes'>\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div data-toggle=\\\"modal\\\" data-target=\\\"#note_edit_modal\\\" (click)=\\\"editModalNoteClick(text)\\\">\\n        <div class=\\\"panel-body my-note module line-clamp\\\">\\n          <p><strong>{{text.doc.title}}</strong></p>\\n          <p>{{text.doc.note}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <li>\\n            <a data-toggle=\\\"modal\\\"\\n               data-target=\\\"#remind_me_modal\\\"\\n               (click)=\\\"setRemindMeNote(text)\\\"\\n               class=\\\"btn btn-link btn-raised\\\"\\n               title=\\\"Remind\\\">\\n               <i class=\\\"fa fa-bell\\\"></i>\\n            </a>\\n          </li>\\n          <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Unarchive\\\" (click)=\\\"unArchive(text, noteRow)\\\">\\n            <i class=\\\"fa fa-upload\\\"></i>\\n          </a></li>\\n          <li class=\\\"dropup\\\">\\n            <a data-target=\\\"#\\\" class=\\\"btn btn-link btn-raised dropup\\\"\\n              title=\\\"Color\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-th-large\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-default', text)\\\" class=\\\"btn btn-default btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary', text)\\\" class=\\\"btn btn-primary btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-success', text)\\\" class=\\\"btn btn-success btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-info', text)\\\" class=\\\"btn btn-info btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-warning', text)\\\" class=\\\"btn btn-warning btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-danger', text)\\\" class=\\\"btn btn-danger btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-darkgray', text)\\\" class=\\\"btn btn-darkgray btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary-old', text)\\\" class=\\\"btn btn-primary-old btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n            </ul>\\n          </li>\\n          <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Delete\\\" (click)=\\\"deleteNote(text, noteRow)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </a></li>\\n        </ul>\\n      </div>\\n      <div class=\\\"{{text.doc.color + ' reminder-info'}}\\\" *ngIf=\\\"text.doc.reminder\\\">\\n        <i class=\\\"fa fa-clock-o\\\"></i> {{text.doc.reminder?.date}}<span class=\\\"pull-right\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"removeReminder(text)\\\"><i class=\\\"fa fa-times-circle\\\"></i></a></span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"note_edit_modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"{{'modal-content edit-saved ' + toEditNote?.doc?.color}}\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">\\n            <div class=\\\"form-group label-floating\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control edit-saved-input\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"editNoteDraft.title\\\" [value]=\\\"toEditNote?.doc.title\\\" >\\n            </div>\\n          </h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <textarea class=\\\"form-control edit-saved-textera\\\" #editSavedTextarea modaleditorautosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"editNoteDraft.note\\\" [value]=\\\"toEditNote?.doc.note\\\"></textarea>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateModalNote(toEditNote)\\\">Done</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"remind_me_modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Remind Me</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <label><i class=\\\"fa fa-clock-o\\\"></i> Set date and time</label>\\n          <div class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"\\n                    readonly=\\\"readonly\\\"\\n                    required\\n                    placeholder=\\\"Set your schedule here\\\"\\n                    [(ngModel)]=\\\"remindMe.date\\\"\\n                    [min-date]=\\\"date2MinDate\\\"\\n                    ngui-datetime-picker>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <select id=\\\"s1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"remindMe.repeat\\\">\\n              <option value=\\\"doesnotrepeat\\\">Doesn't repeat</option>\\n              <option value=\\\"daily\\\">Daily</option>\\n              <option value=\\\"weekly\\\">Weekly</option>\\n              <option value=\\\"monthly\\\">Monthly</option>\\n              <option value=\\\"yearly\\\">Yearly</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"remindMe.date = null\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"setReminderClick()\\\">SET</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <div class=\\\"empty-notes-icon empty-archive\\\"></div>\\n    <div class=\\\"empty-notes\\\">Your archived notes appear here</div>\\n  </div>\\n</div>\\n\";\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar services_1 = __webpack_require__(74);\n\tvar AppComponent = (function () {\n\t    function AppComponent(_notesService) {\n\t        this._notesService = _notesService;\n\t        this._notesService.updateReminderTable('notes');\n\t        this._notesService.updateReminderTable('archiveNotes');\n\t        this._notesService.reminderTickStart();\n\t    }\n\t    AppComponent.prototype.ngAfterViewInit = function () {\n\t        $.material.init();\n\t    };\n\t    AppComponent = __decorate([\n\t        core_1.Component({\n\t            selector: 'my-app',\n\t            template: '<router-outlet></router-outlet>'\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof services_1.NotesTableService !== 'undefined' && services_1.NotesTableService) === 'function' && _a) || Object])\n\t    ], AppComponent);\n\t    return AppComponent;\n\t    var _a;\n\t}());\n\texports.AppComponent = AppComponent;\n\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar dragula = __webpack_require__(95);\n\tvar services_1 = __webpack_require__(74);\n\tvar Dragula = (function () {\n\t    function Dragula(el, dragulaService) {\n\t        this.el = el;\n\t        this.dragulaService = dragulaService;\n\t        this.container = el.nativeElement;\n\t    }\n\t    Dragula.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        var bag = this.dragulaService.find(this.bag);\n\t        var checkModel = function () {\n\t            if (_this.dragulaModel) {\n\t                if (_this.drake.models) {\n\t                    _this.drake.models.push(_this.dragulaModel);\n\t                }\n\t                else {\n\t                    _this.drake.models = [_this.dragulaModel];\n\t                }\n\t            }\n\t        };\n\t        if (bag) {\n\t            this.drake = bag.drake;\n\t            checkModel();\n\t            this.drake.containers.push(this.container);\n\t        }\n\t        else {\n\t            this.drake = dragula({\n\t                containers: [this.container]\n\t            });\n\t            checkModel();\n\t            this.dragulaService.add(this.bag, this.drake);\n\t        }\n\t    };\n\t    Dragula.prototype.ngOnChanges = function (changes) {\n\t        if (changes && changes['dragulaModel']) {\n\t            if (this.drake) {\n\t                if (this.drake.models) {\n\t                    var modelIndex = this.drake.models.indexOf(changes['dragulaModel'].previousValue);\n\t                    this.drake.models.splice(modelIndex, 1, changes['dragulaModel'].currentValue);\n\t                }\n\t                else {\n\t                    this.drake.models = [changes['dragulaModel'].currentValue];\n\t                }\n\t            }\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input('dragula'), \n\t        __metadata('design:type', String)\n\t    ], Dragula.prototype, \"bag\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', Object)\n\t    ], Dragula.prototype, \"dragulaModel\", void 0);\n\t    Dragula = __decorate([\n\t        core_1.Directive({\n\t            selector: '[dragula]'\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object, (typeof (_b = typeof services_1.DragulaService !== 'undefined' && services_1.DragulaService) === 'function' && _b) || Object])\n\t    ], Dragula);\n\t    return Dragula;\n\t    var _a, _b;\n\t}());\n\texports.Dragula = Dragula;\n\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(3);\n\tvar FluidHeightDirective = (function () {\n\t    function FluidHeightDirective(element) {\n\t        this.element = element;\n\t    }\n\t    FluidHeightDirective.prototype.onInput = function (textArea) {\n\t        this.adjust();\n\t    };\n\t    FluidHeightDirective.prototype.ngOnInit = function () {\n\t        this.adjust();\n\t    };\n\t    FluidHeightDirective.prototype.adjust = function () {\n\t        this.element.nativeElement.style.overflow = 'hidden';\n\t        this.element.nativeElement.style.height = 'auto';\n\t        this.element.nativeElement.style.height = this.element.nativeElement.scrollHeight + \"px\";\n\t    };\n\t    __decorate([\n\t        core_1.HostListener('input', ['$event.target']), \n\t        __metadata('design:type', Function), \n\t        __metadata('design:paramtypes', [Object]), \n\t        __metadata('design:returntype', void 0)\n\t    ], FluidHeightDirective.prototype, \"onInput\", null);\n\t    FluidHeightDirective = __decorate([\n\t        core_1.Directive({\n\t            selector: 'textarea[autosize]'\n\t        }), \n\t        __metadata('design:paramtypes', [(typeof (_a = typeof core_1.ElementRef !== 'undefined' && core_1.ElementRef) === 'function' && _a) || Object])\n\t    ], FluidHeightDirective);\n\t    return FluidHeightDirective;\n\t    var _a;\n\t}());\n\texports.FluidHeightDirective = FluidHeightDirective;\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// app.js","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { AppModule } from './app/app.module';\nif (process.env.ENV === 'production') {\n  enableProdMode();\n}\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/main.ts","import { NgModule }             from '@angular/core';\nimport { FormsModule }          from '@angular/forms';\nimport { BrowserModule }        from '@angular/platform-browser';\nimport { NguiDatetimePickerModule } from '@ngui/datetime-picker';\nimport { SimpleNotificationsModule,\n         PushNotificationsModule }  from 'angular2-notifications';\n\nimport { AppRoutingModule }     from './app.routing';\nimport { AppComponent }         from './app.component';\nimport { Spinner,\n         BinComponent,\n         HomeComponent,\n         AboutComponent,\n         ArchiveComponent }     from './components';\n\nimport { Dragula }              from './directives/dragula';\nimport { FluidHeightDirective } from './directives/fluid-height';\n\nimport { NotesTable,\n         DragulaService,\n         NotesTableService }    from './services';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    BrowserModule,\n    AppRoutingModule,\n    NguiDatetimePickerModule,\n    PushNotificationsModule,\n    SimpleNotificationsModule.forRoot()\n  ],\n  declarations: [\n    Spinner,\n    Dragula,\n    AppComponent,\n    BinComponent,\n    HomeComponent,\n    AboutComponent,\n    ArchiveComponent,\n    FluidHeightDirective\n  ],\n  providers: [ DragulaService, NotesTable, NotesTableService ],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.module.ts","/**\n * @license Angular v2.4.10\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('rxjs/operator/toPromise'), require('rxjs/Subject'), require('rxjs/Observable'), require('rxjs/observable/fromPromise')) :\n    typeof define === 'function' && define.amd ? define(['exports', '@angular/core', 'rxjs/operator/toPromise', 'rxjs/Subject', 'rxjs/Observable', 'rxjs/observable/fromPromise'], factory) :\n    (factory((global.ng = global.ng || {}, global.ng.forms = global.ng.forms || {}),global.ng.core,global.Rx.Observable.prototype,global.Rx,global.Rx,global.Rx.Observable));\n}(this, function (exports,_angular_core,rxjs_operator_toPromise,rxjs_Subject,rxjs_Observable,rxjs_observable_fromPromise) { 'use strict';\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * Base class for control directives.\n     *\n     * Only used internally in the forms module.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AbstractControlDirective = (function () {\n        function AbstractControlDirective() {\n        }\n        Object.defineProperty(AbstractControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { throw new Error('unimplemented'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"value\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.value : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"invalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.invalid : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pending : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"errors\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.errors : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"pristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.pristine : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"dirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.dirty : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"touched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.touched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"untouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.untouched : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"disabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.disabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"enabled\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.enabled : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"statusChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.statusChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"valueChanges\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.control ? this.control.valueChanges : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.reset = function (value) {\n            if (value === void 0) { value = undefined; }\n            if (this.control)\n                this.control.reset(value);\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.hasError(errorCode, path) : false;\n        };\n        /**\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControlDirective.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return this.control ? this.control.getError(errorCode, path) : null;\n        };\n        return AbstractControlDirective;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$1 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * A directive that contains multiple {\\@link NgControl}s.\n     *\n     * Only used by the forms module.\n     *\n     * \\@stable\n     */\n    var ControlContainer = (function (_super) {\n        __extends$1(ControlContainer, _super);\n        function ControlContainer() {\n            _super.apply(this, arguments);\n        }\n        Object.defineProperty(ControlContainer.prototype, \"formDirective\", {\n            /**\n             * Get the form to which this container belongs.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(ControlContainer.prototype, \"path\", {\n            /**\n             * Get the path to this container.\n             * @return {?}\n             */\n            get: function () { return null; },\n            enumerable: true,\n            configurable: true\n        });\n        return ControlContainer;\n    }(AbstractControlDirective));\n\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPresent(obj) {\n        return obj != null;\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isBlank(obj) {\n        return obj == null;\n    }\n    /**\n     * @param {?} a\n     * @param {?} b\n     * @return {?}\n     */\n    function looseIdentical(a, b) {\n        return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n    }\n    /**\n     * @param {?} o\n     * @return {?}\n     */\n    function isJsObject(o) {\n        return o !== null && (typeof o === 'function' || typeof o === 'object');\n    }\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function isPrimitive(obj) {\n        return !isJsObject(obj);\n    }\n\n    /**\n     * Wraps Javascript Objects\n     */\n    var StringMapWrapper = (function () {\n        function StringMapWrapper() {\n        }\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.merge = function (m1, m2) {\n            var /** @type {?} */ m = {};\n            for (var _i = 0, _a = Object.keys(m1); _i < _a.length; _i++) {\n                var k = _a[_i];\n                m[k] = m1[k];\n            }\n            for (var _b = 0, _c = Object.keys(m2); _b < _c.length; _b++) {\n                var k = _c[_b];\n                m[k] = m2[k];\n            }\n            return m;\n        };\n        /**\n         * @param {?} m1\n         * @param {?} m2\n         * @return {?}\n         */\n        StringMapWrapper.equals = function (m1, m2) {\n            var /** @type {?} */ k1 = Object.keys(m1);\n            var /** @type {?} */ k2 = Object.keys(m2);\n            if (k1.length != k2.length) {\n                return false;\n            }\n            for (var /** @type {?} */ i = 0; i < k1.length; i++) {\n                var /** @type {?} */ key = k1[i];\n                if (m1[key] !== m2[key]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n        return StringMapWrapper;\n    }());\n    var ListWrapper = (function () {\n        function ListWrapper() {\n        }\n        /**\n         * @param {?} arr\n         * @param {?} condition\n         * @return {?}\n         */\n        ListWrapper.findLast = function (arr, condition) {\n            for (var /** @type {?} */ i = arr.length - 1; i >= 0; i--) {\n                if (condition(arr[i])) {\n                    return arr[i];\n                }\n            }\n            return null;\n        };\n        /**\n         * @param {?} list\n         * @param {?} items\n         * @return {?}\n         */\n        ListWrapper.removeAll = function (list, items) {\n            for (var /** @type {?} */ i = 0; i < items.length; ++i) {\n                var /** @type {?} */ index = list.indexOf(items[i]);\n                if (index > -1) {\n                    list.splice(index, 1);\n                }\n            }\n        };\n        /**\n         * @param {?} list\n         * @param {?} el\n         * @return {?}\n         */\n        ListWrapper.remove = function (list, el) {\n            var /** @type {?} */ index = list.indexOf(el);\n            if (index > -1) {\n                list.splice(index, 1);\n                return true;\n            }\n            return false;\n        };\n        /**\n         * @param {?} a\n         * @param {?} b\n         * @return {?}\n         */\n        ListWrapper.equals = function (a, b) {\n            if (a.length != b.length)\n                return false;\n            for (var /** @type {?} */ i = 0; i < a.length; ++i) {\n                if (a[i] !== b[i])\n                    return false;\n            }\n            return true;\n        };\n        /**\n         * @param {?} list\n         * @return {?}\n         */\n        ListWrapper.flatten = function (list) {\n            return list.reduce(function (flat, item) {\n                var /** @type {?} */ flatItem = Array.isArray(item) ? ListWrapper.flatten(item) : item;\n                return ((flat)).concat(flatItem);\n            }, []);\n        };\n        return ListWrapper;\n    }());\n\n    var /** @type {?} */ isPromise = _angular_core.__core_private__.isPromise;\n    var /** @type {?} */ isObservable = _angular_core.__core_private__.isObservable;\n\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    function isEmptyInputValue(value) {\n        // we don't check for string here so it also works with arrays\n        return value == null || value.length === 0;\n    }\n    /**\n     * Providers for validators to be used for {@link FormControl}s in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * ### Example\n     *\n     * {@example core/forms/ts/ng_validators/ng_validators.ts region='ng_validators'}\n     * @stable\n     */\n    var /** @type {?} */ NG_VALIDATORS = new _angular_core.OpaqueToken('NgValidators');\n    /**\n     * Providers for asynchronous validators to be used for {@link FormControl}s\n     * in a form.\n     *\n     * Provide this using `multi: true` to add validators.\n     *\n     * See {@link NG_VALIDATORS} for more details.\n     *\n     * @stable\n     */\n    var /** @type {?} */ NG_ASYNC_VALIDATORS = new _angular_core.OpaqueToken('NgAsyncValidators');\n    /**\n     * Provides a set of validators used by form controls.\n     *\n     * A validator is a function that processes a {\\@link FormControl} or collection of\n     * controls and returns a map of errors. A null map means that validation has passed.\n     *\n     * ### Example\n     *\n     * ```typescript\n     * var loginControl = new FormControl(\"\", Validators.required)\n     * ```\n     *\n     * \\@stable\n     */\n    var Validators = (function () {\n        function Validators() {\n        }\n        /**\n         * Validator that requires controls to have a non-empty value.\n         * @param {?} control\n         * @return {?}\n         */\n        Validators.required = function (control) {\n            return isEmptyInputValue(control.value) ? { 'required': true } : null;\n        };\n        /**\n         * Validator that requires control value to be true.\n         * @param {?} control\n         * @return {?}\n         */\n        Validators.requiredTrue = function (control) {\n            return control.value === true ? null : { 'required': true };\n        };\n        /**\n         * Validator that requires controls to have a value of a minimum length.\n         * @param {?} minLength\n         * @return {?}\n         */\n        Validators.minLength = function (minLength) {\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ length = control.value ? control.value.length : 0;\n                return length < minLength ?\n                    { 'minlength': { 'requiredLength': minLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires controls to have a value of a maximum length.\n         * @param {?} maxLength\n         * @return {?}\n         */\n        Validators.maxLength = function (maxLength) {\n            return function (control) {\n                var /** @type {?} */ length = control.value ? control.value.length : 0;\n                return length > maxLength ?\n                    { 'maxlength': { 'requiredLength': maxLength, 'actualLength': length } } :\n                    null;\n            };\n        };\n        /**\n         * Validator that requires a control to match a regex to its value.\n         * @param {?} pattern\n         * @return {?}\n         */\n        Validators.pattern = function (pattern) {\n            if (!pattern)\n                return Validators.nullValidator;\n            var /** @type {?} */ regex;\n            var /** @type {?} */ regexStr;\n            if (typeof pattern === 'string') {\n                regexStr = \"^\" + pattern + \"$\";\n                regex = new RegExp(regexStr);\n            }\n            else {\n                regexStr = pattern.toString();\n                regex = pattern;\n            }\n            return function (control) {\n                if (isEmptyInputValue(control.value)) {\n                    return null; // don't validate empty values to allow optional controls\n                }\n                var /** @type {?} */ value = control.value;\n                return regex.test(value) ? null :\n                    { 'pattern': { 'requiredPattern': regexStr, 'actualValue': value } };\n            };\n        };\n        /**\n         * No-op validator.\n         * @param {?} c\n         * @return {?}\n         */\n        Validators.nullValidator = function (c) { return null; };\n        /**\n         * Compose multiple validators into a single function that returns the union\n         * of the individual error maps.\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.compose = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                return _mergeErrors(_executeValidators(control, presentValidators));\n            };\n        };\n        /**\n         * @param {?} validators\n         * @return {?}\n         */\n        Validators.composeAsync = function (validators) {\n            if (!validators)\n                return null;\n            var /** @type {?} */ presentValidators = validators.filter(isPresent);\n            if (presentValidators.length == 0)\n                return null;\n            return function (control) {\n                var /** @type {?} */ promises = _executeAsyncValidators(control, presentValidators).map(_convertToPromise);\n                return Promise.all(promises).then(_mergeErrors);\n            };\n        };\n        return Validators;\n    }());\n    /**\n     * @param {?} obj\n     * @return {?}\n     */\n    function _convertToPromise(obj) {\n        return isPromise(obj) ? obj : rxjs_operator_toPromise.toPromise.call(obj);\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} control\n     * @param {?} validators\n     * @return {?}\n     */\n    function _executeAsyncValidators(control, validators) {\n        return validators.map(function (v) { return v(control); });\n    }\n    /**\n     * @param {?} arrayOfErrors\n     * @return {?}\n     */\n    function _mergeErrors(arrayOfErrors) {\n        var /** @type {?} */ res = arrayOfErrors.reduce(function (res, errors) {\n            return isPresent(errors) ? StringMapWrapper.merge(res, errors) : res;\n        }, {});\n        return Object.keys(res).length === 0 ? null : res;\n    }\n\n    /**\n     * Used to provide a {@link ControlValueAccessor} for form controls.\n     *\n     * See {@link DefaultValueAccessor} for how to implement one.\n     * @stable\n     */\n    var /** @type {?} */ NG_VALUE_ACCESSOR = new _angular_core.OpaqueToken('NgValueAccessor');\n\n    var /** @type {?} */ CHECKBOX_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxControlValueAccessor; }),\n        multi: true,\n    };\n    /**\n     * The accessor for writing a value and listening to changes on a checkbox input element.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"checkbox\" name=\"rememberLogin\" ngModel>\n     *  ```\n     *\n     *  \\@stable\n     */\n    var CheckboxControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function CheckboxControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', value);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        CheckboxControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        CheckboxControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]',\n                        host: { '(change)': 'onChange($event.target.checked)', '(blur)': 'onTouched()' },\n                        providers: [CHECKBOX_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return CheckboxControlValueAccessor;\n    }());\n\n    var /** @type {?} */ DEFAULT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return DefaultValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The default accessor for writing a value and listening to changes that is used by the\n     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"text\" name=\"searchQuery\" ngModel>\n     *  ```\n     *\n     *  \\@stable\n     */\n    var DefaultValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function DefaultValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.writeValue = function (value) {\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        DefaultValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        DefaultValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]',\n                        // TODO: vsavkin replace the above selector with the one below it once\n                        // https://github.com/angular/angular/issues/3011 is implemented\n                        // selector: '[ngControl],[ngModel],[ngFormControl]',\n                        host: { '(input)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [DEFAULT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        DefaultValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return DefaultValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function normalizeAsyncValidator(validator) {\n        if (((validator)).validate) {\n            return function (c) { return ((validator)).validate(c); };\n        }\n        else {\n            return (validator);\n        }\n    }\n\n    var /** @type {?} */ NUMBER_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return NumberValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a number value and listening to changes that is used by the\n     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"number\" [(ngModel)]=\"age\">\n     *  ```\n     */\n    var NumberValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function NumberValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.writeValue = function (value) {\n            // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n            var /** @type {?} */ normalizedValue = value == null ? '' : value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', normalizedValue);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        NumberValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        NumberValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [NUMBER_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        NumberValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return NumberValueAccessor;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$2 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * @return {?}\n     */\n    function unimplemented() {\n        throw new Error('unimplemented');\n    }\n    /**\n     * A base class that all control directive extend.\n     * It binds a {\\@link FormControl} object to a DOM element.\n     *\n     * Used internally by Angular forms.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var NgControl = (function (_super) {\n        __extends$2(NgControl, _super);\n        function NgControl() {\n            _super.apply(this, arguments);\n            /** @internal */\n            this._parent = null;\n            this.name = null;\n            this.valueAccessor = null;\n            /** @internal */\n            this._rawValidators = [];\n            /** @internal */\n            this._rawAsyncValidators = [];\n        }\n        Object.defineProperty(NgControl.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgControl.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return (unimplemented()); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @abstract\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgControl.prototype.viewToModelUpdate = function (newValue) { };\n        return NgControl;\n    }(AbstractControlDirective));\n\n    var /** @type {?} */ RADIO_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RadioControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * Internal class used by Angular to uncheck radio buttons with the matching name.\n     */\n    var RadioControlRegistry = (function () {\n        function RadioControlRegistry() {\n            this._accessors = [];\n        }\n        /**\n         * @param {?} control\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.add = function (control, accessor) {\n            this._accessors.push([control, accessor]);\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.remove = function (accessor) {\n            for (var /** @type {?} */ i = this._accessors.length - 1; i >= 0; --i) {\n                if (this._accessors[i][1] === accessor) {\n                    this._accessors.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        /**\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype.select = function (accessor) {\n            var _this = this;\n            this._accessors.forEach(function (c) {\n                if (_this._isSameGroup(c, accessor) && c[1] !== accessor) {\n                    c[1].fireUncheck(accessor.value);\n                }\n            });\n        };\n        /**\n         * @param {?} controlPair\n         * @param {?} accessor\n         * @return {?}\n         */\n        RadioControlRegistry.prototype._isSameGroup = function (controlPair, accessor) {\n            if (!controlPair[0].control)\n                return false;\n            return controlPair[0]._parent === accessor._control._parent &&\n                controlPair[1].name === accessor.name;\n        };\n        RadioControlRegistry.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        RadioControlRegistry.ctorParameters = function () { return []; };\n        return RadioControlRegistry;\n    }());\n    /**\n     * \\@whatItDoes Writes radio control values and listens to radio control changes.\n     *\n     * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n     * to keep the view synced with the {\\@link FormControl} model.\n     *\n     * \\@howToUse\n     *\n     * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n     * value accessor will be active on any radio control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use radio buttons with form directives\n     *\n     * To use radio buttons in a template-driven form, you'll want to ensure that radio buttons\n     * in the same group have the same `name` attribute.  Radio buttons with different `name`\n     * attributes do not affect each other.\n     *\n     * {\\@example forms/ts/radioButtons/radio_button_example.ts region='TemplateDriven'}\n     *\n     * When using radio buttons in a reactive form, radio buttons in the same group should have the\n     * same `formControlName`. You can also add a `name` attribute, but it's optional.\n     *\n     * {\\@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n     *\n     *  * **npm package**: `\\@angular/forms`\n     *\n     *  \\@stable\n     */\n    var RadioControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         * @param {?} _registry\n         * @param {?} _injector\n         */\n        function RadioControlValueAccessor(_renderer, _elementRef, _registry, _injector) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this._registry = _registry;\n            this._injector = _injector;\n            this.onChange = function () { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnInit = function () {\n            this._control = this._injector.get(NgControl);\n            this._checkName();\n            this._registry.add(this._control, this);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.ngOnDestroy = function () { this._registry.remove(this); };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.writeValue = function (value) {\n            this._state = value === this.value;\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'checked', this._state);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this._fn = fn;\n            this.onChange = function () {\n                fn(_this.value);\n                _this._registry.select(_this);\n            };\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.fireUncheck = function (value) { this.writeValue(value); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._checkName = function () {\n            if (this.name && this.formControlName && this.name !== this.formControlName) {\n                this._throwNameError();\n            }\n            if (!this.name && this.formControlName)\n                this.name = this.formControlName;\n        };\n        /**\n         * @return {?}\n         */\n        RadioControlValueAccessor.prototype._throwNameError = function () {\n            throw new Error(\"\\n      If you define both a name and a formControlName attribute on your radio button, their values\\n      must match. Ex: <input type=\\\"radio\\\" formControlName=\\\"food\\\" name=\\\"food\\\">\\n    \");\n        };\n        RadioControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=radio][formControlName],input[type=radio][formControl],input[type=radio][ngModel]',\n                        host: { '(change)': 'onChange()', '(blur)': 'onTouched()' },\n                        providers: [RADIO_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RadioControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n            { type: RadioControlRegistry, },\n            { type: _angular_core.Injector, },\n        ]; };\n        RadioControlValueAccessor.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'formControlName': [{ type: _angular_core.Input },],\n            'value': [{ type: _angular_core.Input },],\n        };\n        return RadioControlValueAccessor;\n    }());\n\n    var /** @type {?} */ RANGE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return RangeValueAccessor; }),\n        multi: true\n    };\n    /**\n     * The accessor for writing a range value and listening to changes that is used by the\n     * {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName} directives.\n     *\n     *  ### Example\n     *  ```\n     *  <input type=\"range\" [(ngModel)]=\"age\" >\n     *  ```\n     */\n    var RangeValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function RangeValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.writeValue = function (value) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', parseFloat(value));\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnChange = function (fn) {\n            this.onChange = function (value) { fn(value == '' ? null : parseFloat(value)); };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        RangeValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        RangeValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=range][formControlName],input[type=range][formControl],input[type=range][ngModel]',\n                        host: {\n                            '(change)': 'onChange($event.target.value)',\n                            '(input)': 'onChange($event.target.value)',\n                            '(blur)': 'onTouched()'\n                        },\n                        providers: [RANGE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        RangeValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return RangeValueAccessor;\n    }());\n\n    var /** @type {?} */ SELECT_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * \\@whatItDoes Writes values and listens to changes on a select element.\n     *\n     * Used by {\\@link NgModel}, {\\@link FormControlDirective}, and {\\@link FormControlName}\n     * to keep the view synced with the {\\@link FormControl} model.\n     *\n     * \\@howToUse\n     *\n     * If you have imported the {\\@link FormsModule} or the {\\@link ReactiveFormsModule}, this\n     * value accessor will be active on any select control that has a form directive. You do\n     * **not** need to add a special selector to activate it.\n     *\n     * ### How to use select controls with form directives\n     *\n     * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n     * attribute to the main `<select>` tag.\n     *\n     * If your option values are simple strings, you can bind to the normal `value` property\n     * on the option.  If your option values happen to be objects (and you'd like to save the\n     * selection in your form as an object), use `ngValue` instead:\n     *\n     * {\\@example forms/ts/selectControl/select_control_example.ts region='Component'}\n     *\n     * In reactive forms, you'll also want to add your form directive (`formControlName` or\n     * `formControl`) on the main `<select>` tag. Like in the former example, you have the\n     * choice of binding to the  `value` or `ngValue` property on the select's options.\n     *\n     * {\\@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n     *\n     * Note: We listen to the 'change' event because 'input' events aren't fired\n     * for selects in Firefox and IE:\n     * https://bugzilla.mozilla.org/show_bug.cgi?id=1024350\n     * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/4660045/\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * \\@stable\n     */\n    var SelectControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.writeValue = function (value) {\n            this.value = value;\n            var /** @type {?} */ id = this._getOptionId(value);\n            if (id == null) {\n                this._renderer.setElementProperty(this._elementRef.nativeElement, 'selectedIndex', -1);\n            }\n            var /** @type {?} */ valueString = _buildValueString(id, value);\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'value', valueString);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (valueString) {\n                _this.value = valueString;\n                fn(_this._getOptionValue(valueString));\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._registerOption = function () { return (this._idCounter++).toString(); };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id), value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * \\@internal\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n        };\n        SelectControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select:not([multiple])[formControlName],select:not([multiple])[formControl],select:not([multiple])[ngModel]',\n                        host: { '(change)': 'onChange($event.target.value)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectControlValueAccessor;\n    }());\n    /**\n     * \\@whatItDoes Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * \\@howToUse\n     *\n     * See docs for {\\@link SelectControlValueAccessor} for usage examples.\n     *\n     * \\@stable\n     */\n    var NgSelectOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select)\n                this.id = this._select._registerOption();\n        }\n        Object.defineProperty(NgSelectOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._select._optionMap.set(this.id, value);\n                this._setElementValue(_buildValueString(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._setElementValue(value);\n                if (this._select)\n                    this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectOption;\n    }());\n\n    var /** @type {?} */ SELECT_MULTIPLE_VALUE_ACCESSOR = {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: _angular_core.forwardRef(function () { return SelectMultipleControlValueAccessor; }),\n        multi: true\n    };\n    /**\n     * @param {?} id\n     * @param {?} value\n     * @return {?}\n     */\n    function _buildValueString$1(id, value) {\n        if (id == null)\n            return \"\" + value;\n        if (typeof value === 'string')\n            value = \"'\" + value + \"'\";\n        if (!isPrimitive(value))\n            value = 'Object';\n        return (id + \": \" + value).slice(0, 50);\n    }\n    /**\n     * @param {?} valueString\n     * @return {?}\n     */\n    function _extractId$1(valueString) {\n        return valueString.split(':')[0];\n    }\n    /**\n     * The accessor for writing a value and listening to changes on a select element.\n     *\n     * \\@stable\n     */\n    var SelectMultipleControlValueAccessor = (function () {\n        /**\n         * @param {?} _renderer\n         * @param {?} _elementRef\n         */\n        function SelectMultipleControlValueAccessor(_renderer, _elementRef) {\n            this._renderer = _renderer;\n            this._elementRef = _elementRef;\n            /** @internal */\n            this._optionMap = new Map();\n            /** @internal */\n            this._idCounter = 0;\n            this.onChange = function (_) { };\n            this.onTouched = function () { };\n        }\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.writeValue = function (value) {\n            var _this = this;\n            this.value = value;\n            var /** @type {?} */ optionSelectedStateSetter;\n            if (Array.isArray(value)) {\n                // convert values to ids\n                var /** @type {?} */ ids_1 = value.map(function (v) { return _this._getOptionId(v); });\n                optionSelectedStateSetter = function (opt, o) { opt._setSelected(ids_1.indexOf(o.toString()) > -1); };\n            }\n            else {\n                optionSelectedStateSetter = function (opt, o) { opt._setSelected(false); };\n            }\n            this._optionMap.forEach(optionSelectedStateSetter);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnChange = function (fn) {\n            var _this = this;\n            this.onChange = function (_) {\n                var /** @type {?} */ selected = [];\n                if (_.hasOwnProperty('selectedOptions')) {\n                    var /** @type {?} */ options = _.selectedOptions;\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                        selected.push(val);\n                    }\n                }\n                else {\n                    var /** @type {?} */ options = (_.options);\n                    for (var /** @type {?} */ i = 0; i < options.length; i++) {\n                        var /** @type {?} */ opt = options.item(i);\n                        if (opt.selected) {\n                            var /** @type {?} */ val = _this._getOptionValue(opt.value);\n                            selected.push(val);\n                        }\n                    }\n                }\n                _this.value = selected;\n                fn(selected);\n            };\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\n        /**\n         * @param {?} isDisabled\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype.setDisabledState = function (isDisabled) {\n            this._renderer.setElementProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._registerOption = function (value) {\n            var /** @type {?} */ id = (this._idCounter++).toString();\n            this._optionMap.set(id, value);\n            return id;\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionId = function (value) {\n            for (var _i = 0, _a = Array.from(this._optionMap.keys()); _i < _a.length; _i++) {\n                var id = _a[_i];\n                if (looseIdentical(this._optionMap.get(id)._value, value))\n                    return id;\n            }\n            return null;\n        };\n        /**\n         * \\@internal\n         * @param {?} valueString\n         * @return {?}\n         */\n        SelectMultipleControlValueAccessor.prototype._getOptionValue = function (valueString) {\n            var /** @type {?} */ id = _extractId$1(valueString);\n            return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n        };\n        SelectMultipleControlValueAccessor.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'select[multiple][formControlName],select[multiple][formControl],select[multiple][ngModel]',\n                        host: { '(change)': 'onChange($event.target)', '(blur)': 'onTouched()' },\n                        providers: [SELECT_MULTIPLE_VALUE_ACCESSOR]\n                    },] },\n        ];\n        /** @nocollapse */\n        SelectMultipleControlValueAccessor.ctorParameters = function () { return [\n            { type: _angular_core.Renderer, },\n            { type: _angular_core.ElementRef, },\n        ]; };\n        return SelectMultipleControlValueAccessor;\n    }());\n    /**\n     * Marks `<option>` as dynamic, so Angular can be notified when options change.\n     *\n     * ### Example\n     *\n     * ```\n     * <select multiple name=\"city\" ngModel>\n     *   <option *ngFor=\"let c of cities\" [value]=\"c\"></option>\n     * </select>\n     * ```\n     */\n    var NgSelectMultipleOption = (function () {\n        /**\n         * @param {?} _element\n         * @param {?} _renderer\n         * @param {?} _select\n         */\n        function NgSelectMultipleOption(_element, _renderer, _select) {\n            this._element = _element;\n            this._renderer = _renderer;\n            this._select = _select;\n            if (this._select) {\n                this.id = this._select._registerOption(this);\n            }\n        }\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"ngValue\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select == null)\n                    return;\n                this._value = value;\n                this._setElementValue(_buildValueString$1(this.id, value));\n                this._select.writeValue(this._select.value);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgSelectMultipleOption.prototype, \"value\", {\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                if (this._select) {\n                    this._value = value;\n                    this._setElementValue(_buildValueString$1(this.id, value));\n                    this._select.writeValue(this._select.value);\n                }\n                else {\n                    this._setElementValue(value);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setElementValue = function (value) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'value', value);\n        };\n        /**\n         * \\@internal\n         * @param {?} selected\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype._setSelected = function (selected) {\n            this._renderer.setElementProperty(this._element.nativeElement, 'selected', selected);\n        };\n        /**\n         * @return {?}\n         */\n        NgSelectMultipleOption.prototype.ngOnDestroy = function () {\n            if (this._select) {\n                this._select._optionMap.delete(this.id);\n                this._select.writeValue(this._select.value);\n            }\n        };\n        NgSelectMultipleOption.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: 'option' },] },\n        ];\n        /** @nocollapse */\n        NgSelectMultipleOption.ctorParameters = function () { return [\n            { type: _angular_core.ElementRef, },\n            { type: _angular_core.Renderer, },\n            { type: SelectMultipleControlValueAccessor, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n        ]; };\n        NgSelectMultipleOption.propDecorators = {\n            'ngValue': [{ type: _angular_core.Input, args: ['ngValue',] },],\n            'value': [{ type: _angular_core.Input, args: ['value',] },],\n        };\n        return NgSelectMultipleOption;\n    }());\n\n    /**\n     * @param {?} name\n     * @param {?} parent\n     * @return {?}\n     */\n    function controlPath(name, parent) {\n        return parent.path.concat([name]);\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpControl(control, dir) {\n        if (!control)\n            _throwError(dir, 'Cannot find control with');\n        if (!dir.valueAccessor)\n            _throwError(dir, 'No value accessor for form control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n        dir.valueAccessor.writeValue(control.value);\n        // view -> model\n        dir.valueAccessor.registerOnChange(function (newValue) {\n            dir.viewToModelUpdate(newValue);\n            control.markAsDirty();\n            control.setValue(newValue, { emitModelToViewChange: false });\n        });\n        // touched\n        dir.valueAccessor.registerOnTouched(function () { return control.markAsTouched(); });\n        control.registerOnChange(function (newValue, emitModelEvent) {\n            // control -> view\n            dir.valueAccessor.writeValue(newValue);\n            // control -> ngModel\n            if (emitModelEvent)\n                dir.viewToModelUpdate(newValue);\n        });\n        if (dir.valueAccessor.setDisabledState) {\n            control.registerOnDisabledChange(function (isDisabled) { dir.valueAccessor.setDisabledState(isDisabled); });\n        }\n        // re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n        dir._rawValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (((validator)).registerOnValidatorChange)\n                ((validator)).registerOnValidatorChange(function () { return control.updateValueAndValidity(); });\n        });\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function cleanUpControl(control, dir) {\n        dir.valueAccessor.registerOnChange(function () { return _noControlError(dir); });\n        dir.valueAccessor.registerOnTouched(function () { return _noControlError(dir); });\n        dir._rawValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        dir._rawAsyncValidators.forEach(function (validator) {\n            if (validator.registerOnValidatorChange) {\n                validator.registerOnValidatorChange(null);\n            }\n        });\n        if (control)\n            control._clearChangeFns();\n    }\n    /**\n     * @param {?} control\n     * @param {?} dir\n     * @return {?}\n     */\n    function setUpFormContainer(control, dir) {\n        if (isBlank(control))\n            _throwError(dir, 'Cannot find control with');\n        control.validator = Validators.compose([control.validator, dir.validator]);\n        control.asyncValidator = Validators.composeAsync([control.asyncValidator, dir.asyncValidator]);\n    }\n    /**\n     * @param {?} dir\n     * @return {?}\n     */\n    function _noControlError(dir) {\n        return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n    }\n    /**\n     * @param {?} dir\n     * @param {?} message\n     * @return {?}\n     */\n    function _throwError(dir, message) {\n        var /** @type {?} */ messageEnd;\n        if (dir.path.length > 1) {\n            messageEnd = \"path: '\" + dir.path.join(' -> ') + \"'\";\n        }\n        else if (dir.path[0]) {\n            messageEnd = \"name: '\" + dir.path + \"'\";\n        }\n        else {\n            messageEnd = 'unspecified name attribute';\n        }\n        throw new Error(message + \" \" + messageEnd);\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeValidators(validators) {\n        return isPresent(validators) ? Validators.compose(validators.map(normalizeValidator)) : null;\n    }\n    /**\n     * @param {?} validators\n     * @return {?}\n     */\n    function composeAsyncValidators(validators) {\n        return isPresent(validators) ? Validators.composeAsync(validators.map(normalizeAsyncValidator)) :\n            null;\n    }\n    /**\n     * @param {?} changes\n     * @param {?} viewModel\n     * @return {?}\n     */\n    function isPropertyUpdated(changes, viewModel) {\n        if (!changes.hasOwnProperty('model'))\n            return false;\n        var /** @type {?} */ change = changes['model'];\n        if (change.isFirstChange())\n            return true;\n        return !looseIdentical(viewModel, change.currentValue);\n    }\n    var /** @type {?} */ BUILTIN_ACCESSORS = [\n        CheckboxControlValueAccessor,\n        RangeValueAccessor,\n        NumberValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n    ];\n    /**\n     * @param {?} valueAccessor\n     * @return {?}\n     */\n    function isBuiltInAccessor(valueAccessor) {\n        return BUILTIN_ACCESSORS.some(function (a) { return valueAccessor.constructor === a; });\n    }\n    /**\n     * @param {?} dir\n     * @param {?} valueAccessors\n     * @return {?}\n     */\n    function selectValueAccessor(dir, valueAccessors) {\n        if (!valueAccessors)\n            return null;\n        var /** @type {?} */ defaultAccessor;\n        var /** @type {?} */ builtinAccessor;\n        var /** @type {?} */ customAccessor;\n        valueAccessors.forEach(function (v) {\n            if (v.constructor === DefaultValueAccessor) {\n                defaultAccessor = v;\n            }\n            else if (isBuiltInAccessor(v)) {\n                if (builtinAccessor)\n                    _throwError(dir, 'More than one built-in value accessor matches form control with');\n                builtinAccessor = v;\n            }\n            else {\n                if (customAccessor)\n                    _throwError(dir, 'More than one custom value accessor matches form control with');\n                customAccessor = v;\n            }\n        });\n        if (customAccessor)\n            return customAccessor;\n        if (builtinAccessor)\n            return builtinAccessor;\n        if (defaultAccessor)\n            return defaultAccessor;\n        _throwError(dir, 'No valid value accessor for form control with');\n        return null;\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * This is a base class for code shared between {\\@link NgModelGroup} and {\\@link FormGroupName}.\n     *\n     * \\@stable\n     */\n    var AbstractFormGroupDirective = (function (_super) {\n        __extends(AbstractFormGroupDirective, _super);\n        function AbstractFormGroupDirective() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormGroup(this);\n        };\n        /**\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormGroup(this);\n            }\n        };\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"control\", {\n            /**\n             * Get the {\\@link FormGroup} backing this binding.\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormGroup(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"path\", {\n            /**\n             * Get the path to this control group.\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * Get the {\\@link Form} to which this group belongs.\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractFormGroupDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        AbstractFormGroupDirective.prototype._checkParentType = function () { };\n        return AbstractFormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$3 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var AbstractControlStatus = (function () {\n        /**\n         * @param {?} cd\n         */\n        function AbstractControlStatus(cd) {\n            this._cd = cd;\n        }\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassUntouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.untouched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassTouched\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.touched : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPristine\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pristine : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassDirty\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.dirty : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassValid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.valid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassInvalid\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.invalid : false; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControlStatus.prototype, \"ngClassPending\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._cd.control ? this._cd.control.pending : false; },\n            enumerable: true,\n            configurable: true\n        });\n        return AbstractControlStatus;\n    }());\n    var /** @type {?} */ ngControlStatusHost = {\n        '[class.ng-untouched]': 'ngClassUntouched',\n        '[class.ng-touched]': 'ngClassTouched',\n        '[class.ng-pristine]': 'ngClassPristine',\n        '[class.ng-dirty]': 'ngClassDirty',\n        '[class.ng-valid]': 'ngClassValid',\n        '[class.ng-invalid]': 'ngClassInvalid',\n        '[class.ng-pending]': 'ngClassPending',\n    };\n    /**\n     * Directive automatically applied to Angular form controls that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * \\@stable\n     */\n    var NgControlStatus = (function (_super) {\n        __extends$3(NgControlStatus, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatus(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatus.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName],[ngModel],[formControl]', host: ngControlStatusHost },] },\n        ];\n        /** @nocollapse */\n        NgControlStatus.ctorParameters = function () { return [\n            { type: NgControl, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatus;\n    }(AbstractControlStatus));\n    /**\n     * Directive automatically applied to Angular form groups that sets CSS classes\n     * based on control status (valid/invalid/dirty/etc).\n     *\n     * \\@stable\n     */\n    var NgControlStatusGroup = (function (_super) {\n        __extends$3(NgControlStatusGroup, _super);\n        /**\n         * @param {?} cd\n         */\n        function NgControlStatusGroup(cd) {\n            _super.call(this, cd);\n        }\n        NgControlStatusGroup.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]',\n                        host: ngControlStatusHost\n                    },] },\n        ];\n        /** @nocollapse */\n        NgControlStatusGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Self },] },\n        ]; };\n        return NgControlStatusGroup;\n    }(AbstractControlStatus));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$5 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Use by directives and components to emit custom Events.\n     *\n     * ### Examples\n     *\n     * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n     * title gets clicked:\n     *\n     * ```\n     * \\@Component({\n     *   selector: 'zippy',\n     *   template: `\n     *   <div class=\"zippy\">\n     *     <div (click)=\"toggle()\">Toggle</div>\n     *     <div [hidden]=\"!visible\">\n     *       <ng-content></ng-content>\n     *     </div>\n     *  </div>`})\n     * export class Zippy {\n     *   visible: boolean = true;\n     *   \\@Output() open: EventEmitter<any> = new EventEmitter();\n     *   \\@Output() close: EventEmitter<any> = new EventEmitter();\n     *\n     *   toggle() {\n     *     this.visible = !this.visible;\n     *     if (this.visible) {\n     *       this.open.emit(null);\n     *     } else {\n     *       this.close.emit(null);\n     *     }\n     *   }\n     * }\n     * ```\n     *\n     * The events payload can be accessed by the parameter `$event` on the components output event\n     * handler:\n     *\n     * ```\n     * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n     * ```\n     *\n     * Uses Rx.Observable but provides an adapter to make it work as specified here:\n     * https://github.com/jhusain/observable-spec\n     *\n     * Once a reference implementation of the spec is available, switch to it.\n     * \\@stable\n     */\n    var EventEmitter = (function (_super) {\n        __extends$5(EventEmitter, _super);\n        /**\n         * Creates an instance of [EventEmitter], which depending on [isAsync],\n         * delivers events synchronously or asynchronously.\n         * @param {?=} isAsync\n         */\n        function EventEmitter(isAsync) {\n            if (isAsync === void 0) { isAsync = false; }\n            _super.call(this);\n            this.__isAsync = isAsync;\n        }\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n        /**\n         * @param {?=} generatorOrNext\n         * @param {?=} error\n         * @param {?=} complete\n         * @return {?}\n         */\n        EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n            var /** @type {?} */ schedulerFn;\n            var /** @type {?} */ errorFn = function (err) { return null; };\n            var /** @type {?} */ completeFn = function () { return null; };\n            if (generatorOrNext && typeof generatorOrNext === 'object') {\n                schedulerFn = this.__isAsync ? function (value) {\n                    setTimeout(function () { return generatorOrNext.next(value); });\n                } : function (value) { generatorOrNext.next(value); };\n                if (generatorOrNext.error) {\n                    errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                        function (err) { generatorOrNext.error(err); };\n                }\n                if (generatorOrNext.complete) {\n                    completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                        function () { generatorOrNext.complete(); };\n                }\n            }\n            else {\n                schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                    function (value) { generatorOrNext(value); };\n                if (error) {\n                    errorFn =\n                        this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n                }\n                if (complete) {\n                    completeFn =\n                        this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n                }\n            }\n            return _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        };\n        return EventEmitter;\n    }(rxjs_Subject.Subject));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$6 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    /**\n     * Indicates that a FormControl is valid, i.e. that no errors exist in the input value.\n     */\n    var /** @type {?} */ VALID = 'VALID';\n    /**\n     * Indicates that a FormControl is invalid, i.e. that an error exists in the input value.\n     */\n    var /** @type {?} */ INVALID = 'INVALID';\n    /**\n     * Indicates that a FormControl is pending, i.e. that async validation is occurring and\n     * errors are not yet available for the input value.\n     */\n    var /** @type {?} */ PENDING = 'PENDING';\n    /**\n     * Indicates that a FormControl is disabled, i.e. that the control is exempt from ancestor\n     * calculations of validity or value.\n     */\n    var /** @type {?} */ DISABLED = 'DISABLED';\n    /**\n     * @param {?} control\n     * @param {?} path\n     * @param {?} delimiter\n     * @return {?}\n     */\n    function _find(control, path, delimiter) {\n        if (path == null)\n            return null;\n        if (!(path instanceof Array)) {\n            path = ((path)).split(delimiter);\n        }\n        if (path instanceof Array && (path.length === 0))\n            return null;\n        return ((path)).reduce(function (v, name) {\n            if (v instanceof FormGroup) {\n                return v.controls[name] || null;\n            }\n            if (v instanceof FormArray) {\n                return v.at(/** @type {?} */ (name)) || null;\n            }\n            return null;\n        }, control);\n    }\n    /**\n     * @param {?} r\n     * @return {?}\n     */\n    function toObservable(r) {\n        return isPromise(r) ? rxjs_observable_fromPromise.fromPromise(r) : r;\n    }\n    /**\n     * @param {?} validator\n     * @return {?}\n     */\n    function coerceToValidator(validator) {\n        return Array.isArray(validator) ? composeValidators(validator) : validator;\n    }\n    /**\n     * @param {?} asyncValidator\n     * @return {?}\n     */\n    function coerceToAsyncValidator(asyncValidator) {\n        return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator;\n    }\n    /**\n     * \\@whatItDoes This is the base class for {\\@link FormControl}, {\\@link FormGroup}, and\n     * {\\@link FormArray}.\n     *\n     * It provides some of the shared behavior that all controls and groups of controls have, like\n     * running validators, calculating status, and resetting state. It also defines the properties\n     * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n     * instantiated directly.\n     *\n     * \\@stable\n     * @abstract\n     */\n    var AbstractControl = (function () {\n        /**\n         * @param {?} validator\n         * @param {?} asyncValidator\n         */\n        function AbstractControl(validator, asyncValidator) {\n            this.validator = validator;\n            this.asyncValidator = asyncValidator;\n            /** @internal */\n            this._onCollectionChange = function () { };\n            this._pristine = true;\n            this._touched = false;\n            /** @internal */\n            this._onDisabledChange = [];\n        }\n        Object.defineProperty(AbstractControl.prototype, \"value\", {\n            /**\n             * The value of the control.\n             * @return {?}\n             */\n            get: function () { return this._value; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"parent\", {\n            /**\n             * The parent control.\n             * @return {?}\n             */\n            get: function () { return this._parent; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"status\", {\n            /**\n             * The validation status of the control. There are four possible\n             * validation statuses:\n             *\n             * * **VALID**:  control has passed all validation checks\n             * * **INVALID**: control has failed at least one validation check\n             * * **PENDING**: control is in the midst of conducting a validation check\n             * * **DISABLED**: control is exempt from validation checks\n             *\n             * These statuses are mutually exclusive, so a control cannot be\n             * both valid AND invalid or invalid AND disabled.\n             * @return {?}\n             */\n            get: function () { return this._status; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valid\", {\n            /**\n             * A control is `valid` when its `status === VALID`.\n             *\n             * In order to have this status, the control must have passed all its\n             * validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === VALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"invalid\", {\n            /**\n             * A control is `invalid` when its `status === INVALID`.\n             *\n             * In order to have this status, the control must have failed\n             * at least one of its validation checks.\n             * @return {?}\n             */\n            get: function () { return this._status === INVALID; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pending\", {\n            /**\n             * A control is `pending` when its `status === PENDING`.\n             *\n             * In order to have this status, the control must be in the\n             * middle of conducting a validation check.\n             * @return {?}\n             */\n            get: function () { return this._status == PENDING; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"disabled\", {\n            /**\n             * A control is `disabled` when its `status === DISABLED`.\n             *\n             * Disabled controls are exempt from validation checks and\n             * are not included in the aggregate value of their ancestor\n             * controls.\n             * @return {?}\n             */\n            get: function () { return this._status === DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"enabled\", {\n            /**\n             * A control is `enabled` as long as its `status !== DISABLED`.\n             *\n             * In other words, it has a status of `VALID`, `INVALID`, or\n             * `PENDING`.\n             * @return {?}\n             */\n            get: function () { return this._status !== DISABLED; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"errors\", {\n            /**\n             * Returns any errors generated by failing validation. If there\n             * are no errors, it will return null.\n             * @return {?}\n             */\n            get: function () { return this._errors; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"pristine\", {\n            /**\n             * A control is `pristine` if the user has not yet changed\n             * the value in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return this._pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"dirty\", {\n            /**\n             * A control is `dirty` if the user has changed the value\n             * in the UI.\n             *\n             * Note that programmatic changes to a control's value will\n             * *not* mark it dirty.\n             * @return {?}\n             */\n            get: function () { return !this.pristine; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"touched\", {\n            /**\n             * A control is marked `touched` once the user has triggered\n             * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"untouched\", {\n            /**\n             * A control is `untouched` if the user has not yet triggered\n             * a `blur` event on it.\n             * @return {?}\n             */\n            get: function () { return !this._touched; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"valueChanges\", {\n            /**\n             * Emits an event every time the value of the control changes, in\n             * the UI or programmatically.\n             * @return {?}\n             */\n            get: function () { return this._valueChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(AbstractControl.prototype, \"statusChanges\", {\n            /**\n             * Emits an event every time the validation status of the control\n             * is re-calculated.\n             * @return {?}\n             */\n            get: function () { return this._statusChanges; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * Sets the synchronous validators that are active on this control.  Calling\n         * this will overwrite any existing sync validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setValidators = function (newValidator) {\n            this.validator = coerceToValidator(newValidator);\n        };\n        /**\n         * Sets the async validators that are active on this control. Calling this\n         * will overwrite any existing async validators.\n         * @param {?} newValidator\n         * @return {?}\n         */\n        AbstractControl.prototype.setAsyncValidators = function (newValidator) {\n            this.asyncValidator = coerceToAsyncValidator(newValidator);\n        };\n        /**\n         * Empties out the sync validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearValidators = function () { this.validator = null; };\n        /**\n         * Empties out the async validator list.\n         * @return {?}\n         */\n        AbstractControl.prototype.clearAsyncValidators = function () { this.asyncValidator = null; };\n        /**\n         * Marks the control as `touched`.\n         *\n         * This will also mark all direct ancestors as `touched` to maintain\n         * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = true;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `untouched`.\n         *\n         * If the control has any children, it will also mark all children as `untouched`\n         * to maintain the model, and re-calculate the `touched` status of all parent\n         * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsUntouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = false;\n            this._forEachChild(function (control) { control.markAsUntouched({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `dirty`.\n         *\n         * This will also mark all direct ancestors as `dirty` to maintain\n         * the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsDirty = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = false;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsDirty({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pristine`.\n         *\n         * If the control has any children, it will also mark all children as `pristine`\n         * to maintain the model, and re-calculate the `pristine` status of all parent\n         * controls.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = true;\n            this._forEachChild(function (control) { control.markAsPristine({ onlySelf: true }); });\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Marks the control as `pending`.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.markAsPending = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._status = PENDING;\n            if (this._parent && !onlySelf) {\n                this._parent.markAsPending({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * Disables the control. This means the control will be exempt from validation checks and\n         * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n         *\n         * If the control has children, all children will be disabled to maintain the model.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.disable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = DISABLED;\n            this._errors = null;\n            this._forEachChild(function (control) { control.disable({ onlySelf: true }); });\n            this._updateValue();\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(true); });\n        };\n        /**\n         * Enables the control. This means the control will be included in validation checks and\n         * the aggregate value of its parent. Its status is re-calculated based on its value and\n         * its validators.\n         *\n         * If the control has children, all children will be enabled.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.enable = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._status = VALID;\n            this._forEachChild(function (control) { control.enable({ onlySelf: true }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n            this._updateAncestors(onlySelf);\n            this._onDisabledChange.forEach(function (changeFn) { return changeFn(false); });\n        };\n        /**\n         * @param {?} onlySelf\n         * @return {?}\n         */\n        AbstractControl.prototype._updateAncestors = function (onlySelf) {\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity();\n                this._parent._updatePristine();\n                this._parent._updateTouched();\n            }\n        };\n        /**\n         * @param {?} parent\n         * @return {?}\n         */\n        AbstractControl.prototype.setParent = function (parent) { this._parent = parent; };\n        /**\n         * Sets the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.setValue = function (value, options) { };\n        /**\n         * Patches the value of the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.patchValue = function (value, options) { };\n        /**\n         * Resets the control. Abstract method (implemented in sub-classes).\n         * @abstract\n         * @param {?=} value\n         * @param {?=} options\n         * @return {?}\n         */\n        AbstractControl.prototype.reset = function (value, options) { };\n        /**\n         * Re-calculates the value and validation status of the control.\n         *\n         * By default, it will also update the value and validity of its ancestors.\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype.updateValueAndValidity = function (_a) {\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._setInitialStatus();\n            this._updateValue();\n            if (this.enabled) {\n                this._errors = this._runValidator();\n                this._status = this._calculateStatus();\n                if (this._status === VALID || this._status === PENDING) {\n                    this._runAsyncValidator(emitEvent);\n                }\n            }\n            if (emitEvent !== false) {\n                this._valueChanges.emit(this._value);\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent && !onlySelf) {\n                this._parent.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTreeValidity = function (_a) {\n            var emitEvent = (_a === void 0 ? { emitEvent: true } : _a).emitEvent;\n            this._forEachChild(function (ctrl) { return ctrl._updateTreeValidity({ emitEvent: emitEvent }); });\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: emitEvent });\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._setInitialStatus = function () { this._status = this._allControlsDisabled() ? DISABLED : VALID; };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._runValidator = function () {\n            return this.validator ? this.validator(this) : null;\n        };\n        /**\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._runAsyncValidator = function (emitEvent) {\n            var _this = this;\n            if (this.asyncValidator) {\n                this._status = PENDING;\n                this._cancelExistingSubscription();\n                var /** @type {?} */ obs = toObservable(this.asyncValidator(this));\n                if (!(isObservable(obs))) {\n                    throw new Error(\"expected the following validator to return Promise or Observable: \" + this.asyncValidator + \". If you are using FormBuilder; did you forget to brace your validators in an array?\");\n                }\n                this._asyncValidationSubscription =\n                    obs.subscribe({ next: function (res) { return _this.setErrors(res, { emitEvent: emitEvent }); } });\n            }\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._cancelExistingSubscription = function () {\n            if (this._asyncValidationSubscription) {\n                this._asyncValidationSubscription.unsubscribe();\n            }\n        };\n        /**\n         * Sets errors on a form control.\n         *\n         * This is used when validations are run manually by the user, rather than automatically.\n         *\n         * Calling `setErrors` will also update the validity of the parent control.\n         *\n         * ### Example\n         *\n         * ```\n         * const login = new FormControl(\"someLogin\");\n         * login.setErrors({\n         *   \"notUnique\": true\n         * });\n         *\n         * expect(login.valid).toEqual(false);\n         * expect(login.errors).toEqual({\"notUnique\": true});\n         *\n         * login.setValue(\"someOtherLogin\");\n         *\n         * expect(login.valid).toEqual(true);\n         * ```\n         * @param {?} errors\n         * @param {?=} __1\n         * @return {?}\n         */\n        AbstractControl.prototype.setErrors = function (errors, _a) {\n            var emitEvent = (_a === void 0 ? {} : _a).emitEvent;\n            this._errors = errors;\n            this._updateControlsErrors(emitEvent !== false);\n        };\n        /**\n         * Retrieves a child control given the control's name or path.\n         *\n         * Paths can be passed in as an array or a string delimited by a dot.\n         *\n         * To get a control nested within a `person` sub-group:\n         *\n         * * `this.form.get('person.name');`\n         *\n         * -OR-\n         *\n         * * `this.form.get(['person', 'name']);`\n         * @param {?} path\n         * @return {?}\n         */\n        AbstractControl.prototype.get = function (path) { return _find(this, path, '.'); };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns null or undefined.\n         *\n         * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.getError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            var /** @type {?} */ control = path ? this.get(path) : this;\n            return control && control._errors ? control._errors[errorCode] : null;\n        };\n        /**\n         * Returns true if the control with the given path has the error specified. Otherwise\n         * returns false.\n         *\n         * If no path is given, it checks for the error on the present control.\n         * @param {?} errorCode\n         * @param {?=} path\n         * @return {?}\n         */\n        AbstractControl.prototype.hasError = function (errorCode, path) {\n            if (path === void 0) { path = null; }\n            return !!this.getError(errorCode, path);\n        };\n        Object.defineProperty(AbstractControl.prototype, \"root\", {\n            /**\n             * Retrieves the top-level ancestor of this control.\n             * @return {?}\n             */\n            get: function () {\n                var /** @type {?} */ x = this;\n                while (x._parent) {\n                    x = x._parent;\n                }\n                return x;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * \\@internal\n         * @param {?} emitEvent\n         * @return {?}\n         */\n        AbstractControl.prototype._updateControlsErrors = function (emitEvent) {\n            this._status = this._calculateStatus();\n            if (emitEvent) {\n                this._statusChanges.emit(this._status);\n            }\n            if (this._parent) {\n                this._parent._updateControlsErrors(emitEvent);\n            }\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        AbstractControl.prototype._initObservables = function () {\n            this._valueChanges = new EventEmitter();\n            this._statusChanges = new EventEmitter();\n        };\n        /**\n         * @return {?}\n         */\n        AbstractControl.prototype._calculateStatus = function () {\n            if (this._allControlsDisabled())\n                return DISABLED;\n            if (this._errors)\n                return INVALID;\n            if (this._anyControlsHaveStatus(PENDING))\n                return PENDING;\n            if (this._anyControlsHaveStatus(INVALID))\n                return INVALID;\n            return VALID;\n        };\n        /**\n         * \\@internal\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._updateValue = function () { };\n        /**\n         * \\@internal\n         * @abstract\n         * @param {?} cb\n         * @return {?}\n         */\n        AbstractControl.prototype._forEachChild = function (cb) { };\n        /**\n         * \\@internal\n         * @abstract\n         * @param {?} condition\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControls = function (condition) { };\n        /**\n         * \\@internal\n         * @abstract\n         * @return {?}\n         */\n        AbstractControl.prototype._allControlsDisabled = function () { };\n        /**\n         * \\@internal\n         * @param {?} status\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsHaveStatus = function (status) {\n            return this._anyControls(function (control) { return control.status === status; });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsDirty = function () {\n            return this._anyControls(function (control) { return control.dirty; });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        AbstractControl.prototype._anyControlsTouched = function () {\n            return this._anyControls(function (control) { return control.touched; });\n        };\n        /**\n         * \\@internal\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updatePristine = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._pristine = !this._anyControlsDirty();\n            if (this._parent && !onlySelf) {\n                this._parent._updatePristine({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?=} __0\n         * @return {?}\n         */\n        AbstractControl.prototype._updateTouched = function (_a) {\n            var onlySelf = (_a === void 0 ? {} : _a).onlySelf;\n            this._touched = this._anyControlsTouched();\n            if (this._parent && !onlySelf) {\n                this._parent._updateTouched({ onlySelf: onlySelf });\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} formState\n         * @return {?}\n         */\n        AbstractControl.prototype._isBoxedValue = function (formState) {\n            return typeof formState === 'object' && formState !== null &&\n                Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n        };\n        /**\n         * \\@internal\n         * @param {?} fn\n         * @return {?}\n         */\n        AbstractControl.prototype._registerOnCollectionChange = function (fn) { this._onCollectionChange = fn; };\n        return AbstractControl;\n    }());\n    /**\n     * \\@whatItDoes Tracks the value and validation status of an individual form control.\n     *\n     * It is one of the three fundamental building blocks of Angular forms, along with\n     * {\\@link FormGroup} and {\\@link FormArray}.\n     *\n     * \\@howToUse\n     *\n     * When instantiating a {\\@link FormControl}, you can pass in an initial value as the\n     * first argument. Example:\n     *\n     * ```ts\n     * const ctrl = new FormControl('some value');\n     * console.log(ctrl.value);     // 'some value'\n     * ```\n     *\n     * You can also initialize the control with a form state object on instantiation,\n     * which includes both the value and whether or not the control is disabled.\n     * You can't use the value key without the disabled key; both are required\n     * to use this way of initialization.\n     *\n     * ```ts\n     * const ctrl = new FormControl({value: 'n/a', disabled: true});\n     * console.log(ctrl.value);     // 'n/a'\n     * console.log(ctrl.status);   // 'DISABLED'\n     * ```\n     *\n     * To include a sync validator (or an array of sync validators) with the control,\n     * pass it in as the second argument. Async validators are also supported, but\n     * have to be passed in separately as the third arg.\n     *\n     * ```ts\n     * const ctrl = new FormControl('', Validators.required);\n     * console.log(ctrl.value);     // ''\n     * console.log(ctrl.status);   // 'INVALID'\n     * ```\n     *\n     * See its superclass, {\\@link AbstractControl}, for more properties and methods.\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * \\@stable\n     */\n    var FormControl = (function (_super) {\n        __extends$6(FormControl, _super);\n        /**\n         * @param {?=} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormControl(formState, validator, asyncValidator) {\n            if (formState === void 0) { formState = null; }\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, coerceToValidator(validator), coerceToAsyncValidator(asyncValidator));\n            /** @internal */\n            this._onChange = [];\n            this._applyFormState(formState);\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n            this._initObservables();\n        }\n        /**\n         * Set the value of the form control to `value`.\n         *\n         * If `onlySelf` is `true`, this change will only affect the validation of this `FormControl`\n         * and not its parent component. This defaults to false.\n         *\n         * If `emitEvent` is `true`, this\n         * change will cause a `valueChanges` event on the `FormControl` to be emitted. This defaults\n         * to true (as it falls through to `updateValueAndValidity`).\n         *\n         * If `emitModelToViewChange` is `true`, the view will be notified about the new value\n         * via an `onChange` event. This is the default behavior if `emitModelToViewChange` is not\n         * specified.\n         *\n         * If `emitViewToModelChange` is `true`, an ngModelChange event will be fired to update the\n         * model.  This is the default behavior if `emitViewToModelChange` is not specified.\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent, emitModelToViewChange = _b.emitModelToViewChange, emitViewToModelChange = _b.emitViewToModelChange;\n            this._value = value;\n            if (this._onChange.length && emitModelToViewChange !== false) {\n                this._onChange.forEach(function (changeFn) { return changeFn(_this._value, emitViewToModelChange !== false); });\n            }\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Patches the value of a control.\n         *\n         * This function is functionally the same as {\\@link FormControl.setValue} at this level.\n         * It exists for symmetry with {\\@link FormGroup.patchValue} on `FormGroups` and `FormArrays`,\n         * where it does behave differently.\n         * @param {?} value\n         * @param {?=} options\n         * @return {?}\n         */\n        FormControl.prototype.patchValue = function (value, options) {\n            if (options === void 0) { options = {}; }\n            this.setValue(value, options);\n        };\n        /**\n         * Resets the form control. This means by default:\n         *\n         * * it is marked as `pristine`\n         * * it is marked as `untouched`\n         * * value is set to null\n         *\n         * You can also reset to a specific form state by passing through a standalone\n         * value or a form state object that contains both a value and a disabled state\n         * (these are the only two properties that cannot be calculated).\n         *\n         * Ex:\n         *\n         * ```ts\n         * this.control.reset('Nancy');\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * ```\n         *\n         * OR\n         *\n         * ```\n         * this.control.reset({value: 'Nancy', disabled: true});\n         *\n         * console.log(this.control.value);  // 'Nancy'\n         * console.log(this.control.status);  // 'DISABLED'\n         * ```\n         * @param {?=} formState\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormControl.prototype.reset = function (formState, _a) {\n            if (formState === void 0) { formState = null; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._applyFormState(formState);\n            this.markAsPristine({ onlySelf: onlySelf });\n            this.markAsUntouched({ onlySelf: onlySelf });\n            this.setValue(this._value, { onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormControl.prototype._updateValue = function () { };\n        /**\n         * \\@internal\n         * @param {?} condition\n         * @return {?}\n         */\n        FormControl.prototype._anyControls = function (condition) { return false; };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormControl.prototype._allControlsDisabled = function () { return this.disabled; };\n        /**\n         * Register a listener for change events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnChange = function (fn) { this._onChange.push(fn); };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormControl.prototype._clearChangeFns = function () {\n            this._onChange = [];\n            this._onDisabledChange = [];\n            this._onCollectionChange = function () { };\n        };\n        /**\n         * Register a listener for disabled events.\n         * @param {?} fn\n         * @return {?}\n         */\n        FormControl.prototype.registerOnDisabledChange = function (fn) {\n            this._onDisabledChange.push(fn);\n        };\n        /**\n         * \\@internal\n         * @param {?} cb\n         * @return {?}\n         */\n        FormControl.prototype._forEachChild = function (cb) { };\n        /**\n         * @param {?} formState\n         * @return {?}\n         */\n        FormControl.prototype._applyFormState = function (formState) {\n            if (this._isBoxedValue(formState)) {\n                this._value = formState.value;\n                formState.disabled ? this.disable({ onlySelf: true, emitEvent: false }) :\n                    this.enable({ onlySelf: true, emitEvent: false });\n            }\n            else {\n                this._value = formState;\n            }\n        };\n        return FormControl;\n    }(AbstractControl));\n    /**\n     * \\@whatItDoes Tracks the value and validity state of a group of {\\@link FormControl}\n     * instances.\n     *\n     * A `FormGroup` aggregates the values of each child {\\@link FormControl} into one object,\n     * with each control name as the key.  It calculates its status by reducing the statuses\n     * of its children. For example, if one of the controls in a group is invalid, the entire\n     * group becomes invalid.\n     *\n     * `FormGroup` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {\\@link FormControl} and {\\@link FormArray}.\n     *\n     * \\@howToUse\n     *\n     * When instantiating a {\\@link FormGroup}, pass in a collection of child controls as the first\n     * argument. The key for each child will be the name under which it is registered.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   first: new FormControl('Nancy', Validators.minLength(2)),\n     *   last: new FormControl('Drew'),\n     * });\n     *\n     * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n     * console.log(form.status);  // 'VALID'\n     * ```\n     *\n     * You can also include group-level validators as the second arg, or group-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Example\n     *\n     * ```\n     * const form = new FormGroup({\n     *   password: new FormControl('', Validators.minLength(2)),\n     *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n     * }, passwordMatchValidator);\n     *\n     *\n     * function passwordMatchValidator(g: FormGroup) {\n     *    return g.get('password').value === g.get('passwordConfirm').value\n     *       ? null : {'mismatch': true};\n     * }\n     * ```\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * \\@stable\n     */\n    var FormGroup = (function (_super) {\n        __extends$6(FormGroup, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormGroup(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Registers a control with the group's list of controls.\n         *\n         * This method does not update value or validity of the control, so for\n         * most cases you'll want to use {\\@link FormGroup.addControl} instead.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.registerControl = function (name, control) {\n            if (this.controls[name])\n                return this.controls[name];\n            this.controls[name] = control;\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n            return control;\n        };\n        /**\n         * Add a control to this group.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.addControl = function (name, control) {\n            this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove a control from this group.\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype.removeControl = function (name) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         * @param {?} name\n         * @param {?} control\n         * @return {?}\n         */\n        FormGroup.prototype.setControl = function (name, control) {\n            if (this.controls[name])\n                this.controls[name]._registerOnCollectionChange(function () { });\n            delete (this.controls[name]);\n            if (control)\n                this.registerControl(name, control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Check whether there is an enabled control with the given name in the group.\n         *\n         * It will return false for disabled controls. If you'd like to check for\n         * existence in the group only, use {\\@link AbstractControl.get} instead.\n         * @param {?} controlName\n         * @return {?}\n         */\n        FormGroup.prototype.contains = function (controlName) {\n            return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n        };\n        /**\n         *  Sets the value of the {\\@link FormGroup}. It accepts an object that matches\n         *  the structure of the group, with control names as keys.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.setValue({first: 'Nancy', last: 'Drew'});\n         *  console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n         *\n         *  ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            Object.keys(value).forEach(function (name) {\n                _this._throwIfControlMissing(name);\n                _this.controls[name].setValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {\\@link FormGroup}. It accepts an object with control\n         *  names as keys, and will do its best to match the values to the correct controls\n         *  in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the group without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const form = new FormGroup({\n         *     first: new FormControl(),\n         *     last: new FormControl()\n         *  });\n         *  console.log(form.value);   // {first: null, last: null}\n         *\n         *  form.patchValue({first: 'Nancy'});\n         *  console.log(form.value);   // {first: 'Nancy', last: null}\n         *\n         *  ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            Object.keys(value).forEach(function (name) {\n                if (_this.controls[name]) {\n                    _this.controls[name].patchValue(value[name], { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {\\@link FormGroup}. This means by default:\n         *\n         * * The group and all descendants are marked `pristine`\n         * * The group and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in a map of states\n         * that matches the structure of your form, with control names as keys. The state\n         * can be a standalone value or a form state object with both a value and a disabled\n         * status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.form.reset({first: 'name', last: 'last name'});\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.form.reset({\n         *   first: {value: 'name', disabled: true},\n         *   last: 'last'\n         * });\n         *\n         * console.log(this.form.value);  // {first: 'name', last: 'last name'}\n         * console.log(this.form.get('first').status);  // 'DISABLED'\n         * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormGroup.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = {}; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, name) {\n                control.reset(value[name], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the {\\@link FormGroup}, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the group.\n         * @return {?}\n         */\n        FormGroup.prototype.getRawValue = function () {\n            return this._reduceChildren({}, function (acc, control, name) {\n                acc[name] = control instanceof FormControl ? control.value : ((control)).getRawValue();\n                return acc;\n            });\n        };\n        /**\n         * \\@internal\n         * @param {?} name\n         * @return {?}\n         */\n        FormGroup.prototype._throwIfControlMissing = function (name) {\n            if (!Object.keys(this.controls).length) {\n                throw new Error(\"\\n        There are no form controls registered with this group yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.controls[name]) {\n                throw new Error(\"Cannot find form control with name: \" + name + \".\");\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} cb\n         * @return {?}\n         */\n        FormGroup.prototype._forEachChild = function (cb) {\n            var _this = this;\n            Object.keys(this.controls).forEach(function (k) { return cb(_this.controls[k], k); });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroup.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) {\n                control.setParent(_this);\n                control._registerOnCollectionChange(_this._onCollectionChange);\n            });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroup.prototype._updateValue = function () { this._value = this._reduceValue(); };\n        /**\n         * \\@internal\n         * @param {?} condition\n         * @return {?}\n         */\n        FormGroup.prototype._anyControls = function (condition) {\n            var _this = this;\n            var /** @type {?} */ res = false;\n            this._forEachChild(function (control, name) {\n                res = res || (_this.contains(name) && condition(control));\n            });\n            return res;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroup.prototype._reduceValue = function () {\n            var _this = this;\n            return this._reduceChildren({}, function (acc, control, name) {\n                if (control.enabled || _this.disabled) {\n                    acc[name] = control.value;\n                }\n                return acc;\n            });\n        };\n        /**\n         * \\@internal\n         * @param {?} initValue\n         * @param {?} fn\n         * @return {?}\n         */\n        FormGroup.prototype._reduceChildren = function (initValue, fn) {\n            var /** @type {?} */ res = initValue;\n            this._forEachChild(function (control, name) { res = fn(res, control, name); });\n            return res;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroup.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = Object.keys(this.controls); _i < _a.length; _i++) {\n                var controlName = _a[_i];\n                if (this.controls[controlName].enabled) {\n                    return false;\n                }\n            }\n            return Object.keys(this.controls).length > 0 || this.disabled;\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroup.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, name) {\n                if (value[name] === undefined) {\n                    throw new Error(\"Must supply a value for form control with name: '\" + name + \"'.\");\n                }\n            });\n        };\n        return FormGroup;\n    }(AbstractControl));\n    /**\n     * \\@whatItDoes Tracks the value and validity state of an array of {\\@link FormControl},\n     * {\\@link FormGroup} or {\\@link FormArray} instances.\n     *\n     * A `FormArray` aggregates the values of each child {\\@link FormControl} into an array.\n     * It calculates its status by reducing the statuses of its children. For example, if one of\n     * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n     *\n     * `FormArray` is one of the three fundamental building blocks used to define forms in Angular,\n     * along with {\\@link FormControl} and {\\@link FormGroup}.\n     *\n     * \\@howToUse\n     *\n     * When instantiating a {\\@link FormArray}, pass in an array of child controls as the first\n     * argument.\n     *\n     * ### Example\n     *\n     * ```\n     * const arr = new FormArray([\n     *   new FormControl('Nancy', Validators.minLength(2)),\n     *   new FormControl('Drew'),\n     * ]);\n     *\n     * console.log(arr.value);   // ['Nancy', 'Drew']\n     * console.log(arr.status);  // 'VALID'\n     * ```\n     *\n     * You can also include array-level validators as the second arg, or array-level async\n     * validators as the third arg. These come in handy when you want to perform validation\n     * that considers the value of more than one child control.\n     *\n     * ### Adding or removing controls\n     *\n     * To change the controls in the array, use the `push`, `insert`, or `removeAt` methods\n     * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n     * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n     * the `FormArray` directly, as that will result in strange and unexpected behavior such\n     * as broken change detection.\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * \\@stable\n     */\n    var FormArray = (function (_super) {\n        __extends$6(FormArray, _super);\n        /**\n         * @param {?} controls\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         */\n        function FormArray(controls, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            _super.call(this, validator, asyncValidator);\n            this.controls = controls;\n            this._initObservables();\n            this._setUpControls();\n            this.updateValueAndValidity({ onlySelf: true, emitEvent: false });\n        }\n        /**\n         * Get the {\\@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.at = function (index) { return this.controls[index]; };\n        /**\n         * Insert a new {\\@link AbstractControl} at the end of the array.\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.push = function (control) {\n            this.controls.push(control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Insert a new {\\@link AbstractControl} at the given `index` in the array.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.insert = function (index, control) {\n            this.controls.splice(index, 0, control);\n            this._registerControl(control);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Remove the control at the given `index` in the array.\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype.removeAt = function (index) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        /**\n         * Replace an existing control.\n         * @param {?} index\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype.setControl = function (index, control) {\n            if (this.controls[index])\n                this.controls[index]._registerOnCollectionChange(function () { });\n            this.controls.splice(index, 1);\n            if (control) {\n                this.controls.splice(index, 0, control);\n                this._registerControl(control);\n            }\n            this.updateValueAndValidity();\n            this._onCollectionChange();\n        };\n        Object.defineProperty(FormArray.prototype, \"length\", {\n            /**\n             * Length of the control array.\n             * @return {?}\n             */\n            get: function () { return this.controls.length; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         *  Sets the value of the {\\@link FormArray}. It accepts an array that matches\n         *  the structure of the control.\n         *\n         * This method performs strict checks, so it will throw an error if you try\n         * to set the value of a control that doesn't exist or if you exclude the\n         * value of a control.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.setValue(['Nancy', 'Drew']);\n         *  console.log(arr.value);   // ['Nancy', 'Drew']\n         *  ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.setValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._checkAllValuesPresent(value);\n            value.forEach(function (newValue, index) {\n                _this._throwIfControlMissing(index);\n                _this.at(index).setValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         *  Patches the value of the {\\@link FormArray}. It accepts an array that matches the\n         *  structure of the control, and will do its best to match the values to the correct\n         *  controls in the group.\n         *\n         *  It accepts both super-sets and sub-sets of the array without throwing an error.\n         *\n         *  ### Example\n         *\n         *  ```\n         *  const arr = new FormArray([\n         *     new FormControl(),\n         *     new FormControl()\n         *  ]);\n         *  console.log(arr.value);   // [null, null]\n         *\n         *  arr.patchValue(['Nancy']);\n         *  console.log(arr.value);   // ['Nancy', null]\n         *  ```\n         * @param {?} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.patchValue = function (value, _a) {\n            var _this = this;\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            value.forEach(function (newValue, index) {\n                if (_this.at(index)) {\n                    _this.at(index).patchValue(newValue, { onlySelf: true, emitEvent: emitEvent });\n                }\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n        };\n        /**\n         * Resets the {\\@link FormArray}. This means by default:\n         *\n         * * The array and all descendants are marked `pristine`\n         * * The array and all descendants are marked `untouched`\n         * * The value of all descendants will be null or null maps\n         *\n         * You can also reset to a specific form state by passing in an array of states\n         * that matches the structure of the control. The state can be a standalone value\n         * or a form state object with both a value and a disabled status.\n         *\n         * ### Example\n         *\n         * ```ts\n         * this.arr.reset(['name', 'last name']);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * ```\n         *\n         * - OR -\n         *\n         * ```\n         * this.arr.reset([\n         *   {value: 'name', disabled: true},\n         *   'last'\n         * ]);\n         *\n         * console.log(this.arr.value);  // ['name', 'last name']\n         * console.log(this.arr.get(0).status);  // 'DISABLED'\n         * ```\n         * @param {?=} value\n         * @param {?=} __1\n         * @return {?}\n         */\n        FormArray.prototype.reset = function (value, _a) {\n            if (value === void 0) { value = []; }\n            var _b = _a === void 0 ? {} : _a, onlySelf = _b.onlySelf, emitEvent = _b.emitEvent;\n            this._forEachChild(function (control, index) {\n                control.reset(value[index], { onlySelf: true, emitEvent: emitEvent });\n            });\n            this.updateValueAndValidity({ onlySelf: onlySelf, emitEvent: emitEvent });\n            this._updatePristine({ onlySelf: onlySelf });\n            this._updateTouched({ onlySelf: onlySelf });\n        };\n        /**\n         * The aggregate value of the array, including any disabled controls.\n         *\n         * If you'd like to include all values regardless of disabled status, use this method.\n         * Otherwise, the `value` property is the best way to get the value of the array.\n         * @return {?}\n         */\n        FormArray.prototype.getRawValue = function () {\n            return this.controls.map(function (control) {\n                return control instanceof FormControl ? control.value : ((control)).getRawValue();\n            });\n        };\n        /**\n         * \\@internal\n         * @param {?} index\n         * @return {?}\n         */\n        FormArray.prototype._throwIfControlMissing = function (index) {\n            if (!this.controls.length) {\n                throw new Error(\"\\n        There are no form controls registered with this array yet.  If you're using ngModel,\\n        you may want to check next tick (e.g. use setTimeout).\\n      \");\n            }\n            if (!this.at(index)) {\n                throw new Error(\"Cannot find form control at index \" + index);\n            }\n        };\n        /**\n         * \\@internal\n         * @param {?} cb\n         * @return {?}\n         */\n        FormArray.prototype._forEachChild = function (cb) {\n            this.controls.forEach(function (control, index) { cb(control, index); });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormArray.prototype._updateValue = function () {\n            var _this = this;\n            this._value = this.controls.filter(function (control) { return control.enabled || _this.disabled; })\n                .map(function (control) { return control.value; });\n        };\n        /**\n         * \\@internal\n         * @param {?} condition\n         * @return {?}\n         */\n        FormArray.prototype._anyControls = function (condition) {\n            return this.controls.some(function (control) { return control.enabled && condition(control); });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormArray.prototype._setUpControls = function () {\n            var _this = this;\n            this._forEachChild(function (control) { return _this._registerControl(control); });\n        };\n        /**\n         * \\@internal\n         * @param {?} value\n         * @return {?}\n         */\n        FormArray.prototype._checkAllValuesPresent = function (value) {\n            this._forEachChild(function (control, i) {\n                if (value[i] === undefined) {\n                    throw new Error(\"Must supply a value for form control at index: \" + i + \".\");\n                }\n            });\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormArray.prototype._allControlsDisabled = function () {\n            for (var _i = 0, _a = this.controls; _i < _a.length; _i++) {\n                var control = _a[_i];\n                if (control.enabled)\n                    return false;\n            }\n            return this.controls.length > 0 || this.disabled;\n        };\n        /**\n         * @param {?} control\n         * @return {?}\n         */\n        FormArray.prototype._registerControl = function (control) {\n            control.setParent(this);\n            control._registerOnCollectionChange(this._onCollectionChange);\n        };\n        return FormArray;\n    }(AbstractControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$4 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgForm; })\n    };\n    var /** @type {?} */ resolvedPromise = Promise.resolve(null);\n    /**\n     * \\@whatItDoes Creates a top-level {\\@link FormGroup} instance and binds it to a form\n     * to track aggregate form value and validation status.\n     *\n     * \\@howToUse\n     *\n     * As soon as you import the `FormsModule`, this directive becomes active by default on\n     * all `<form>` tags.  You don't need to add a special selector.\n     *\n     * You can export the directive into a local template variable using `ngForm` as the key\n     * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n     * {\\@link FormGroup} instance are duplicated on the directive itself, so a reference to it\n     * will give you access to the aggregate value and validity status of the form, as well as\n     * user interaction properties like `dirty` and `touched`.\n     *\n     * To register child controls with the form, you'll want to use {\\@link NgModel} with a\n     * `name` attribute.  You can also use {\\@link NgModelGroup} if you'd like to create\n     * sub-groups within the form.\n     *\n     * You can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     *  \\@stable\n     */\n    var NgForm = (function (_super) {\n        __extends$4(NgForm, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgForm(validators, asyncValidators) {\n            _super.call(this);\n            this._submitted = false;\n            this.ngSubmit = new EventEmitter();\n            this.form =\n                new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n        }\n        Object.defineProperty(NgForm.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgForm.prototype, \"controls\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form.controls; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                dir._control = (container.registerControl(dir.name, dir.control));\n                setUpControl(dir.control, dir);\n                dir.control.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeControl = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.addFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                var /** @type {?} */ group = new FormGroup({});\n                setUpFormContainer(group, dir);\n                container.registerControl(dir.name, group);\n                group.updateValueAndValidity({ emitEvent: false });\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.removeFormGroup = function (dir) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ container = _this._findContainer(dir.path);\n                if (container) {\n                    container.removeControl(dir.name);\n                }\n            });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        NgForm.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.updateModel = function (dir, value) {\n            var _this = this;\n            resolvedPromise.then(function () {\n                var /** @type {?} */ ctrl = (_this.form.get(dir.path));\n                ctrl.setValue(value);\n            });\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgForm.prototype.setValue = function (value) { this.control.setValue(value); };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        NgForm.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        NgForm.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        NgForm.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * \\@internal\n         * @param {?} path\n         * @return {?}\n         */\n        NgForm.prototype._findContainer = function (path) {\n            path.pop();\n            return path.length ? (this.form.get(path)) : this.form;\n        };\n        NgForm.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'form:not([ngNoForm]):not([formGroup]),ngForm,[ngForm]',\n                        providers: [formDirectiveProvider],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        outputs: ['ngSubmit'],\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgForm.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        return NgForm;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var /** @type {?} */ Examples = {\n        formControlName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <input formControlName=\\\"firstName\\\">\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       firstName: new FormControl()\\n    });\",\n        formGroupName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <div formGroupName=\\\"person\\\">\\n          <input formControlName=\\\"firstName\\\">\\n       </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.myGroup = new FormGroup({\\n       person: new FormGroup({ firstName: new FormControl() })\\n    });\",\n        formArrayName: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n      <div formArrayName=\\\"cities\\\">\\n        <div *ngFor=\\\"let city of cityArray.controls; let i=index\\\">\\n          <input [formControlName]=\\\"i\\\">\\n        </div>\\n      </div>\\n    </div>\\n\\n    In your class:\\n\\n    this.cityArray = new FormArray([new FormControl('SF')]);\\n    this.myGroup = new FormGroup({\\n      cities: this.cityArray\\n    });\",\n        ngModelGroup: \"\\n    <form>\\n       <div ngModelGroup=\\\"person\\\">\\n          <input [(ngModel)]=\\\"person.name\\\" name=\\\"firstName\\\">\\n       </div>\\n    </form>\",\n        ngModelWithFormGroup: \"\\n    <div [formGroup]=\\\"myGroup\\\">\\n       <input formControlName=\\\"firstName\\\">\\n       <input [(ngModel)]=\\\"showMoreControls\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\\n    </div>\\n  \"\n    };\n\n    var TemplateDrivenErrors = (function () {\n        function TemplateDrivenErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelParentException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\\n      formGroup's partner directive \\\"formControlName\\\" instead.  Example:\\n\\n      \" + Examples.formControlName + \"\\n\\n      Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\\n\\n      Example:\\n\\n      \" + Examples.ngModelWithFormGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.formGroupNameException = function () {\n            throw new Error(\"\\n      ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\\n\\n      Option 1: Use formControlName instead of ngModel (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.missingNameException = function () {\n            throw new Error(\"If ngModel is used within a form tag, either the name attribute must be set or the form\\n      control must be defined as 'standalone' in ngModelOptions.\\n\\n      Example 1: <input [(ngModel)]=\\\"person.firstName\\\" name=\\\"first\\\">\\n      Example 2: <input [(ngModel)]=\\\"person.firstName\\\" [ngModelOptions]=\\\"{standalone: true}\\\">\");\n        };\n        /**\n         * @return {?}\n         */\n        TemplateDrivenErrors.modelGroupParentException = function () {\n            throw new Error(\"\\n      ngModelGroup cannot be used with a parent formGroup directive.\\n\\n      Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\\n\\n      \" + Examples.formGroupName + \"\\n\\n      Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\\n\\n      \" + Examples.ngModelGroup);\n        };\n        return TemplateDrivenErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$8 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ modelGroupProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return NgModelGroup; })\n    };\n    /**\n     * \\@whatItDoes Creates and binds a {\\@link FormGroup} instance to a DOM element.\n     *\n     * \\@howToUse\n     *\n     * This directive can only be used as a child of {\\@link NgForm} (or in other words,\n     * within `<form>` tags).\n     *\n     * Use this directive if you'd like to create a sub-group within a form. This can\n     * come in handy if you want to validate a sub-group of your form separately from\n     * the rest of your form, or if some values in your domain model make more sense to\n     * consume together in a nested object.\n     *\n     * Pass in the name you'd like this sub-group to have and it will become the key\n     * for the sub-group in the form's full value. You can also export the directive into\n     * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n     *\n     * {\\@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * * **NgModule**: `FormsModule`\n     *\n     * \\@stable\n     */\n    var NgModelGroup = (function (_super) {\n        __extends$8(NgModelGroup, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function NgModelGroup(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        NgModelGroup.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelGroupParentException();\n            }\n        };\n        NgModelGroup.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[ngModelGroup]', providers: [modelGroupProvider], exportAs: 'ngModelGroup' },] },\n        ];\n        /** @nocollapse */\n        NgModelGroup.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        NgModelGroup.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['ngModelGroup',] },],\n        };\n        return NgModelGroup;\n    }(AbstractFormGroupDirective));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$7 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return NgModel; })\n    };\n    /**\n     * `ngModel` forces an additional change detection run when its inputs change:\n     * E.g.:\n     * ```\n     * <div>{{myModel.valid}}</div>\n     * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n     * ```\n     * I.e. `ngModel` can export itself on the element and then be used in the template.\n     * Normally, this would result in expressions before the `input` that use the exported directive\n     * to have and old value as they have been\n     * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n     * detection run.\n     *\n     * Notes:\n     * - this is just one extra run no matter how many `ngModel` have been changed.\n     * - this is a general problem when using `exportAs` for directives!\n     */\n    var /** @type {?} */ resolvedPromise$1 = Promise.resolve(null);\n    /**\n     * \\@whatItDoes Creates a {\\@link FormControl} instance from a domain model and binds it\n     * to a form control element.\n     *\n     * The {\\@link FormControl} instance will track the value, user interaction, and\n     * validation status of the control and keep the view synced with the model. If used\n     * within a parent form, the directive will also register itself with the form as a child\n     * control.\n     *\n     * \\@howToUse\n     *\n     * This directive can be used by itself or as part of a larger form. All you need is the\n     * `ngModel` selector to activate it.\n     *\n     * It accepts a domain model as an optional {\\@link \\@Input}. If you have a one-way binding\n     * to `ngModel` with `[]` syntax, changing the value of the domain model in the component\n     * class will set the value in the view. If you have a two-way binding with `[()]` syntax\n     * (also known as 'banana-box syntax'), the value in the UI will always be synced back to\n     * the domain model in your class as well.\n     *\n     * If you wish to inspect the properties of the associated {\\@link FormControl} (like\n     * validity state), you can also export the directive into a local template variable using\n     * `ngModel` as the key (ex: `#myVar=\"ngModel\"`). You can then access the control using the\n     * directive's `control` property, but most properties you'll need (like `valid` and `dirty`)\n     * will fall through to the control anyway, so you can access them directly. You can see a\n     * full list of properties directly available in {\\@link AbstractControlDirective}.\n     *\n     * The following is an example of a simple standalone control using `ngModel`:\n     *\n     * {\\@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n     *\n     * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n     * so that the control can be registered with the parent form under that name.\n     *\n     * It's worth noting that in the context of a parent form, you often can skip one-way or\n     * two-way binding because the parent form will sync the value for you. You can access\n     * its properties by exporting it into a local template variable using `ngForm` (ex:\n     * `#f=\"ngForm\"`). Then you can pass it where it needs to go on submit.\n     *\n     * If you do need to populate initial values into your form, using a one-way binding for\n     * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n     * than the domain model's value on submit.\n     *\n     * Take a look at an example of using `ngModel` within a form:\n     *\n     * {\\@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n     *\n     * To see `ngModel` examples with different form control types, see:\n     *\n     * * Radio buttons: {\\@link RadioControlValueAccessor}\n     * * Selects: {\\@link SelectControlValueAccessor}\n     *\n     * **npm package**: `\\@angular/forms`\n     *\n     * **NgModule**: `FormsModule`\n     *\n     *  \\@stable\n     */\n    var NgModel = (function (_super) {\n        __extends$7(NgModel, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function NgModel(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            /** @internal */\n            this._control = new FormControl();\n            /** @internal */\n            this._registered = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype.ngOnChanges = function (changes) {\n            this._checkForErrors();\n            if (!this._registered)\n                this._setUpControl();\n            if ('isDisabled' in changes) {\n                this._updateDisabled(changes);\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this._updateValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype.ngOnDestroy = function () { this.formDirective && this.formDirective.removeControl(this); };\n        Object.defineProperty(NgModel.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? controlPath(this.name, this._parent) : [this.name];\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(NgModel.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        NgModel.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpControl = function () {\n            this._isStandalone() ? this._setUpStandalone() :\n                this.formDirective.addControl(this);\n            this._registered = true;\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._isStandalone = function () {\n            return !this._parent || (this.options && this.options.standalone);\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._setUpStandalone = function () {\n            setUpControl(this._control, this);\n            this._control.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkForErrors = function () {\n            if (!this._isStandalone()) {\n                this._checkParentType();\n            }\n            this._checkName();\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkParentType = function () {\n            if (!(this._parent instanceof NgModelGroup) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                TemplateDrivenErrors.formGroupNameException();\n            }\n            else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n                TemplateDrivenErrors.modelParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        NgModel.prototype._checkName = function () {\n            if (this.options && this.options.name)\n                this.name = this.options.name;\n            if (!this._isStandalone() && !this.name) {\n                TemplateDrivenErrors.missingNameException();\n            }\n        };\n        /**\n         * @param {?} value\n         * @return {?}\n         */\n        NgModel.prototype._updateValue = function (value) {\n            var _this = this;\n            resolvedPromise$1.then(function () { _this.control.setValue(value, { emitViewToModelChange: false }); });\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        NgModel.prototype._updateDisabled = function (changes) {\n            var _this = this;\n            var /** @type {?} */ disabledValue = changes['isDisabled'].currentValue;\n            var /** @type {?} */ isDisabled = disabledValue === '' || (disabledValue && disabledValue !== 'false');\n            resolvedPromise$1.then(function () {\n                if (isDisabled && !_this.control.disabled) {\n                    _this.control.disable();\n                }\n                else if (!isDisabled && _this.control.disabled) {\n                    _this.control.enable();\n                }\n            });\n        };\n        NgModel.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[ngModel]:not([formControlName]):not([formControl])',\n                        providers: [formControlBinding],\n                        exportAs: 'ngModel'\n                    },] },\n        ];\n        /** @nocollapse */\n        NgModel.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        NgModel.propDecorators = {\n            'name': [{ type: _angular_core.Input },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'options': [{ type: _angular_core.Input, args: ['ngModelOptions',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n        };\n        return NgModel;\n    }(NgControl));\n\n    var ReactiveErrors = (function () {\n        function ReactiveErrors() {\n        }\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.controlParentException = function () {\n            throw new Error(\"formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.ngModelGroupException = function () {\n            throw new Error(\"formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\\n       that also have a \\\"form\\\" prefix: formGroupName, formArrayName, or formGroup.\\n\\n       Option 1:  Update the parent to be formGroupName (reactive form strategy)\\n\\n        \" + Examples.formGroupName + \"\\n\\n        Option 2: Use ngModel instead of formControlName (template-driven strategy)\\n\\n        \" + Examples.ngModelGroup);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.missingFormException = function () {\n            throw new Error(\"formGroup expects a FormGroup instance. Please pass one in.\\n\\n       Example:\\n\\n       \" + Examples.formControlName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.groupParentException = function () {\n            throw new Error(\"formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n      directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n      Example:\\n\\n      \" + Examples.formGroupName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.arrayParentException = function () {\n            throw new Error(\"formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\\n       directive and pass it an existing FormGroup instance (you can create one in your class).\\n\\n        Example:\\n\\n        \" + Examples.formArrayName);\n        };\n        /**\n         * @return {?}\n         */\n        ReactiveErrors.disabledAttrWarning = function () {\n            console.warn(\"\\n      It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\\n      when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\\n      you. We recommend using this approach to avoid 'changed after checked' errors.\\n       \\n      Example: \\n      form = new FormGroup({\\n        first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\\n        last: new FormControl('Drew', Validators.required)\\n      });\\n    \");\n        };\n        return ReactiveErrors;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$9 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formControlBinding$1 = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlDirective; })\n    };\n    /**\n     * \\@whatItDoes Syncs a standalone {\\@link FormControl} instance to a form control element.\n     *\n     * In other words, this directive ensures that any values written to the {\\@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {\\@link FormControl} instance (view -> model).\n     *\n     * \\@howToUse\n     *\n     * Use this directive if you'd like to create and manage a {\\@link FormControl} instance directly.\n     * Simply create a {\\@link FormControl}, save it to your component class, and pass it into the\n     * {\\@link FormControlDirective}.\n     *\n     * This directive is designed to be used as a standalone control.  Unlike {\\@link FormControlName},\n     * it does not require that your {\\@link FormControl} instance be part of any parent\n     * {\\@link FormGroup}, and it won't be registered to any {\\@link FormGroupDirective} that\n     * exists above it.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {\\@link FormControl} instance. See a full list of available properties in\n     * {\\@link AbstractControl}.\n     *\n     * **Set the value**: You can pass in an initial value when instantiating the {\\@link FormControl},\n     * or you can set it programmatically later using {\\@link AbstractControl.setValue} or\n     * {\\@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {\\@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     *  \\@stable\n     */\n    var FormControlDirective = (function (_super) {\n        __extends$9(FormControlDirective, _super);\n        /**\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlDirective(validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this.update = new EventEmitter();\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlDirective.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype.ngOnChanges = function (changes) {\n            if (this._isControlChanged(changes)) {\n                setUpControl(this.form, this);\n                if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                    this.valueAccessor.setDisabledState(true);\n                }\n                this.form.updateValueAndValidity({ emitEvent: false });\n            }\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.form.setValue(this.model);\n                this.viewModel = this.model;\n            }\n        };\n        Object.defineProperty(FormControlDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlDirective.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlDirective.prototype._isControlChanged = function (changes) {\n            return changes.hasOwnProperty('form');\n        };\n        FormControlDirective.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControl]', providers: [formControlBinding$1], exportAs: 'ngForm' },] },\n        ];\n        /** @nocollapse */\n        FormControlDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formControl',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlDirective;\n    }(NgControl));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$11 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formDirectiveProvider$1 = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupDirective; })\n    };\n    /**\n     * \\@whatItDoes Binds an existing {\\@link FormGroup} to a DOM element.\n     *\n     * \\@howToUse\n     *\n     * This directive accepts an existing {\\@link FormGroup} instance. It will then use this\n     * {\\@link FormGroup} instance to match any child {\\@link FormControl}, {\\@link FormGroup},\n     * and {\\@link FormArray} instances to child {\\@link FormControlName}, {\\@link FormGroupName},\n     * and {\\@link FormArrayName} directives.\n     *\n     * **Set value**: You can set the form's initial value when instantiating the\n     * {\\@link FormGroup}, or you can set it programmatically later using the {\\@link FormGroup}'s\n     * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue} methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the form, you can subscribe\n     * to the {\\@link FormGroup}'s {\\@link AbstractControl.valueChanges} event.  You can also listen to\n     * its {\\@link AbstractControl.statusChanges} event to be notified when the validation status is\n     * re-calculated.\n     *\n     * Furthermore, you can listen to the directive's `ngSubmit` event to be notified when the user has\n     * triggered a form submission. The `ngSubmit` event will be emitted with the original form\n     * submission event.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * **npm package**: `\\@angular/forms`\n     *\n     * **NgModule**: {\\@link ReactiveFormsModule}\n     *\n     *  \\@stable\n     */\n    var FormGroupDirective = (function (_super) {\n        __extends$11(FormGroupDirective, _super);\n        /**\n         * @param {?} _validators\n         * @param {?} _asyncValidators\n         */\n        function FormGroupDirective(_validators, _asyncValidators) {\n            _super.call(this);\n            this._validators = _validators;\n            this._asyncValidators = _asyncValidators;\n            this._submitted = false;\n            this.directives = [];\n            this.form = null;\n            this.ngSubmit = new EventEmitter();\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormGroupDirective.prototype.ngOnChanges = function (changes) {\n            this._checkFormPresent();\n            if (changes.hasOwnProperty('form')) {\n                this._updateValidators();\n                this._updateDomValue();\n                this._updateRegistrations();\n            }\n        };\n        Object.defineProperty(FormGroupDirective.prototype, \"submitted\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._submitted; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.form; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormGroupDirective.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return []; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addControl = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpControl(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n            this.directives.push(dir);\n            return ctrl;\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getControl = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeControl = function (dir) { ListWrapper.remove(this.directives, dir); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormGroup = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormGroup = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormGroup = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.addFormArray = function (dir) {\n            var /** @type {?} */ ctrl = this.form.get(dir.path);\n            setUpFormContainer(ctrl, dir);\n            ctrl.updateValueAndValidity({ emitEvent: false });\n        };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.removeFormArray = function (dir) { };\n        /**\n         * @param {?} dir\n         * @return {?}\n         */\n        FormGroupDirective.prototype.getFormArray = function (dir) { return (this.form.get(dir.path)); };\n        /**\n         * @param {?} dir\n         * @param {?} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.updateModel = function (dir, value) {\n            var /** @type {?} */ ctrl = (this.form.get(dir.path));\n            ctrl.setValue(value);\n        };\n        /**\n         * @param {?} $event\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onSubmit = function ($event) {\n            this._submitted = true;\n            this.ngSubmit.emit($event);\n            return false;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype.onReset = function () { this.resetForm(); };\n        /**\n         * @param {?=} value\n         * @return {?}\n         */\n        FormGroupDirective.prototype.resetForm = function (value) {\n            if (value === void 0) { value = undefined; }\n            this.form.reset(value);\n            this._submitted = false;\n        };\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateDomValue = function () {\n            var _this = this;\n            this.directives.forEach(function (dir) {\n                var /** @type {?} */ newCtrl = _this.form.get(dir.path);\n                if (dir._control !== newCtrl) {\n                    cleanUpControl(dir._control, dir);\n                    if (newCtrl)\n                        setUpControl(newCtrl, dir);\n                    dir._control = newCtrl;\n                }\n            });\n            this.form._updateTreeValidity({ emitEvent: false });\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateRegistrations = function () {\n            var _this = this;\n            this.form._registerOnCollectionChange(function () { return _this._updateDomValue(); });\n            if (this._oldForm)\n                this._oldForm._registerOnCollectionChange(function () { });\n            this._oldForm = this.form;\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._updateValidators = function () {\n            var /** @type {?} */ sync = composeValidators(this._validators);\n            this.form.validator = Validators.compose([this.form.validator, sync]);\n            var /** @type {?} */ async = composeAsyncValidators(this._asyncValidators);\n            this.form.asyncValidator = Validators.composeAsync([this.form.asyncValidator, async]);\n        };\n        /**\n         * @return {?}\n         */\n        FormGroupDirective.prototype._checkFormPresent = function () {\n            if (!this.form) {\n                ReactiveErrors.missingFormException();\n            }\n        };\n        FormGroupDirective.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[formGroup]',\n                        providers: [formDirectiveProvider$1],\n                        host: { '(submit)': 'onSubmit($event)', '(reset)': 'onReset()' },\n                        exportAs: 'ngForm'\n                    },] },\n        ];\n        /** @nocollapse */\n        FormGroupDirective.ctorParameters = function () { return [\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupDirective.propDecorators = {\n            'form': [{ type: _angular_core.Input, args: ['formGroup',] },],\n            'ngSubmit': [{ type: _angular_core.Output },],\n        };\n        return FormGroupDirective;\n    }(ControlContainer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$12 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ formGroupNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormGroupName; })\n    };\n    /**\n     * \\@whatItDoes Syncs a nested {\\@link FormGroup} to a DOM element.\n     *\n     * \\@howToUse\n     *\n     * This directive can only be used with a parent {\\@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {\\@link FormGroup} you want to link, and\n     * will look for a {\\@link FormGroup} registered with that name in the parent\n     * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n     *\n     * Nested form groups can come in handy when you want to validate a sub-group of a\n     * form separately from the rest or when you'd like to group the values of certain\n     * controls into their own nested object.\n     *\n     * **Access the group**: You can access the associated {\\@link FormGroup} using the\n     * {\\@link AbstractControl.get} method. Ex: `this.form.get('name')`.\n     *\n     * You can also access individual controls within the group using dot syntax.\n     * Ex: `this.form.get('name.first')`\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {\\@link FormGroup}. See a full list of available properties in {\\@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {\\@link FormGroup}, or you can set it programmatically later using\n     * {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the group, you can\n     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * {\\@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * \\@stable\n     */\n    var FormGroupName = (function (_super) {\n        __extends$12(FormGroupName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormGroupName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * \\@internal\n         * @return {?}\n         */\n        FormGroupName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.groupParentException();\n            }\n        };\n        FormGroupName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formGroupName]', providers: [formGroupNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormGroupName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormGroupName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formGroupName',] },],\n        };\n        return FormGroupName;\n    }(AbstractFormGroupDirective));\n    var /** @type {?} */ formArrayNameProvider = {\n        provide: ControlContainer,\n        useExisting: _angular_core.forwardRef(function () { return FormArrayName; })\n    };\n    /**\n     * \\@whatItDoes Syncs a nested {\\@link FormArray} to a DOM element.\n     *\n     * \\@howToUse\n     *\n     * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the nested {\\@link FormArray} you want to link, and\n     * will look for a {\\@link FormArray} registered with that name in the parent\n     * {\\@link FormGroup} instance you passed into {\\@link FormGroupDirective}.\n     *\n     * Nested form arrays can come in handy when you have a group of form controls but\n     * you're not sure how many there will be. Form arrays allow you to create new\n     * form controls dynamically.\n     *\n     * **Access the array**: You can access the associated {\\@link FormArray} using the\n     * {\\@link AbstractControl.get} method on the parent {\\@link FormGroup}.\n     * Ex: `this.form.get('cities')`.\n     *\n     * **Get the value**: the `value` property is always synced and available on the\n     * {\\@link FormArray}. See a full list of available properties in {\\@link AbstractControl}.\n     *\n     * **Set the value**: You can set an initial value for each child control when instantiating\n     * the {\\@link FormArray}, or you can set the value programmatically later using the\n     * {\\@link FormArray}'s {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}\n     * methods.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the array, you can\n     * subscribe to the {\\@link FormArray}'s {\\@link AbstractControl.valueChanges} event.  You can also\n     * listen to its {\\@link AbstractControl.statusChanges} event to be notified when the validation\n     * status is re-calculated.\n     *\n     * **Add new controls**: You can add new controls to the {\\@link FormArray} dynamically by\n     * calling its {\\@link FormArray.push} method.\n     *  Ex: `this.form.get('cities').push(new FormControl());`\n     *\n     * ### Example\n     *\n     * {\\@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n     *\n     * * **npm package**: `\\@angular/forms`\n     *\n     * * **NgModule**: `ReactiveFormsModule`\n     *\n     * \\@stable\n     */\n    var FormArrayName = (function (_super) {\n        __extends$12(FormArrayName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         */\n        function FormArrayName(parent, validators, asyncValidators) {\n            _super.call(this);\n            this._parent = parent;\n            this._validators = validators;\n            this._asyncValidators = asyncValidators;\n        }\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnInit = function () {\n            this._checkParentType();\n            this.formDirective.addFormArray(this);\n        };\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeFormArray(this);\n            }\n        };\n        Object.defineProperty(FormArrayName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this.formDirective.getFormArray(this); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return this._parent ? (this._parent.formDirective) : null;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._validators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormArrayName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeAsyncValidators(this._asyncValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormArrayName.prototype._checkParentType = function () {\n            if (_hasInvalidParent(this._parent)) {\n                ReactiveErrors.arrayParentException();\n            }\n        };\n        FormArrayName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formArrayName]', providers: [formArrayNameProvider] },] },\n        ];\n        /** @nocollapse */\n        FormArrayName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n        ]; };\n        FormArrayName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formArrayName',] },],\n        };\n        return FormArrayName;\n    }(ControlContainer));\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    function _hasInvalidParent(parent) {\n        return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) &&\n            !(parent instanceof FormArrayName);\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var __extends$10 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ controlNameBinding = {\n        provide: NgControl,\n        useExisting: _angular_core.forwardRef(function () { return FormControlName; })\n    };\n    /**\n     * \\@whatItDoes Syncs a {\\@link FormControl} in an existing {\\@link FormGroup} to a form control\n     * element by name.\n     *\n     * In other words, this directive ensures that any values written to the {\\@link FormControl}\n     * instance programmatically will be written to the DOM element (model -> view). Conversely,\n     * any values written to the DOM element through user input will be reflected in the\n     * {\\@link FormControl} instance (view -> model).\n     *\n     * \\@howToUse\n     *\n     * This directive is designed to be used with a parent {\\@link FormGroupDirective} (selector:\n     * `[formGroup]`).\n     *\n     * It accepts the string name of the {\\@link FormControl} instance you want to\n     * link, and will look for a {\\@link FormControl} registered with that name in the\n     * closest {\\@link FormGroup} or {\\@link FormArray} above it.\n     *\n     * **Access the control**: You can access the {\\@link FormControl} associated with\n     * this directive by using the {\\@link AbstractControl.get} method.\n     * Ex: `this.form.get('first');`\n     *\n     * **Get value**: the `value` property is always synced and available on the {\\@link FormControl}.\n     * See a full list of available properties in {\\@link AbstractControl}.\n     *\n     *  **Set value**: You can set an initial value for the control when instantiating the\n     *  {\\@link FormControl}, or you can set it programmatically later using\n     *  {\\@link AbstractControl.setValue} or {\\@link AbstractControl.patchValue}.\n     *\n     * **Listen to value**: If you want to listen to changes in the value of the control, you can\n     * subscribe to the {\\@link AbstractControl.valueChanges} event.  You can also listen to\n     * {\\@link AbstractControl.statusChanges} to be notified when the validation status is\n     * re-calculated.\n     *\n     * ### Example\n     *\n     * In this example, we create form controls for first name and last name.\n     *\n     * {\\@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n     *\n     * To see `formControlName` examples with different form control types, see:\n     *\n     * * Radio buttons: {\\@link RadioControlValueAccessor}\n     * * Selects: {\\@link SelectControlValueAccessor}\n     *\n     * **npm package**: `\\@angular/forms`\n     *\n     * **NgModule**: {\\@link ReactiveFormsModule}\n     *\n     *  \\@stable\n     */\n    var FormControlName = (function (_super) {\n        __extends$10(FormControlName, _super);\n        /**\n         * @param {?} parent\n         * @param {?} validators\n         * @param {?} asyncValidators\n         * @param {?} valueAccessors\n         */\n        function FormControlName(parent, validators, asyncValidators, valueAccessors) {\n            _super.call(this);\n            this._added = false;\n            this.update = new EventEmitter();\n            this._parent = parent;\n            this._rawValidators = validators || [];\n            this._rawAsyncValidators = asyncValidators || [];\n            this.valueAccessor = selectValueAccessor(this, valueAccessors);\n        }\n        Object.defineProperty(FormControlName.prototype, \"isDisabled\", {\n            /**\n             * @param {?} isDisabled\n             * @return {?}\n             */\n            set: function (isDisabled) { ReactiveErrors.disabledAttrWarning(); },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnChanges = function (changes) {\n            if (!this._added)\n                this._setUpControl();\n            if (isPropertyUpdated(changes, this.viewModel)) {\n                this.viewModel = this.model;\n                this.formDirective.updateModel(this, this.model);\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype.ngOnDestroy = function () {\n            if (this.formDirective) {\n                this.formDirective.removeControl(this);\n            }\n        };\n        /**\n         * @param {?} newValue\n         * @return {?}\n         */\n        FormControlName.prototype.viewToModelUpdate = function (newValue) {\n            this.viewModel = newValue;\n            this.update.emit(newValue);\n        };\n        Object.defineProperty(FormControlName.prototype, \"path\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return controlPath(this.name, this._parent); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"formDirective\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._parent ? this._parent.formDirective : null; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"validator\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return composeValidators(this._rawValidators); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"asyncValidator\", {\n            /**\n             * @return {?}\n             */\n            get: function () {\n                return composeAsyncValidators(this._rawAsyncValidators);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(FormControlName.prototype, \"control\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._control; },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._checkParentType = function () {\n            if (!(this._parent instanceof FormGroupName) &&\n                this._parent instanceof AbstractFormGroupDirective) {\n                ReactiveErrors.ngModelGroupException();\n            }\n            else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) &&\n                !(this._parent instanceof FormArrayName)) {\n                ReactiveErrors.controlParentException();\n            }\n        };\n        /**\n         * @return {?}\n         */\n        FormControlName.prototype._setUpControl = function () {\n            this._checkParentType();\n            this._control = this.formDirective.addControl(this);\n            if (this.control.disabled && this.valueAccessor.setDisabledState) {\n                this.valueAccessor.setDisabledState(true);\n            }\n            this._added = true;\n        };\n        FormControlName.decorators = [\n            { type: _angular_core.Directive, args: [{ selector: '[formControlName]', providers: [controlNameBinding] },] },\n        ];\n        /** @nocollapse */\n        FormControlName.ctorParameters = function () { return [\n            { type: ControlContainer, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Host }, { type: _angular_core.SkipSelf },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_ASYNC_VALIDATORS,] },] },\n            { type: Array, decorators: [{ type: _angular_core.Optional }, { type: _angular_core.Self }, { type: _angular_core.Inject, args: [NG_VALUE_ACCESSOR,] },] },\n        ]; };\n        FormControlName.propDecorators = {\n            'name': [{ type: _angular_core.Input, args: ['formControlName',] },],\n            'model': [{ type: _angular_core.Input, args: ['ngModel',] },],\n            'update': [{ type: _angular_core.Output, args: ['ngModelChange',] },],\n            'isDisabled': [{ type: _angular_core.Input, args: ['disabled',] },],\n        };\n        return FormControlName;\n    }(NgControl));\n\n    var __extends$13 = (this && this.__extends) || function (d, b) {\n        for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n    var /** @type {?} */ REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return RequiredValidator; }),\n        multi: true\n    };\n    var /** @type {?} */ CHECKBOX_REQUIRED_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return CheckboxRequiredValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `required` validator to any controls marked with the\n     * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input name=\"fullName\" ngModel required>\n     * ```\n     *\n     * \\@stable\n     */\n    var RequiredValidator = (function () {\n        function RequiredValidator() {\n        }\n        Object.defineProperty(RequiredValidator.prototype, \"required\", {\n            /**\n             * @return {?}\n             */\n            get: function () { return this._required; },\n            /**\n             * @param {?} value\n             * @return {?}\n             */\n            set: function (value) {\n                this._required = value != null && value !== false && \"\" + value !== 'false';\n                if (this._onChange)\n                    this._onChange();\n            },\n            enumerable: true,\n            configurable: true\n        });\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        RequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.required(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        RequiredValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        RequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: ':not([type=checkbox])[required][formControlName],:not([type=checkbox])[required][formControl],:not([type=checkbox])[required][ngModel]',\n                        providers: [REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        RequiredValidator.ctorParameters = function () { return []; };\n        RequiredValidator.propDecorators = {\n            'required': [{ type: _angular_core.Input },],\n        };\n        return RequiredValidator;\n    }());\n    /**\n     * A Directive that adds the `required` validator to checkbox controls marked with the\n     * `required` attribute, via the {\\@link NG_VALIDATORS} binding.\n     *\n     * ### Example\n     *\n     * ```\n     * <input type=\"checkbox\" name=\"active\" ngModel required>\n     * ```\n     *\n     * \\@experimental\n     */\n    var CheckboxRequiredValidator = (function (_super) {\n        __extends$13(CheckboxRequiredValidator, _super);\n        function CheckboxRequiredValidator() {\n            _super.apply(this, arguments);\n        }\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        CheckboxRequiredValidator.prototype.validate = function (c) {\n            return this.required ? Validators.requiredTrue(c) : null;\n        };\n        CheckboxRequiredValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: 'input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]',\n                        providers: [CHECKBOX_REQUIRED_VALIDATOR],\n                        host: { '[attr.required]': 'required ? \"\" : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        CheckboxRequiredValidator.ctorParameters = function () { return []; };\n        return CheckboxRequiredValidator;\n    }(RequiredValidator));\n    /**\n     * Provider which adds {@link MinLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='min'}\n     */\n    var /** @type {?} */ MIN_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MinLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {\\@link MinLengthValidator} for any `formControlName`,\n     * `formControl`, or control with `ngModel` that also has a `minlength` attribute.\n     *\n     * \\@stable\n     */\n    var MinLengthValidator = (function () {\n        function MinLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MinLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('minlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MinLengthValidator.prototype.validate = function (c) {\n            return this.minlength == null ? null : this._validator(c);\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MinLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MinLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.minLength(parseInt(this.minlength, 10));\n        };\n        MinLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[minlength][formControlName],[minlength][formControl],[minlength][ngModel]',\n                        providers: [MIN_LENGTH_VALIDATOR],\n                        host: { '[attr.minlength]': 'minlength ? minlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MinLengthValidator.ctorParameters = function () { return []; };\n        MinLengthValidator.propDecorators = {\n            'minlength': [{ type: _angular_core.Input },],\n        };\n        return MinLengthValidator;\n    }());\n    /**\n     * Provider which adds {@link MaxLengthValidator} to {@link NG_VALIDATORS}.\n     *\n     * ## Example:\n     *\n     * {@example common/forms/ts/validators/validators.ts region='max'}\n     */\n    var /** @type {?} */ MAX_LENGTH_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return MaxLengthValidator; }),\n        multi: true\n    };\n    /**\n     * A directive which installs the {\\@link MaxLengthValidator} for any `formControlName,\n     * `formControl`,\n     * or control with `ngModel` that also has a `maxlength` attribute.\n     *\n     * \\@stable\n     */\n    var MaxLengthValidator = (function () {\n        function MaxLengthValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.ngOnChanges = function (changes) {\n            if ('maxlength' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.validate = function (c) {\n            return this.maxlength != null ? this._validator(c) : null;\n        };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        MaxLengthValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        MaxLengthValidator.prototype._createValidator = function () {\n            this._validator = Validators.maxLength(parseInt(this.maxlength, 10));\n        };\n        MaxLengthValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[maxlength][formControlName],[maxlength][formControl],[maxlength][ngModel]',\n                        providers: [MAX_LENGTH_VALIDATOR],\n                        host: { '[attr.maxlength]': 'maxlength ? maxlength : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        MaxLengthValidator.ctorParameters = function () { return []; };\n        MaxLengthValidator.propDecorators = {\n            'maxlength': [{ type: _angular_core.Input },],\n        };\n        return MaxLengthValidator;\n    }());\n    var /** @type {?} */ PATTERN_VALIDATOR = {\n        provide: NG_VALIDATORS,\n        useExisting: _angular_core.forwardRef(function () { return PatternValidator; }),\n        multi: true\n    };\n    /**\n     * A Directive that adds the `pattern` validator to any controls marked with the\n     * `pattern` attribute, via the {\\@link NG_VALIDATORS} binding. Uses attribute value\n     * as the regex to validate Control value against.  Follows pattern attribute\n     * semantics; i.e. regex must match entire Control value.\n     *\n     * ### Example\n     *\n     * ```\n     * <input [name]=\"fullName\" pattern=\"[a-zA-Z ]*\" ngModel>\n     * ```\n     * \\@stable\n     */\n    var PatternValidator = (function () {\n        function PatternValidator() {\n        }\n        /**\n         * @param {?} changes\n         * @return {?}\n         */\n        PatternValidator.prototype.ngOnChanges = function (changes) {\n            if ('pattern' in changes) {\n                this._createValidator();\n                if (this._onChange)\n                    this._onChange();\n            }\n        };\n        /**\n         * @param {?} c\n         * @return {?}\n         */\n        PatternValidator.prototype.validate = function (c) { return this._validator(c); };\n        /**\n         * @param {?} fn\n         * @return {?}\n         */\n        PatternValidator.prototype.registerOnValidatorChange = function (fn) { this._onChange = fn; };\n        /**\n         * @return {?}\n         */\n        PatternValidator.prototype._createValidator = function () { this._validator = Validators.pattern(this.pattern); };\n        PatternValidator.decorators = [\n            { type: _angular_core.Directive, args: [{\n                        selector: '[pattern][formControlName],[pattern][formControl],[pattern][ngModel]',\n                        providers: [PATTERN_VALIDATOR],\n                        host: { '[attr.pattern]': 'pattern ? pattern : null' }\n                    },] },\n        ];\n        /** @nocollapse */\n        PatternValidator.ctorParameters = function () { return []; };\n        PatternValidator.propDecorators = {\n            'pattern': [{ type: _angular_core.Input },],\n        };\n        return PatternValidator;\n    }());\n\n    /**\n     * \\@whatItDoes Creates an {\\@link AbstractControl} from a user-specified configuration.\n     *\n     * It is essentially syntactic sugar that shortens the `new FormGroup()`,\n     * `new FormControl()`, and `new FormArray()` boilerplate that can build up in larger\n     * forms.\n     *\n     * \\@howToUse\n     *\n     * To use, inject `FormBuilder` into your component class. You can then call its methods\n     * directly.\n     *\n     * {\\@example forms/ts/formBuilder/form_builder_example.ts region='Component'}\n     *\n     *  * **npm package**: `\\@angular/forms`\n     *\n     *  * **NgModule**: {\\@link ReactiveFormsModule}\n     *\n     * \\@stable\n     */\n    var FormBuilder = (function () {\n        function FormBuilder() {\n        }\n        /**\n         * Construct a new {\\@link FormGroup} with the given map of configuration.\n         * Valid keys for the `extra` parameter map are `validator` and `asyncValidator`.\n         *\n         * See the {\\@link FormGroup} constructor for more details.\n         * @param {?} controlsConfig\n         * @param {?=} extra\n         * @return {?}\n         */\n        FormBuilder.prototype.group = function (controlsConfig, extra) {\n            if (extra === void 0) { extra = null; }\n            var /** @type {?} */ controls = this._reduceControls(controlsConfig);\n            var /** @type {?} */ validator = isPresent(extra) ? extra['validator'] : null;\n            var /** @type {?} */ asyncValidator = isPresent(extra) ? extra['asyncValidator'] : null;\n            return new FormGroup(controls, validator, asyncValidator);\n        };\n        /**\n         * Construct a new {\\@link FormControl} with the given `formState`,`validator`, and\n         * `asyncValidator`.\n         *\n         * `formState` can either be a standalone value for the form control or an object\n         * that contains both a value and a disabled status.\n         *\n         * @param {?} formState\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.control = function (formState, validator, asyncValidator) {\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            return new FormControl(formState, validator, asyncValidator);\n        };\n        /**\n         * Construct a {\\@link FormArray} from the given `controlsConfig` array of\n         * configuration, with the given optional `validator` and `asyncValidator`.\n         * @param {?} controlsConfig\n         * @param {?=} validator\n         * @param {?=} asyncValidator\n         * @return {?}\n         */\n        FormBuilder.prototype.array = function (controlsConfig, validator, asyncValidator) {\n            var _this = this;\n            if (validator === void 0) { validator = null; }\n            if (asyncValidator === void 0) { asyncValidator = null; }\n            var /** @type {?} */ controls = controlsConfig.map(function (c) { return _this._createControl(c); });\n            return new FormArray(controls, validator, asyncValidator);\n        };\n        /**\n         * \\@internal\n         * @param {?} controlsConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._reduceControls = function (controlsConfig) {\n            var _this = this;\n            var /** @type {?} */ controls = {};\n            Object.keys(controlsConfig).forEach(function (controlName) {\n                controls[controlName] = _this._createControl(controlsConfig[controlName]);\n            });\n            return controls;\n        };\n        /**\n         * \\@internal\n         * @param {?} controlConfig\n         * @return {?}\n         */\n        FormBuilder.prototype._createControl = function (controlConfig) {\n            if (controlConfig instanceof FormControl || controlConfig instanceof FormGroup ||\n                controlConfig instanceof FormArray) {\n                return controlConfig;\n            }\n            else if (Array.isArray(controlConfig)) {\n                var /** @type {?} */ value = controlConfig[0];\n                var /** @type {?} */ validator = controlConfig.length > 1 ? controlConfig[1] : null;\n                var /** @type {?} */ asyncValidator = controlConfig.length > 2 ? controlConfig[2] : null;\n                return this.control(value, validator, asyncValidator);\n            }\n            else {\n                return this.control(controlConfig);\n            }\n        };\n        FormBuilder.decorators = [\n            { type: _angular_core.Injectable },\n        ];\n        /** @nocollapse */\n        FormBuilder.ctorParameters = function () { return []; };\n        return FormBuilder;\n    }());\n\n    /**\n     * @stable\n     */\n    var /** @type {?} */ VERSION = new _angular_core.Version('2.4.10');\n\n    var /** @type {?} */ SHARED_FORM_DIRECTIVES = [\n        NgSelectOption,\n        NgSelectMultipleOption,\n        DefaultValueAccessor,\n        NumberValueAccessor,\n        RangeValueAccessor,\n        CheckboxControlValueAccessor,\n        SelectControlValueAccessor,\n        SelectMultipleControlValueAccessor,\n        RadioControlValueAccessor,\n        NgControlStatus,\n        NgControlStatusGroup,\n        RequiredValidator,\n        MinLengthValidator,\n        MaxLengthValidator,\n        PatternValidator,\n        CheckboxRequiredValidator,\n    ];\n    var /** @type {?} */ TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\n    var /** @type {?} */ REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n    /**\n     * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n     */\n    var InternalFormsSharedModule = (function () {\n        function InternalFormsSharedModule() {\n        }\n        InternalFormsSharedModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: SHARED_FORM_DIRECTIVES,\n                        exports: SHARED_FORM_DIRECTIVES,\n                    },] },\n        ];\n        /** @nocollapse */\n        InternalFormsSharedModule.ctorParameters = function () { return []; };\n        return InternalFormsSharedModule;\n    }());\n\n    /**\n     * The ng module for forms.\n     * \\@stable\n     */\n    var FormsModule = (function () {\n        function FormsModule() {\n        }\n        FormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: TEMPLATE_DRIVEN_DIRECTIVES,\n                        providers: [RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, TEMPLATE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        FormsModule.ctorParameters = function () { return []; };\n        return FormsModule;\n    }());\n    /**\n     * The ng module for reactive forms.\n     * \\@stable\n     */\n    var ReactiveFormsModule = (function () {\n        function ReactiveFormsModule() {\n        }\n        ReactiveFormsModule.decorators = [\n            { type: _angular_core.NgModule, args: [{\n                        declarations: [REACTIVE_DRIVEN_DIRECTIVES],\n                        providers: [FormBuilder, RadioControlRegistry],\n                        exports: [InternalFormsSharedModule, REACTIVE_DRIVEN_DIRECTIVES]\n                    },] },\n        ];\n        /** @nocollapse */\n        ReactiveFormsModule.ctorParameters = function () { return []; };\n        return ReactiveFormsModule;\n    }());\n\n    exports.AbstractControlDirective = AbstractControlDirective;\n    exports.AbstractFormGroupDirective = AbstractFormGroupDirective;\n    exports.CheckboxControlValueAccessor = CheckboxControlValueAccessor;\n    exports.ControlContainer = ControlContainer;\n    exports.NG_VALUE_ACCESSOR = NG_VALUE_ACCESSOR;\n    exports.DefaultValueAccessor = DefaultValueAccessor;\n    exports.NgControl = NgControl;\n    exports.NgControlStatus = NgControlStatus;\n    exports.NgControlStatusGroup = NgControlStatusGroup;\n    exports.NgForm = NgForm;\n    exports.NgModel = NgModel;\n    exports.NgModelGroup = NgModelGroup;\n    exports.RadioControlValueAccessor = RadioControlValueAccessor;\n    exports.FormControlDirective = FormControlDirective;\n    exports.FormControlName = FormControlName;\n    exports.FormGroupDirective = FormGroupDirective;\n    exports.FormArrayName = FormArrayName;\n    exports.FormGroupName = FormGroupName;\n    exports.NgSelectOption = NgSelectOption;\n    exports.SelectControlValueAccessor = SelectControlValueAccessor;\n    exports.SelectMultipleControlValueAccessor = SelectMultipleControlValueAccessor;\n    exports.CheckboxRequiredValidator = CheckboxRequiredValidator;\n    exports.MaxLengthValidator = MaxLengthValidator;\n    exports.MinLengthValidator = MinLengthValidator;\n    exports.PatternValidator = PatternValidator;\n    exports.RequiredValidator = RequiredValidator;\n    exports.FormBuilder = FormBuilder;\n    exports.AbstractControl = AbstractControl;\n    exports.FormArray = FormArray;\n    exports.FormControl = FormControl;\n    exports.FormGroup = FormGroup;\n    exports.NG_ASYNC_VALIDATORS = NG_ASYNC_VALIDATORS;\n    exports.NG_VALIDATORS = NG_VALIDATORS;\n    exports.Validators = Validators;\n    exports.VERSION = VERSION;\n    exports.FormsModule = FormsModule;\n    exports.ReactiveFormsModule = ReactiveFormsModule;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@angular/forms/bundles/forms.umd.js\n// module id = 24\n// module chunks = 0","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@angular/core\", \"@angular/forms\", \"@angular/common\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"datetime-picker\"] = factory(require(\"@angular/core\"), require(\"@angular/forms\"), require(\"@angular/common\"));\n\telse\n\t\troot[\"datetime-picker\"] = factory(root[\"@angular/core\"], root[\"@angular/forms\"], root[\"@angular/common\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_5__, __WEBPACK_EXTERNAL_MODULE_7__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar datetime_1 = __webpack_require__(1);\n\texports.NguiDatetime = datetime_1.NguiDatetime;\n\tvar datetime_picker_component_1 = __webpack_require__(3);\n\texports.NguiDatetimePickerComponent = datetime_picker_component_1.NguiDatetimePickerComponent;\n\tvar datetime_picker_directive_1 = __webpack_require__(4);\n\texports.NguiDatetimePickerDirective = datetime_picker_directive_1.NguiDatetimePickerDirective;\n\tvar datetime_picker_module_1 = __webpack_require__(6);\n\texports.NguiDatetimePickerModule = datetime_picker_module_1.NguiDatetimePickerModule;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\t/**\n\t * Static variables that you can override\n\t *   1. days.           default 1,2,....31\n\t *   2. daysOfWeek,     default Sunday, Monday, .....\n\t *   3. firstDayOfWeek, default 0 as in Sunday\n\t *   4. months,         default January, February\n\t *   5. formatDate(d)   default returns YYYY-MM-DD HH:MM\n\t *   6. parseDate(str)  default returns date from YYYY-MM-DD HH:MM\n\t */\n\tvar NguiDatetime = (function () {\n\t    function NguiDatetime() {\n\t    }\n\t    NguiDatetime.formatDate = function (d, format, dateOnly) {\n\t        var ret;\n\t        if (d && !format) {\n\t            // return d.toLocaleString('en-us', hash); // IE11 does not understand this\n\t            var pad0 = function (number) { return (\"0\" + number).slice(-2); };\n\t            ret = d.getFullYear() + '-' + pad0(d.getMonth() + 1) + '-' + pad0(d.getDate());\n\t            ret += dateOnly ? '' : ' ' + pad0(d.getHours()) + ':' + pad0(d.getMinutes());\n\t            return ret;\n\t        }\n\t        else if (d && typeof moment !== 'undefined') {\n\t            return moment(d).format(format);\n\t        }\n\t        else {\n\t            return '';\n\t        }\n\t    };\n\t    NguiDatetime.parseDate = function (dateStr, parseFormat, dateFormat) {\n\t        if (typeof moment === 'undefined') {\n\t            dateStr = NguiDatetime.removeTimezone(dateStr);\n\t            dateStr = dateStr + NguiDatetime.addDSTOffset(dateStr);\n\t            return NguiDatetime.parseFromDefaultFormat(dateStr);\n\t        }\n\t        else if (dateFormat || parseFormat) {\n\t            // try parse using each format because changing format programmatically calls this twice,\n\t            // once with string in parse format and once in date format\n\t            var formats = [];\n\t            if (parseFormat) {\n\t                formats.push(parseFormat);\n\t            }\n\t            if (dateFormat) {\n\t                formats.push(dateFormat);\n\t            }\n\t            var m = moment(dateStr, formats);\n\t            var date = m.toDate();\n\t            if (!m.isValid()) {\n\t                date = moment(dateStr, moment.ISO_8601).toDate(); // parse as ISO format\n\t            }\n\t            return date;\n\t        }\n\t        else if (dateStr.length > 4) {\n\t            var date = moment(dateStr, 'YYYY-MM-DD HH:mm').toDate();\n\t            return date;\n\t        }\n\t        else {\n\t            return new Date();\n\t        }\n\t    };\n\t    NguiDatetime.getWeekNumber = function (date) {\n\t        if (!(date instanceof Date))\n\t            date = new Date();\n\t        // ISO week date weeks start on Monday, so correct the day number\n\t        var nDay = (date.getDay() + 6) % 7;\n\t        // ISO 8601 states that week 1 is the week with the first Thursday of that year\n\t        // Set the target date to the Thursday in the target week\n\t        date.setDate(date.getDate() - nDay + 3);\n\t        // Store the millisecond value of the target date\n\t        var n1stThursday = date.valueOf();\n\t        // Set the target to the first Thursday of the year\n\t        // First, set the target to January 1st\n\t        date.setMonth(0, 1);\n\t        // Not a Thursday? Correct the date to the next Thursday\n\t        if (date.getDay() !== 4) {\n\t            date.setMonth(0, 1 + ((4 - date.getDay()) + 7) % 7);\n\t        }\n\t        // The week number is the number of weeks between the first Thursday of the year\n\t        // and the Thursday in the target week (604800000 = 7 * 24 * 3600 * 1000)\n\t        return 1 + Math.ceil((n1stThursday - date) / 604800000);\n\t    };\n\t    //remove timezone\n\t    NguiDatetime.removeTimezone = function (dateStr) {\n\t        // if no time is given, add 00:00:00 at the end\n\t        var matches = dateStr.match(/[0-9]{2}:/);\n\t        dateStr += matches ? '' : ' 00:00:00';\n\t        return dateStr.replace(/([0-9]{2}-[0-9]{2})-([0-9]{4})/, '$2-$1') //mm-dd-yyyy to yyyy-mm-dd\n\t            .replace(/([\\/-][0-9]{2,4})\\ ([0-9]{2}\\:[0-9]{2}\\:)/, '$1T$2') //reformat for FF\n\t            .replace(/EDT|EST|CDT|CST|MDT|PDT|PST|UT|GMT/g, '') //remove timezone\n\t            .replace(/\\s*\\(\\)\\s*/, '') //remove timezone\n\t            .replace(/[\\-\\+][0-9]{2}:?[0-9]{2}$/, '') //remove timezone\n\t            .replace(/000Z$/, '00'); //remove timezone\n\t    };\n\t    NguiDatetime.addDSTOffset = function (dateStr) {\n\t        var date = NguiDatetime.parseFromDefaultFormat(dateStr);\n\t        var jan = new Date(date.getFullYear(), 0, 1);\n\t        var jul = new Date(date.getFullYear(), 6, 1);\n\t        var stdTimezoneOffset = Math.max(jan.getTimezoneOffset(), jul.getTimezoneOffset());\n\t        var isDST = date.getTimezoneOffset() < stdTimezoneOffset;\n\t        var offset = isDST ? stdTimezoneOffset - 60 : stdTimezoneOffset;\n\t        var diff = offset >= 0 ? '-' : '+';\n\t        offset = Math.abs(offset);\n\t        return diff +\n\t            ('0' + (offset / 60)).slice(-2) + ':' +\n\t            ('0' + (offset % 60)).slice(-2);\n\t    };\n\t    ;\n\t    NguiDatetime.parseFromDefaultFormat = function (dateStr) {\n\t        var tmp = dateStr.split(/[\\+\\-:\\ T]/); // split by dash, colon or space\n\t        return new Date(parseInt(tmp[0], 10), parseInt(tmp[1], 10) - 1, parseInt(tmp[2], 10), parseInt(tmp[3] || '0', 10), parseInt(tmp[4] || '0', 10), parseInt(tmp[5] || '0', 10));\n\t    };\n\t    NguiDatetime.prototype.getMonthData = function (year, month) {\n\t        year = month > 11 ? year + 1 :\n\t            month < 0 ? year - 1 : year;\n\t        month = (month + 12) % 12;\n\t        var firstDayOfMonth = new Date(year, month, 1);\n\t        var lastDayOfMonth = new Date(year, month + 1, 0);\n\t        var lastDayOfPreviousMonth = new Date(year, month, 0);\n\t        var daysInMonth = lastDayOfMonth.getDate();\n\t        var daysInLastMonth = lastDayOfPreviousMonth.getDate();\n\t        var dayOfWeek = firstDayOfMonth.getDay();\n\t        // Ensure there are always leading days to give context\n\t        var leadingDays = (dayOfWeek - NguiDatetime.firstDayOfWeek + 7) % 7 || 7;\n\t        var trailingDays = NguiDatetime.days.slice(0, 6 * 7 - (leadingDays + daysInMonth));\n\t        if (trailingDays.length > 7) {\n\t            trailingDays = trailingDays.slice(0, trailingDays.length - 7);\n\t        }\n\t        var firstDay = new Date(firstDayOfMonth);\n\t        firstDay.setDate(firstDayOfMonth.getDate() - (leadingDays % 7));\n\t        var firstWeekNumber = NguiDatetime.getWeekNumber(firstDay);\n\t        var numWeeks = Math.ceil((daysInMonth + leadingDays % 7) / 7);\n\t        var weekNumbers = Array(numWeeks).fill(0).map(function (el, ndx) {\n\t            var weekNum = (ndx + firstWeekNumber + 52) % 52;\n\t            return weekNum === 0 ? 52 : weekNum;\n\t        });\n\t        var localizedDaysOfWeek = NguiDatetime.daysOfWeek\n\t            .concat(NguiDatetime.daysOfWeek)\n\t            .splice(NguiDatetime.firstDayOfWeek, 7);\n\t        var monthData = {\n\t            year: year,\n\t            month: month,\n\t            weekends: NguiDatetime.weekends,\n\t            firstDayOfWeek: NguiDatetime.firstDayOfWeek,\n\t            fullName: NguiDatetime.months[month].fullName,\n\t            shortName: NguiDatetime.months[month].shortName,\n\t            localizedDaysOfWeek: localizedDaysOfWeek,\n\t            days: NguiDatetime.days.slice(0, daysInMonth),\n\t            leadingDays: NguiDatetime.days.slice(-leadingDays - (31 - daysInLastMonth), daysInLastMonth),\n\t            trailingDays: trailingDays,\n\t            weekNumbers: weekNumbers\n\t        };\n\t        return monthData;\n\t    };\n\t    NguiDatetime.locale = {\n\t        date: 'date',\n\t        time: 'time',\n\t        year: 'year',\n\t        month: 'month',\n\t        day: 'day',\n\t        hour: 'hour',\n\t        minute: 'minute',\n\t        currentTime: \"current time\"\n\t    };\n\t    NguiDatetime.days = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31];\n\t    NguiDatetime.weekends = [0, 6];\n\t    NguiDatetime.daysOfWeek = typeof moment === 'undefined' ? [\n\t        { fullName: 'Sunday', shortName: 'Su' },\n\t        { fullName: 'Monday', shortName: 'Mo' },\n\t        { fullName: 'Tuesday', shortName: 'Tu' },\n\t        { fullName: 'Wednesday', shortName: 'We' },\n\t        { fullName: 'Thursday', shortName: 'Th' },\n\t        { fullName: 'Friday', shortName: 'Fr' },\n\t        { fullName: 'Saturday', shortName: 'Sa' }\n\t    ] : moment.weekdays().map(function (el, index) {\n\t        return {\n\t            fullName: el,\n\t            shortName: moment.weekdaysShort()[index].substr(0, 2)\n\t        };\n\t    });\n\t    NguiDatetime.firstDayOfWeek = typeof moment === 'undefined' ? 0 : moment.localeData().firstDayOfWeek();\n\t    NguiDatetime.months = typeof moment === 'undefined' ? [\n\t        { fullName: 'January', shortName: 'Jan' },\n\t        { fullName: 'February', shortName: 'Feb' },\n\t        { fullName: 'March', shortName: 'Mar' },\n\t        { fullName: 'April', shortName: 'Apr' },\n\t        { fullName: 'May', shortName: 'May' },\n\t        { fullName: 'June', shortName: 'Jun' },\n\t        { fullName: 'July', shortName: 'Jul' },\n\t        { fullName: 'August', shortName: 'Aug' },\n\t        { fullName: 'September', shortName: 'Sep' },\n\t        { fullName: 'October', shortName: 'Oct' },\n\t        { fullName: 'November', shortName: 'Nov' },\n\t        { fullName: 'December', shortName: 'Dec' }\n\t    ] : moment.months().map(function (el, index) {\n\t        return {\n\t            fullName: el,\n\t            shortName: moment['monthsShort']()[index]\n\t        };\n\t    });\n\t    NguiDatetime = __decorate([\n\t        core_1.Injectable(), \n\t        __metadata('design:paramtypes', [])\n\t    ], NguiDatetime);\n\t    return NguiDatetime;\n\t}());\n\texports.NguiDatetime = NguiDatetime;\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar datetime_1 = __webpack_require__(1);\n\t//@TODO\n\t// . display currently selected day\n\t/**\n\t * show a selected date in monthly calendar\n\t */\n\tvar NguiDatetimePickerComponent = (function () {\n\t    function NguiDatetimePickerComponent(elementRef, nguiDatetime, cdRef) {\n\t        this.nguiDatetime = nguiDatetime;\n\t        this.cdRef = cdRef;\n\t        this.minuteStep = 1;\n\t        this.showWeekNumbers = false;\n\t        this.showTodayShortcut = false;\n\t        this.showAmPm = false;\n\t        this.selected$ = new core_1.EventEmitter();\n\t        this.closing$ = new core_1.EventEmitter();\n\t        this.locale = datetime_1.NguiDatetime.locale;\n\t        this.showYearSelector = false;\n\t        this.el = elementRef.nativeElement;\n\t    }\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"yearsSelectable\", {\n\t        get: function () {\n\t            var startYear = this.year - 100;\n\t            var endYear = this.year + 50;\n\t            var years = [];\n\t            for (var year = startYear; year < endYear; year++) {\n\t                years.push(year);\n\t            }\n\t            return years;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"year\", {\n\t        get: function () {\n\t            return this.selectedDate.getFullYear();\n\t        },\n\t        set: function (year) { },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"month\", {\n\t        get: function () {\n\t            return this.selectedDate.getMonth();\n\t        },\n\t        set: function (month) { },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"day\", {\n\t        get: function () {\n\t            return this.selectedDate.getDate();\n\t        },\n\t        set: function (day) { },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"monthData\", {\n\t        get: function () {\n\t            return this._monthData;\n\t        },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    Object.defineProperty(NguiDatetimePickerComponent.prototype, \"today\", {\n\t        get: function () {\n\t            var dt = new Date();\n\t            dt.setHours(0);\n\t            dt.setMinutes(0);\n\t            dt.setSeconds(0);\n\t            dt.setMilliseconds(0);\n\t            return dt;\n\t        },\n\t        set: function (today) { },\n\t        enumerable: true,\n\t        configurable: true\n\t    });\n\t    NguiDatetimePickerComponent.prototype.ngOnInit = function () {\n\t        if (!this.defaultValue || isNaN(this.defaultValue.getTime())) {\n\t            this.defaultValue = new Date();\n\t        }\n\t        this.selectedDate = this.defaultValue;\n\t        // set hour and minute using moment if available to avoid having Javascript change timezones\n\t        if (typeof moment === 'undefined') {\n\t            this.hour = this.selectedDate.getHours();\n\t            this.minute = this.selectedDate.getMinutes();\n\t        }\n\t        else {\n\t            var m = moment(this.selectedDate);\n\t            this.hour = m.hours();\n\t            this.minute = m.minute();\n\t        }\n\t        this._monthData = this.nguiDatetime.getMonthData(this.year, this.month);\n\t    };\n\t    NguiDatetimePickerComponent.prototype.isWeekend = function (dayNum, month) {\n\t        if (typeof month === 'undefined') {\n\t            return datetime_1.NguiDatetime.weekends.indexOf(dayNum % 7) !== -1; //weekday index\n\t        }\n\t        else {\n\t            var weekday = this.toDate(dayNum, month).getDay();\n\t            return datetime_1.NguiDatetime.weekends.indexOf(weekday) !== -1;\n\t        }\n\t    };\n\t    NguiDatetimePickerComponent.prototype.selectYear = function (year) {\n\t        this._monthData = this.nguiDatetime.getMonthData(year, this._monthData.month);\n\t        this.showYearSelector = false;\n\t    };\n\t    NguiDatetimePickerComponent.prototype.toDate = function (day, month) {\n\t        return new Date(this._monthData.year, month || this._monthData.month, day);\n\t    };\n\t    NguiDatetimePickerComponent.prototype.toDateOnly = function (date) {\n\t        return new Date(date.getFullYear(), date.getMonth(), date.getDate(), 0, 0, 0, 0);\n\t    };\n\t    NguiDatetimePickerComponent.prototype.selectCurrentTime = function () {\n\t        this.hour = (new Date()).getHours();\n\t        this.minute = (new Date()).getMinutes();\n\t        this.selectDateTime();\n\t    };\n\t    /**\n\t     * set the selected date and close it when closeOnSelect is true\n\t     * @param date {Date}\n\t     */\n\t    NguiDatetimePickerComponent.prototype.selectDateTime = function (date) {\n\t        var _this = this;\n\t        this.selectedDate = date || this.selectedDate;\n\t        if (this.isDateDisabled(this.selectedDate)) {\n\t            return false;\n\t        }\n\t        // editing hours and minutes via javascript date methods causes date to lose timezone info,\n\t        // so edit using moment if available\n\t        var hour = parseInt('' + this.hour || '0', 10);\n\t        var minute = parseInt('' + this.minute || '0', 10);\n\t        if (typeof moment !== 'undefined') {\n\t            // here selected date has a time of 00:00 in local time,\n\t            // so build moment by getting year/month/day separately\n\t            // to avoid it saving as a day earlier\n\t            var m = moment([this.selectedDate.getFullYear(), this.selectedDate.getMonth(), this.selectedDate.getDate()]);\n\t            m.hours(hour);\n\t            m.minutes(minute);\n\t            this.selectedDate = m.toDate();\n\t        }\n\t        else {\n\t            this.selectedDate.setHours(hour);\n\t            this.selectedDate.setMinutes(minute);\n\t        }\n\t        //console.log('this.selectedDate', this.selectedDate)\n\t        this.selectedDate.toString = function () {\n\t            return datetime_1.NguiDatetime.formatDate(_this.selectedDate, _this.dateFormat, _this.dateOnly);\n\t        };\n\t        this.selected$.emit(this.selectedDate);\n\t    };\n\t    ;\n\t    /**\n\t     * show prev/next month calendar\n\t     */\n\t    NguiDatetimePickerComponent.prototype.updateMonthData = function (num) {\n\t        this._monthData = this.nguiDatetime.getMonthData(this._monthData.year, this._monthData.month + num);\n\t    };\n\t    NguiDatetimePickerComponent.prototype.isDateDisabled = function (date) {\n\t        var dateInTime = date.getTime();\n\t        this.disabledDatesInTime =\n\t            this.disabledDatesInTime || (this.disabledDates || []).map(function (d) { return d.getTime(); });\n\t        if (this.minDate && (dateInTime < this.minDate.getTime())) {\n\t            return true;\n\t        }\n\t        else if (this.maxDate && (dateInTime > this.maxDate.getTime())) {\n\t            return true;\n\t        }\n\t        else if (this.disabledDatesInTime.indexOf(dateInTime) >= 0) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    NguiDatetimePickerComponent.prototype.close = function () {\n\t        this.closing$.emit(true);\n\t    };\n\t    NguiDatetimePickerComponent.prototype.selectToday = function () {\n\t        this.selectDateTime(new Date());\n\t    };\n\t    NguiDatetimePickerComponent.prototype.convertHours = function (hours) {\n\t        if (this.showAmPm) {\n\t            this.timeSuffix = (hours >= 12) ? 'PM' : 'AM';\n\t            hours = (hours == 0) ? 12 : (hours > 12) ? hours - 12 : hours;\n\t        }\n\t        else {\n\t            this.timeSuffix = null;\n\t        }\n\t        return (\"0\" + hours).slice(-2);\n\t    };\n\t    __decorate([\n\t        core_1.Input('date-format'), \n\t        __metadata('design:type', String)\n\t    ], NguiDatetimePickerComponent.prototype, \"dateFormat\", void 0);\n\t    __decorate([\n\t        core_1.Input('date-only'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"dateOnly\", void 0);\n\t    __decorate([\n\t        core_1.Input('time-only'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"timeOnly\", void 0);\n\t    __decorate([\n\t        core_1.Input('selected-date'), \n\t        __metadata('design:type', Date)\n\t    ], NguiDatetimePickerComponent.prototype, \"selectedDate\", void 0);\n\t    __decorate([\n\t        core_1.Input('hour'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerComponent.prototype, \"hour\", void 0);\n\t    __decorate([\n\t        core_1.Input('minute'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerComponent.prototype, \"minute\", void 0);\n\t    __decorate([\n\t        core_1.Input('minuteStep'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerComponent.prototype, \"minuteStep\", void 0);\n\t    __decorate([\n\t        core_1.Input('default-value'), \n\t        __metadata('design:type', Date)\n\t    ], NguiDatetimePickerComponent.prototype, \"defaultValue\", void 0);\n\t    __decorate([\n\t        core_1.Input('min-date'), \n\t        __metadata('design:type', Date)\n\t    ], NguiDatetimePickerComponent.prototype, \"minDate\", void 0);\n\t    __decorate([\n\t        core_1.Input('max-date'), \n\t        __metadata('design:type', Date)\n\t    ], NguiDatetimePickerComponent.prototype, \"maxDate\", void 0);\n\t    __decorate([\n\t        core_1.Input('min-hour'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerComponent.prototype, \"minHour\", void 0);\n\t    __decorate([\n\t        core_1.Input('max-hour'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerComponent.prototype, \"maxHour\", void 0);\n\t    __decorate([\n\t        core_1.Input('disabled-dates'), \n\t        __metadata('design:type', Array)\n\t    ], NguiDatetimePickerComponent.prototype, \"disabledDates\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-close-button'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"showCloseButton\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-close-layer'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"showCloseLayer\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-week-numbers'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"showWeekNumbers\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-today-shortcut'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"showTodayShortcut\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-am-pm'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerComponent.prototype, \"showAmPm\", void 0);\n\t    __decorate([\n\t        core_1.Output('selected$'), \n\t        __metadata('design:type', core_1.EventEmitter)\n\t    ], NguiDatetimePickerComponent.prototype, \"selected$\", void 0);\n\t    __decorate([\n\t        core_1.Output('closing$'), \n\t        __metadata('design:type', core_1.EventEmitter)\n\t    ], NguiDatetimePickerComponent.prototype, \"closing$\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('hours'), \n\t        __metadata('design:type', core_1.ElementRef)\n\t    ], NguiDatetimePickerComponent.prototype, \"hours\", void 0);\n\t    __decorate([\n\t        core_1.ViewChild('minutes'), \n\t        __metadata('design:type', core_1.ElementRef)\n\t    ], NguiDatetimePickerComponent.prototype, \"minutes\", void 0);\n\t    NguiDatetimePickerComponent = __decorate([\n\t        core_1.Component({\n\t            providers: [datetime_1.NguiDatetime],\n\t            selector: 'ngui-datetime-picker',\n\t            template: \"\\n  <div class=\\\"closing-layer\\\" (click)=\\\"close()\\\" *ngIf=\\\"showCloseLayer\\\" ></div>\\n  <div class=\\\"ngui-datetime-picker\\\">\\n    <div class=\\\"close-button\\\" *ngIf=\\\"showCloseButton\\\" (click)=\\\"close()\\\"></div>\\n    \\n    <!-- Month - Year  -->\\n    <div class=\\\"month\\\" *ngIf=\\\"!timeOnly\\\">\\n      <b class=\\\"prev_next prev year\\\" (click)=\\\"updateMonthData(-12)\\\">&laquo;</b>\\n      <b class=\\\"prev_next prev month\\\" (click)=\\\"updateMonthData(-1)\\\">&lsaquo;</b>\\n       <span title=\\\"{{monthData?.fullName}}\\\">\\n         {{monthData?.shortName}}\\n       </span>\\n       <span (click)=\\\"showYearSelector = true\\\">\\n        {{monthData.year}}\\n       </span>\\n      <b class=\\\"prev_next next year\\\" (click)=\\\"updateMonthData(+12)\\\">&raquo;</b>\\n      <b class=\\\"prev_next next month\\\" (click)=\\\"updateMonthData(+1)\\\">&rsaquo;</b>\\n    </div>\\n\\n    <!-- Week number / Days  -->\\n    <div class=\\\"week-numbers-and-days\\\"\\n      [ngClass]=\\\"{'show-week-numbers': !timeOnly && showWeekNumbers}\\\">\\n      <!-- Week -->\\n      <div class=\\\"week-numbers\\\" *ngIf=\\\"!timeOnly && showWeekNumbers\\\">\\n        <div class=\\\"week-number\\\" *ngFor=\\\"let weekNumber of monthData.weekNumbers\\\">\\n          {{weekNumber}}\\n        </div>\\n      </div>\\n      \\n      <!-- Date -->\\n      <div class=\\\"days\\\" *ngIf=\\\"!timeOnly\\\">\\n\\n        <!-- Su Mo Tu We Th Fr Sa -->\\n        <div class=\\\"day-of-week\\\"\\n             *ngFor=\\\"let dayOfWeek of monthData.localizedDaysOfWeek; let ndx=index\\\"\\n             [class.weekend]=\\\"isWeekend(ndx + monthData.firstDayOfWeek)\\\"\\n             title=\\\"{{dayOfWeek.fullName}}\\\">\\n          {{dayOfWeek.shortName}}\\n        </div>\\n\\n        <!-- Fill up blank days for this month -->\\n        <div *ngIf=\\\"monthData.leadingDays.length < 7\\\">\\n          <div class=\\\"day\\\"\\n              (click)=\\\"updateMonthData(-1)\\\"\\n               *ngFor=\\\"let dayNum of monthData.leadingDays\\\">\\n            {{dayNum}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"day\\\"\\n             *ngFor=\\\"let dayNum of monthData.days\\\"\\n             (click)=\\\"selectDateTime(toDate(dayNum))\\\"\\n             title=\\\"{{monthData.year}}-{{monthData.month+1}}-{{dayNum}}\\\"\\n             [ngClass]=\\\"{\\n               selectable: !isDateDisabled(toDate(dayNum)),\\n               selected: toDate(dayNum).getTime() === toDateOnly(selectedDate).getTime(),\\n               today: toDate(dayNum).getTime() === today.getTime(),\\n               weekend: isWeekend(dayNum, monthData.month)\\n             }\\\">\\n          {{dayNum}}\\n        </div>\\n\\n        <!-- Fill up blank days for this month -->\\n        <div *ngIf=\\\"monthData.trailingDays.length < 7\\\">\\n          <div class=\\\"day\\\"\\n               (click)=\\\"updateMonthData(+1)\\\"\\n               *ngFor=\\\"let dayNum of monthData.trailingDays\\\">\\n            {{dayNum}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"shortcuts\\\" *ngIf=\\\"showTodayShortcut\\\">\\n      <a href=\\\"#\\\" (click)=\\\"selectToday()\\\">Today</a>\\n    </div>\\n\\n    <!-- Hour Minute -->\\n    <div class=\\\"time\\\" id=\\\"time\\\" *ngIf=\\\"!dateOnly\\\">\\n      <div class=\\\"select-current-time\\\" (click)=\\\"selectCurrentTime()\\\">{{locale.currentTime}}</div>\\n      <label class=\\\"timeLabel\\\">{{locale.time}}</label>\\n      <span class=\\\"timeValue\\\">\\n        {{convertHours(hour)}} : {{(\\\"0\\\"+minute).slice(-2)}} {{timeSuffix}}\\n      </span><br/>\\n      <div>\\n        <label class=\\\"hourLabel\\\">{{locale.hour}}:</label>\\n        <input #hours class=\\\"hourInput\\\"\\n               tabindex=\\\"90000\\\"\\n               (change)=\\\"selectDateTime()\\\"\\n               type=\\\"range\\\"\\n               min=\\\"{{minHour || 0}}\\\"\\n               max=\\\"{{maxHour || 23}}\\\"\\n               [(ngModel)]=\\\"hour\\\" />\\n      </div>\\n      <div>\\n        <label class=\\\"minutesLabel\\\">{{locale.minute}}:</label>\\n        <input #minutes class=\\\"minutesInput\\\"\\n               tabindex=\\\"90000\\\"\\n               step=\\\"{{minuteStep}}\\\"\\n               (change)=\\\"selectDateTime()\\\"\\n               type=\\\"range\\\" min=\\\"0\\\" max=\\\"59\\\" range=\\\"10\\\" [(ngModel)]=\\\"minute\\\"/>\\n      </div>\\n    </div>\\n\\n    <!-- Year Selector -->\\n    <div class=\\\"year-selector\\\" *ngIf=\\\"showYearSelector\\\">\\n      <div class=\\\"locale\\\">\\n        <b>{{locale.year}}</b>\\n      </div>\\n      <span class=\\\"year\\\" \\n        *ngFor=\\\"let year of yearsSelectable\\\"\\n        (click)=\\\"selectYear(year)\\\">\\n        {{year}}\\n      </span>\\n    </div>\\n  </div>\\n  \",\n\t            styles: [\n\t                \"\\n@keyframes slideDown {\\n  0% {\\n    transform:  translateY(-10px);\\n  }\\n  100% {\\n    transform: translateY(0px);\\n  }\\n}\\n\\n@keyframes slideUp {\\n  0% {\\n    transform: translateY(100%);\\n  }\\n  100% {\\n    transform: translateY(0%);\\n  }\\n}\\n\\n.ngui-datetime-picker-wrapper {\\n  position: relative;\\n}\\n\\n.ngui-datetime-picker {\\n  color: #333;\\n  outline-width: 0;\\n  font: normal 14px sans-serif;\\n  border: 1px solid #ddd;\\n  display: inline-block;\\n  background: #fff;\\n  animation: slideDown 0.1s ease-in-out;\\n  animation-fill-mode: both;\\n}\\n.ngui-datetime-picker .days {\\n  width: 210px; /* 30 x 7 days */\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .close-button {\\n  position: absolute;\\n  width: 1em;\\n  height: 1em;\\n  right: 0;\\n  z-index: 1;\\n  padding: 0 5px;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .close-button:before {\\n  content: 'X';\\n  cursor: pointer;\\n  color: #ff0000;\\n}\\n.ngui-datetime-picker > .month {\\n  text-align: center;\\n  line-height: 22px;\\n  padding: 10px;\\n  background: #fcfcfc;\\n  text-transform: uppercase;\\n  font-weight: bold;\\n  border-bottom: 1px solid #ddd;\\n  position: relative;\\n}\\n\\n.ngui-datetime-picker > .month > .prev_next {\\n  color: #555;\\n  display: block;\\n  font: normal 24px sans-serif;\\n  outline: none;\\n  background: transparent;\\n  border: none;\\n  cursor: pointer;\\n  width: 25px;\\n  text-align: center;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker > .month > .prev_next:hover {\\n  background-color: #333;\\n  color: #fff;\\n}\\n.ngui-datetime-picker > .month > .prev_next.prev {\\n  float: left;\\n}\\n.ngui-datetime-picker > .month > .prev_next.next {\\n  float: right;\\n}\\n\\n.ngui-datetime-picker .week-numbers-and-days {\\n  text-align: center;\\n}\\n.ngui-datetime-picker .week-numbers {\\n  line-height: 30px;\\n  display: inline-block;\\n  padding: 30px 0 0 0;\\n  color: #ddd;\\n  text-align: right;\\n  width: 21px;\\n  vertical-align: top;\\n  box-sizing: content-box;\\n}\\n\\n.ngui-datetime-picker  .days {\\n  display: inline-block;\\n  width: 210px; /* 30 x 7 */\\n  text-align: center;\\n  padding: 0 10px;\\n  box-sizing: content-box;\\n}\\n.ngui-datetime-picker .days .day-of-week,\\n.ngui-datetime-picker .days .day {\\n  box-sizing: border-box;\\n  border: 1px solid transparent;\\n  width: 30px;\\n  line-height: 28px;\\n  float: left;\\n}\\n.ngui-datetime-picker .days .day-of-week {\\n  font-weight: bold;\\n}\\n.ngui-datetime-picker .days .day-of-week.weekend {\\n  color: #ccc;\\n  background-color: inherit;\\n}\\n.ngui-datetime-picker .days .day:not(.selectable) {\\n  color: #ccc;\\n  cursor: default;\\n}\\n.ngui-datetime-picker .days .weekend {\\n  color: #ccc;\\n  background-color: #eee;\\n}\\n.ngui-datetime-picker .days .day.selectable  {\\n  cursor: pointer;\\n}\\n.ngui-datetime-picker .days .day.selected {\\n  background: gray;\\n  color: #fff;\\n}\\n.ngui-datetime-picker .days .day:not(.selected).selectable:hover {\\n  background: #eee;\\n}\\n.ngui-datetime-picker .days:after {\\n  content: '';\\n  display: block;\\n  clear: left;\\n  height: 0;\\n}\\n.ngui-datetime-picker .time {\\n  position: relative;\\n  padding: 10px;\\n  text-transform: Capitalize;\\n}\\n.ngui-datetime-picker .year-selector {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  background: #fff;\\n  height: 100%;\\n  overflow: auto; \\n  padding: 5px;\\n  z-index: 2;\\n}\\n.ngui-datetime-picker .year-selector .locale{\\n  text-align: center;\\n}\\n.ngui-datetime-picker .year-selector .year {\\n  display: inline-block;\\n  cursor: pointer;\\n  padding: 2px 5px;\\n}\\n.ngui-datetime-picker .year-selector .year:hover {\\n  background-color: #ddd;\\n}\\n.ngui-datetime-picker .select-current-time {\\n  position: absolute;\\n  top: 1em;\\n  right: 5px;\\n  z-index: 1;\\n  cursor: pointer;\\n  color: #0000ff;\\n}\\n.ngui-datetime-picker .hourLabel,\\n.ngui-datetime-picker .minutesLabel {\\n  display: inline-block;\\n  width: 45px;\\n  vertical-align: top;\\n  box-sizing: content-box;\\n}\\n.closing-layer {\\n  display: block;\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  background: rgba(0,0,0,0);\\n}\\n\\n.ngui-datetime-picker .shortcuts {\\n  padding: 10px;\\n  text-align: center;\\n}\\n\\n.ngui-datetime-picker .shortcuts a {\\n  font-family: Sans-serif;\\n  margin: 0 0.5em;\\n  text-decoration: none;\\n}\\n\\n@media (max-width: 767px) {\\n  .ngui-datetime-picker {\\n    position: fixed;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;    \\n    width: auto !important;\\n    animation: slideUp 0.1s ease-in-out;\\n  }\\n\\n  .ngui-datetime-picker > .days {\\n    display: block;\\n    margin: 0 auto;\\n  }\\n\\n  .closing-layer {\\n    display: block;\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    bottom: 0;\\n    right: 0;\\n    background: rgba(0,0,0,0.2);\\n  }\\n}\\n  \"\n\t            ],\n\t            encapsulation: core_1.ViewEncapsulation.None\n\t        }), \n\t        __metadata('design:paramtypes', [core_1.ElementRef, datetime_1.NguiDatetime, core_1.ChangeDetectorRef])\n\t    ], NguiDatetimePickerComponent);\n\t    return NguiDatetimePickerComponent;\n\t}());\n\texports.NguiDatetimePickerComponent = NguiDatetimePickerComponent;\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar forms_1 = __webpack_require__(5);\n\tvar datetime_picker_component_1 = __webpack_require__(3);\n\tvar datetime_1 = __webpack_require__(1);\n\tfunction isInteger(value) {\n\t    if (Number.isInteger) {\n\t        return Number.isInteger(value);\n\t    }\n\t    return typeof value === \"number\" &&\n\t        isFinite(value) &&\n\t        Math.floor(value) === value;\n\t}\n\t;\n\tfunction isNaN(value) {\n\t    if (Number.isNaN) {\n\t        return Number.isNaN(value);\n\t    }\n\t    return value !== value;\n\t}\n\t;\n\t/**\n\t * If the given string is not a valid date, it defaults back to today\n\t */\n\tvar NguiDatetimePickerDirective = (function () {\n\t    function NguiDatetimePickerDirective(resolver, viewContainerRef, parent) {\n\t        var _this = this;\n\t        this.resolver = resolver;\n\t        this.viewContainerRef = viewContainerRef;\n\t        this.parent = parent;\n\t        this.closeOnSelect = true;\n\t        this.showTodayShortcut = false;\n\t        this.isDraggable = true;\n\t        this.ngModelChange = new core_1.EventEmitter();\n\t        this.valueChanged$ = new core_1.EventEmitter();\n\t        this.popupClosed$ = new core_1.EventEmitter();\n\t        this.userModifyingValue = false;\n\t        this.handleKeyDown = function (event) {\n\t            _this.userModifyingValue = true;\n\t        };\n\t        /* input element string value is changed */\n\t        this.inputElValueChanged = function (date) {\n\t            _this.setInputElDateValue(date);\n\t            _this.el.value = date.toString();\n\t            if (_this.ctrl) {\n\t                _this.ctrl.patchValue(_this.el.value);\n\t            }\n\t            _this.ngModel = _this.el['dateValue'];\n\t            if (_this.ngModel) {\n\t                _this.ngModel.toString = function () { return _this.el.value; };\n\t                _this.ngModelChange.emit(_this.ngModel);\n\t            }\n\t        };\n\t        //show datetimePicker element below the current element\n\t        this.showDatetimePicker = function (event) {\n\t            if (_this.componentRef) {\n\t                return;\n\t            }\n\t            var factory = _this.resolver.resolveComponentFactory(datetime_picker_component_1.NguiDatetimePickerComponent);\n\t            _this.componentRef = _this.viewContainerRef.createComponent(factory);\n\t            _this.nguiDatetimePickerEl = _this.componentRef.location.nativeElement;\n\t            _this.nguiDatetimePickerEl.setAttribute('tabindex', '32767');\n\t            _this.nguiDatetimePickerEl.setAttribute('draggable', String(_this.isDraggable));\n\t            _this.nguiDatetimePickerEl.addEventListener('mousedown', function (event) {\n\t                _this.clickedDatetimePicker = true;\n\t            });\n\t            _this.nguiDatetimePickerEl.addEventListener('mouseup', function (event) {\n\t                _this.clickedDatetimePicker = false;\n\t            });\n\t            //This is for material design. MD has click event to make blur to happen\n\t            _this.nguiDatetimePickerEl.addEventListener('click', function (event) {\n\t                event.stopPropagation();\n\t            });\n\t            _this.nguiDatetimePickerEl.addEventListener('blur', function (event) {\n\t                _this.hideDatetimePicker();\n\t            });\n\t            _this.nguiDatetimePickerEl.addEventListener('dragstart', _this.drag_start, false);\n\t            document.body.addEventListener('dragover', _this.drag_over, false);\n\t            document.body.addEventListener('drop', _this.drop, false);\n\t            var component = _this.componentRef.instance;\n\t            component.defaultValue = _this.defaultValue || _this.el['dateValue'];\n\t            component.dateFormat = _this.dateFormat;\n\t            component.dateOnly = _this.dateOnly;\n\t            component.timeOnly = _this.timeOnly;\n\t            component.minuteStep = _this.minuteStep;\n\t            component.minDate = _this.minDate;\n\t            component.maxDate = _this.maxDate;\n\t            component.minHour = _this.minHour;\n\t            component.maxHour = _this.maxHour;\n\t            component.disabledDates = _this.disabledDates;\n\t            component.showCloseButton = _this.closeOnSelect === false;\n\t            component.showCloseLayer = _this.showCloseLayer;\n\t            component.showTodayShortcut = _this.showTodayShortcut;\n\t            component.showWeekNumbers = _this.showWeekNumbers;\n\t            _this.styleDatetimePicker();\n\t            component.selected$.subscribe(_this.dateSelected);\n\t            component.closing$.subscribe(function () {\n\t                _this.hideDatetimePicker();\n\t            });\n\t            //Hack not to fire tab keyup event\n\t            // this.justShown = true;\n\t            // setTimeout(() => this.justShown = false, 100);\n\t        };\n\t        this.dateSelected = function (date) {\n\t            _this.el.tagName === 'INPUT' && _this.inputElValueChanged(date);\n\t            _this.valueChanged$.emit(date);\n\t            if (_this.closeOnSelect !== false) {\n\t                _this.hideDatetimePicker();\n\t            }\n\t            else {\n\t                _this.nguiDatetimePickerEl.focus();\n\t            }\n\t        };\n\t        this.hideDatetimePicker = function (event) {\n\t            if (_this.clickedDatetimePicker) {\n\t                return false;\n\t            }\n\t            else {\n\t                setTimeout(function () {\n\t                    if (_this.componentRef) {\n\t                        _this.componentRef.destroy();\n\t                        _this.componentRef = undefined;\n\t                    }\n\t                    _this.popupClosed$.emit(true);\n\t                });\n\t            }\n\t            event && event.stopPropagation();\n\t        };\n\t        this.getDate = function (arg) {\n\t            var date = arg;\n\t            if (typeof arg === 'string') {\n\t                date = datetime_1.NguiDatetime.parseDate(arg, _this.parseFormat, _this.dateFormat);\n\t            }\n\t            return date;\n\t        };\n\t        this.drag_start = function (event) {\n\t            if (document.activeElement.tagName == 'INPUT') {\n\t                event.preventDefault();\n\t                return false; // block dragging\n\t            }\n\t            var style = window.getComputedStyle(event.target, null);\n\t            event.dataTransfer.setData(\"text/plain\", (parseInt(style.getPropertyValue(\"left\"), 10) - event.clientX)\n\t                + ','\n\t                + (parseInt(style.getPropertyValue(\"top\"), 10) - event.clientY));\n\t        };\n\t        this.drop = function (event) {\n\t            var offset = event.dataTransfer.getData(\"text/plain\").split(',');\n\t            _this.nguiDatetimePickerEl.style.left = (event.clientX + parseInt(offset[0], 10)) + 'px';\n\t            _this.nguiDatetimePickerEl.style.top = (event.clientY + parseInt(offset[1], 10)) + 'px';\n\t            _this.nguiDatetimePickerEl.style.bottom = '';\n\t            event.preventDefault();\n\t            return false;\n\t        };\n\t        this.el = this.viewContainerRef.element.nativeElement;\n\t    }\n\t    /**\n\t     * convert defaultValue, minDate, maxDate, minHour, and maxHour to proper types\n\t     */\n\t    NguiDatetimePickerDirective.prototype.normalizeInput = function () {\n\t        if (this.defaultValue && typeof this.defaultValue === 'string') {\n\t            var d = datetime_1.NguiDatetime.parseDate(this.defaultValue);\n\t            this.defaultValue = isNaN(d.getTime()) ? new Date() : d;\n\t        }\n\t        if (this.minDate && typeof this.minDate == 'string') {\n\t            var d = datetime_1.NguiDatetime.parseDate(this.minDate);\n\t            this.minDate = isNaN(d.getTime()) ? new Date() : d;\n\t        }\n\t        if (this.maxDate && typeof this.maxDate == 'string') {\n\t            var d = datetime_1.NguiDatetime.parseDate(this.maxDate);\n\t            this.maxDate = isNaN(d.getTime()) ? new Date() : d;\n\t        }\n\t        if (this.minHour) {\n\t            if (this.minHour instanceof Date) {\n\t                this.minHour = this.minHour.getHours();\n\t            }\n\t            else {\n\t                var hour = Number(this.minHour.toString());\n\t                if (!isInteger(hour) || hour > 23 || hour < 0) {\n\t                    this.minHour = undefined;\n\t                }\n\t            }\n\t        }\n\t        if (this.maxHour) {\n\t            if (this.maxHour instanceof Date) {\n\t                this.maxHour = this.maxHour.getHours();\n\t            }\n\t            else {\n\t                var hour = Number(this.maxHour.toString());\n\t                if (!isInteger(hour) || hour > 23 || hour < 0) {\n\t                    this.maxHour = undefined;\n\t                }\n\t            }\n\t        }\n\t    };\n\t    NguiDatetimePickerDirective.prototype.ngOnInit = function () {\n\t        var _this = this;\n\t        if (this.parent && this.formControlName) {\n\t            if (this.parent[\"form\"]) {\n\t                this.ctrl = this.parent[\"form\"].get(this.formControlName);\n\t            }\n\t            else if (this.parent[\"name\"]) {\n\t                var formDir = this.parent.formDirective;\n\t                if (formDir instanceof forms_1.FormGroupDirective && formDir.form.get(this.parent[\"name\"])) {\n\t                    this.ctrl = formDir.form.get(this.parent[\"name\"]).get(this.formControlName);\n\t                }\n\t            }\n\t            if (this.ctrl) {\n\t                this.sub = this.ctrl.valueChanges.subscribe(function (date) {\n\t                    _this.setInputElDateValue(date);\n\t                    _this.updateDatepicker();\n\t                });\n\t            }\n\t        }\n\t        this.normalizeInput();\n\t        //wrap this element with a <div> tag, so that we can position dynamic element correctly\n\t        var wrapper = document.createElement(\"div\");\n\t        wrapper.className = 'ngui-datetime-picker-wrapper';\n\t        this.el.parentElement.insertBefore(wrapper, this.el.nextSibling);\n\t        wrapper.appendChild(this.el);\n\t        if (this.ngModel && this.ngModel.getTime) {\n\t            this.ngModel.toString = function () { return datetime_1.NguiDatetime.formatDate(_this.ngModel, _this.dateFormat, _this.dateOnly); };\n\t        }\n\t        setTimeout(function () {\n\t            if (_this.el.tagName === 'INPUT') {\n\t                _this.inputElValueChanged(_this.el.value); //set this.el.dateValue and reformat this.el.value\n\t            }\n\t            if (_this.ctrl) {\n\t                _this.ctrl.markAsPristine();\n\t            }\n\t        });\n\t    };\n\t    NguiDatetimePickerDirective.prototype.ngAfterViewInit = function () {\n\t        // if this element is not an input tag, move dropdown after input tag\n\t        // so that it displays correctly\n\t        this.inputEl = this.el.tagName === \"INPUT\" ?\n\t            this.el : this.el.querySelector(\"input\");\n\t        if (this.inputEl) {\n\t            this.inputEl.addEventListener('focus', this.showDatetimePicker);\n\t            this.inputEl.addEventListener('blur', this.hideDatetimePicker);\n\t            this.inputEl.addEventListener('keydown', this.handleKeyDown);\n\t        }\n\t    };\n\t    NguiDatetimePickerDirective.prototype.ngOnChanges = function (changes) {\n\t        var _this = this;\n\t        var date;\n\t        if (changes && changes['ngModel']) {\n\t            date = changes['ngModel'].currentValue;\n\t            if (date && typeof date !== 'string') {\n\t                date.toString = function () { return datetime_1.NguiDatetime.formatDate(date, _this.dateFormat, _this.dateOnly); };\n\t                this.setInputElDateValue(date);\n\t                this.updateDatepicker();\n\t            }\n\t            else if (date && typeof date === 'string') {\n\t                /** if program assigns a string value, then format to date later */\n\t                if (!this.userModifyingValue) {\n\t                    setTimeout(function () {\n\t                        var dt = _this.getDate(date);\n\t                        dt.toString = function () { return datetime_1.NguiDatetime.formatDate(dt, _this.dateFormat, _this.dateOnly); };\n\t                        _this.ngModel = dt;\n\t                        _this.inputEl.value = '' + dt;\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        this.userModifyingValue = false;\n\t    };\n\t    NguiDatetimePickerDirective.prototype.updateDatepicker = function () {\n\t        if (this.componentRef) {\n\t            var component = this.componentRef.instance;\n\t            component.defaultValue = this.el['dateValue'];\n\t        }\n\t    };\n\t    NguiDatetimePickerDirective.prototype.setInputElDateValue = function (date) {\n\t        if (typeof date === 'string' && date) {\n\t            this.el['dateValue'] = this.getDate(date);\n\t        }\n\t        else if (typeof date === 'object') {\n\t            this.el['dateValue'] = date;\n\t        }\n\t        else if (typeof date === 'undefined') {\n\t            this.el['dateValue'] = null;\n\t        }\n\t        if (this.ctrl) {\n\t            this.ctrl.markAsDirty();\n\t        }\n\t    };\n\t    NguiDatetimePickerDirective.prototype.ngOnDestroy = function () {\n\t        if (this.sub) {\n\t            this.sub.unsubscribe();\n\t        }\n\t    };\n\t    NguiDatetimePickerDirective.prototype.elementIn = function (el, containerEl) {\n\t        while (el = el.parentNode) {\n\t            if (el === containerEl)\n\t                return true;\n\t        }\n\t        return false;\n\t    };\n\t    NguiDatetimePickerDirective.prototype.styleDatetimePicker = function () {\n\t        var _this = this;\n\t        // setting position, width, and height of auto complete dropdown\n\t        var thisElBCR = this.el.getBoundingClientRect();\n\t        // this.nguiDatetimePickerEl.style.minWidth      = thisElBCR.width + 'px';\n\t        this.nguiDatetimePickerEl.style.position = 'absolute';\n\t        this.nguiDatetimePickerEl.style.zIndex = '1000';\n\t        this.nguiDatetimePickerEl.style.left = '0';\n\t        this.nguiDatetimePickerEl.style.transition = 'height 0.3s ease-in';\n\t        this.nguiDatetimePickerEl.style.visibility = 'hidden';\n\t        setTimeout(function () {\n\t            var thisElBcr = _this.el.getBoundingClientRect();\n\t            var nguiDatetimePickerElBcr = _this.nguiDatetimePickerEl.getBoundingClientRect();\n\t            if (thisElBcr.bottom + nguiDatetimePickerElBcr.height > window.innerHeight) {\n\t                _this.nguiDatetimePickerEl.style.bottom =\n\t                    (thisElBcr.bottom - window.innerHeight + 15) + 'px';\n\t            }\n\t            else {\n\t                // otherwise, show below\n\t                _this.nguiDatetimePickerEl.style.top = thisElBcr.height + 'px';\n\t            }\n\t            _this.nguiDatetimePickerEl.style.visibility = 'visible';\n\t        });\n\t    };\n\t    ;\n\t    NguiDatetimePickerDirective.prototype.drag_over = function (event) {\n\t        event.preventDefault();\n\t        return false;\n\t    };\n\t    __decorate([\n\t        core_1.Input('date-format'), \n\t        __metadata('design:type', String)\n\t    ], NguiDatetimePickerDirective.prototype, \"dateFormat\", void 0);\n\t    __decorate([\n\t        core_1.Input('parse-format'), \n\t        __metadata('design:type', String)\n\t    ], NguiDatetimePickerDirective.prototype, \"parseFormat\", void 0);\n\t    __decorate([\n\t        core_1.Input('date-only'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"dateOnly\", void 0);\n\t    __decorate([\n\t        core_1.Input('time-only'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"timeOnly\", void 0);\n\t    __decorate([\n\t        core_1.Input('close-on-select'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"closeOnSelect\", void 0);\n\t    __decorate([\n\t        core_1.Input('default-value'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"defaultValue\", void 0);\n\t    __decorate([\n\t        core_1.Input('minute-step'), \n\t        __metadata('design:type', Number)\n\t    ], NguiDatetimePickerDirective.prototype, \"minuteStep\", void 0);\n\t    __decorate([\n\t        core_1.Input('min-date'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"minDate\", void 0);\n\t    __decorate([\n\t        core_1.Input('max-date'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"maxDate\", void 0);\n\t    __decorate([\n\t        core_1.Input('min-hour'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"minHour\", void 0);\n\t    __decorate([\n\t        core_1.Input('max-hour'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"maxHour\", void 0);\n\t    __decorate([\n\t        core_1.Input('disabled-dates'), \n\t        __metadata('design:type', Array)\n\t    ], NguiDatetimePickerDirective.prototype, \"disabledDates\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-close-layer'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"showCloseLayer\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-today-shortcut'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"showTodayShortcut\", void 0);\n\t    __decorate([\n\t        core_1.Input('show-week-numbers'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"showWeekNumbers\", void 0);\n\t    __decorate([\n\t        core_1.Input(), \n\t        __metadata('design:type', String)\n\t    ], NguiDatetimePickerDirective.prototype, \"formControlName\", void 0);\n\t    __decorate([\n\t        core_1.Input('is-draggable'), \n\t        __metadata('design:type', Boolean)\n\t    ], NguiDatetimePickerDirective.prototype, \"isDraggable\", void 0);\n\t    __decorate([\n\t        core_1.Input('ngModel'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"ngModel\", void 0);\n\t    __decorate([\n\t        core_1.Output('ngModelChange'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"ngModelChange\", void 0);\n\t    __decorate([\n\t        core_1.Output('valueChanged'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"valueChanged$\", void 0);\n\t    __decorate([\n\t        core_1.Output('popupClosed'), \n\t        __metadata('design:type', Object)\n\t    ], NguiDatetimePickerDirective.prototype, \"popupClosed$\", void 0);\n\t    NguiDatetimePickerDirective = __decorate([\n\t        core_1.Directive({\n\t            selector: '[ngui-datetime-picker]',\n\t            providers: [datetime_1.NguiDatetime]\n\t        }),\n\t        __param(2, core_1.Optional()),\n\t        __param(2, core_1.Host()),\n\t        __param(2, core_1.SkipSelf()), \n\t        __metadata('design:paramtypes', [core_1.ComponentFactoryResolver, core_1.ViewContainerRef, forms_1.ControlContainer])\n\t    ], NguiDatetimePickerDirective);\n\t    return NguiDatetimePickerDirective;\n\t}());\n\texports.NguiDatetimePickerDirective = NguiDatetimePickerDirective;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_5__;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(2);\n\tvar forms_1 = __webpack_require__(5);\n\tvar common_1 = __webpack_require__(7);\n\tvar datetime_1 = __webpack_require__(1);\n\tvar datetime_picker_component_1 = __webpack_require__(3);\n\tvar datetime_picker_directive_1 = __webpack_require__(4);\n\tvar NguiDatetimePickerModule = (function () {\n\t    function NguiDatetimePickerModule() {\n\t    }\n\t    NguiDatetimePickerModule = __decorate([\n\t        core_1.NgModule({\n\t            imports: [common_1.CommonModule, forms_1.FormsModule],\n\t            declarations: [datetime_picker_component_1.NguiDatetimePickerComponent, datetime_picker_directive_1.NguiDatetimePickerDirective],\n\t            exports: [datetime_picker_component_1.NguiDatetimePickerComponent, datetime_picker_directive_1.NguiDatetimePickerDirective],\n\t            entryComponents: [datetime_picker_component_1.NguiDatetimePickerComponent],\n\t            providers: [datetime_1.NguiDatetime]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], NguiDatetimePickerModule);\n\t    return NguiDatetimePickerModule;\n\t}());\n\texports.NguiDatetimePickerModule = NguiDatetimePickerModule;\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_7__;\n\n/***/ }\n/******/ ])\n});\n;\n//# sourceMappingURL=datetime-picker.umd.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@ngui/datetime-picker/dist/datetime-picker.umd.js\n// module id = 28\n// module chunks = 0","\"use strict\";\r\nvar simple_notifications_module_1 = require('./src/simple-notifications.module');\r\nexports.SimpleNotificationsModule = simple_notifications_module_1.SimpleNotificationsModule;\r\nvar simple_notifications_component_1 = require('./src/simple-notifications.component');\r\nexports.SimpleNotificationsComponent = simple_notifications_component_1.SimpleNotificationsComponent;\r\nvar notification_component_1 = require('./src/notification.component');\r\nexports.NotificationComponent = notification_component_1.NotificationComponent;\r\nvar notifications_service_1 = require('./src/notifications.service');\r\nexports.NotificationsService = notifications_service_1.NotificationsService;\r\nvar max_pipe_1 = require('./src/max.pipe');\r\nexports.MaxPipe = max_pipe_1.MaxPipe;\r\nvar push_notifications_module_1 = require('./src/push-notifications.module');\r\nexports.PushNotificationsModule = push_notifications_module_1.PushNotificationsModule;\r\nvar push_notifications_service_1 = require('./src/push-notifications.service');\r\nexports.PushNotificationsService = push_notifications_service_1.PushNotificationsService;\r\n//# sourceMappingURL=components.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-notifications/components.js\n// module id = 29\n// module chunks = 0","import {NgModule, ModuleWithProviders} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NotificationsService} from './notifications.service';\r\nimport {SimpleNotificationsComponent} from './simple-notifications.component';\r\nimport {NotificationComponent} from './notification.component';\r\nimport {MaxPipe} from './max.pipe';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [SimpleNotificationsComponent, NotificationComponent, MaxPipe],\r\n  providers: [],\r\n  exports: [SimpleNotificationsComponent]\r\n})\r\nexport class SimpleNotificationsModule {\r\n  public static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: SimpleNotificationsModule,\r\n      providers: [\r\n        NotificationsService\r\n      ]\r\n    };\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/simple-notifications.module.ts","import {Injectable, EventEmitter} from '@angular/core';\r\nimport {Subject} from 'rxjs/Subject';\r\nimport {NotificationEvent} from './notification-event.type';\r\nimport {Notification} from './notification.type';\r\nimport {Icons, defaultIcons} from './icons';\r\n\r\n@Injectable()\r\nexport class NotificationsService {\r\n\r\n  private emitter: Subject<NotificationEvent> = new Subject<NotificationEvent>();\r\n  private icons: Icons = defaultIcons;\r\n\r\n  set(notification: Notification, to: boolean) {\r\n    notification.id = notification.override && notification.override.id ? notification.override.id : Math.random().toString(36).substring(3);\r\n    notification.click = new EventEmitter<{}>();\r\n    this.emitter.next({command: 'set', notification: notification, add: to});\r\n    return notification;\r\n  };\r\n\r\n  getChangeEmitter() {\r\n    return this.emitter;\r\n  }\r\n\r\n  //// Access methods\r\n  success(title: string, content: string, override?: any) {\r\n    return this.set({\r\n      title: title,\r\n      content: content,\r\n      type: 'success',\r\n      icon: this.icons.success,\r\n      override: override\r\n    }, true);\r\n  }\r\n\r\n  error(title: string, content: string, override?: any) {\r\n    return this.set({title: title, content: content, type: 'error', icon: this.icons.error, override: override}, true);\r\n  }\r\n\r\n  alert(title: string, content: string, override?: any) {\r\n    return this.set({title: title, content: content, type: 'alert', icon: this.icons.alert, override: override}, true);\r\n  }\r\n\r\n  info(title: string, content: string, override?: any) {\r\n    return this.set({title: title, content: content, type: 'info', icon: this.icons.info, override: override}, true);\r\n  }\r\n\r\n  bare(title: string, content: string, override?: any) {\r\n    return this.set({title: title, content: content, type: 'bare', icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // With type method\r\n  create(title: string, content: string, type: string, override?: any) {\r\n    return this.set({title: title, content: content, type: type, icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // HTML Notification method\r\n  html(html: any, type: string, override?: any) {\r\n    return this.set({html: html, type: type, icon: 'bare', override: override}, true);\r\n  }\r\n\r\n  // Remove all notifications method\r\n  remove(id?: string) {\r\n    if (id) this.emitter.next({command: 'clean', id: id});\r\n    else this.emitter.next({command: 'cleanAll'});\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/notifications.service.ts","export interface Icons {\r\n  alert: string;\r\n  error: string;\r\n  info: string;\r\n  success: string;\r\n}\r\n\r\nexport const defaultIcons: Icons = {\r\n  alert: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\r\n        </svg>`,\r\n\r\n  error: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\r\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\r\n        </svg>\r\n    `,\r\n  info: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\r\n        </svg>\r\n    `,\r\n  success: `\r\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\r\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\r\n        </svg>\r\n    `\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/icons.ts","import {Component, EventEmitter, OnInit, OnDestroy, ViewEncapsulation, Input, Output} from '@angular/core';\r\nimport {Notification} from './notification.type';\r\nimport {NotificationsService} from './notifications.service';\r\nimport {Options} from './options.type';\r\nimport {Subscription} from 'rxjs/Subscription';\r\n\r\n@Component({\r\n    selector: 'simple-notifications',\r\n    encapsulation: ViewEncapsulation.None,\r\n    template: `\r\n        <div class=\"simple-notification-wrapper\" [ngClass]=\"position\">\r\n            <simple-notification\r\n                *ngFor=\"let a of notifications; let i = index\"\r\n                [item]=\"a\"\r\n                [timeOut]=\"timeOut\"\r\n                [clickToClose]=\"clickToClose\"\r\n                [maxLength]=\"maxLength\"\r\n                [showProgressBar]=\"showProgressBar\"\r\n                [pauseOnHover]=\"pauseOnHover\"\r\n                [theClass]=\"theClass\"\r\n                [rtl]=\"rtl\"\r\n                [animate]=\"animate\"\r\n                [position]=\"i\"\r\n                >\r\n            </simple-notification>\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .simple-notification-wrapper {\r\n            position: fixed;\r\n            width: 300px;\r\n            z-index: 1000;\r\n        }\r\n        \r\n        .simple-notification-wrapper.left { left: 20px; }\r\n        .simple-notification-wrapper.top { top: 20px; }\r\n        .simple-notification-wrapper.right { right: 20px; }\r\n        .simple-notification-wrapper.bottom { bottom: 20px; }\r\n        \r\n        @media (max-width: 340px) {\r\n            .simple-notification-wrapper {\r\n                width: auto;\r\n                left: 20px;\r\n                right: 20px;\r\n            }\r\n        }\r\n    `]\r\n})\r\n\r\nexport class SimpleNotificationsComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() set options(opt: Options) {\r\n        this.attachChanges(opt);\r\n    }\r\n\r\n    @Output() onCreate = new EventEmitter();\r\n    @Output() onDestroy = new EventEmitter();\r\n\r\n    public notifications: Notification[] = [];\r\n    public position: ['top' | 'bottom', 'right' | 'left'] = ['bottom', 'right'];\r\n\r\n    private lastNotificationCreated: Notification;\r\n    private listener: Subscription;\r\n\r\n    // Received values\r\n    private lastOnBottom: boolean = true;\r\n    private maxStack: number = 8;\r\n    private preventLastDuplicates: any = false;\r\n    private preventDuplicates: boolean = false;\r\n\r\n    // Sent values\r\n    public timeOut: number = 0;\r\n    public maxLength: number = 0;\r\n    public clickToClose: boolean = true;\r\n    public showProgressBar: boolean = true;\r\n    public pauseOnHover: boolean = true;\r\n    public theClass: string = '';\r\n    public rtl: boolean = false;\r\n    public animate: 'fromRight' | 'fromLeft' | 'rotate' | 'scale' = 'fromRight';\r\n\r\n    constructor(private _service: NotificationsService) {}\r\n\r\n    ngOnInit(): void {\r\n        // Listen for changes in the service\r\n        this.listener = this._service.getChangeEmitter()\r\n            .subscribe(item => {\r\n                switch (item.command) {\r\n                    case 'cleanAll':\r\n                        this.notifications = [];\r\n                        break;\r\n\r\n                    case 'clean':\r\n                        this.cleanSingle(item.id!);\r\n                        break;\r\n\r\n                    case 'set':\r\n                        if (item.add) this.add(item.notification!);\r\n                        else this.defaultBehavior(item);\r\n                        break;\r\n\r\n                    default:\r\n                        this.defaultBehavior(item);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    // Default behavior on event\r\n    defaultBehavior(value: any): void {\r\n        this.notifications.splice(this.notifications.indexOf(value.notification), 1);\r\n        this.onDestroy.emit(this.buildEmit(value.notification, false));\r\n    }\r\n\r\n\r\n    // Add the new notification to the notification array\r\n    add(item: Notification): void {\r\n        item.createdOn = new Date();\r\n\r\n        let toBlock: boolean = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\r\n\r\n        // Save this as the last created notification\r\n        this.lastNotificationCreated = item;\r\n\r\n        if (!toBlock) {\r\n            // Check if the notification should be added at the start or the end of the array\r\n            if (this.lastOnBottom) {\r\n                if (this.notifications.length >= this.maxStack) this.notifications.splice(0, 1);\r\n                this.notifications.push(item);\r\n            } else {\r\n                if (this.notifications.length >= this.maxStack) this.notifications.splice(this.notifications.length - 1, 1);\r\n                this.notifications.splice(0, 0, item);\r\n            }\r\n\r\n            this.onCreate.emit(this.buildEmit(item, true));\r\n        }\r\n    }\r\n\r\n    // Check if notifications should be prevented\r\n    block(item: Notification): boolean {\r\n\r\n        let toCheck = item.html ? this.checkHtml : this.checkStandard;\r\n\r\n        if (this.preventDuplicates && this.notifications.length > 0) {\r\n            for (let i = 0; i < this.notifications.length; i++) {\r\n                if (toCheck(this.notifications[i], item)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.preventLastDuplicates) {\r\n\r\n            let comp: Notification;\r\n\r\n            if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\r\n                if (this.lastOnBottom) {\r\n                    comp = this.notifications[this.notifications.length - 1];\r\n                } else {\r\n                    comp = this.notifications[0];\r\n                }\r\n            } else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\r\n                comp = this.lastNotificationCreated;\r\n            } else {\r\n                return false;\r\n            }\r\n            return toCheck(comp, item);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    checkStandard(checker: Notification, item: Notification): boolean {\r\n        return checker.type === item.type && checker.title === item.title && checker.content === item.content;\r\n    }\r\n\r\n    checkHtml(checker: Notification, item: Notification): boolean {\r\n        return checker.html ? checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html : false;\r\n    }\r\n\r\n    // Attach all the changes received in the options object\r\n    attachChanges(options: any): void {\r\n        Object.keys(options).forEach(a => {\r\n            if (this.hasOwnProperty(a)) {\r\n                (<any>this)[a] = options[a];\r\n            }\r\n        });\r\n    }\r\n\r\n    buildEmit(notification: Notification, to: boolean) {\r\n        let toEmit: Notification = {\r\n            createdOn: notification.createdOn,\r\n            type: notification.type,\r\n            icon: notification.icon,\r\n            id: notification.id\r\n        };\r\n\r\n        if (notification.html) {\r\n            toEmit.html = notification.html;\r\n        } else {\r\n            toEmit.title = notification.title;\r\n            toEmit.content = notification.content;\r\n        }\r\n\r\n        if (!to) {\r\n            toEmit.destroyedOn = new Date();\r\n        }\r\n\r\n        return toEmit;\r\n    }\r\n\r\n    cleanSingle(id: string): void {\r\n        let indexOfDelete: number = 0;\r\n        let doDelete: boolean = false;\r\n\r\n        this.notifications.forEach((notification, idx) => {\r\n            if (notification.id === id) {\r\n                indexOfDelete = idx;\r\n                doDelete = true;\r\n            }\r\n        });\r\n\r\n        if (doDelete) {\r\n            this.notifications.splice(indexOfDelete, 1);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this.listener) {\r\n            this.listener.unsubscribe();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/simple-notifications.component.ts","import {Component, OnInit, OnDestroy, trigger, state, style, transition, animate, Input, ViewEncapsulation, NgZone} from '@angular/core';\r\nimport {DomSanitizer, SafeHtml} from '@angular/platform-browser';\r\nimport {Notification} from './notification.type';\r\nimport {NotificationsService} from './notifications.service';\r\n@Component({\r\n    selector: 'simple-notification',\r\n    encapsulation: ViewEncapsulation.None,\r\n    animations: [\r\n        trigger('enterLeave', [\r\n\r\n            // Enter from right\r\n            state('fromRight', style({opacity: 1, transform: 'translateX(0)'})),\r\n            transition('* => fromRight', [\r\n                style({opacity: 0, transform: 'translateX(5%)'}),\r\n                animate('400ms ease-in-out')\r\n            ]),\r\n            state('fromRightOut', style({opacity: 0, transform: 'translateX(-5%)'})),\r\n            transition('fromRight => fromRightOut', [\r\n                style({opacity: 1, transform: 'translateX(0)'}),\r\n                animate('300ms ease-in-out')\r\n            ]),\r\n\r\n            // Enter from left\r\n            state('fromLeft', style({opacity: 1, transform: 'translateX(0)'})),\r\n            transition('* => fromLeft', [\r\n                style({opacity: 0, transform: 'translateX(-5%)'}),\r\n                animate('400ms ease-in-out')\r\n            ]),\r\n            state('fromLeftOut', style({opacity: 0, transform: 'translateX(5%)'})),\r\n            transition('fromLeft => fromLeftOut', [\r\n                style({opacity: 1, transform: 'translateX(0)'}),\r\n                animate('300ms ease-in-out')\r\n            ]),\r\n\r\n            // Rotate\r\n            state('scale', style({opacity: 1, transform: 'scale(1)'})),\r\n            transition('* => scale', [\r\n                style({opacity: 0, transform: 'scale(0)'}),\r\n                animate('400ms ease-in-out')\r\n            ]),\r\n            state('scaleOut', style({opacity: 0, transform: 'scale(0)'})),\r\n            transition('scale => scaleOut', [\r\n                style({opacity: 1, transform: 'scale(1)'}),\r\n                animate('400ms ease-in-out')\r\n            ]),\r\n\r\n            // Scale\r\n            state('rotate', style({opacity: 1, transform: 'rotate(0deg)'})),\r\n            transition('* => rotate', [\r\n                style({opacity: 0, transform: 'rotate(5deg)'}),\r\n                animate('400ms ease-in-out')\r\n            ]),\r\n            state('rotateOut', style({opacity: 0, transform: 'rotate(-5deg)'})),\r\n            transition('rotate => rotateOut', [\r\n                style({opacity: 1, transform: 'rotate(0deg)'}),\r\n                animate('400ms ease-in-out')\r\n            ])\r\n        ])\r\n    ],\r\n    template: `\r\n        <div class=\"simple-notification\"\r\n            [@enterLeave]=\"item.state\"\r\n            (click)=\"onClick($event)\"\r\n            [class]=\"theClass\"\r\n\r\n            [ngClass]=\"{\r\n                'alert': item.type === 'alert',\r\n                'error': item.type === 'error',\r\n                'success': item.type === 'success',\r\n                'info': item.type === 'info',\r\n                'bare': item.type === 'bare',\r\n                'rtl-mode': rtl\r\n            }\"\r\n\r\n            (mouseenter)=\"onEnter()\"\r\n            (mouseleave)=\"onLeave()\">\r\n\r\n            <div *ngIf=\"!item.html\">\r\n                <div class=\"sn-title\">{{item.title}}</div>\r\n                <div class=\"sn-content\">{{item.content | max:maxLength}}</div>\r\n\r\n                <div *ngIf=\"item.type !== 'bare'\" [innerHTML]=\"safeSvg\"></div>\r\n            </div>\r\n            <div *ngIf=\"item.html\" [innerHTML]=\"item.html\"></div>\r\n\r\n            <div class=\"sn-progress-loader\" *ngIf=\"showProgressBar\">\r\n                <span [ngStyle]=\"{'width': progressWidth + '%'}\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    `,\r\n    styles: [`\r\n        .simple-notification {\r\n            width: 100%;\r\n            padding: 10px 20px;\r\n            box-sizing: border-box;\r\n            position: relative;\r\n            float: left;\r\n            margin-bottom: 10px;\r\n            color: #fff;\r\n            cursor: pointer;\r\n            transition: all 0.5s;\r\n        }\r\n\r\n        .simple-notification .sn-title {\r\n            margin: 0;\r\n            padding: 0 50px 0 0;\r\n            line-height: 30px;\r\n            font-size: 20px;\r\n        }\r\n\r\n        .simple-notification .sn-content {\r\n            margin: 0;\r\n            font-size: 16px;\r\n            padding: 0 50px 0 0;\r\n            line-height: 20px;\r\n        }\r\n\r\n        .simple-notification svg {\r\n            position: absolute;\r\n            box-sizing: border-box;\r\n            top: 0;\r\n            right: 0;\r\n            width: 70px;\r\n            height: 70px;\r\n            padding: 10px;\r\n            fill: #fff;\r\n        }\r\n\r\n        .simple-notification.rtl-mode {\r\n            direction: rtl;\r\n        }\r\n\r\n        .simple-notification.rtl-mode .sn-content {\r\n            padding: 0 0 0 50px;\r\n        }\r\n\r\n        .simple-notification.rtl-mode svg {\r\n            left: 0;\r\n            right: auto;\r\n        }\r\n\r\n        .simple-notification.error { background: #F44336; }\r\n        .simple-notification.success { background: #8BC34A; }\r\n        .simple-notification.alert { background: #ffdb5b; }\r\n        .simple-notification.info { background: #03A9F4; }\r\n\r\n        .simple-notification .sn-progress-loader {\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            width: 100%;\r\n            height: 5px;\r\n        }\r\n\r\n        .simple-notification .sn-progress-loader span {\r\n            float: left;\r\n            height: 100%;\r\n        }\r\n\r\n        .simple-notification.success .sn-progress-loader span { background: #689F38; }\r\n        .simple-notification.error .sn-progress-loader span { background: #D32F2F; }\r\n        .simple-notification.alert .sn-progress-loader span { background: #edc242; }\r\n        .simple-notification.info .sn-progress-loader span { background: #0288D1; }\r\n        .simple-notification.bare .sn-progress-loader span { background: #ccc; }\r\n    `]\r\n})\r\n\r\nexport class NotificationComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() public timeOut: number;\r\n    @Input() public showProgressBar: boolean;\r\n    @Input() public pauseOnHover: boolean;\r\n    @Input() public clickToClose: boolean;\r\n    @Input() public maxLength: number;\r\n    @Input() public theClass: string;\r\n    @Input() public rtl: boolean;\r\n    @Input() public animate: string;\r\n    @Input() public position: number;\r\n    @Input() public item: Notification;\r\n\r\n\r\n    // Progress bar variables\r\n    public progressWidth: number = 0;\r\n    private stopTime: boolean = false;\r\n    private timer: any;\r\n    private steps: number;\r\n    private speed: number;\r\n    private count: number = 0;\r\n    private start: any;\r\n    private diff: any;\r\n\r\n    private safeSvg: SafeHtml;\r\n\r\n    constructor(\r\n        private notificationService: NotificationsService,\r\n        private domSanitizer: DomSanitizer,\r\n        private zone: NgZone\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        if (this.animate) {\r\n            this.item.state = this.animate;\r\n        }\r\n        if (this.item.override) {\r\n            this.attachOverrides();\r\n        }\r\n        if (this.timeOut !== 0) {\r\n            this.startTimeOut();\r\n        }\r\n\r\n        this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.item.icon);\r\n    }\r\n\r\n    startTimeOut(): void {\r\n        this.steps = this.timeOut / 10;\r\n        this.speed = this.timeOut / this.steps;\r\n        this.start = new Date().getTime();\r\n        this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.speed));\r\n    }\r\n\r\n    onEnter(): void {\r\n        if (this.pauseOnHover) {\r\n            this.stopTime = true;\r\n        }\r\n    }\r\n\r\n    onLeave(): void {\r\n        if (this.pauseOnHover) {\r\n            this.stopTime = false;\r\n            setTimeout(this.instance, (this.speed - this.diff));\r\n        }\r\n    }\r\n\r\n    setPosition(): number {\r\n        return this.position !== 0 ? this.position * 90 : 0;\r\n    }\r\n\r\n    onClick($e: MouseEvent): void {\r\n        this.item.click!.emit($e);\r\n\r\n        if (this.clickToClose) {\r\n            this.remove();\r\n        }\r\n    }\r\n\r\n    // Attach all the overrides\r\n    attachOverrides(): void {\r\n        Object.keys(this.item.override).forEach(a => {\r\n            if (this.hasOwnProperty(a)) {\r\n                (<any>this)[a] = this.item.override[a];\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        clearTimeout(this.timer);\r\n    }\r\n\r\n    private instance = () => {\r\n        this.zone.runOutsideAngular(() => {\r\n            this.zone.run(() => this.diff = (new Date().getTime() - this.start) - (this.count * this.speed));\r\n\r\n            if (this.count++ === this.steps) this.zone.run(() => this.remove());\r\n            else if (!this.stopTime) {\r\n                if (this.showProgressBar) this.zone.run(() => this.progressWidth += 100 / this.steps);\r\n\r\n                this.timer = setTimeout(this.instance, (this.speed - this.diff));\r\n            }\r\n        })\r\n    };\r\n\r\n    private remove() {\r\n        if (this.animate) {\r\n            this.item.state = this.animate + 'Out';\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.zone.run(() => this.notificationService.set(this.item, false))\r\n                }, 310);\r\n            })\r\n        } else {\r\n            this.notificationService.set(this.item, false);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/notification.component.ts","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\n@Pipe({name: 'max'})\r\nexport class MaxPipe implements PipeTransform {\r\n  transform(value: string, ...args: any[]): any {\r\n    if (!value) return value;\r\n\r\n    let allowed = args[0];\r\n    let received = value.length;\r\n\r\n    if (received > allowed && allowed !== 0) {\r\n      let toCut = allowed - received;\r\n      return value.slice(0, toCut);\r\n    }\r\n\r\n    return value;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/max.pipe.ts","import {NgModule} from '@angular/core';\r\nimport {PushNotificationsService} from './push-notifications.service';\r\n\r\n@NgModule({\r\n    providers: [PushNotificationsService]\r\n})\r\nexport class PushNotificationsModule {}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/push-notifications.module.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {PushNotification, Permission} from './push-notification.type';\r\n\r\ndeclare const Notification: any;\r\n\r\n@Injectable()\r\nexport class PushNotificationsService {\r\n\r\n    permission: Permission;\r\n\r\n    constructor() {\r\n        this.permission  = this.isSupported() ? Notification.permission : 'denied';\r\n    }\r\n\r\n    requestPermission() {\r\n        if ('Notification' in window)\r\n            Notification.requestPermission((status: any) => this.permission = status);\r\n    }\r\n\r\n    isSupported() {\r\n        return 'Notification' in window;\r\n    }\r\n\r\n    create(title: string, options?: PushNotification): any {\r\n\r\n        return new Observable((obs: any) => {\r\n\r\n            if (!('Notification' in window)) {\r\n                obs.error('Notifications are not available in this environment');\r\n                obs.complete();\r\n            }\r\n\r\n            if (this.permission !== 'granted') {\r\n                obs.error(`The user hasn't granted you permission to send push notifications`);\r\n                obs.complete();\r\n            }\r\n\r\n            const n = new Notification(title, options);\r\n\r\n            n.onshow = (e: any) => obs.next({notification: n, event: e});\r\n            n.onclick = (e: any) => obs.next({notification: n, event: e});\r\n            n.onerror = (e: any) => obs.error({notification: n, event: e});\r\n            n.onclose = () => obs.complete();\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./~/angular2-notifications/src/push-notifications.service.ts","import { NgModule }       from '@angular/core';\nimport { Routes,\n         RouterModule }   from '@angular/router';\nimport { BinComponent,\n         HomeComponent,\n         ArchiveComponent,\n         AboutComponent } from './components';\n\nexport const routes: Routes = [\n  { path: '', redirectTo: '/notes', pathMatch: 'full'},\n  { path: 'notes', component: HomeComponent },\n  // { path: 'archive-notes', component: ArchiveComponent },\n  // { path: 'recycle-bin', component: BinComponent },\n  { path: 'about', component: AboutComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.routing.ts","export * from './spinner/spinner';\nexport * from './bin/bin.component';\nexport * from './home/home.component';\nexport * from './about/about.component';\nexport * from './archive/archive.component';\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/index.ts","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'spinner',\n  template: `\n    <div class=\"loaders-container\">\n      <div class=\"spinner\">\n        <div class=\"circle\"></div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `.loaders-container {\n        width: 100%;\n        height: 100%;\n      }\n      .loaders-container .spinner {\n        box-sizing: border-box;\n        width: 40px;\n        height: 40px;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        z-index: 1;\n        margin-top: -20px;\n        margin-left: -20px;\n      }\n      .circle {\n        box-sizing: border-box;\n        width: 40px;\n        height: 40px;\n        border-radius: 100%;\n        border: 3px solid #bdc5c5;\n        border-top-color: #009688;\n        -webkit-animation: spin 1s infinite linear;\n        animation: spin 1s infinite linear;\n      }\n      @-webkit-keyframes spin {\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }\n      @keyframes spin {\n        100% {\n          -webkit-transform: rotate(360deg);\n          transform: rotate(360deg);\n        }\n      }`\n  ]\n})\nexport class Spinner {\n  constructor() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/spinner/spinner.ts","import { Component, OnInit }    from '@angular/core';\nimport { NotificationsService } from \"angular2-notifications\";\nimport { Subscription }         from 'rxjs/Subscription';\n\nimport { NotesTable,\n         NotesTableService,\n         DragulaService }       from '../../services';\nimport * as _                   from 'lodash';\n\n@Component({\n  selector: 'bin',\n  template: require('./bin.component.html'),\n})\nexport class BinComponent {\n\n  public order:any;\n  public notes: any;\n  public orderNotes: any;\n  public toDeleteNote: any;\n  public editNoteDraft: any;\n  public toDeleteNoteRow: any;\n  public notificationOptions: any;\n  public spinner: boolean = true;\n  public displayList: boolean = false;\n  public emptyHtmlMsg: boolean = false;\n\n  public notes_table = NOTES_TABLE;\n  public subscription: Subscription;\n\n  constructor(\n      private _notesService: NotesTableService,\n      private _notificationsService: NotificationsService\n    ) {\n    this.notes = [];\n    this.toDeleteNote = {};\n    this.notificationOptions = {\n      timeOut: 2000,\n      lastOnBottom: true,\n      clickToClose: true,\n      showProgressBar: false,\n      pauseOnHover: true,\n      preventDuplicates: false,\n      theClass: \"notes-notifications bin\",\n      rtl: false\n    };\n    this.displayList = localStorage.getItem(\"displayBinTypeList\") == 'true' ? true : false;\n  }\n\n  ngOnInit() {\n    this.subscription = this._notesService.notes_tables$.subscribe(\n      notes_table => this.notes_table = notes_table\n    );\n    this.refreshNotesTables();\n  }\n\n  refreshNotesTables() {\n    this._notesService.getNotes('binNotes').then(\n      alldoc => {\n        this.notes_table = alldoc.rows;\n        this.notes = this.notes_table;\n        if (_.isEmpty(this.notes)) {\n          this.emptyHtmlMsg = true;\n        } else {\n          this.emptyHtmlMsg = false;\n        }\n        this.spinner = false;\n      },\n      err => {\n        this.spinner = false;\n      }\n    );\n  }\n\n  deleteNote() {\n    if (this.toDeleteNote) {\n      this.toDeleteNoteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n      setTimeout(() => {\n        this._notesService.deleteNote('binNotes', this.toDeleteNote.doc)\n          .then(res => {\n            this._notificationsService.error(\"Done\", \"Note deleted forever\");\n            this.refreshNotesTables();\n            this.toDeleteNote = {};\n          });\n      }, 200);\n    }\n  }\n\n  setDeleteNote(note, noteRow) {\n    this.toDeleteNote = note;\n    this.toDeleteNoteRow = noteRow;\n  }\n\n  restoreNote(note, noteRow) {\n    noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n    setTimeout(() => {\n      this._notesService.deleteNote('binNotes', note.doc)\n        .then(res => {\n          this._notificationsService.success(\"Done\", \"Note restored\");\n          this.refreshNotesTables();\n        });\n      let restore_note = note;\n      delete restore_note.doc._rev;\n      if (restore_note.doc.restore === \"archive\" ) {\n        this._notesService.saveNote('archiveNotes', restore_note.doc)\n          .then(res => {\n            this.updateArchiveNotesOrder(restore_note.doc);\n          });\n      } else if (restore_note.doc.restore === \"note\") {\n        this._notesService.saveNote('notes', restore_note.doc)\n          .then(res => {\n            this.updateNotesOrder(restore_note.doc);\n          });\n      }\n    }, 300);\n  }\n\n  displayTypeChange() {\n    this.displayList = this.displayList ? false : true;\n    localStorage.setItem(\"displayBinTypeList\", String(this.displayList));\n  }\n\n  updateArchiveNotesOrder(note) {\n    let newOrder: any = [];\n    if (localStorage.getItem('archiveOrder')) {\n      newOrder = JSON.parse(localStorage.getItem('archiveOrder'));\n      newOrder.unshift(note._id);\n    } else {\n      newOrder.push(note._id);\n    }\n    localStorage.setItem(\"archiveOrder\", JSON.stringify(newOrder));\n  }\n\n  updateNotesOrder(draft) {\n    let newOrder: any = [];\n    if (localStorage.getItem('order')) {\n      newOrder = JSON.parse(localStorage.getItem('order'));\n      newOrder.unshift(draft._id);\n    } else {\n      newOrder.push(draft._id);\n    }\n    localStorage.setItem(\"order\", JSON.stringify(newOrder));\n  }\n}\n\nlet NOTES_TABLE: NotesTable[] = []\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/bin/bin.component.ts","export * from './notes_table';\nexport * from './notes_service';\nexport * from './dragula_service';\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/index.ts","export class NotesTable {\n  id: string;\n  title: string;\n  note: string;\n  label: string;\n  reminder: {\n    date: string,\n    repeat: string\n  };\n  color: string;\n  time: string;\n  restore: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/notes_table.ts","import { Injectable }       from '@angular/core';\nimport { BehaviorSubject }  from 'rxjs/BehaviorSubject';\nimport * as PouchDB         from 'pouchdb';\n\nimport { NotesTable }       from './notes_table';\nimport { PushNotificationsService } from 'angular2-notifications';\n\nexport var NOTES_TABLES: NotesTable[] = [];\n\nlet localDB = {\n  notes             : new PouchDB('notes_table'),\n  notesOrder        : new PouchDB('notes_order_table'),\n  archiveNotes      : new PouchDB('archive_notes_table'),\n  archiveNotesOrder : new PouchDB('archive_notes_order'),\n  binNotes          : new PouchDB('bin_notes_table')\n}\n\n@Injectable()\nexport class NotesTableService {\n  notes_tables_source = new BehaviorSubject<NotesTable[]>([]);\n  notes_tables$ = this.notes_tables_source.asObservable();\n  reminderTable: any = {\n    notes: [],\n    archiveNotes: []\n  };\n  audio: any;\n\n  constructor(private _pushNotifications: PushNotificationsService) {\n    this._pushNotifications.requestPermission();\n    this.audio = new Audio('sound/notification.mp3');\n  }\n\n  getNotes(schema: string) {\n    var docs = localDB[schema].allDocs({\n      include_docs: true\n    });\n    return docs;\n  }\n\n  saveNote(schema: string, note: any) {\n    return localDB[schema].put(note);\n  }\n\n  deleteNote(schema: string, note: any) {\n    return localDB[schema].remove(note);\n  }\n\n  updateNote(schema: string, note: any) {\n    return localDB[schema].put(note);\n  }\n\n  getOrder(schema: string, order: any) {\n    var docs = order[schema].allDocs({\n      include_docs: true\n    });\n    return docs;\n  }\n\n  saveOrder(schema: string, order: any) {\n    return order[schema].put(order);\n  }\n\n  updateReminderTable(schema: string) {\n    this.getNotes(schema).then(\n      alldoc => {\n        let rows = alldoc.rows;\n        this.reminderTable[schema] = [];\n        rows.forEach(row => {\n          if (row.doc.reminder) {\n            this.reminderTable[schema].push(row);\n          }\n        });\n      });\n  }\n\n  reminderTickStart() {\n    setInterval(() => {\n      this.checkForReminder();\n    }, 60000);\n  }\n\n  checkForReminder() {\n    let todayDate = new Date();\n    this.reminderTable.notes.forEach(row => {\n      this.checkForReminderRepeatation(row, todayDate, 'notes');\n    });\n    this.reminderTable.archiveNotes.forEach(row => {\n      this.checkForReminderRepeatation(row, todayDate, 'archiveNotes');\n    });\n  }\n\n  checkForReminderRepeatation(row, todayDate, schema) {\n    let reminderDate = new Date(row.doc.reminder.date);\n    let repeatText = row.doc.reminder.repeat;\n      if (repeatText === 'doesnotrepeat') {\n        if (todayDate.getFullYear() === reminderDate.getFullYear() &&\n            todayDate.getMonth() === reminderDate.getMonth() &&\n            todayDate.getDate() === reminderDate.getDate() &&\n            todayDate.getHours() === reminderDate.getHours() &&\n            todayDate.getMinutes() === reminderDate.getMinutes())\n            {\n              this.pushNotification(row);\n            }\n      } else if (repeatText === 'daily') {\n        if (todayDate.getHours() === reminderDate.getHours() &&\n            todayDate.getMinutes() === reminderDate.getMinutes())\n            {\n                this.pushNotification(row);\n            }\n      } else if (repeatText === 'weekly') {\n        if (todayDate.getDay() === reminderDate.getDay() &&\n            todayDate.getHours() === reminderDate.getHours() &&\n            todayDate.getMinutes() === reminderDate.getMinutes())\n            {\n                this.pushNotification(row);\n            }\n      } else if (repeatText === 'monthly') {\n        if (todayDate.getDate() === reminderDate.getDate() &&\n            todayDate.getHours() === reminderDate.getHours() &&\n            todayDate.getMinutes() === reminderDate.getMinutes())\n            {\n              this.pushNotification(row);\n            }\n      } else if (repeatText === 'yearly') {\n        if (todayDate.getMonth() === reminderDate.getMonth() &&\n            todayDate.getDate() === reminderDate.getDate() &&\n            todayDate.getHours() === reminderDate.getHours() &&\n            todayDate.getMinutes() === reminderDate.getMinutes())\n            {\n              this.pushNotification(row);\n            }\n      }\n  }\n\n  pushNotification(note) {\n    this.audio.play();\n    this._pushNotifications.create(note.doc.title, {body: note.doc.note, icon: 'images/preserver_small.png'}).subscribe(\n      res => {},\n      err => {}\n    );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/notes_service.ts","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar uuidV4 = _interopDefault(require('uuid'));\nvar lie = _interopDefault(require('lie'));\nvar getArguments = _interopDefault(require('argsarray'));\nvar events = require('events');\nvar inherits = _interopDefault(require('inherits'));\nvar nextTick = _interopDefault(require('immediate'));\nvar debug = _interopDefault(require('debug'));\nvar Md5 = _interopDefault(require('spark-md5'));\nvar vuvuzela = _interopDefault(require('vuvuzela'));\n\n/* istanbul ignore next */\nvar PouchPromise = typeof Promise === 'function' ? Promise : lie;\n\nfunction isBinaryObject(object) {\n  return (typeof ArrayBuffer !== 'undefined' && object instanceof ArrayBuffer) ||\n    (typeof Blob !== 'undefined' && object instanceof Blob);\n}\n\nfunction cloneArrayBuffer(buff) {\n  if (typeof buff.slice === 'function') {\n    return buff.slice(0);\n  }\n  // IE10-11 slice() polyfill\n  var target = new ArrayBuffer(buff.byteLength);\n  var targetArray = new Uint8Array(target);\n  var sourceArray = new Uint8Array(buff);\n  targetArray.set(sourceArray);\n  return target;\n}\n\nfunction cloneBinaryObject(object) {\n  if (object instanceof ArrayBuffer) {\n    return cloneArrayBuffer(object);\n  }\n  var size = object.size;\n  var type = object.type;\n  // Blob\n  if (typeof object.slice === 'function') {\n    return object.slice(0, size, type);\n  }\n  // PhantomJS slice() replacement\n  return object.webkitSlice(0, size, type);\n}\n\n// most of this is borrowed from lodash.isPlainObject:\n// https://github.com/fis-components/lodash.isplainobject/\n// blob/29c358140a74f252aeb08c9eb28bef86f2217d4a/index.js\n\nvar funcToString = Function.prototype.toString;\nvar objectCtorString = funcToString.call(Object);\n\nfunction isPlainObject(value) {\n  var proto = Object.getPrototypeOf(value);\n  /* istanbul ignore if */\n  if (proto === null) { // not sure when this happens, but I guess it can\n    return true;\n  }\n  var Ctor = proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nfunction clone(object) {\n  var newObject;\n  var i;\n  var len;\n\n  if (!object || typeof object !== 'object') {\n    return object;\n  }\n\n  if (Array.isArray(object)) {\n    newObject = [];\n    for (i = 0, len = object.length; i < len; i++) {\n      newObject[i] = clone(object[i]);\n    }\n    return newObject;\n  }\n\n  // special case: to avoid inconsistencies between IndexedDB\n  // and other backends, we automatically stringify Dates\n  if (object instanceof Date) {\n    return object.toISOString();\n  }\n\n  if (isBinaryObject(object)) {\n    return cloneBinaryObject(object);\n  }\n\n  if (!isPlainObject(object)) {\n    return object; // don't clone objects like Workers\n  }\n\n  newObject = {};\n  for (i in object) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(object, i)) {\n      var value = clone(object[i]);\n      if (typeof value !== 'undefined') {\n        newObject[i] = value;\n      }\n    }\n  }\n  return newObject;\n}\n\nfunction once(fun) {\n  var called = false;\n  return getArguments(function (args) {\n    /* istanbul ignore if */\n    if (called) {\n      // this is a smoke test and should never actually happen\n      throw new Error('once called more than once');\n    } else {\n      called = true;\n      fun.apply(this, args);\n    }\n  });\n}\n\nfunction toPromise(func) {\n  //create the function we will be returning\n  return getArguments(function (args) {\n    // Clone arguments\n    args = clone(args);\n    var self = this;\n    // if the last argument is a function, assume its a callback\n    var usedCB = (typeof args[args.length - 1] === 'function') ? args.pop() : false;\n    var promise = new PouchPromise(function (fulfill, reject) {\n      var resp;\n      try {\n        var callback = once(function (err, mesg) {\n          if (err) {\n            reject(err);\n          } else {\n            fulfill(mesg);\n          }\n        });\n        // create a callback for this invocation\n        // apply the function in the orig context\n        args.push(callback);\n        resp = func.apply(self, args);\n        if (resp && typeof resp.then === 'function') {\n          fulfill(resp);\n        }\n      } catch (e) {\n        reject(e);\n      }\n    });\n    // if there is a callback, call it back\n    if (usedCB) {\n      promise.then(function (result) {\n        usedCB(null, result);\n      }, usedCB);\n    }\n    return promise;\n  });\n}\n\nfunction logApiCall(self, name, args) {\n  /* istanbul ignore if */\n  if (self.constructor.listeners('debug').length) {\n    var logArgs = ['api', self.name, name];\n    for (var i = 0; i < args.length - 1; i++) {\n      logArgs.push(args[i]);\n    }\n    self.constructor.emit('debug', logArgs);\n\n    // override the callback itself to log the response\n    var origCallback = args[args.length - 1];\n    args[args.length - 1] = function (err, res) {\n      var responseArgs = ['api', self.name, name];\n      responseArgs = responseArgs.concat(\n        err ? ['error', err] : ['success', res]\n      );\n      self.constructor.emit('debug', responseArgs);\n      origCallback(err, res);\n    };\n  }\n}\n\nfunction adapterFun(name, callback) {\n  return toPromise(getArguments(function (args) {\n    if (this._closed) {\n      return PouchPromise.reject(new Error('database is closed'));\n    }\n    if (this._destroyed) {\n      return PouchPromise.reject(new Error('database is destroyed'));\n    }\n    var self = this;\n    logApiCall(self, name, args);\n    if (!this.taskqueue.isReady) {\n      return new PouchPromise(function (fulfill, reject) {\n        self.taskqueue.addTask(function (failed) {\n          if (failed) {\n            reject(failed);\n          } else {\n            fulfill(self[name].apply(self, args));\n          }\n        });\n      });\n    }\n    return callback.apply(this, args);\n  }));\n}\n\nfunction mangle(key) {\n  return '$' + key;\n}\nfunction unmangle(key) {\n  return key.substring(1);\n}\nfunction Map$1() {\n  this._store = {};\n}\nMap$1.prototype.get = function (key) {\n  var mangled = mangle(key);\n  return this._store[mangled];\n};\nMap$1.prototype.set = function (key, value) {\n  var mangled = mangle(key);\n  this._store[mangled] = value;\n  return true;\n};\nMap$1.prototype.has = function (key) {\n  var mangled = mangle(key);\n  return mangled in this._store;\n};\nMap$1.prototype.delete = function (key) {\n  var mangled = mangle(key);\n  var res = mangled in this._store;\n  delete this._store[mangled];\n  return res;\n};\nMap$1.prototype.forEach = function (cb) {\n  var keys = Object.keys(this._store);\n  for (var i = 0, len = keys.length; i < len; i++) {\n    var key = keys[i];\n    var value = this._store[key];\n    key = unmangle(key);\n    cb(value, key);\n  }\n};\nObject.defineProperty(Map$1.prototype, 'size', {\n  get: function () {\n    return Object.keys(this._store).length;\n  }\n});\n\nfunction Set$1(array) {\n  this._store = new Map$1();\n\n  // init with an array\n  if (array && Array.isArray(array)) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      this.add(array[i]);\n    }\n  }\n}\nSet$1.prototype.add = function (key) {\n  return this._store.set(key, true);\n};\nSet$1.prototype.has = function (key) {\n  return this._store.has(key);\n};\nSet$1.prototype.forEach = function (cb) {\n  this._store.forEach(function (value, key) {\n    cb(key);\n  });\n};\nObject.defineProperty(Set$1.prototype, 'size', {\n  get: function () {\n    return this._store.size;\n  }\n});\n\n/* global Map,Set,Symbol */\n// Based on https://kangax.github.io/compat-table/es6/ we can sniff out\n// incomplete Map/Set implementations which would otherwise cause our tests to fail.\n// Notably they fail in IE11 and iOS 8.4, which this prevents.\nfunction supportsMapAndSet() {\n  if (typeof Symbol === 'undefined' || typeof Map === 'undefined' || typeof Set === 'undefined') {\n    return false;\n  }\n  var prop = Object.getOwnPropertyDescriptor(Map, Symbol.species);\n  return prop && 'get' in prop && Map[Symbol.species] === Map;\n}\n\n// based on https://github.com/montagejs/collections\n/* global Map,Set */\n\nvar ExportedSet;\nvar ExportedMap;\n\n{\n  if (supportsMapAndSet()) { // prefer built-in Map/Set\n    ExportedSet = Set;\n    ExportedMap = Map;\n  } else { // fall back to our polyfill\n    ExportedSet = Set$1;\n    ExportedMap = Map$1;\n  }\n}\n\n// like underscore/lodash _.pick()\nfunction pick(obj, arr) {\n  var res = {};\n  for (var i = 0, len = arr.length; i < len; i++) {\n    var prop = arr[i];\n    if (prop in obj) {\n      res[prop] = obj[prop];\n    }\n  }\n  return res;\n}\n\n// Most browsers throttle concurrent requests at 6, so it's silly\n// to shim _bulk_get by trying to launch potentially hundreds of requests\n// and then letting the majority time out. We can handle this ourselves.\nvar MAX_NUM_CONCURRENT_REQUESTS = 6;\n\nfunction identityFunction(x) {\n  return x;\n}\n\nfunction formatResultForOpenRevsGet(result) {\n  return [{\n    ok: result\n  }];\n}\n\n// shim for P/CouchDB adapters that don't directly implement _bulk_get\nfunction bulkGet(db, opts, callback) {\n  var requests = opts.docs;\n\n  // consolidate into one request per doc if possible\n  var requestsById = new ExportedMap();\n  requests.forEach(function (request) {\n    if (requestsById.has(request.id)) {\n      requestsById.get(request.id).push(request);\n    } else {\n      requestsById.set(request.id, [request]);\n    }\n  });\n\n  var numDocs = requestsById.size;\n  var numDone = 0;\n  var perDocResults = new Array(numDocs);\n\n  function collapseResultsAndFinish() {\n    var results = [];\n    perDocResults.forEach(function (res) {\n      res.docs.forEach(function (info) {\n        results.push({\n          id: res.id,\n          docs: [info]\n        });\n      });\n    });\n    callback(null, {results: results});\n  }\n\n  function checkDone() {\n    if (++numDone === numDocs) {\n      collapseResultsAndFinish();\n    }\n  }\n\n  function gotResult(docIndex, id, docs) {\n    perDocResults[docIndex] = {id: id, docs: docs};\n    checkDone();\n  }\n\n  var allRequests = [];\n  requestsById.forEach(function (value, key) {\n    allRequests.push(key);\n  });\n\n  var i = 0;\n\n  function nextBatch() {\n\n    if (i >= allRequests.length) {\n      return;\n    }\n\n    var upTo = Math.min(i + MAX_NUM_CONCURRENT_REQUESTS, allRequests.length);\n    var batch = allRequests.slice(i, upTo);\n    processBatch(batch, i);\n    i += batch.length;\n  }\n\n  function processBatch(batch, offset) {\n    batch.forEach(function (docId, j) {\n      var docIdx = offset + j;\n      var docRequests = requestsById.get(docId);\n\n      // just use the first request as the \"template\"\n      // TODO: The _bulk_get API allows for more subtle use cases than this,\n      // but for now it is unlikely that there will be a mix of different\n      // \"atts_since\" or \"attachments\" in the same request, since it's just\n      // replicate.js that is using this for the moment.\n      // Also, atts_since is aspirational, since we don't support it yet.\n      var docOpts = pick(docRequests[0], ['atts_since', 'attachments']);\n      docOpts.open_revs = docRequests.map(function (request) {\n        // rev is optional, open_revs disallowed\n        return request.rev;\n      });\n\n      // remove falsey / undefined revisions\n      docOpts.open_revs = docOpts.open_revs.filter(identityFunction);\n\n      var formatResult = identityFunction;\n\n      if (docOpts.open_revs.length === 0) {\n        delete docOpts.open_revs;\n\n        // when fetching only the \"winning\" leaf,\n        // transform the result so it looks like an open_revs\n        // request\n        formatResult = formatResultForOpenRevsGet;\n      }\n\n      // globally-supplied options\n      ['revs', 'attachments', 'binary', 'ajax', 'latest'].forEach(function (param) {\n        if (param in opts) {\n          docOpts[param] = opts[param];\n        }\n      });\n      db.get(docId, docOpts, function (err, res) {\n        var result;\n        /* istanbul ignore if */\n        if (err) {\n          result = [{error: err}];\n        } else {\n          result = formatResult(res);\n        }\n        gotResult(docIdx, docId, result);\n        nextBatch();\n      });\n    });\n  }\n\n  nextBatch();\n\n}\n\nfunction isChromeApp() {\n  return (typeof chrome !== \"undefined\" &&\n    typeof chrome.storage !== \"undefined\" &&\n    typeof chrome.storage.local !== \"undefined\");\n}\n\nvar hasLocal;\n\nif (isChromeApp()) {\n  hasLocal = false;\n} else {\n  try {\n    localStorage.setItem('_pouch_check_localstorage', 1);\n    hasLocal = !!localStorage.getItem('_pouch_check_localstorage');\n  } catch (e) {\n    hasLocal = false;\n  }\n}\n\nfunction hasLocalStorage() {\n  return hasLocal;\n}\n\n// Custom nextTick() shim for browsers. In node, this will just be process.nextTick(). We\n// avoid using process.nextTick() directly because the polyfill is very large and we don't\n// need all of it (see: https://github.com/defunctzombie/node-process).\n// \"immediate\" 3.0.8 is used by lie, and it's a smaller version of the latest \"immediate\"\n// package, so it's the one we use.\n// When we use nextTick() in our codebase, we only care about not releasing Zalgo\n// (see: http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony).\n// Microtask vs macrotask doesn't matter to us. So we're free to use the fastest\n// (least latency) option, which is \"immediate\" due to use of microtasks.\n// All of our nextTicks are isolated to this one function so we can easily swap out one\n// implementation for another.\n\ninherits(Changes, events.EventEmitter);\n\n/* istanbul ignore next */\nfunction attachBrowserEvents(self) {\n  if (isChromeApp()) {\n    chrome.storage.onChanged.addListener(function (e) {\n      // make sure it's event addressed to us\n      if (e.db_name != null) {\n        //object only has oldValue, newValue members\n        self.emit(e.dbName.newValue);\n      }\n    });\n  } else if (hasLocalStorage()) {\n    if (typeof addEventListener !== 'undefined') {\n      addEventListener(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    } else { // old IE\n      window.attachEvent(\"storage\", function (e) {\n        self.emit(e.key);\n      });\n    }\n  }\n}\n\nfunction Changes() {\n  events.EventEmitter.call(this);\n  this._listeners = {};\n\n  attachBrowserEvents(this);\n}\nChanges.prototype.addListener = function (dbName, id, db, opts) {\n  /* istanbul ignore if */\n  if (this._listeners[id]) {\n    return;\n  }\n  var self = this;\n  var inprogress = false;\n  function eventFunction() {\n    /* istanbul ignore if */\n    if (!self._listeners[id]) {\n      return;\n    }\n    if (inprogress) {\n      inprogress = 'waiting';\n      return;\n    }\n    inprogress = true;\n    var changesOpts = pick(opts, [\n      'style', 'include_docs', 'attachments', 'conflicts', 'filter',\n      'doc_ids', 'view', 'since', 'query_params', 'binary'\n    ]);\n\n    /* istanbul ignore next */\n    function onError() {\n      inprogress = false;\n    }\n\n    db.changes(changesOpts).on('change', function (c) {\n      if (c.seq > opts.since && !opts.cancelled) {\n        opts.since = c.seq;\n        opts.onChange(c);\n      }\n    }).on('complete', function () {\n      if (inprogress === 'waiting') {\n        nextTick(eventFunction);\n      }\n      inprogress = false;\n    }).on('error', onError);\n  }\n  this._listeners[id] = eventFunction;\n  this.on(dbName, eventFunction);\n};\n\nChanges.prototype.removeListener = function (dbName, id) {\n  /* istanbul ignore if */\n  if (!(id in this._listeners)) {\n    return;\n  }\n  events.EventEmitter.prototype.removeListener.call(this, dbName,\n    this._listeners[id]);\n  delete this._listeners[id];\n};\n\n\n/* istanbul ignore next */\nChanges.prototype.notifyLocalWindows = function (dbName) {\n  //do a useless change on a storage thing\n  //in order to get other windows's listeners to activate\n  if (isChromeApp()) {\n    chrome.storage.local.set({dbName: dbName});\n  } else if (hasLocalStorage()) {\n    localStorage[dbName] = (localStorage[dbName] === \"a\") ? \"b\" : \"a\";\n  }\n};\n\nChanges.prototype.notify = function (dbName) {\n  this.emit(dbName);\n  this.notifyLocalWindows(dbName);\n};\n\nfunction guardedConsole(method) {\n  /* istanbul ignore else */\n  if (typeof console !== 'undefined' && typeof console[method] === 'function') {\n    var args = Array.prototype.slice.call(arguments, 1);\n    console[method].apply(console, args);\n  }\n}\n\nfunction randomNumber(min, max) {\n  var maxTimeout = 600000; // Hard-coded default of 10 minutes\n  min = parseInt(min, 10) || 0;\n  max = parseInt(max, 10);\n  if (max !== max || max <= min) {\n    max = (min || 1) << 1; //doubling\n  } else {\n    max = max + 1;\n  }\n  // In order to not exceed maxTimeout, pick a random value between half of maxTimeout and maxTimeout\n  if (max > maxTimeout) {\n    min = maxTimeout >> 1; // divide by two\n    max = maxTimeout;\n  }\n  var ratio = Math.random();\n  var range = max - min;\n\n  return ~~(range * ratio + min); // ~~ coerces to an int, but fast.\n}\n\nfunction defaultBackOff(min) {\n  var max = 0;\n  if (!min) {\n    max = 2000;\n  }\n  return randomNumber(min, max);\n}\n\n// designed to give info to browser users, who are disturbed\n// when they see http errors in the console\nfunction explainError(status, str) {\n  guardedConsole('info', 'The above ' + status + ' is totally normal. ' + str);\n}\n\nvar assign;\n{\n  if (typeof Object.assign === 'function') {\n    assign = Object.assign;\n  } else {\n    // lite Object.assign polyfill based on\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    assign = function (target) {\n      var to = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var nextSource = arguments[index];\n\n        if (nextSource != null) { // Skip over if undefined or null\n          for (var nextKey in nextSource) {\n            // Avoid bugs when hasOwnProperty is shadowed\n            if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n      return to;\n    };\n  }\n}\n\nvar $inject_Object_assign = assign;\n\ninherits(PouchError, Error);\n\nfunction PouchError(status, error, reason) {\n  Error.call(this, reason);\n  this.status = status;\n  this.name = error;\n  this.message = reason;\n  this.error = true;\n}\n\nPouchError.prototype.toString = function () {\n  return JSON.stringify({\n    status: this.status,\n    name: this.name,\n    message: this.message,\n    reason: this.reason\n  });\n};\n\nvar UNAUTHORIZED = new PouchError(401, 'unauthorized', \"Name or password is incorrect.\");\nvar MISSING_BULK_DOCS = new PouchError(400, 'bad_request', \"Missing JSON list of 'docs'\");\nvar MISSING_DOC = new PouchError(404, 'not_found', 'missing');\nvar REV_CONFLICT = new PouchError(409, 'conflict', 'Document update conflict');\nvar INVALID_ID = new PouchError(400, 'bad_request', '_id field must contain a string');\nvar MISSING_ID = new PouchError(412, 'missing_id', '_id is required for puts');\nvar RESERVED_ID = new PouchError(400, 'bad_request', 'Only reserved document ids may start with underscore.');\nvar NOT_OPEN = new PouchError(412, 'precondition_failed', 'Database not open');\nvar UNKNOWN_ERROR = new PouchError(500, 'unknown_error', 'Database encountered an unknown error');\nvar BAD_ARG = new PouchError(500, 'badarg', 'Some query argument is invalid');\nvar INVALID_REQUEST = new PouchError(400, 'invalid_request', 'Request was invalid');\nvar QUERY_PARSE_ERROR = new PouchError(400, 'query_parse_error', 'Some query parameter is invalid');\nvar DOC_VALIDATION = new PouchError(500, 'doc_validation', 'Bad special document member');\nvar BAD_REQUEST = new PouchError(400, 'bad_request', 'Something wrong with the request');\nvar NOT_AN_OBJECT = new PouchError(400, 'bad_request', 'Document must be a JSON object');\nvar DB_MISSING = new PouchError(404, 'not_found', 'Database not found');\nvar IDB_ERROR = new PouchError(500, 'indexed_db_went_bad', 'unknown');\nvar WSQ_ERROR = new PouchError(500, 'web_sql_went_bad', 'unknown');\nvar LDB_ERROR = new PouchError(500, 'levelDB_went_went_bad', 'unknown');\nvar FORBIDDEN = new PouchError(403, 'forbidden', 'Forbidden by design doc validate_doc_update function');\nvar INVALID_REV = new PouchError(400, 'bad_request', 'Invalid rev format');\nvar FILE_EXISTS = new PouchError(412, 'file_exists', 'The database could not be created, the file already exists.');\nvar MISSING_STUB = new PouchError(412, 'missing_stub', 'A pre-existing attachment stub wasn\\'t found');\nvar INVALID_URL = new PouchError(413, 'invalid_url', 'Provided URL is invalid');\n\nfunction createError(error, reason) {\n  function CustomPouchError(reason) {\n    // inherit error properties from our parent error manually\n    // so as to allow proper JSON parsing.\n    /* jshint ignore:start */\n    for (var p in error) {\n      if (typeof error[p] !== 'function') {\n        this[p] = error[p];\n      }\n    }\n    /* jshint ignore:end */\n    if (reason !== undefined) {\n      this.reason = reason;\n    }\n  }\n  CustomPouchError.prototype = PouchError.prototype;\n  return new CustomPouchError(reason);\n}\n\nfunction generateErrorFromResponse(err) {\n\n  if (typeof err !== 'object') {\n    var data = err;\n    err = UNKNOWN_ERROR;\n    err.data = data;\n  }\n\n  if ('error' in err && err.error === 'conflict') {\n    err.name = 'conflict';\n    err.status = 409;\n  }\n\n  if (!('name' in err)) {\n    err.name = err.error || 'unknown';\n  }\n\n  if (!('status' in err)) {\n    err.status = 500;\n  }\n\n  if (!('message' in err)) {\n    err.message = err.message || err.reason;\n  }\n\n  return err;\n}\n\nfunction tryFilter(filter, doc, req) {\n  try {\n    return !filter(doc, req);\n  } catch (err) {\n    var msg = 'Filter function threw: ' + err.toString();\n    return createError(BAD_REQUEST, msg);\n  }\n}\n\nfunction filterChange(opts) {\n  var req = {};\n  var hasFilter = opts.filter && typeof opts.filter === 'function';\n  req.query = opts.query_params;\n\n  return function filter(change) {\n    if (!change.doc) {\n      // CSG sends events on the changes feed that don't have documents,\n      // this hack makes a whole lot of existing code robust.\n      change.doc = {};\n    }\n\n    var filterReturn = hasFilter && tryFilter(opts.filter, change.doc, req);\n\n    if (typeof filterReturn === 'object') {\n      return filterReturn;\n    }\n\n    if (filterReturn) {\n      return false;\n    }\n\n    if (!opts.include_docs) {\n      delete change.doc;\n    } else if (!opts.attachments) {\n      for (var att in change.doc._attachments) {\n        /* istanbul ignore else */\n        if (change.doc._attachments.hasOwnProperty(att)) {\n          change.doc._attachments[att].stub = true;\n        }\n      }\n    }\n    return true;\n  };\n}\n\nfunction flatten(arrs) {\n  var res = [];\n  for (var i = 0, len = arrs.length; i < len; i++) {\n    res = res.concat(arrs[i]);\n  }\n  return res;\n}\n\n// shim for Function.prototype.name,\n// for browsers that don't support it like IE\n\n/* istanbul ignore next */\n\n// Determine id an ID is valid\n//   - invalid IDs begin with an underescore that does not begin '_design' or\n//     '_local'\n//   - any other string value is a valid id\n// Returns the specific error object for each case\nfunction invalidIdError(id) {\n  var err;\n  if (!id) {\n    err = createError(MISSING_ID);\n  } else if (typeof id !== 'string') {\n    err = createError(INVALID_ID);\n  } else if (/^_/.test(id) && !(/^_(design|local)/).test(id)) {\n    err = createError(RESERVED_ID);\n  }\n  if (err) {\n    throw err;\n  }\n}\n\n// Checks if a PouchDB object is \"remote\" or not. This is\n// designed to opt-in to certain optimizations, such as\n// avoiding checks for \"dependentDbs\" and other things that\n// we know only apply to local databases. In general, \"remote\"\n// should be true for the http adapter, and for third-party\n// adapters with similar expensive boundaries to cross for\n// every API call, such as socket-pouch and worker-pouch.\n// Previously, this was handled via db.type() === 'http'\n// which is now deprecated.\n\nfunction isRemote(db) {\n  if (typeof db._remote === 'boolean') {\n    return db._remote;\n  }\n  /* istanbul ignore next */\n  if (typeof db.type === 'function') {\n    guardedConsole('warn',\n      'db.type() is deprecated and will be removed in ' +\n      'a future version of PouchDB');\n    return db.type() === 'http';\n  }\n  /* istanbul ignore next */\n  return false;\n}\n\nfunction listenerCount(ee, type) {\n  return 'listenerCount' in ee ? ee.listenerCount(type) :\n                                 events.EventEmitter.listenerCount(ee, type);\n}\n\nfunction parseDesignDocFunctionName(s) {\n  if (!s) {\n    return null;\n  }\n  var parts = s.split('/');\n  if (parts.length === 2) {\n    return parts;\n  }\n  if (parts.length === 1) {\n    return [s, s];\n  }\n  return null;\n}\n\nfunction normalizeDesignDocFunctionName(s) {\n  var normalized = parseDesignDocFunctionName(s);\n  return normalized ? normalized.join('/') : null;\n}\n\n// originally parseUri 1.2.2, now patched by us\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\nvar keys = [\"source\", \"protocol\", \"authority\", \"userInfo\", \"user\", \"password\",\n    \"host\", \"port\", \"relative\", \"path\", \"directory\", \"file\", \"query\", \"anchor\"];\nvar qName =\"queryKey\";\nvar qParser = /(?:^|&)([^&=]*)=?([^&]*)/g;\n\n// use the \"loose\" parser\n/* eslint maxlen: 0, no-useless-escape: 0 */\nvar parser = /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nfunction parseUri(str) {\n  var m = parser.exec(str);\n  var uri = {};\n  var i = 14;\n\n  while (i--) {\n    var key = keys[i];\n    var value = m[i] || \"\";\n    var encoded = ['user', 'password'].indexOf(key) !== -1;\n    uri[key] = encoded ? decodeURIComponent(value) : value;\n  }\n\n  uri[qName] = {};\n  uri[keys[12]].replace(qParser, function ($0, $1, $2) {\n    if ($1) {\n      uri[qName][$1] = $2;\n    }\n  });\n\n  return uri;\n}\n\n// Based on https://github.com/alexdavid/scope-eval v0.0.3\n// (source: https://unpkg.com/scope-eval@0.0.3/scope_eval.js)\n// This is basically just a wrapper around new Function()\n\nfunction scopeEval(source, scope) {\n  var keys = [];\n  var values = [];\n  for (var key in scope) {\n    if (scope.hasOwnProperty(key)) {\n      keys.push(key);\n      values.push(scope[key]);\n    }\n  }\n  keys.push(source);\n  return Function.apply(null, keys).apply(null, values);\n}\n\n// this is essentially the \"update sugar\" function from daleharvey/pouchdb#1388\n// the diffFun tells us what delta to apply to the doc.  it either returns\n// the doc, or false if it doesn't need to do an update after all\nfunction upsert(db, docId, diffFun) {\n  return new PouchPromise(function (fulfill, reject) {\n    db.get(docId, function (err, doc) {\n      if (err) {\n        /* istanbul ignore next */\n        if (err.status !== 404) {\n          return reject(err);\n        }\n        doc = {};\n      }\n\n      // the user might change the _rev, so save it for posterity\n      var docRev = doc._rev;\n      var newDoc = diffFun(doc);\n\n      if (!newDoc) {\n        // if the diffFun returns falsy, we short-circuit as\n        // an optimization\n        return fulfill({updated: false, rev: docRev});\n      }\n\n      // users aren't allowed to modify these values,\n      // so reset them here\n      newDoc._id = docId;\n      newDoc._rev = docRev;\n      fulfill(tryAndPut(db, newDoc, diffFun));\n    });\n  });\n}\n\nfunction tryAndPut(db, doc, diffFun) {\n  return db.put(doc).then(function (res) {\n    return {\n      updated: true,\n      rev: res.rev\n    };\n  }, function (err) {\n    /* istanbul ignore next */\n    if (err.status !== 409) {\n      throw err;\n    }\n    return upsert(db, doc._id, diffFun);\n  });\n}\n\nfunction rev() {\n  return uuidV4.v4().replace(/-/g, '').toLowerCase();\n}\n\nvar uuid = uuidV4.v4;\n\n// We fetch all leafs of the revision tree, and sort them based on tree length\n// and whether they were deleted, undeleted documents with the longest revision\n// tree (most edits) win\n// The final sort algorithm is slightly documented in a sidebar here:\n// http://guide.couchdb.org/draft/conflicts.html\nfunction winningRev(metadata) {\n  var winningId;\n  var winningPos;\n  var winningDeleted;\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var tree = node.ids;\n    var branches = tree[2];\n    var pos = node.pos;\n    if (branches.length) { // non-leaf\n      for (var i = 0, len = branches.length; i < len; i++) {\n        toVisit.push({pos: pos + 1, ids: branches[i]});\n      }\n      continue;\n    }\n    var deleted = !!tree[1].deleted;\n    var id = tree[0];\n    // sort by deleted, then pos, then id\n    if (!winningId || (winningDeleted !== deleted ? winningDeleted :\n        winningPos !== pos ? winningPos < pos : winningId < id)) {\n      winningId = id;\n      winningPos = pos;\n      winningDeleted = deleted;\n    }\n  }\n\n  return winningPos + '-' + winningId;\n}\n\n// Pretty much all below can be combined into a higher order function to\n// traverse revisions\n// The return value from the callback will be passed as context to all\n// children of that node\nfunction traverseRevTree(revs, callback) {\n  var toVisit = revs.slice();\n\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var branches = tree[2];\n    var newCtx =\n      callback(branches.length === 0, pos, tree[0], node.ctx, tree[1]);\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], ctx: newCtx});\n    }\n  }\n}\n\nfunction sortByPos(a, b) {\n  return a.pos - b.pos;\n}\n\nfunction collectLeaves(revs) {\n  var leaves = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, acc, opts) {\n    if (isLeaf) {\n      leaves.push({rev: pos + \"-\" + id, pos: pos, opts: opts});\n    }\n  });\n  leaves.sort(sortByPos).reverse();\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    delete leaves[i].pos;\n  }\n  return leaves;\n}\n\n// returns revs of all conflicts that is leaves such that\n// 1. are not deleted and\n// 2. are different than winning revision\nfunction collectConflicts(metadata) {\n  var win = winningRev(metadata);\n  var leaves = collectLeaves(metadata.rev_tree);\n  var conflicts = [];\n  for (var i = 0, len = leaves.length; i < len; i++) {\n    var leaf = leaves[i];\n    if (leaf.rev !== win && !leaf.opts.deleted) {\n      conflicts.push(leaf.rev);\n    }\n  }\n  return conflicts;\n}\n\n// compact a tree by marking its non-leafs as missing,\n// and return a list of revs to delete\nfunction compactTree(metadata) {\n  var revs = [];\n  traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                               revHash, ctx, opts) {\n    if (opts.status === 'available' && !isLeaf) {\n      revs.push(pos + '-' + revHash);\n      opts.status = 'missing';\n    }\n  });\n  return revs;\n}\n\n// build up a list of all the paths to the leafs in this revision tree\nfunction rootToLeaf(revs) {\n  var paths = [];\n  var toVisit = revs.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, opts: opts});\n    if (isLeaf) {\n      paths.push({pos: (pos + 1 - history.length), ids: history});\n    }\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: pos + 1, ids: branches[i], history: history});\n    }\n  }\n  return paths.reverse();\n}\n\n// for a better overview of what this is doing, read:\n// https://github.com/apache/couchdb-couch/blob/master/src/couch_key_tree.erl\n//\n// But for a quick intro, CouchDB uses a revision tree to store a documents\n// history, A -> B -> C, when a document has conflicts, that is a branch in the\n// tree, A -> (B1 | B2 -> C), We store these as a nested array in the format\n//\n// KeyTree = [Path ... ]\n// Path = {pos: position_from_root, ids: Tree}\n// Tree = [Key, Opts, [Tree, ...]], in particular single node: [Key, []]\n\nfunction sortByPos$1(a, b) {\n  return a.pos - b.pos;\n}\n\n// classic binary search\nfunction binarySearch(arr, item, comparator) {\n  var low = 0;\n  var high = arr.length;\n  var mid;\n  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (comparator(arr[mid], item) < 0) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return low;\n}\n\n// assuming the arr is sorted, insert the item in the proper place\nfunction insertSorted(arr, item, comparator) {\n  var idx = binarySearch(arr, item, comparator);\n  arr.splice(idx, 0, item);\n}\n\n// Turn a path as a flat array into a tree with a single branch.\n// If any should be stemmed from the beginning of the array, that's passed\n// in as the second argument\nfunction pathToTree(path, numStemmed) {\n  var root;\n  var leaf;\n  for (var i = numStemmed, len = path.length; i < len; i++) {\n    var node = path[i];\n    var currentLeaf = [node.id, node.opts, []];\n    if (leaf) {\n      leaf[2].push(currentLeaf);\n      leaf = currentLeaf;\n    } else {\n      root = leaf = currentLeaf;\n    }\n  }\n  return root;\n}\n\n// compare the IDs of two trees\nfunction compareTree(a, b) {\n  return a[0] < b[0] ? -1 : 1;\n}\n\n// Merge two trees together\n// The roots of tree1 and tree2 must be the same revision\nfunction mergeTree(in_tree1, in_tree2) {\n  var queue = [{tree1: in_tree1, tree2: in_tree2}];\n  var conflicts = false;\n  while (queue.length > 0) {\n    var item = queue.pop();\n    var tree1 = item.tree1;\n    var tree2 = item.tree2;\n\n    if (tree1[1].status || tree2[1].status) {\n      tree1[1].status =\n        (tree1[1].status ===  'available' ||\n        tree2[1].status === 'available') ? 'available' : 'missing';\n    }\n\n    for (var i = 0; i < tree2[2].length; i++) {\n      if (!tree1[2][0]) {\n        conflicts = 'new_leaf';\n        tree1[2][0] = tree2[2][i];\n        continue;\n      }\n\n      var merged = false;\n      for (var j = 0; j < tree1[2].length; j++) {\n        if (tree1[2][j][0] === tree2[2][i][0]) {\n          queue.push({tree1: tree1[2][j], tree2: tree2[2][i]});\n          merged = true;\n        }\n      }\n      if (!merged) {\n        conflicts = 'new_branch';\n        insertSorted(tree1[2], tree2[2][i], compareTree);\n      }\n    }\n  }\n  return {conflicts: conflicts, tree: in_tree1};\n}\n\nfunction doMerge(tree, path, dontExpand) {\n  var restree = [];\n  var conflicts = false;\n  var merged = false;\n  var res;\n\n  if (!tree.length) {\n    return {tree: [path], conflicts: 'new_leaf'};\n  }\n\n  for (var i = 0, len = tree.length; i < len; i++) {\n    var branch = tree[i];\n    if (branch.pos === path.pos && branch.ids[0] === path.ids[0]) {\n      // Paths start at the same position and have the same root, so they need\n      // merged\n      res = mergeTree(branch.ids, path.ids);\n      restree.push({pos: branch.pos, ids: res.tree});\n      conflicts = conflicts || res.conflicts;\n      merged = true;\n    } else if (dontExpand !== true) {\n      // The paths start at a different position, take the earliest path and\n      // traverse up until it as at the same point from root as the path we\n      // want to merge.  If the keys match we return the longer path with the\n      // other merged After stemming we dont want to expand the trees\n\n      var t1 = branch.pos < path.pos ? branch : path;\n      var t2 = branch.pos < path.pos ? path : branch;\n      var diff = t2.pos - t1.pos;\n\n      var candidateParents = [];\n\n      var trees = [];\n      trees.push({ids: t1.ids, diff: diff, parent: null, parentIdx: null});\n      while (trees.length > 0) {\n        var item = trees.pop();\n        if (item.diff === 0) {\n          if (item.ids[0] === t2.ids[0]) {\n            candidateParents.push(item);\n          }\n          continue;\n        }\n        var elements = item.ids[2];\n        for (var j = 0, elementsLen = elements.length; j < elementsLen; j++) {\n          trees.push({\n            ids: elements[j],\n            diff: item.diff - 1,\n            parent: item.ids,\n            parentIdx: j\n          });\n        }\n      }\n\n      var el = candidateParents[0];\n\n      if (!el) {\n        restree.push(branch);\n      } else {\n        res = mergeTree(el.ids, t2.ids);\n        el.parent[2][el.parentIdx] = res.tree;\n        restree.push({pos: t1.pos, ids: t1.ids});\n        conflicts = conflicts || res.conflicts;\n        merged = true;\n      }\n    } else {\n      restree.push(branch);\n    }\n  }\n\n  // We didnt find\n  if (!merged) {\n    restree.push(path);\n  }\n\n  restree.sort(sortByPos$1);\n\n  return {\n    tree: restree,\n    conflicts: conflicts || 'internal_node'\n  };\n}\n\n// To ensure we dont grow the revision tree infinitely, we stem old revisions\nfunction stem(tree, depth) {\n  // First we break out the tree into a complete list of root to leaf paths\n  var paths = rootToLeaf(tree);\n  var stemmedRevs;\n\n  var result;\n  for (var i = 0, len = paths.length; i < len; i++) {\n    // Then for each path, we cut off the start of the path based on the\n    // `depth` to stem to, and generate a new set of flat trees\n    var path = paths[i];\n    var stemmed = path.ids;\n    var node;\n    if (stemmed.length > depth) {\n      // only do the stemming work if we actually need to stem\n      if (!stemmedRevs) {\n        stemmedRevs = {}; // avoid allocating this object unnecessarily\n      }\n      var numStemmed = stemmed.length - depth;\n      node = {\n        pos: path.pos + numStemmed,\n        ids: pathToTree(stemmed, numStemmed)\n      };\n\n      for (var s = 0; s < numStemmed; s++) {\n        var rev = (path.pos + s) + '-' + stemmed[s].id;\n        stemmedRevs[rev] = true;\n      }\n    } else { // no need to actually stem\n      node = {\n        pos: path.pos,\n        ids: pathToTree(stemmed, 0)\n      };\n    }\n\n    // Then we remerge all those flat trees together, ensuring that we dont\n    // connect trees that would go beyond the depth limit\n    if (result) {\n      result = doMerge(result, node, true).tree;\n    } else {\n      result = [node];\n    }\n  }\n\n  // this is memory-heavy per Chrome profiler, avoid unless we actually stemmed\n  if (stemmedRevs) {\n    traverseRevTree(result, function (isLeaf, pos, revHash) {\n      // some revisions may have been removed in a branch but not in another\n      delete stemmedRevs[pos + '-' + revHash];\n    });\n  }\n\n  return {\n    tree: result,\n    revs: stemmedRevs ? Object.keys(stemmedRevs) : []\n  };\n}\n\nfunction merge(tree, path, depth) {\n  var newTree = doMerge(tree, path);\n  var stemmed = stem(newTree.tree, depth);\n  return {\n    tree: stemmed.tree,\n    stemmedRevs: stemmed.revs,\n    conflicts: newTree.conflicts\n  };\n}\n\n// return true if a rev exists in the rev tree, false otherwise\nfunction revExists(revs, rev) {\n  var toVisit = revs.slice();\n  var splitRev = rev.split('-');\n  var targetPos = parseInt(splitRev[0], 10);\n  var targetId = splitRev[1];\n\n  var node;\n  while ((node = toVisit.pop())) {\n    if (node.pos === targetPos && node.ids[0] === targetId) {\n      return true;\n    }\n    var branches = node.ids[2];\n    for (var i = 0, len = branches.length; i < len; i++) {\n      toVisit.push({pos: node.pos + 1, ids: branches[i]});\n    }\n  }\n  return false;\n}\n\nfunction getTrees(node) {\n  return node.ids;\n}\n\n// check if a specific revision of a doc has been deleted\n//  - metadata: the metadata object from the doc store\n//  - rev: (optional) the revision to check. defaults to winning revision\nfunction isDeleted(metadata, rev) {\n  if (!rev) {\n    rev = winningRev(metadata);\n  }\n  var id = rev.substring(rev.indexOf('-') + 1);\n  var toVisit = metadata.rev_tree.map(getTrees);\n\n  var tree;\n  while ((tree = toVisit.pop())) {\n    if (tree[0] === id) {\n      return !!tree[1].deleted;\n    }\n    toVisit = toVisit.concat(tree[2]);\n  }\n}\n\nfunction isLocalId(id) {\n  return (/^_local/).test(id);\n}\n\n// returns the current leaf node for a given revision\nfunction latest(rev, metadata) {\n  var toVisit = metadata.rev_tree.slice();\n  var node;\n  while ((node = toVisit.pop())) {\n    var pos = node.pos;\n    var tree = node.ids;\n    var id = tree[0];\n    var opts = tree[1];\n    var branches = tree[2];\n    var isLeaf = branches.length === 0;\n\n    var history = node.history ? node.history.slice() : [];\n    history.push({id: id, pos: pos, opts: opts});\n\n    if (isLeaf) {\n      for (var i = 0, len = history.length; i < len; i++) {\n        var historyNode = history[i];\n        var historyRev = historyNode.pos + '-' + historyNode.id;\n\n        if (historyRev === rev) {\n          // return the rev of this leaf\n          return pos + '-' + id;\n        }\n      }\n    }\n\n    for (var j = 0, l = branches.length; j < l; j++) {\n      toVisit.push({pos: pos + 1, ids: branches[j], history: history});\n    }\n  }\n\n  /* istanbul ignore next */\n  throw new Error('Unable to resolve latest revision for id ' + metadata.id + ', rev ' + rev);\n}\n\ninherits(Changes$2, events.EventEmitter);\n\nfunction tryCatchInChangeListener(self, change, pending, lastSeq) {\n  // isolate try/catches to avoid V8 deoptimizations\n  try {\n    self.emit('change', change, pending, lastSeq);\n  } catch (e) {\n    guardedConsole('error', 'Error in .on(\"change\", function):', e);\n  }\n}\n\nfunction Changes$2(db, opts, callback) {\n  events.EventEmitter.call(this);\n  var self = this;\n  this.db = db;\n  opts = opts ? clone(opts) : {};\n  var complete = opts.complete = once(function (err, resp) {\n    if (err) {\n      if (listenerCount(self, 'error') > 0) {\n        self.emit('error', err);\n      }\n    } else {\n      self.emit('complete', resp);\n    }\n    self.removeAllListeners();\n    db.removeListener('destroyed', onDestroy);\n  });\n  if (callback) {\n    self.on('complete', function (resp) {\n      callback(null, resp);\n    });\n    self.on('error', callback);\n  }\n  function onDestroy() {\n    self.cancel();\n  }\n  db.once('destroyed', onDestroy);\n\n  opts.onChange = function (change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (self.isCancelled) {\n      return;\n    }\n    tryCatchInChangeListener(self, change, pending, lastSeq);\n  };\n\n  var promise = new PouchPromise(function (fulfill, reject) {\n    opts.complete = function (err, res) {\n      if (err) {\n        reject(err);\n      } else {\n        fulfill(res);\n      }\n    };\n  });\n  self.once('cancel', function () {\n    db.removeListener('destroyed', onDestroy);\n    opts.complete(null, {status: 'cancelled'});\n  });\n  this.then = promise.then.bind(promise);\n  this['catch'] = promise['catch'].bind(promise);\n  this.then(function (result) {\n    complete(null, result);\n  }, complete);\n\n\n\n  if (!db.taskqueue.isReady) {\n    db.taskqueue.addTask(function (failed) {\n      if (failed) {\n        opts.complete(failed);\n      } else if (self.isCancelled) {\n        self.emit('cancel');\n      } else {\n        self.validateChanges(opts);\n      }\n    });\n  } else {\n    self.validateChanges(opts);\n  }\n}\nChanges$2.prototype.cancel = function () {\n  this.isCancelled = true;\n  if (this.db.taskqueue.isReady) {\n    this.emit('cancel');\n  }\n};\nfunction processChange(doc, metadata, opts) {\n  var changeList = [{rev: doc._rev}];\n  if (opts.style === 'all_docs') {\n    changeList = collectLeaves(metadata.rev_tree)\n    .map(function (x) { return {rev: x.rev}; });\n  }\n  var change = {\n    id: metadata.id,\n    changes: changeList,\n    doc: doc\n  };\n\n  if (isDeleted(metadata, doc._rev)) {\n    change.deleted = true;\n  }\n  if (opts.conflicts) {\n    change.doc._conflicts = collectConflicts(metadata);\n    if (!change.doc._conflicts.length) {\n      delete change.doc._conflicts;\n    }\n  }\n  return change;\n}\n\nChanges$2.prototype.validateChanges = function (opts) {\n  var callback = opts.complete;\n  var self = this;\n\n  /* istanbul ignore else */\n  if (PouchDB$5._changesFilterPlugin) {\n    PouchDB$5._changesFilterPlugin.validate(opts, function (err) {\n      if (err) {\n        return callback(err);\n      }\n      self.doChanges(opts);\n    });\n  } else {\n    self.doChanges(opts);\n  }\n};\n\nChanges$2.prototype.doChanges = function (opts) {\n  var self = this;\n  var callback = opts.complete;\n\n  opts = clone(opts);\n  if ('live' in opts && !('continuous' in opts)) {\n    opts.continuous = opts.live;\n  }\n  opts.processChange = processChange;\n\n  if (opts.since === 'latest') {\n    opts.since = 'now';\n  }\n  if (!opts.since) {\n    opts.since = 0;\n  }\n  if (opts.since === 'now') {\n    this.db.info().then(function (info) {\n      /* istanbul ignore if */\n      if (self.isCancelled) {\n        callback(null, {status: 'cancelled'});\n        return;\n      }\n      opts.since = info.update_seq;\n      self.doChanges(opts);\n    }, callback);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (PouchDB$5._changesFilterPlugin) {\n    PouchDB$5._changesFilterPlugin.normalize(opts);\n    if (PouchDB$5._changesFilterPlugin.shouldFilter(this, opts)) {\n      return PouchDB$5._changesFilterPlugin.filter(this, opts);\n    }\n  } else {\n    ['doc_ids', 'filter', 'selector', 'view'].forEach(function (key) {\n      if (key in opts) {\n        guardedConsole('warn',\n          'The \"' + key + '\" option was passed in to changes/replicate, ' +\n          'but pouchdb-changes-filter plugin is not installed, so it ' +\n          'was ignored. Please install the plugin to enable filtering.'\n        );\n      }\n    });\n  }\n\n  if (!('descending' in opts)) {\n    opts.descending = false;\n  }\n\n  // 0 and 1 should return 1 document\n  opts.limit = opts.limit === 0 ? 1 : opts.limit;\n  opts.complete = callback;\n  var newPromise = this.db._changes(opts);\n  /* istanbul ignore else */\n  if (newPromise && typeof newPromise.cancel === 'function') {\n    var cancel = self.cancel;\n    self.cancel = getArguments(function (args) {\n      newPromise.cancel();\n      cancel.apply(this, args);\n    });\n  }\n};\n\n/*\n * A generic pouch adapter\n */\n\nfunction compare(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Wrapper for functions that call the bulkdocs api with a single doc,\n// if the first result is an error, return an error\nfunction yankError(callback, docId) {\n  return function (err, results) {\n    if (err || (results[0] && results[0].error)) {\n      err = err || results[0];\n      err.docId = docId;\n      callback(err);\n    } else {\n      callback(null, results.length ? results[0]  : results);\n    }\n  };\n}\n\n// clean docs given to us by the user\nfunction cleanDocs(docs) {\n  for (var i = 0; i < docs.length; i++) {\n    var doc = docs[i];\n    if (doc._deleted) {\n      delete doc._attachments; // ignore atts for deleted docs\n    } else if (doc._attachments) {\n      // filter out extraneous keys from _attachments\n      var atts = Object.keys(doc._attachments);\n      for (var j = 0; j < atts.length; j++) {\n        var att = atts[j];\n        doc._attachments[att] = pick(doc._attachments[att],\n          ['data', 'digest', 'content_type', 'length', 'revpos', 'stub']);\n      }\n    }\n  }\n}\n\n// compare two docs, first by _id then by _rev\nfunction compareByIdThenRev(a, b) {\n  var idCompare = compare(a._id, b._id);\n  if (idCompare !== 0) {\n    return idCompare;\n  }\n  var aStart = a._revisions ? a._revisions.start : 0;\n  var bStart = b._revisions ? b._revisions.start : 0;\n  return compare(aStart, bStart);\n}\n\n// for every node in a revision tree computes its distance from the closest\n// leaf\nfunction computeHeight(revs) {\n  var height = {};\n  var edges = [];\n  traverseRevTree(revs, function (isLeaf, pos, id, prnt) {\n    var rev$$1 = pos + \"-\" + id;\n    if (isLeaf) {\n      height[rev$$1] = 0;\n    }\n    if (prnt !== undefined) {\n      edges.push({from: prnt, to: rev$$1});\n    }\n    return rev$$1;\n  });\n\n  edges.reverse();\n  edges.forEach(function (edge) {\n    if (height[edge.from] === undefined) {\n      height[edge.from] = 1 + height[edge.to];\n    } else {\n      height[edge.from] = Math.min(height[edge.from], 1 + height[edge.to]);\n    }\n  });\n  return height;\n}\n\nfunction allDocsKeysParse(opts) {\n  var keys =  ('limit' in opts) ?\n    opts.keys.slice(opts.skip, opts.limit + opts.skip) :\n    (opts.skip > 0) ? opts.keys.slice(opts.skip) : opts.keys;\n  opts.keys = keys;\n  opts.skip = 0;\n  if (opts.descending) {\n    keys.reverse();\n    opts.descending = false;\n  }\n}\n\n// all compaction is done in a queue, to avoid attaching\n// too many listeners at once\nfunction doNextCompaction(self) {\n  var task = self._compactionQueue[0];\n  var opts = task.opts;\n  var callback = task.callback;\n  self.get('_local/compaction').catch(function () {\n    return false;\n  }).then(function (doc) {\n    if (doc && doc.last_seq) {\n      opts.last_seq = doc.last_seq;\n    }\n    self._compact(opts, function (err, res) {\n      /* istanbul ignore if */\n      if (err) {\n        callback(err);\n      } else {\n        callback(null, res);\n      }\n      nextTick(function () {\n        self._compactionQueue.shift();\n        if (self._compactionQueue.length) {\n          doNextCompaction(self);\n        }\n      });\n    });\n  });\n}\n\nfunction attachmentNameError(name) {\n  if (name.charAt(0) === '_') {\n    return name + ' is not a valid attachment name, attachment ' +\n      'names cannot start with \\'_\\'';\n  }\n  return false;\n}\n\ninherits(AbstractPouchDB, events.EventEmitter);\n\nfunction AbstractPouchDB() {\n  events.EventEmitter.call(this);\n}\n\nAbstractPouchDB.prototype.post =\n  adapterFun('post', function (doc, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return callback(createError(NOT_AN_OBJECT));\n  }\n  this.bulkDocs({docs: [doc]}, opts, yankError(callback, doc._id));\n});\n\nAbstractPouchDB.prototype.put = adapterFun('put', function (doc, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof doc !== 'object' || Array.isArray(doc)) {\n    return cb(createError(NOT_AN_OBJECT));\n  }\n  invalidIdError(doc._id);\n  if (isLocalId(doc._id) && typeof this._putLocal === 'function') {\n    if (doc._deleted) {\n      return this._removeLocal(doc, cb);\n    } else {\n      return this._putLocal(doc, cb);\n    }\n  }\n  var self = this;\n  if (opts.force && doc._rev) {\n    transformForceOptionToNewEditsOption();\n    putDoc(function (err) {\n      var result = err ? null : {ok: true, id: doc._id, rev: doc._rev};\n      cb(err, result);\n    });\n  } else {\n    putDoc(cb);\n  }\n\n  function transformForceOptionToNewEditsOption() {\n    var parts = doc._rev.split('-');\n    var oldRevId = parts[1];\n    var oldRevNum = parseInt(parts[0], 10);\n\n    var newRevNum = oldRevNum + 1;\n    var newRevId = rev();\n\n    doc._revisions = {\n      start: newRevNum,\n      ids: [newRevId, oldRevId]\n    };\n    doc._rev = newRevNum + '-' + newRevId;\n    opts.new_edits = false;\n  }\n  function putDoc(next) {\n    if (typeof self._put === 'function' && opts.new_edits !== false) {\n      self._put(doc, opts, next);\n    } else {\n      self.bulkDocs({docs: [doc]}, opts, yankError(next, doc._id));\n    }\n  }\n});\n\nAbstractPouchDB.prototype.putAttachment =\n  adapterFun('putAttachment', function (docId, attachmentId, rev$$1,\n                                              blob, type) {\n  var api = this;\n  if (typeof type === 'function') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  // Lets fix in https://github.com/pouchdb/pouchdb/issues/3267\n  /* istanbul ignore if */\n  if (typeof type === 'undefined') {\n    type = blob;\n    blob = rev$$1;\n    rev$$1 = null;\n  }\n  if (!type) {\n    guardedConsole('warn', 'Attachment', attachmentId, 'on document', docId, 'is missing content_type');\n  }\n\n  function createAttachment(doc) {\n    var prevrevpos = '_rev' in doc ? parseInt(doc._rev, 10) : 0;\n    doc._attachments = doc._attachments || {};\n    doc._attachments[attachmentId] = {\n      content_type: type,\n      data: blob,\n      revpos: ++prevrevpos\n    };\n    return api.put(doc);\n  }\n\n  return api.get(docId).then(function (doc) {\n    if (doc._rev !== rev$$1) {\n      throw createError(REV_CONFLICT);\n    }\n\n    return createAttachment(doc);\n  }, function (err) {\n     // create new doc\n    /* istanbul ignore else */\n    if (err.reason === MISSING_DOC.message) {\n      return createAttachment({_id: docId});\n    } else {\n      throw err;\n    }\n  });\n});\n\nAbstractPouchDB.prototype.removeAttachment =\n  adapterFun('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                 callback) {\n  var self = this;\n  self.get(docId, function (err, obj) {\n    /* istanbul ignore if */\n    if (err) {\n      callback(err);\n      return;\n    }\n    if (obj._rev !== rev$$1) {\n      callback(createError(REV_CONFLICT));\n      return;\n    }\n    /* istanbul ignore if */\n    if (!obj._attachments) {\n      return callback();\n    }\n    delete obj._attachments[attachmentId];\n    if (Object.keys(obj._attachments).length === 0) {\n      delete obj._attachments;\n    }\n    self.put(obj, callback);\n  });\n});\n\nAbstractPouchDB.prototype.remove =\n  adapterFun('remove', function (docOrId, optsOrRev, opts, callback) {\n  var doc;\n  if (typeof optsOrRev === 'string') {\n    // id, rev, opts, callback style\n    doc = {\n      _id: docOrId,\n      _rev: optsOrRev\n    };\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n  } else {\n    // doc, opts, callback style\n    doc = docOrId;\n    if (typeof optsOrRev === 'function') {\n      callback = optsOrRev;\n      opts = {};\n    } else {\n      callback = opts;\n      opts = optsOrRev;\n    }\n  }\n  opts = opts || {};\n  opts.was_delete = true;\n  var newDoc = {_id: doc._id, _rev: (doc._rev || opts.rev)};\n  newDoc._deleted = true;\n  if (isLocalId(newDoc._id) && typeof this._removeLocal === 'function') {\n    return this._removeLocal(doc, callback);\n  }\n  this.bulkDocs({docs: [newDoc]}, opts, yankError(callback, newDoc._id));\n});\n\nAbstractPouchDB.prototype.revsDiff =\n  adapterFun('revsDiff', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  var ids = Object.keys(req);\n\n  if (!ids.length) {\n    return callback(null, {});\n  }\n\n  var count = 0;\n  var missing = new ExportedMap();\n\n  function addToMissing(id, revId) {\n    if (!missing.has(id)) {\n      missing.set(id, {missing: []});\n    }\n    missing.get(id).missing.push(revId);\n  }\n\n  function processDoc(id, rev_tree) {\n    // Is this fast enough? Maybe we should switch to a set simulated by a map\n    var missingForId = req[id].slice(0);\n    traverseRevTree(rev_tree, function (isLeaf, pos, revHash, ctx,\n      opts) {\n        var rev$$1 = pos + '-' + revHash;\n        var idx = missingForId.indexOf(rev$$1);\n        if (idx === -1) {\n          return;\n        }\n\n        missingForId.splice(idx, 1);\n        /* istanbul ignore if */\n        if (opts.status !== 'available') {\n          addToMissing(id, rev$$1);\n        }\n      });\n\n    // Traversing the tree is synchronous, so now `missingForId` contains\n    // revisions that were not found in the tree\n    missingForId.forEach(function (rev$$1) {\n      addToMissing(id, rev$$1);\n    });\n  }\n\n  ids.map(function (id) {\n    this._getRevisionTree(id, function (err, rev_tree) {\n      if (err && err.status === 404 && err.message === 'missing') {\n        missing.set(id, {missing: req[id]});\n      } else if (err) {\n        /* istanbul ignore next */\n        return callback(err);\n      } else {\n        processDoc(id, rev_tree);\n      }\n\n      if (++count === ids.length) {\n        // convert LazyMap to object\n        var missingObj = {};\n        missing.forEach(function (value, key) {\n          missingObj[key] = value;\n        });\n        return callback(null, missingObj);\n      }\n    });\n  }, this);\n});\n\n// _bulk_get API for faster replication, as described in\n// https://github.com/apache/couchdb-chttpd/pull/33\n// At the \"abstract\" level, it will just run multiple get()s in\n// parallel, because this isn't much of a performance cost\n// for local databases (except the cost of multiple transactions, which is\n// small). The http adapter overrides this in order\n// to do a more efficient single HTTP request.\nAbstractPouchDB.prototype.bulkGet =\n  adapterFun('bulkGet', function (opts, callback) {\n  bulkGet(this, opts, callback);\n});\n\n// compact one document and fire callback\n// by compacting we mean removing all revisions which\n// are further from the leaf in revision tree than max_height\nAbstractPouchDB.prototype.compactDocument =\n  adapterFun('compactDocument', function (docId, maxHeight, callback) {\n  var self = this;\n  this._getRevisionTree(docId, function (err, revTree) {\n    /* istanbul ignore if */\n    if (err) {\n      return callback(err);\n    }\n    var height = computeHeight(revTree);\n    var candidates = [];\n    var revs = [];\n    Object.keys(height).forEach(function (rev$$1) {\n      if (height[rev$$1] > maxHeight) {\n        candidates.push(rev$$1);\n      }\n    });\n\n    traverseRevTree(revTree, function (isLeaf, pos, revHash, ctx, opts) {\n      var rev$$1 = pos + '-' + revHash;\n      if (opts.status === 'available' && candidates.indexOf(rev$$1) !== -1) {\n        revs.push(rev$$1);\n      }\n    });\n    self._doCompaction(docId, revs, callback);\n  });\n});\n\n// compact the whole database using single document\n// compaction\nAbstractPouchDB.prototype.compact =\n  adapterFun('compact', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  self._compactionQueue = self._compactionQueue || [];\n  self._compactionQueue.push({opts: opts, callback: callback});\n  if (self._compactionQueue.length === 1) {\n    doNextCompaction(self);\n  }\n});\nAbstractPouchDB.prototype._compact = function (opts, callback) {\n  var self = this;\n  var changesOpts = {\n    return_docs: false,\n    last_seq: opts.last_seq || 0\n  };\n  var promises = [];\n\n  function onChange(row) {\n    promises.push(self.compactDocument(row.id, 0));\n  }\n  function onComplete(resp) {\n    var lastSeq = resp.last_seq;\n    PouchPromise.all(promises).then(function () {\n      return upsert(self, '_local/compaction', function deltaFunc(doc) {\n        if (!doc.last_seq || doc.last_seq < lastSeq) {\n          doc.last_seq = lastSeq;\n          return doc;\n        }\n        return false; // somebody else got here first, don't update\n      });\n    }).then(function () {\n      callback(null, {ok: true});\n    }).catch(callback);\n  }\n  self.changes(changesOpts)\n    .on('change', onChange)\n    .on('complete', onComplete)\n    .on('error', callback);\n};\n\n/* Begin api wrappers. Specific functionality to storage belongs in the\n   _[method] */\nAbstractPouchDB.prototype.get = adapterFun('get', function (id, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n  if (typeof id !== 'string') {\n    return cb(createError(INVALID_ID));\n  }\n  if (isLocalId(id) && typeof this._getLocal === 'function') {\n    return this._getLocal(id, cb);\n  }\n  var leaves = [], self = this;\n\n  function finishOpenRevs() {\n    var result = [];\n    var count = leaves.length;\n    /* istanbul ignore if */\n    if (!count) {\n      return cb(null, result);\n    }\n\n    // order with open_revs is unspecified\n    leaves.forEach(function (leaf) {\n      self.get(id, {\n        rev: leaf,\n        revs: opts.revs,\n        latest: opts.latest,\n        attachments: opts.attachments,\n        binary: opts.binary\n      }, function (err, doc) {\n        if (!err) {\n          // using latest=true can produce duplicates\n          var existing;\n          for (var i = 0, l = result.length; i < l; i++) {\n            if (result[i].ok && result[i].ok._rev === doc._rev) {\n              existing = true;\n              break;\n            }\n          }\n          if (!existing) {\n            result.push({ok: doc});\n          }\n        } else {\n          result.push({missing: leaf});\n        }\n        count--;\n        if (!count) {\n          cb(null, result);\n        }\n      });\n    });\n  }\n\n  if (opts.open_revs) {\n    if (opts.open_revs === \"all\") {\n      this._getRevisionTree(id, function (err, rev_tree) {\n        if (err) {\n          return cb(err);\n        }\n        leaves = collectLeaves(rev_tree).map(function (leaf) {\n          return leaf.rev;\n        });\n        finishOpenRevs();\n      });\n    } else {\n      if (Array.isArray(opts.open_revs)) {\n        leaves = opts.open_revs;\n        for (var i = 0; i < leaves.length; i++) {\n          var l = leaves[i];\n          // looks like it's the only thing couchdb checks\n          if (!(typeof (l) === \"string\" && /^\\d+-/.test(l))) {\n            return cb(createError(INVALID_REV));\n          }\n        }\n        finishOpenRevs();\n      } else {\n        return cb(createError(UNKNOWN_ERROR, 'function_clause'));\n      }\n    }\n    return; // open_revs does not like other options\n  }\n\n  return this._get(id, opts, function (err, result) {\n    if (err) {\n      err.docId = id;\n      return cb(err);\n    }\n\n    var doc = result.doc;\n    var metadata = result.metadata;\n    var ctx = result.ctx;\n\n    if (opts.conflicts) {\n      var conflicts = collectConflicts(metadata);\n      if (conflicts.length) {\n        doc._conflicts = conflicts;\n      }\n    }\n\n    if (isDeleted(metadata, doc._rev)) {\n      doc._deleted = true;\n    }\n\n    if (opts.revs || opts.revs_info) {\n      var splittedRev = doc._rev.split('-');\n      var revNo       = parseInt(splittedRev[0], 10);\n      var revHash     = splittedRev[1];\n\n      var paths = rootToLeaf(metadata.rev_tree);\n      var path = null;\n\n      for (var i = 0; i < paths.length; i++) {\n        var currentPath = paths[i];\n        var hashIndex = currentPath.ids.map(function (x) { return x.id; })\n          .indexOf(revHash);\n        var hashFoundAtRevPos = hashIndex === (revNo - 1);\n\n        if (hashFoundAtRevPos || (!path && hashIndex !== -1)) {\n          path = currentPath;\n        }\n      }\n\n      var indexOfRev = path.ids.map(function (x) { return x.id; })\n        .indexOf(doc._rev.split('-')[1]) + 1;\n      var howMany = path.ids.length - indexOfRev;\n      path.ids.splice(indexOfRev, howMany);\n      path.ids.reverse();\n\n      if (opts.revs) {\n        doc._revisions = {\n          start: (path.pos + path.ids.length) - 1,\n          ids: path.ids.map(function (rev$$1) {\n            return rev$$1.id;\n          })\n        };\n      }\n      if (opts.revs_info) {\n        var pos =  path.pos + path.ids.length;\n        doc._revs_info = path.ids.map(function (rev$$1) {\n          pos--;\n          return {\n            rev: pos + '-' + rev$$1.id,\n            status: rev$$1.opts.status\n          };\n        });\n      }\n    }\n\n    if (opts.attachments && doc._attachments) {\n      var attachments = doc._attachments;\n      var count = Object.keys(attachments).length;\n      if (count === 0) {\n        return cb(null, doc);\n      }\n      Object.keys(attachments).forEach(function (key) {\n        this._getAttachment(doc._id, key, attachments[key], {\n          // Previously the revision handling was done in adapter.js\n          // getAttachment, however since idb-next doesnt we need to\n          // pass the rev through\n          rev: doc._rev,\n          binary: opts.binary,\n          ctx: ctx\n        }, function (err, data) {\n          var att = doc._attachments[key];\n          att.data = data;\n          delete att.stub;\n          delete att.length;\n          if (!--count) {\n            cb(null, doc);\n          }\n        });\n      }, self);\n    } else {\n      if (doc._attachments) {\n        for (var key in doc._attachments) {\n          /* istanbul ignore else */\n          if (doc._attachments.hasOwnProperty(key)) {\n            doc._attachments[key].stub = true;\n          }\n        }\n      }\n      cb(null, doc);\n    }\n  });\n});\n\n// TODO: I dont like this, it forces an extra read for every\n// attachment read and enforces a confusing api between\n// adapter.js and the adapter implementation\nAbstractPouchDB.prototype.getAttachment =\n  adapterFun('getAttachment', function (docId, attachmentId, opts, callback) {\n  var self = this;\n  if (opts instanceof Function) {\n    callback = opts;\n    opts = {};\n  }\n  this._get(docId, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (res.doc._attachments && res.doc._attachments[attachmentId]) {\n      opts.ctx = res.ctx;\n      opts.binary = true;\n      self._getAttachment(docId, attachmentId,\n                          res.doc._attachments[attachmentId], opts, callback);\n    } else {\n      return callback(createError(MISSING_DOC));\n    }\n  });\n});\n\nAbstractPouchDB.prototype.allDocs =\n  adapterFun('allDocs', function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  opts.skip = typeof opts.skip !== 'undefined' ? opts.skip : 0;\n  if (opts.start_key) {\n    opts.startkey = opts.start_key;\n  }\n  if (opts.end_key) {\n    opts.endkey = opts.end_key;\n  }\n  if ('keys' in opts) {\n    if (!Array.isArray(opts.keys)) {\n      return callback(new TypeError('options.keys must be an array'));\n    }\n    var incompatibleOpt =\n      ['startkey', 'endkey', 'key'].filter(function (incompatibleOpt) {\n      return incompatibleOpt in opts;\n    })[0];\n    if (incompatibleOpt) {\n      callback(createError(QUERY_PARSE_ERROR,\n        'Query parameter `' + incompatibleOpt +\n        '` is not compatible with multi-get'\n      ));\n      return;\n    }\n    if (!isRemote(this)) {\n      allDocsKeysParse(opts);\n      if (opts.keys.length === 0) {\n        return this._allDocs({limit: 0}, callback);\n      }\n    }\n  }\n\n  return this._allDocs(opts, callback);\n});\n\nAbstractPouchDB.prototype.changes = function (opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  return new Changes$2(this, opts, callback);\n};\n\nAbstractPouchDB.prototype.close = adapterFun('close', function (callback) {\n  this._closed = true;\n  this.emit('closed');\n  return this._close(callback);\n});\n\nAbstractPouchDB.prototype.info = adapterFun('info', function (callback) {\n  var self = this;\n  this._info(function (err, info) {\n    if (err) {\n      return callback(err);\n    }\n    // assume we know better than the adapter, unless it informs us\n    info.db_name = info.db_name || self.name;\n    info.auto_compaction = !!(self.auto_compaction && !isRemote(self));\n    info.adapter = self.adapter;\n    callback(null, info);\n  });\n});\n\nAbstractPouchDB.prototype.id = adapterFun('id', function (callback) {\n  return this._id(callback);\n});\n\n/* istanbul ignore next */\nAbstractPouchDB.prototype.type = function () {\n  return (typeof this._type === 'function') ? this._type() : this.adapter;\n};\n\nAbstractPouchDB.prototype.bulkDocs =\n  adapterFun('bulkDocs', function (req, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  opts = opts || {};\n\n  if (Array.isArray(req)) {\n    req = {\n      docs: req\n    };\n  }\n\n  if (!req || !req.docs || !Array.isArray(req.docs)) {\n    return callback(createError(MISSING_BULK_DOCS));\n  }\n\n  for (var i = 0; i < req.docs.length; ++i) {\n    if (typeof req.docs[i] !== 'object' || Array.isArray(req.docs[i])) {\n      return callback(createError(NOT_AN_OBJECT));\n    }\n  }\n\n  var attachmentError;\n  req.docs.forEach(function (doc) {\n    if (doc._attachments) {\n      Object.keys(doc._attachments).forEach(function (name) {\n        attachmentError = attachmentError || attachmentNameError(name);\n        if (!doc._attachments[name].content_type) {\n          guardedConsole('warn', 'Attachment', name, 'on document', doc._id, 'is missing content_type');\n        }\n      });\n    }\n  });\n\n  if (attachmentError) {\n    return callback(createError(BAD_REQUEST, attachmentError));\n  }\n\n  if (!('new_edits' in opts)) {\n    if ('new_edits' in req) {\n      opts.new_edits = req.new_edits;\n    } else {\n      opts.new_edits = true;\n    }\n  }\n\n  var adapter = this;\n  if (!opts.new_edits && !isRemote(adapter)) {\n    // ensure revisions of the same doc are sorted, so that\n    // the local adapter processes them correctly (#2935)\n    req.docs.sort(compareByIdThenRev);\n  }\n\n  cleanDocs(req.docs);\n\n  // in the case of conflicts, we want to return the _ids to the user\n  // however, the underlying adapter may destroy the docs array, so\n  // create a copy here\n  var ids = req.docs.map(function (doc) {\n    return doc._id;\n  });\n\n  return this._bulkDocs(req, opts, function (err, res) {\n    if (err) {\n      return callback(err);\n    }\n    if (!opts.new_edits) {\n      // this is what couch does when new_edits is false\n      res = res.filter(function (x) {\n        return x.error;\n      });\n    }\n    // add ids for error/conflict responses (not required for CouchDB)\n    if (!isRemote(adapter)) {\n      for (var i = 0, l = res.length; i < l; i++) {\n        res[i].id = res[i].id || ids[i];\n      }\n    }\n\n    callback(null, res);\n  });\n});\n\nAbstractPouchDB.prototype.registerDependentDatabase =\n  adapterFun('registerDependentDatabase', function (dependentDb,\n                                                          callback) {\n  var depDB = new this.constructor(dependentDb, this.__opts);\n\n  function diffFun(doc) {\n    doc.dependentDbs = doc.dependentDbs || {};\n    if (doc.dependentDbs[dependentDb]) {\n      return false; // no update required\n    }\n    doc.dependentDbs[dependentDb] = true;\n    return doc;\n  }\n  upsert(this, '_local/_pouch_dependentDbs', diffFun)\n    .then(function () {\n      callback(null, {db: depDB});\n    }).catch(callback);\n});\n\nAbstractPouchDB.prototype.destroy =\n  adapterFun('destroy', function (opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n\n  var self = this;\n  var usePrefix = 'use_prefix' in self ? self.use_prefix : true;\n\n  function destroyDb() {\n    // call destroy method of the particular adaptor\n    self._destroy(opts, function (err, resp) {\n      if (err) {\n        return callback(err);\n      }\n      self._destroyed = true;\n      self.emit('destroyed');\n      callback(null, resp || { 'ok': true });\n    });\n  }\n\n  if (isRemote(self)) {\n    // no need to check for dependent DBs if it's a remote DB\n    return destroyDb();\n  }\n\n  self.get('_local/_pouch_dependentDbs', function (err, localDoc) {\n    if (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        return callback(err);\n      } else { // no dependencies\n        return destroyDb();\n      }\n    }\n    var dependentDbs = localDoc.dependentDbs;\n    var PouchDB = self.constructor;\n    var deletedMap = Object.keys(dependentDbs).map(function (name) {\n      // use_prefix is only false in the browser\n      /* istanbul ignore next */\n      var trueName = usePrefix ?\n        name.replace(new RegExp('^' + PouchDB.prefix), '') : name;\n      return new PouchDB(trueName, self.__opts).destroy();\n    });\n    PouchPromise.all(deletedMap).then(destroyDb, callback);\n  });\n});\n\nfunction TaskQueue$1() {\n  this.isReady = false;\n  this.failed = false;\n  this.queue = [];\n}\n\nTaskQueue$1.prototype.execute = function () {\n  var fun;\n  if (this.failed) {\n    while ((fun = this.queue.shift())) {\n      fun(this.failed);\n    }\n  } else {\n    while ((fun = this.queue.shift())) {\n      fun();\n    }\n  }\n};\n\nTaskQueue$1.prototype.fail = function (err) {\n  this.failed = err;\n  this.execute();\n};\n\nTaskQueue$1.prototype.ready = function (db) {\n  this.isReady = true;\n  this.db = db;\n  this.execute();\n};\n\nTaskQueue$1.prototype.addTask = function (fun) {\n  this.queue.push(fun);\n  if (this.failed) {\n    this.execute();\n  }\n};\n\nfunction parseAdapter(name, opts) {\n  var match = name.match(/([a-z-]*):\\/\\/(.*)/);\n  if (match) {\n    // the http adapter expects the fully qualified name\n    return {\n      name: /https?/.test(match[1]) ? match[1] + '://' + match[2] : match[2],\n      adapter: match[1]\n    };\n  }\n\n  var adapters = PouchDB$5.adapters;\n  var preferredAdapters = PouchDB$5.preferredAdapters;\n  var prefix = PouchDB$5.prefix;\n  var adapterName = opts.adapter;\n\n  if (!adapterName) { // automatically determine adapter\n    for (var i = 0; i < preferredAdapters.length; ++i) {\n      adapterName = preferredAdapters[i];\n      // check for browsers that have been upgraded from websql-only to websql+idb\n      /* istanbul ignore if */\n      if (adapterName === 'idb' && 'websql' in adapters &&\n          hasLocalStorage() && localStorage['_pouch__websqldb_' + prefix + name]) {\n        // log it, because this can be confusing during development\n        guardedConsole('log', 'PouchDB is downgrading \"' + name + '\" to WebSQL to' +\n          ' avoid data loss, because it was already opened with WebSQL.');\n        continue; // keep using websql to avoid user data loss\n      }\n      break;\n    }\n  }\n\n  var adapter = adapters[adapterName];\n\n  // if adapter is invalid, then an error will be thrown later\n  var usePrefix = (adapter && 'use_prefix' in adapter) ?\n    adapter.use_prefix : true;\n\n  return {\n    name: usePrefix ? (prefix + name) : name,\n    adapter: adapterName\n  };\n}\n\n// OK, so here's the deal. Consider this code:\n//     var db1 = new PouchDB('foo');\n//     var db2 = new PouchDB('foo');\n//     db1.destroy();\n// ^ these two both need to emit 'destroyed' events,\n// as well as the PouchDB constructor itself.\n// So we have one db object (whichever one got destroy() called on it)\n// responsible for emitting the initial event, which then gets emitted\n// by the constructor, which then broadcasts it to any other dbs\n// that may have been created with the same name.\nfunction prepareForDestruction(self) {\n\n  function onDestroyed(from_constructor) {\n    self.removeListener('closed', onClosed);\n    if (!from_constructor) {\n      self.constructor.emit('destroyed', self.name);\n    }\n  }\n\n  function onClosed() {\n    self.removeListener('destroyed', onDestroyed);\n    self.constructor.emit('unref', self);\n  }\n\n  self.once('destroyed', onDestroyed);\n  self.once('closed', onClosed);\n  self.constructor.emit('ref', self);\n}\n\ninherits(PouchDB$5, AbstractPouchDB);\nfunction PouchDB$5(name, opts) {\n  // In Node our test suite only tests this for PouchAlt unfortunately\n  /* istanbul ignore if */\n  if (!(this instanceof PouchDB$5)) {\n    return new PouchDB$5(name, opts);\n  }\n\n  var self = this;\n  opts = opts || {};\n\n  if (name && typeof name === 'object') {\n    opts = name;\n    name = opts.name;\n    delete opts.name;\n  }\n\n  this.__opts = opts = clone(opts);\n\n  self.auto_compaction = opts.auto_compaction;\n  self.prefix = PouchDB$5.prefix;\n\n  if (typeof name !== 'string') {\n    throw new Error('Missing/invalid DB name');\n  }\n\n  var prefixedName = (opts.prefix || '') + name;\n  var backend = parseAdapter(prefixedName, opts);\n\n  opts.name = backend.name;\n  opts.adapter = opts.adapter || backend.adapter;\n\n  self.name = name;\n  self._adapter = opts.adapter;\n  PouchDB$5.emit('debug', ['adapter', 'Picked adapter: ', opts.adapter]);\n\n  if (!PouchDB$5.adapters[opts.adapter] ||\n      !PouchDB$5.adapters[opts.adapter].valid()) {\n    throw new Error('Invalid Adapter: ' + opts.adapter);\n  }\n\n  AbstractPouchDB.call(self);\n  self.taskqueue = new TaskQueue$1();\n\n  self.adapter = opts.adapter;\n\n  PouchDB$5.adapters[opts.adapter].call(self, opts, function (err) {\n    if (err) {\n      return self.taskqueue.fail(err);\n    }\n    prepareForDestruction(self);\n\n    self.emit('created', self);\n    PouchDB$5.emit('created', self.name);\n    self.taskqueue.ready(self);\n  });\n\n}\n\nPouchDB$5.adapters = {};\nPouchDB$5.preferredAdapters = [];\n\nPouchDB$5.prefix = '_pouch_';\n\nvar eventEmitter = new events.EventEmitter();\n\nfunction setUpEventEmitter(Pouch) {\n  Object.keys(events.EventEmitter.prototype).forEach(function (key) {\n    if (typeof events.EventEmitter.prototype[key] === 'function') {\n      Pouch[key] = eventEmitter[key].bind(eventEmitter);\n    }\n  });\n\n  // these are created in constructor.js, and allow us to notify each DB with\n  // the same name that it was destroyed, via the constructor object\n  var destructListeners = Pouch._destructionListeners = new ExportedMap();\n\n  Pouch.on('ref', function onConstructorRef(db) {\n    if (!destructListeners.has(db.name)) {\n      destructListeners.set(db.name, []);\n    }\n    destructListeners.get(db.name).push(db);\n  });\n\n  Pouch.on('unref', function onConstructorUnref(db) {\n    if (!destructListeners.has(db.name)) {\n      return;\n    }\n    var dbList = destructListeners.get(db.name);\n    var pos = dbList.indexOf(db);\n    if (pos < 0) {\n      /* istanbul ignore next */\n      return;\n    }\n    dbList.splice(pos, 1);\n    if (dbList.length > 1) {\n      /* istanbul ignore next */\n      destructListeners.set(db.name, dbList);\n    } else {\n      destructListeners.delete(db.name);\n    }\n  });\n\n  Pouch.on('destroyed', function onConstructorDestroyed(name) {\n    if (!destructListeners.has(name)) {\n      return;\n    }\n    var dbList = destructListeners.get(name);\n    destructListeners.delete(name);\n    dbList.forEach(function (db) {\n      db.emit('destroyed',true);\n    });\n  });\n}\n\nsetUpEventEmitter(PouchDB$5);\n\nPouchDB$5.adapter = function (id, obj, addToPreferredAdapters) {\n  /* istanbul ignore else */\n  if (obj.valid()) {\n    PouchDB$5.adapters[id] = obj;\n    if (addToPreferredAdapters) {\n      PouchDB$5.preferredAdapters.push(id);\n    }\n  }\n};\n\nPouchDB$5.plugin = function (obj) {\n  if (typeof obj === 'function') { // function style for plugins\n    obj(PouchDB$5);\n  } else if (typeof obj !== 'object' || Object.keys(obj).length === 0) {\n    throw new Error('Invalid plugin: got \"' + obj + '\", expected an object or a function');\n  } else {\n    Object.keys(obj).forEach(function (id) { // object style for plugins\n      PouchDB$5.prototype[id] = obj[id];\n    });\n  }\n  if (this.__defaults) {\n    PouchDB$5.__defaults = $inject_Object_assign({}, this.__defaults);\n  }\n  return PouchDB$5;\n};\n\nPouchDB$5.defaults = function (defaultOpts) {\n  function PouchAlt(name, opts) {\n    if (!(this instanceof PouchAlt)) {\n      return new PouchAlt(name, opts);\n    }\n\n    opts = opts || {};\n\n    if (name && typeof name === 'object') {\n      opts = name;\n      name = opts.name;\n      delete opts.name;\n    }\n\n    opts = $inject_Object_assign({}, PouchAlt.__defaults, opts);\n    PouchDB$5.call(this, name, opts);\n  }\n\n  inherits(PouchAlt, PouchDB$5);\n\n  PouchAlt.preferredAdapters = PouchDB$5.preferredAdapters.slice();\n  Object.keys(PouchDB$5).forEach(function (key) {\n    if (!(key in PouchAlt)) {\n      PouchAlt[key] = PouchDB$5[key];\n    }\n  });\n\n  // make default options transitive\n  // https://github.com/pouchdb/pouchdb/issues/5922\n  PouchAlt.__defaults = $inject_Object_assign({}, this.__defaults, defaultOpts);\n\n  return PouchAlt;\n};\n\n// managed automatically by set-version.js\nvar version = \"6.4.1\";\n\nfunction debugPouch(PouchDB) {\n  PouchDB.debug = debug;\n  var logs = {};\n  /* istanbul ignore next */\n  PouchDB.on('debug', function (args) {\n    // first argument is log identifier\n    var logId = args[0];\n    // rest should be passed verbatim to debug module\n    var logArgs = args.slice(1);\n    if (!logs[logId]) {\n      logs[logId] = debug('pouchdb:' + logId);\n    }\n    logs[logId].apply(null, logArgs);\n  });\n}\n\n// this would just be \"return doc[field]\", but fields\n// can be \"deep\" due to dot notation\nfunction getFieldFromDoc(doc, parsedField) {\n  var value = doc;\n  for (var i = 0, len = parsedField.length; i < len; i++) {\n    var key = parsedField[i];\n    value = value[key];\n    if (!value) {\n      break;\n    }\n  }\n  return value;\n}\n\nfunction compare$1(left, right) {\n  return left < right ? -1 : left > right ? 1 : 0;\n}\n\n// Converts a string in dot notation to an array of its components, with backslash escaping\nfunction parseField(fieldName) {\n  // fields may be deep (e.g. \"foo.bar.baz\"), so parse\n  var fields = [];\n  var current = '';\n  for (var i = 0, len = fieldName.length; i < len; i++) {\n    var ch = fieldName[i];\n    if (ch === '.') {\n      if (i > 0 && fieldName[i - 1] === '\\\\') { // escaped delimiter\n        current = current.substring(0, current.length - 1) + '.';\n      } else { // not escaped, so delimiter\n        fields.push(current);\n        current = '';\n      }\n    } else { // normal character\n      current += ch;\n    }\n  }\n  fields.push(current);\n  return fields;\n}\n\nvar combinationFields = ['$or', '$nor', '$not'];\nfunction isCombinationalField(field) {\n  return combinationFields.indexOf(field) > -1;\n}\n\nfunction getKey(obj) {\n  return Object.keys(obj)[0];\n}\n\nfunction getValue(obj) {\n  return obj[getKey(obj)];\n}\n\n\n// flatten an array of selectors joined by an $and operator\nfunction mergeAndedSelectors(selectors) {\n\n  // sort to ensure that e.g. if the user specified\n  // $and: [{$gt: 'a'}, {$gt: 'b'}], then it's collapsed into\n  // just {$gt: 'b'}\n  var res = {};\n\n  selectors.forEach(function (selector) {\n    Object.keys(selector).forEach(function (field) {\n      var matcher = selector[field];\n      if (typeof matcher !== 'object') {\n        matcher = {$eq: matcher};\n      }\n\n      if (isCombinationalField(field)) {\n        if (matcher instanceof Array) {\n          res[field] = matcher.map(function (m) {\n            return mergeAndedSelectors([m]);\n          });\n        } else {\n          res[field] = mergeAndedSelectors([matcher]);\n        }\n      } else {\n        var fieldMatchers = res[field] = res[field] || {};\n        Object.keys(matcher).forEach(function (operator) {\n          var value = matcher[operator];\n\n          if (operator === '$gt' || operator === '$gte') {\n            return mergeGtGte(operator, value, fieldMatchers);\n          } else if (operator === '$lt' || operator === '$lte') {\n            return mergeLtLte(operator, value, fieldMatchers);\n          } else if (operator === '$ne') {\n            return mergeNe(value, fieldMatchers);\n          } else if (operator === '$eq') {\n            return mergeEq(value, fieldMatchers);\n          }\n          fieldMatchers[operator] = value;\n        });\n      }\n    });\n  });\n\n  return res;\n}\n\n\n\n// collapse logically equivalent gt/gte values\nfunction mergeGtGte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$gte !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gte) { // more specificity\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value >= fieldMatchers.$gte) { // more specificity\n        delete fieldMatchers.$gte;\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$gt !== 'undefined') {\n    if (operator === '$gte') {\n      if (value > fieldMatchers.$gt) { // more specificity\n        delete fieldMatchers.$gt;\n        fieldMatchers.$gte = value;\n      }\n    } else { // operator === '$gt'\n      if (value > fieldMatchers.$gt) { // more specificity\n        fieldMatchers.$gt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// collapse logically equivalent lt/lte values\nfunction mergeLtLte(operator, value, fieldMatchers) {\n  if (typeof fieldMatchers.$eq !== 'undefined') {\n    return; // do nothing\n  }\n  if (typeof fieldMatchers.$lte !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lte) { // more specificity\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value <= fieldMatchers.$lte) { // more specificity\n        delete fieldMatchers.$lte;\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else if (typeof fieldMatchers.$lt !== 'undefined') {\n    if (operator === '$lte') {\n      if (value < fieldMatchers.$lt) { // more specificity\n        delete fieldMatchers.$lt;\n        fieldMatchers.$lte = value;\n      }\n    } else { // operator === '$gt'\n      if (value < fieldMatchers.$lt) { // more specificity\n        fieldMatchers.$lt = value;\n      }\n    }\n  } else {\n    fieldMatchers[operator] = value;\n  }\n}\n\n// combine $ne values into one array\nfunction mergeNe(value, fieldMatchers) {\n  if ('$ne' in fieldMatchers) {\n    // there are many things this could \"not\" be\n    fieldMatchers.$ne.push(value);\n  } else { // doesn't exist yet\n    fieldMatchers.$ne = [value];\n  }\n}\n\n// add $eq into the mix\nfunction mergeEq(value, fieldMatchers) {\n  // these all have less specificity than the $eq\n  // TODO: check for user errors here\n  delete fieldMatchers.$gt;\n  delete fieldMatchers.$gte;\n  delete fieldMatchers.$lt;\n  delete fieldMatchers.$lte;\n  delete fieldMatchers.$ne;\n  fieldMatchers.$eq = value;\n}\n\n\n//\n// normalize the selector\n//\nfunction massageSelector(input) {\n  var result = clone(input);\n  var wasAnded = false;\n  if ('$and' in result) {\n    result = mergeAndedSelectors(result['$and']);\n    wasAnded = true;\n  }\n\n  ['$or', '$nor'].forEach(function (orOrNor) {\n    if (orOrNor in result) {\n      // message each individual selector\n      // e.g. {foo: 'bar'} becomes {foo: {$eq: 'bar'}}\n      result[orOrNor].forEach(function (subSelector) {\n        var fields = Object.keys(subSelector);\n        for (var i = 0; i < fields.length; i++) {\n          var field = fields[i];\n          var matcher = subSelector[field];\n          if (typeof matcher !== 'object' || matcher === null) {\n            subSelector[field] = {$eq: matcher};\n          }\n        }\n      });\n    }\n  });\n\n  if ('$not' in result) {\n    //This feels a little like forcing, but it will work for now,\n    //I would like to come back to this and make the merging of selectors a little more generic\n    result['$not'] = mergeAndedSelectors([result['$not']]);\n  }\n\n  var fields = Object.keys(result);\n\n  for (var i = 0; i < fields.length; i++) {\n    var field = fields[i];\n    var matcher = result[field];\n\n    if (typeof matcher !== 'object' || matcher === null) {\n      matcher = {$eq: matcher};\n    } else if ('$ne' in matcher && !wasAnded) {\n      // I put these in an array, since there may be more than one\n      // but in the \"mergeAnded\" operation, I already take care of that\n      matcher.$ne = [matcher.$ne];\n    }\n    result[field] = matcher;\n  }\n\n  return result;\n}\n\nfunction pad(str, padWith, upToLength) {\n  var padding = '';\n  var targetLength = upToLength - str.length;\n  /* istanbul ignore next */\n  while (padding.length < targetLength) {\n    padding += padWith;\n  }\n  return padding;\n}\n\nfunction padLeft(str, padWith, upToLength) {\n  var padding = pad(str, padWith, upToLength);\n  return padding + str;\n}\n\nvar MIN_MAGNITUDE = -324; // verified by -Number.MIN_VALUE\nvar MAGNITUDE_DIGITS = 3; // ditto\nvar SEP = ''; // set to '_' for easier debugging \n\nfunction collate(a, b) {\n\n  if (a === b) {\n    return 0;\n  }\n\n  a = normalizeKey(a);\n  b = normalizeKey(b);\n\n  var ai = collationIndex(a);\n  var bi = collationIndex(b);\n  if ((ai - bi) !== 0) {\n    return ai - bi;\n  }\n  switch (typeof a) {\n    case 'number':\n      return a - b;\n    case 'boolean':\n      return a < b ? -1 : 1;\n    case 'string':\n      return stringCollate(a, b);\n  }\n  return Array.isArray(a) ? arrayCollate(a, b) : objectCollate(a, b);\n}\n\n// couch considers null/NaN/Infinity/-Infinity === undefined,\n// for the purposes of mapreduce indexes. also, dates get stringified.\nfunction normalizeKey(key) {\n  switch (typeof key) {\n    case 'undefined':\n      return null;\n    case 'number':\n      if (key === Infinity || key === -Infinity || isNaN(key)) {\n        return null;\n      }\n      return key;\n    case 'object':\n      var origKey = key;\n      if (Array.isArray(key)) {\n        var len = key.length;\n        key = new Array(len);\n        for (var i = 0; i < len; i++) {\n          key[i] = normalizeKey(origKey[i]);\n        }\n      /* istanbul ignore next */\n      } else if (key instanceof Date) {\n        return key.toJSON();\n      } else if (key !== null) { // generic object\n        key = {};\n        for (var k in origKey) {\n          if (origKey.hasOwnProperty(k)) {\n            var val = origKey[k];\n            if (typeof val !== 'undefined') {\n              key[k] = normalizeKey(val);\n            }\n          }\n        }\n      }\n  }\n  return key;\n}\n\nfunction indexify(key) {\n  if (key !== null) {\n    switch (typeof key) {\n      case 'boolean':\n        return key ? 1 : 0;\n      case 'number':\n        return numToIndexableString(key);\n      case 'string':\n        // We've to be sure that key does not contain \\u0000\n        // Do order-preserving replacements:\n        // 0 -> 1, 1\n        // 1 -> 1, 2\n        // 2 -> 2, 2\n        return key\n          .replace(/\\u0002/g, '\\u0002\\u0002')\n          .replace(/\\u0001/g, '\\u0001\\u0002')\n          .replace(/\\u0000/g, '\\u0001\\u0001');\n      case 'object':\n        var isArray = Array.isArray(key);\n        var arr = isArray ? key : Object.keys(key);\n        var i = -1;\n        var len = arr.length;\n        var result = '';\n        if (isArray) {\n          while (++i < len) {\n            result += toIndexableString(arr[i]);\n          }\n        } else {\n          while (++i < len) {\n            var objKey = arr[i];\n            result += toIndexableString(objKey) +\n                toIndexableString(key[objKey]);\n          }\n        }\n        return result;\n    }\n  }\n  return '';\n}\n\n// convert the given key to a string that would be appropriate\n// for lexical sorting, e.g. within a database, where the\n// sorting is the same given by the collate() function.\nfunction toIndexableString(key) {\n  var zero = '\\u0000';\n  key = normalizeKey(key);\n  return collationIndex(key) + SEP + indexify(key) + zero;\n}\n\nfunction parseNumber(str, i) {\n  var originalIdx = i;\n  var num;\n  var zero = str[i] === '1';\n  if (zero) {\n    num = 0;\n    i++;\n  } else {\n    var neg = str[i] === '0';\n    i++;\n    var numAsString = '';\n    var magAsString = str.substring(i, i + MAGNITUDE_DIGITS);\n    var magnitude = parseInt(magAsString, 10) + MIN_MAGNITUDE;\n    /* istanbul ignore next */\n    if (neg) {\n      magnitude = -magnitude;\n    }\n    i += MAGNITUDE_DIGITS;\n    while (true) {\n      var ch = str[i];\n      if (ch === '\\u0000') {\n        break;\n      } else {\n        numAsString += ch;\n      }\n      i++;\n    }\n    numAsString = numAsString.split('.');\n    if (numAsString.length === 1) {\n      num = parseInt(numAsString, 10);\n    } else {\n      /* istanbul ignore next */\n      num = parseFloat(numAsString[0] + '.' + numAsString[1]);\n    }\n    /* istanbul ignore next */\n    if (neg) {\n      num = num - 10;\n    }\n    /* istanbul ignore next */\n    if (magnitude !== 0) {\n      // parseFloat is more reliable than pow due to rounding errors\n      // e.g. Number.MAX_VALUE would return Infinity if we did\n      // num * Math.pow(10, magnitude);\n      num = parseFloat(num + 'e' + magnitude);\n    }\n  }\n  return {num: num, length : i - originalIdx};\n}\n\n// move up the stack while parsing\n// this function moved outside of parseIndexableString for performance\nfunction pop(stack, metaStack) {\n  var obj = stack.pop();\n\n  if (metaStack.length) {\n    var lastMetaElement = metaStack[metaStack.length - 1];\n    if (obj === lastMetaElement.element) {\n      // popping a meta-element, e.g. an object whose value is another object\n      metaStack.pop();\n      lastMetaElement = metaStack[metaStack.length - 1];\n    }\n    var element = lastMetaElement.element;\n    var lastElementIndex = lastMetaElement.index;\n    if (Array.isArray(element)) {\n      element.push(obj);\n    } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n      var key = stack.pop();\n      element[key] = obj;\n    } else {\n      stack.push(obj); // obj with key only\n    }\n  }\n}\n\nfunction parseIndexableString(str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n\n  /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n  while (true) {\n    var collationIndex = str[i++];\n    if (collationIndex === '\\u0000') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case '1':\n        stack.push(null);\n        break;\n      case '2':\n        stack.push(str[i] === '1');\n        i++;\n        break;\n      case '3':\n        var parsedNum = parseNumber(str, i);\n        stack.push(parsedNum.num);\n        i += parsedNum.length;\n        break;\n      case '4':\n        var parsedStr = '';\n        /*eslint no-constant-condition: [\"error\", { \"checkLoops\": false }]*/\n        while (true) {\n          var ch = str[i];\n          if (ch === '\\u0000') {\n            break;\n          }\n          parsedStr += ch;\n          i++;\n        }\n        // perform the reverse of the order-preserving replacement\n        // algorithm (see above)\n        parsedStr = parsedStr.replace(/\\u0001\\u0001/g, '\\u0000')\n          .replace(/\\u0001\\u0002/g, '\\u0001')\n          .replace(/\\u0002\\u0002/g, '\\u0002');\n        stack.push(parsedStr);\n        break;\n      case '5':\n        var arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '6':\n        var objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      /* istanbul ignore next */\n      default:\n        throw new Error(\n          'bad collationIndex or unexpectedly reached end of input: ' +\n            collationIndex);\n    }\n  }\n}\n\nfunction arrayCollate(a, b) {\n  var len = Math.min(a.length, b.length);\n  for (var i = 0; i < len; i++) {\n    var sort = collate(a[i], b[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n  }\n  return (a.length === b.length) ? 0 :\n    (a.length > b.length) ? 1 : -1;\n}\nfunction stringCollate(a, b) {\n  // See: https://github.com/daleharvey/pouchdb/issues/40\n  // This is incompatible with the CouchDB implementation, but its the\n  // best we can do for now\n  return (a === b) ? 0 : ((a > b) ? 1 : -1);\n}\nfunction objectCollate(a, b) {\n  var ak = Object.keys(a), bk = Object.keys(b);\n  var len = Math.min(ak.length, bk.length);\n  for (var i = 0; i < len; i++) {\n    // First sort the keys\n    var sort = collate(ak[i], bk[i]);\n    if (sort !== 0) {\n      return sort;\n    }\n    // if the keys are equal sort the values\n    sort = collate(a[ak[i]], b[bk[i]]);\n    if (sort !== 0) {\n      return sort;\n    }\n\n  }\n  return (ak.length === bk.length) ? 0 :\n    (ak.length > bk.length) ? 1 : -1;\n}\n// The collation is defined by erlangs ordered terms\n// the atoms null, true, false come first, then numbers, strings,\n// arrays, then objects\n// null/undefined/NaN/Infinity/-Infinity are all considered null\nfunction collationIndex(x) {\n  var id = ['boolean', 'number', 'string', 'object'];\n  var idx = id.indexOf(typeof x);\n  //false if -1 otherwise true, but fast!!!!1\n  if (~idx) {\n    if (x === null) {\n      return 1;\n    }\n    if (Array.isArray(x)) {\n      return 5;\n    }\n    return idx < 3 ? (idx + 2) : (idx + 3);\n  }\n  /* istanbul ignore next */\n  if (Array.isArray(x)) {\n    return 5;\n  }\n}\n\n// conversion:\n// x yyy zz...zz\n// x = 0 for negative, 1 for 0, 2 for positive\n// y = exponent (for negative numbers negated) moved so that it's >= 0\n// z = mantisse\nfunction numToIndexableString(num) {\n\n  if (num === 0) {\n    return '1';\n  }\n\n  // convert number to exponential format for easier and\n  // more succinct string sorting\n  var expFormat = num.toExponential().split(/e\\+?/);\n  var magnitude = parseInt(expFormat[1], 10);\n\n  var neg = num < 0;\n\n  var result = neg ? '0' : '2';\n\n  // first sort by magnitude\n  // it's easier if all magnitudes are positive\n  var magForComparison = ((neg ? -magnitude : magnitude) - MIN_MAGNITUDE);\n  var magString = padLeft((magForComparison).toString(), '0', MAGNITUDE_DIGITS);\n\n  result += SEP + magString;\n\n  // then sort by the factor\n  var factor = Math.abs(parseFloat(expFormat[0])); // [1..10)\n  /* istanbul ignore next */\n  if (neg) { // for negative reverse ordering\n    factor = 10 - factor;\n  }\n\n  var factorStr = factor.toFixed(20);\n\n  // strip zeros from the end\n  factorStr = factorStr.replace(/\\.?0+$/, '');\n\n  result += SEP + factorStr;\n\n  return result;\n}\n\n// create a comparator based on the sort object\nfunction createFieldSorter(sort) {\n\n  function getFieldValuesAsArray(doc) {\n    return sort.map(function (sorting) {\n      var fieldName = getKey(sorting);\n      var parsedField = parseField(fieldName);\n      var docFieldValue = getFieldFromDoc(doc, parsedField);\n      return docFieldValue;\n    });\n  }\n\n  return function (aRow, bRow) {\n    var aFieldValues = getFieldValuesAsArray(aRow.doc);\n    var bFieldValues = getFieldValuesAsArray(bRow.doc);\n    var collation = collate(aFieldValues, bFieldValues);\n    if (collation !== 0) {\n      return collation;\n    }\n    // this is what mango seems to do\n    return compare$1(aRow.doc._id, bRow.doc._id);\n  };\n}\n\nfunction filterInMemoryFields(rows, requestDef, inMemoryFields) {\n  rows = rows.filter(function (row) {\n    return rowFilter(row.doc, requestDef.selector, inMemoryFields);\n  });\n\n  if (requestDef.sort) {\n    // in-memory sort\n    var fieldSorter = createFieldSorter(requestDef.sort);\n    rows = rows.sort(fieldSorter);\n    if (typeof requestDef.sort[0] !== 'string' &&\n        getValue(requestDef.sort[0]) === 'desc') {\n      rows = rows.reverse();\n    }\n  }\n\n  if ('limit' in requestDef || 'skip' in requestDef) {\n    // have to do the limit in-memory\n    var skip = requestDef.skip || 0;\n    var limit = ('limit' in requestDef ? requestDef.limit : rows.length) + skip;\n    rows = rows.slice(skip, limit);\n  }\n  return rows;\n}\n\nfunction rowFilter(doc, selector, inMemoryFields) {\n  return inMemoryFields.every(function (field) {\n    var matcher = selector[field];\n    var parsedField = parseField(field);\n    var docFieldValue = getFieldFromDoc(doc, parsedField);\n    if (isCombinationalField(field)) {\n      return matchCominationalSelector(field, matcher, doc);\n    }\n\n    return matchSelector(matcher, doc, parsedField, docFieldValue);\n  });\n}\n\nfunction matchSelector(matcher, doc, parsedField, docFieldValue) {\n  if (!matcher) {\n    // no filtering necessary; this field is just needed for sorting\n    return true;\n  }\n\n  return Object.keys(matcher).every(function (userOperator) {\n    var userValue = matcher[userOperator];\n    return match(userOperator, doc, userValue, parsedField, docFieldValue);\n  });\n}\n\nfunction matchCominationalSelector(field, matcher, doc) {\n\n  if (field === '$or') {\n    return matcher.some(function (orMatchers) {\n      return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n    });\n  }\n\n  if (field === '$not') {\n    return !rowFilter(doc, matcher, Object.keys(matcher));\n  }\n\n  //`$nor`\n  return !matcher.find(function (orMatchers) {\n    return rowFilter(doc, orMatchers, Object.keys(orMatchers));\n  });\n\n}\n\nfunction match(userOperator, doc, userValue, parsedField, docFieldValue) {\n  if (!matchers[userOperator]) {\n    throw new Error('unknown operator \"' + userOperator +\n      '\" - should be one of $eq, $lte, $lt, $gt, $gte, $exists, $ne, $in, ' +\n      '$nin, $size, $mod, $regex, $elemMatch, $type, $allMatch or $all');\n  }\n  return matchers[userOperator](doc, userValue, parsedField, docFieldValue);\n}\n\nfunction fieldExists(docFieldValue) {\n  return typeof docFieldValue !== 'undefined' && docFieldValue !== null;\n}\n\nfunction fieldIsNotUndefined(docFieldValue) {\n  return typeof docFieldValue !== 'undefined';\n}\n\nfunction modField(docFieldValue, userValue) {\n  var divisor = userValue[0];\n  var mod = userValue[1];\n  if (divisor === 0) {\n    throw new Error('Bad divisor, cannot divide by zero');\n  }\n\n  if (parseInt(divisor, 10) !== divisor ) {\n    throw new Error('Divisor is not an integer');\n  }\n\n  if (parseInt(mod, 10) !== mod ) {\n    throw new Error('Modulus is not an integer');\n  }\n\n  if (parseInt(docFieldValue, 10) !== docFieldValue) {\n    return false;\n  }\n\n  return docFieldValue % divisor === mod;\n}\n\nfunction arrayContainsValue(docFieldValue, userValue) {\n  return userValue.some(function (val) {\n    if (docFieldValue instanceof Array) {\n      return docFieldValue.indexOf(val) > -1;\n    }\n\n    return docFieldValue === val;\n  });\n}\n\nfunction arrayContainsAllValues(docFieldValue, userValue) {\n  return userValue.every(function (val) {\n    return docFieldValue.indexOf(val) > -1;\n  });\n}\n\nfunction arraySize(docFieldValue, userValue) {\n  return docFieldValue.length === userValue;\n}\n\nfunction regexMatch(docFieldValue, userValue) {\n  var re = new RegExp(userValue);\n\n  return re.test(docFieldValue);\n}\n\nfunction typeMatch(docFieldValue, userValue) {\n\n  switch (userValue) {\n    case 'null':\n      return docFieldValue === null;\n    case 'boolean':\n      return typeof (docFieldValue) === 'boolean';\n    case 'number':\n      return typeof (docFieldValue) === 'number';\n    case 'string':\n      return typeof (docFieldValue) === 'string';\n    case 'array':\n      return docFieldValue instanceof Array;\n    case 'object':\n      return ({}).toString.call(docFieldValue) === '[object Object]';\n  }\n\n  throw new Error(userValue + ' not supported as a type.' +\n                  'Please use one of object, string, array, number, boolean or null.');\n\n}\n\nvar matchers = {\n\n  '$elemMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.some(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.some(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$allMatch': function (doc, userValue, parsedField, docFieldValue) {\n    if (!Array.isArray(docFieldValue)) {\n      return false;\n    }\n\n    /* istanbul ignore next */\n    if (docFieldValue.length === 0) {\n      return false;\n    }\n\n    if (typeof docFieldValue[0] === 'object') {\n      return docFieldValue.every(function (val) {\n        return rowFilter(val, userValue, Object.keys(userValue));\n      });\n    }\n\n    return docFieldValue.every(function (val) {\n      return matchSelector(userValue, doc, parsedField, val);\n    });\n  },\n\n  '$eq': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) === 0;\n  },\n\n  '$gte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) >= 0;\n  },\n\n  '$gt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) > 0;\n  },\n\n  '$lte': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) <= 0;\n  },\n\n  '$lt': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldIsNotUndefined(docFieldValue) && collate(docFieldValue, userValue) < 0;\n  },\n\n  '$exists': function (doc, userValue, parsedField, docFieldValue) {\n    //a field that is null is still considered to exist\n    if (userValue) {\n      return fieldIsNotUndefined(docFieldValue);\n    }\n\n    return !fieldIsNotUndefined(docFieldValue);\n  },\n\n  '$mod': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && modField(docFieldValue, userValue);\n  },\n\n  '$ne': function (doc, userValue, parsedField, docFieldValue) {\n    return userValue.every(function (neValue) {\n      return collate(docFieldValue, neValue) !== 0;\n    });\n  },\n  '$in': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$nin': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && !arrayContainsValue(docFieldValue, userValue);\n  },\n\n  '$size': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && arraySize(docFieldValue, userValue);\n  },\n\n  '$all': function (doc, userValue, parsedField, docFieldValue) {\n    return Array.isArray(docFieldValue) && arrayContainsAllValues(docFieldValue, userValue);\n  },\n\n  '$regex': function (doc, userValue, parsedField, docFieldValue) {\n    return fieldExists(docFieldValue) && regexMatch(docFieldValue, userValue);\n  },\n\n  '$type': function (doc, userValue, parsedField, docFieldValue) {\n    return typeMatch(docFieldValue, userValue);\n  }\n};\n\n// return true if the given doc matches the supplied selector\nfunction matchesSelector(doc, selector) {\n  /* istanbul ignore if */\n  if (typeof selector !== 'object') {\n    // match the CouchDB error message\n    throw new Error('Selector error: expected a JSON object');\n  }\n\n  selector = massageSelector(selector);\n  var row = {\n    'doc': doc\n  };\n\n  var rowsMatched = filterInMemoryFields([row], { 'selector': selector }, Object.keys(selector));\n  return rowsMatched && rowsMatched.length === 1;\n}\n\nfunction evalFilter(input) {\n  return scopeEval('\"use strict\";\\nreturn ' + input + ';', {});\n}\n\nfunction evalView(input) {\n  var code = [\n    'return function(doc) {',\n    '  \"use strict\";',\n    '  var emitted = false;',\n    '  var emit = function (a, b) {',\n    '    emitted = true;',\n    '  };',\n    '  var view = ' + input + ';',\n    '  view(doc);',\n    '  if (emitted) {',\n    '    return true;',\n    '  }',\n    '};'\n  ].join('\\n');\n\n  return scopeEval(code, {});\n}\n\nfunction validate(opts, callback) {\n  if (opts.selector) {\n    if (opts.filter && opts.filter !== '_selector') {\n      var filterName = typeof opts.filter === 'string' ?\n        opts.filter : 'function';\n      return callback(new Error('selector invalid for filter \"' + filterName + '\"'));\n    }\n  }\n  callback();\n}\n\nfunction normalize(opts) {\n  if (opts.view && !opts.filter) {\n    opts.filter = '_view';\n  }\n\n  if (opts.selector && !opts.filter) {\n    opts.filter = '_selector';\n  }\n\n  if (opts.filter && typeof opts.filter === 'string') {\n    if (opts.filter === '_view') {\n      opts.view = normalizeDesignDocFunctionName(opts.view);\n    } else {\n      opts.filter = normalizeDesignDocFunctionName(opts.filter);\n    }\n  }\n}\n\nfunction shouldFilter(changesHandler, opts) {\n  return opts.filter && typeof opts.filter === 'string' &&\n    !opts.doc_ids && !isRemote(changesHandler.db);\n}\n\nfunction filter(changesHandler, opts) {\n  var callback = opts.complete;\n  if (opts.filter === '_view') {\n    if (!opts.view || typeof opts.view !== 'string') {\n      var err = createError(BAD_REQUEST,\n        '`view` filter parameter not found or invalid.');\n      return callback(err);\n    }\n    // fetch a view from a design doc, make it behave like a filter\n    var viewName = parseDesignDocFunctionName(opts.view);\n    changesHandler.db.get('_design/' + viewName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var mapFun = ddoc && ddoc.views && ddoc.views[viewName[1]] &&\n        ddoc.views[viewName[1]].map;\n      if (!mapFun) {\n        return callback(createError(MISSING_DOC,\n          (ddoc.views ? 'missing json key: ' + viewName[1] :\n            'missing json key: views')));\n      }\n      opts.filter = evalView(mapFun);\n      changesHandler.doChanges(opts);\n    });\n  } else if (opts.selector) {\n    opts.filter = function (doc) {\n      return matchesSelector(doc, opts.selector);\n    };\n    changesHandler.doChanges(opts);\n  } else {\n    // fetch a filter from a design doc\n    var filterName = parseDesignDocFunctionName(opts.filter);\n    changesHandler.db.get('_design/' + filterName[0], function (err, ddoc) {\n      /* istanbul ignore if */\n      if (changesHandler.isCancelled) {\n        return callback(null, {status: 'cancelled'});\n      }\n      /* istanbul ignore next */\n      if (err) {\n        return callback(generateErrorFromResponse(err));\n      }\n      var filterFun = ddoc && ddoc.filters && ddoc.filters[filterName[1]];\n      if (!filterFun) {\n        return callback(createError(MISSING_DOC,\n          ((ddoc && ddoc.filters) ? 'missing json key: ' + filterName[1]\n            : 'missing json key: filters')));\n      }\n      opts.filter = evalFilter(filterFun);\n      changesHandler.doChanges(opts);\n    });\n  }\n}\n\nfunction applyChangesFilterPlugin(PouchDB) {\n  PouchDB._changesFilterPlugin = {\n    validate: validate,\n    normalize: normalize,\n    shouldFilter: shouldFilter,\n    filter: filter\n  };\n}\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$5.plugin(debugPouch);\n\n// TODO: remove from pouchdb-core (breaking)\nPouchDB$5.plugin(applyChangesFilterPlugin);\n\nPouchDB$5.version = version;\n\nfunction toObject(array) {\n  return array.reduce(function (obj, item) {\n    obj[item] = true;\n    return obj;\n  }, {});\n}\n// List of top level reserved words for doc\nvar reservedWords = toObject([\n  '_id',\n  '_rev',\n  '_attachments',\n  '_deleted',\n  '_revisions',\n  '_revs_info',\n  '_conflicts',\n  '_deleted_conflicts',\n  '_local_seq',\n  '_rev_tree',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats',\n  // Specific to Couchbase Sync Gateway\n  '_removed'\n]);\n\n// List of reserved words that should end up the document\nvar dataWords = toObject([\n  '_attachments',\n  //replication documents\n  '_replication_id',\n  '_replication_state',\n  '_replication_state_time',\n  '_replication_state_reason',\n  '_replication_stats'\n]);\n\nfunction parseRevisionInfo(rev$$1) {\n  if (!/^\\d+-./.test(rev$$1)) {\n    return createError(INVALID_REV);\n  }\n  var idx = rev$$1.indexOf('-');\n  var left = rev$$1.substring(0, idx);\n  var right = rev$$1.substring(idx + 1);\n  return {\n    prefix: parseInt(left, 10),\n    id: right\n  };\n}\n\nfunction makeRevTreeFromRevisions(revisions, opts) {\n  var pos = revisions.start - revisions.ids.length + 1;\n\n  var revisionIds = revisions.ids;\n  var ids = [revisionIds[0], opts, []];\n\n  for (var i = 1, len = revisionIds.length; i < len; i++) {\n    ids = [revisionIds[i], {status: 'missing'}, [ids]];\n  }\n\n  return [{\n    pos: pos,\n    ids: ids\n  }];\n}\n\n// Preprocess documents, parse their revisions, assign an id and a\n// revision for new writes that are missing them, etc\nfunction parseDoc(doc, newEdits) {\n\n  var nRevNum;\n  var newRevId;\n  var revInfo;\n  var opts = {status: 'available'};\n  if (doc._deleted) {\n    opts.deleted = true;\n  }\n\n  if (newEdits) {\n    if (!doc._id) {\n      doc._id = uuid();\n    }\n    newRevId = rev();\n    if (doc._rev) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      doc._rev_tree = [{\n        pos: revInfo.prefix,\n        ids: [revInfo.id, {status: 'missing'}, [[newRevId, opts, []]]]\n      }];\n      nRevNum = revInfo.prefix + 1;\n    } else {\n      doc._rev_tree = [{\n        pos: 1,\n        ids : [newRevId, opts, []]\n      }];\n      nRevNum = 1;\n    }\n  } else {\n    if (doc._revisions) {\n      doc._rev_tree = makeRevTreeFromRevisions(doc._revisions, opts);\n      nRevNum = doc._revisions.start;\n      newRevId = doc._revisions.ids[0];\n    }\n    if (!doc._rev_tree) {\n      revInfo = parseRevisionInfo(doc._rev);\n      if (revInfo.error) {\n        return revInfo;\n      }\n      nRevNum = revInfo.prefix;\n      newRevId = revInfo.id;\n      doc._rev_tree = [{\n        pos: nRevNum,\n        ids: [newRevId, opts, []]\n      }];\n    }\n  }\n\n  invalidIdError(doc._id);\n\n  doc._rev = nRevNum + '-' + newRevId;\n\n  var result = {metadata : {}, data : {}};\n  for (var key in doc) {\n    /* istanbul ignore else */\n    if (Object.prototype.hasOwnProperty.call(doc, key)) {\n      var specialKey = key[0] === '_';\n      if (specialKey && !reservedWords[key]) {\n        var error = createError(DOC_VALIDATION, key);\n        error.message = DOC_VALIDATION.message + ': ' + key;\n        throw error;\n      } else if (specialKey && !dataWords[key]) {\n        result.metadata[key.slice(1)] = doc[key];\n      } else {\n        result.data[key] = doc[key];\n      }\n    }\n  }\n  return result;\n}\n\nvar thisAtob = function (str) {\n  return atob(str);\n};\n\nvar thisBtoa = function (str) {\n  return btoa(str);\n};\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor (e.g.\n// old QtWebKit versions, Android < 4.4).\nfunction createBlob(parts, properties) {\n  /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n  parts = parts || [];\n  properties = properties || {};\n  try {\n    return new Blob(parts, properties);\n  } catch (e) {\n    if (e.name !== \"TypeError\") {\n      throw e;\n    }\n    var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\n                  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\n                  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder :\n                  WebKitBlobBuilder;\n    var builder = new Builder();\n    for (var i = 0; i < parts.length; i += 1) {\n      builder.append(parts[i]);\n    }\n    return builder.getBlob(properties.type);\n  }\n}\n\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction binaryStringToArrayBuffer(bin) {\n  var length = bin.length;\n  var buf = new ArrayBuffer(length);\n  var arr = new Uint8Array(buf);\n  for (var i = 0; i < length; i++) {\n    arr[i] = bin.charCodeAt(i);\n  }\n  return buf;\n}\n\nfunction binStringToBluffer(binString, type) {\n  return createBlob([binaryStringToArrayBuffer(binString)], {type: type});\n}\n\nfunction b64ToBluffer(b64, type) {\n  return binStringToBluffer(thisAtob(b64), type);\n}\n\n//Can't find original post, but this is close\n//http://stackoverflow.com/questions/6965107/ (continues on next line)\n//converting-between-strings-and-arraybuffers\nfunction arrayBufferToBinaryString(buffer) {\n  var binary = '';\n  var bytes = new Uint8Array(buffer);\n  var length = bytes.byteLength;\n  for (var i = 0; i < length; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return binary;\n}\n\n// shim for browsers that don't support it\nfunction readAsBinaryString(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(arrayBufferToBinaryString(\n      new FileReaderSync().readAsArrayBuffer(blob)));\n  }\n\n  var reader = new FileReader();\n  var hasBinaryString = typeof reader.readAsBinaryString === 'function';\n  reader.onloadend = function (e) {\n    var result = e.target.result || '';\n    if (hasBinaryString) {\n      return callback(result);\n    }\n    callback(arrayBufferToBinaryString(result));\n  };\n  if (hasBinaryString) {\n    reader.readAsBinaryString(blob);\n  } else {\n    reader.readAsArrayBuffer(blob);\n  }\n}\n\nfunction blobToBinaryString(blobOrBuffer, callback) {\n  readAsBinaryString(blobOrBuffer, function (bin) {\n    callback(bin);\n  });\n}\n\nfunction blobToBase64(blobOrBuffer, callback) {\n  blobToBinaryString(blobOrBuffer, function (base64) {\n    callback(thisBtoa(base64));\n  });\n}\n\n// simplified API. universal browser support is assumed\nfunction readAsArrayBuffer(blob, callback) {\n  if (typeof FileReader === 'undefined') {\n    // fix for Firefox in a web worker:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=901097\n    return callback(new FileReaderSync().readAsArrayBuffer(blob));\n  }\n\n  var reader = new FileReader();\n  reader.onloadend = function (e) {\n    var result = e.target.result || new ArrayBuffer(0);\n    callback(result);\n  };\n  reader.readAsArrayBuffer(blob);\n}\n\n// this is not used in the browser\n\nvar setImmediateShim = global.setImmediate || global.setTimeout;\nvar MD5_CHUNK_SIZE = 32768;\n\nfunction rawToBase64(raw) {\n  return thisBtoa(raw);\n}\n\nfunction sliceBlob(blob, start, end) {\n  if (blob.webkitSlice) {\n    return blob.webkitSlice(start, end);\n  }\n  return blob.slice(start, end);\n}\n\nfunction appendBlob(buffer, blob, start, end, callback) {\n  if (start > 0 || end < blob.size) {\n    // only slice blob if we really need to\n    blob = sliceBlob(blob, start, end);\n  }\n  readAsArrayBuffer(blob, function (arrayBuffer) {\n    buffer.append(arrayBuffer);\n    callback();\n  });\n}\n\nfunction appendString(buffer, string, start, end, callback) {\n  if (start > 0 || end < string.length) {\n    // only create a substring if we really need to\n    string = string.substring(start, end);\n  }\n  buffer.appendBinary(string);\n  callback();\n}\n\nfunction binaryMd5(data, callback) {\n  var inputIsString = typeof data === 'string';\n  var len = inputIsString ? data.length : data.size;\n  var chunkSize = Math.min(MD5_CHUNK_SIZE, len);\n  var chunks = Math.ceil(len / chunkSize);\n  var currentChunk = 0;\n  var buffer = inputIsString ? new Md5() : new Md5.ArrayBuffer();\n\n  var append = inputIsString ? appendString : appendBlob;\n\n  function next() {\n    setImmediateShim(loadNextChunk);\n  }\n\n  function done() {\n    var raw = buffer.end(true);\n    var base64 = rawToBase64(raw);\n    callback(base64);\n    buffer.destroy();\n  }\n\n  function loadNextChunk() {\n    var start = currentChunk * chunkSize;\n    var end = start + chunkSize;\n    currentChunk++;\n    if (currentChunk < chunks) {\n      append(buffer, data, start, end, next);\n    } else {\n      append(buffer, data, start, end, done);\n    }\n  }\n  loadNextChunk();\n}\n\nfunction stringMd5(string) {\n  return Md5.hash(string);\n}\n\nfunction parseBase64(data) {\n  try {\n    return thisAtob(data);\n  } catch (e) {\n    var err = createError(BAD_ARG,\n      'Attachment is not a valid base64 string');\n    return {error: err};\n  }\n}\n\nfunction preprocessString(att, blobType, callback) {\n  var asBinary = parseBase64(att.data);\n  if (asBinary.error) {\n    return callback(asBinary.error);\n  }\n\n  att.length = asBinary.length;\n  if (blobType === 'blob') {\n    att.data = binStringToBluffer(asBinary, att.content_type);\n  } else if (blobType === 'base64') {\n    att.data = thisBtoa(asBinary);\n  } else { // binary\n    att.data = asBinary;\n  }\n  binaryMd5(asBinary, function (result) {\n    att.digest = 'md5-' + result;\n    callback();\n  });\n}\n\nfunction preprocessBlob(att, blobType, callback) {\n  binaryMd5(att.data, function (md5) {\n    att.digest = 'md5-' + md5;\n    // size is for blobs (browser), length is for buffers (node)\n    att.length = att.data.size || att.data.length || 0;\n    if (blobType === 'binary') {\n      blobToBinaryString(att.data, function (binString) {\n        att.data = binString;\n        callback();\n      });\n    } else if (blobType === 'base64') {\n      blobToBase64(att.data, function (b64) {\n        att.data = b64;\n        callback();\n      });\n    } else {\n      callback();\n    }\n  });\n}\n\nfunction preprocessAttachment(att, blobType, callback) {\n  if (att.stub) {\n    return callback();\n  }\n  if (typeof att.data === 'string') { // input is a base64 string\n    preprocessString(att, blobType, callback);\n  } else { // input is a blob\n    preprocessBlob(att, blobType, callback);\n  }\n}\n\nfunction preprocessAttachments(docInfos, blobType, callback) {\n\n  if (!docInfos.length) {\n    return callback();\n  }\n\n  var docv = 0;\n  var overallErr;\n\n  docInfos.forEach(function (docInfo) {\n    var attachments = docInfo.data && docInfo.data._attachments ?\n      Object.keys(docInfo.data._attachments) : [];\n    var recv = 0;\n\n    if (!attachments.length) {\n      return done();\n    }\n\n    function processedAttachment(err) {\n      overallErr = err;\n      recv++;\n      if (recv === attachments.length) {\n        done();\n      }\n    }\n\n    for (var key in docInfo.data._attachments) {\n      if (docInfo.data._attachments.hasOwnProperty(key)) {\n        preprocessAttachment(docInfo.data._attachments[key],\n          blobType, processedAttachment);\n      }\n    }\n  });\n\n  function done() {\n    docv++;\n    if (docInfos.length === docv) {\n      if (overallErr) {\n        callback(overallErr);\n      } else {\n        callback();\n      }\n    }\n  }\n}\n\nfunction updateDoc(revLimit, prev, docInfo, results,\n                   i, cb, writeDoc, newEdits) {\n\n  if (revExists(prev.rev_tree, docInfo.metadata.rev)) {\n    results[i] = docInfo;\n    return cb();\n  }\n\n  // sometimes this is pre-calculated. historically not always\n  var previousWinningRev = prev.winningRev || winningRev(prev);\n  var previouslyDeleted = 'deleted' in prev ? prev.deleted :\n    isDeleted(prev, previousWinningRev);\n  var deleted = 'deleted' in docInfo.metadata ? docInfo.metadata.deleted :\n    isDeleted(docInfo.metadata);\n  var isRoot = /^1-/.test(docInfo.metadata.rev);\n\n  if (previouslyDeleted && !deleted && newEdits && isRoot) {\n    var newDoc = docInfo.data;\n    newDoc._rev = previousWinningRev;\n    newDoc._id = docInfo.metadata.id;\n    docInfo = parseDoc(newDoc, newEdits);\n  }\n\n  var merged = merge(prev.rev_tree, docInfo.metadata.rev_tree[0], revLimit);\n\n  var inConflict = newEdits && ((\n    (previouslyDeleted && deleted && merged.conflicts !== 'new_leaf') ||\n    (!previouslyDeleted && merged.conflicts !== 'new_leaf') ||\n    (previouslyDeleted && !deleted && merged.conflicts === 'new_branch')));\n\n  if (inConflict) {\n    var err = createError(REV_CONFLICT);\n    results[i] = err;\n    return cb();\n  }\n\n  var newRev = docInfo.metadata.rev;\n  docInfo.metadata.rev_tree = merged.tree;\n  docInfo.stemmedRevs = merged.stemmedRevs || [];\n  /* istanbul ignore else */\n  if (prev.rev_map) {\n    docInfo.metadata.rev_map = prev.rev_map; // used only by leveldb\n  }\n\n  // recalculate\n  var winningRev$$1 = winningRev(docInfo.metadata);\n  var winningRevIsDeleted = isDeleted(docInfo.metadata, winningRev$$1);\n\n  // calculate the total number of documents that were added/removed,\n  // from the perspective of total_rows/doc_count\n  var delta = (previouslyDeleted === winningRevIsDeleted) ? 0 :\n    previouslyDeleted < winningRevIsDeleted ? -1 : 1;\n\n  var newRevIsDeleted;\n  if (newRev === winningRev$$1) {\n    // if the new rev is the same as the winning rev, we can reuse that value\n    newRevIsDeleted = winningRevIsDeleted;\n  } else {\n    // if they're not the same, then we need to recalculate\n    newRevIsDeleted = isDeleted(docInfo.metadata, newRev);\n  }\n\n  writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n    true, delta, i, cb);\n}\n\nfunction rootIsMissing(docInfo) {\n  return docInfo.metadata.rev_tree[0].ids[1].status === 'missing';\n}\n\nfunction processDocs(revLimit, docInfos, api, fetchedDocs, tx, results,\n                     writeDoc, opts, overallCallback) {\n\n  // Default to 1000 locally\n  revLimit = revLimit || 1000;\n\n  function insertDoc(docInfo, resultsIdx, callback) {\n    // Cant insert new deleted documents\n    var winningRev$$1 = winningRev(docInfo.metadata);\n    var deleted = isDeleted(docInfo.metadata, winningRev$$1);\n    if ('was_delete' in opts && deleted) {\n      results[resultsIdx] = createError(MISSING_DOC, 'deleted');\n      return callback();\n    }\n\n    // 4712 - detect whether a new document was inserted with a _rev\n    var inConflict = newEdits && rootIsMissing(docInfo);\n\n    if (inConflict) {\n      var err = createError(REV_CONFLICT);\n      results[resultsIdx] = err;\n      return callback();\n    }\n\n    var delta = deleted ? 0 : 1;\n\n    writeDoc(docInfo, winningRev$$1, deleted, deleted, false,\n      delta, resultsIdx, callback);\n  }\n\n  var newEdits = opts.new_edits;\n  var idsToDocs = new ExportedMap();\n\n  var docsDone = 0;\n  var docsToDo = docInfos.length;\n\n  function checkAllDocsDone() {\n    if (++docsDone === docsToDo && overallCallback) {\n      overallCallback();\n    }\n  }\n\n  docInfos.forEach(function (currentDoc, resultsIdx) {\n\n    if (currentDoc._id && isLocalId(currentDoc._id)) {\n      var fun = currentDoc._deleted ? '_removeLocal' : '_putLocal';\n      api[fun](currentDoc, {ctx: tx}, function (err, res) {\n        results[resultsIdx] = err || res;\n        checkAllDocsDone();\n      });\n      return;\n    }\n\n    var id = currentDoc.metadata.id;\n    if (idsToDocs.has(id)) {\n      docsToDo--; // duplicate\n      idsToDocs.get(id).push([currentDoc, resultsIdx]);\n    } else {\n      idsToDocs.set(id, [[currentDoc, resultsIdx]]);\n    }\n  });\n\n  // in the case of new_edits, the user can provide multiple docs\n  // with the same id. these need to be processed sequentially\n  idsToDocs.forEach(function (docs, id) {\n    var numDone = 0;\n\n    function docWritten() {\n      if (++numDone < docs.length) {\n        nextDoc();\n      } else {\n        checkAllDocsDone();\n      }\n    }\n    function nextDoc() {\n      var value = docs[numDone];\n      var currentDoc = value[0];\n      var resultsIdx = value[1];\n\n      if (fetchedDocs.has(id)) {\n        updateDoc(revLimit, fetchedDocs.get(id), currentDoc, results,\n          resultsIdx, docWritten, writeDoc, newEdits);\n      } else {\n        // Ensure stemming applies to new writes as well\n        var merged = merge([], currentDoc.metadata.rev_tree[0], revLimit);\n        currentDoc.metadata.rev_tree = merged.tree;\n        currentDoc.stemmedRevs = merged.stemmedRevs || [];\n        insertDoc(currentDoc, resultsIdx, docWritten);\n      }\n    }\n    nextDoc();\n  });\n}\n\n// IndexedDB requires a versioned database structure, so we use the\n// version here to manage migrations.\nvar ADAPTER_VERSION = 5;\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\n// Keyed by document id\nvar DOC_STORE = 'document-store';\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE = 'by-sequence';\n// Where we store attachments\nvar ATTACH_STORE = 'attach-store';\n// Where we store many-to-many relations\n// between attachment digests and seqs\nvar ATTACH_AND_SEQ_STORE = 'attach-seq-store';\n\n// Where we store database-wide meta data in a single record\n// keyed by id: META_STORE\nvar META_STORE = 'meta-store';\n// Where we store local documents\nvar LOCAL_STORE = 'local-store';\n// Where we detect blob support\nvar DETECT_BLOB_SUPPORT_STORE = 'detect-blob-support';\n\nfunction safeJsonParse(str) {\n  // This try/catch guards against stack overflow errors.\n  // JSON.parse() is faster than vuvuzela.parse() but vuvuzela\n  // cannot overflow.\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.parse(str);\n  }\n}\n\nfunction safeJsonStringify(json) {\n  try {\n    return JSON.stringify(json);\n  } catch (e) {\n    /* istanbul ignore next */\n    return vuvuzela.stringify(json);\n  }\n}\n\nfunction idbError(callback) {\n  return function (evt) {\n    var message = 'unknown_error';\n    if (evt.target && evt.target.error) {\n      message = evt.target.error.name || evt.target.error.message;\n    }\n    callback(createError(IDB_ERROR, message, evt.type));\n  };\n}\n\n// Unfortunately, the metadata has to be stringified\n// when it is put into the database, because otherwise\n// IndexedDB can throw errors for deeply-nested objects.\n// Originally we just used JSON.parse/JSON.stringify; now\n// we use this custom vuvuzela library that avoids recursion.\n// If we could do it all over again, we'd probably use a\n// format for the revision trees other than JSON.\nfunction encodeMetadata(metadata, winningRev, deleted) {\n  return {\n    data: safeJsonStringify(metadata),\n    winningRev: winningRev,\n    deletedOrLocal: deleted ? '1' : '0',\n    seq: metadata.seq, // highest seq for this doc\n    id: metadata.id\n  };\n}\n\nfunction decodeMetadata(storedObject) {\n  if (!storedObject) {\n    return null;\n  }\n  var metadata = safeJsonParse(storedObject.data);\n  metadata.winningRev = storedObject.winningRev;\n  metadata.deleted = storedObject.deletedOrLocal === '1';\n  metadata.seq = storedObject.seq;\n  return metadata;\n}\n\n// read the doc back out from the database. we don't store the\n// _id or _rev because we already have _doc_id_rev.\nfunction decodeDoc(doc) {\n  if (!doc) {\n    return doc;\n  }\n  var idx = doc._doc_id_rev.lastIndexOf(':');\n  doc._id = doc._doc_id_rev.substring(0, idx - 1);\n  doc._rev = doc._doc_id_rev.substring(idx + 1);\n  delete doc._doc_id_rev;\n  return doc;\n}\n\n// Read a blob from the database, encoding as necessary\n// and translating from base64 if the IDB doesn't support\n// native Blobs\nfunction readBlobData(body, type, asBlob, callback) {\n  if (asBlob) {\n    if (!body) {\n      callback(createBlob([''], {type: type}));\n    } else if (typeof body !== 'string') { // we have blob support\n      callback(body);\n    } else { // no blob support\n      callback(b64ToBluffer(body, type));\n    }\n  } else { // as base64 string\n    if (!body) {\n      callback('');\n    } else if (typeof body !== 'string') { // we have blob support\n      readAsBinaryString(body, function (binary) {\n        callback(thisBtoa(binary));\n      });\n    } else { // no blob support\n      callback(body);\n    }\n  }\n}\n\nfunction fetchAttachmentsIfNecessary(doc, opts, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var digest = attObj.digest;\n    var req = txn.objectStore(ATTACH_STORE).get(digest);\n    req.onsuccess = function (e) {\n      attObj.body = e.target.result.body;\n      checkDone();\n    };\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\n// IDB-specific postprocessing necessary because\n// we don't know whether we stored a true Blob or\n// a base64-encoded string, and if it's a Blob it\n// needs to be read outside of the transaction context\nfunction postProcessAttachments(results, asBlob) {\n  return PouchPromise.all(results.map(function (row) {\n    if (row.doc && row.doc._attachments) {\n      var attNames = Object.keys(row.doc._attachments);\n      return PouchPromise.all(attNames.map(function (att) {\n        var attObj = row.doc._attachments[att];\n        if (!('body' in attObj)) { // already processed\n          return;\n        }\n        var body = attObj.body;\n        var type = attObj.content_type;\n        return new PouchPromise(function (resolve) {\n          readBlobData(body, type, asBlob, function (data) {\n            row.doc._attachments[att] = $inject_Object_assign(\n              pick(attObj, ['digest', 'content_type']),\n              {data: data}\n            );\n            resolve();\n          });\n        });\n      }));\n    }\n  }));\n}\n\nfunction compactRevs(revs, docId, txn) {\n\n  var possiblyOrphanedDigests = [];\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var attStore = txn.objectStore(ATTACH_STORE);\n  var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n  var count = revs.length;\n\n  function checkDone() {\n    count--;\n    if (!count) { // done processing all revs\n      deleteOrphanedAttachments();\n    }\n  }\n\n  function deleteOrphanedAttachments() {\n    if (!possiblyOrphanedDigests.length) {\n      return;\n    }\n    possiblyOrphanedDigests.forEach(function (digest) {\n      var countReq = attAndSeqStore.index('digestSeq').count(\n        IDBKeyRange.bound(\n          digest + '::', digest + '::\\uffff', false, false));\n      countReq.onsuccess = function (e) {\n        var count = e.target.result;\n        if (!count) {\n          // orphaned\n          attStore.delete(digest);\n        }\n      };\n    });\n  }\n\n  revs.forEach(function (rev$$1) {\n    var index = seqStore.index('_doc_id_rev');\n    var key = docId + \"::\" + rev$$1;\n    index.getKey(key).onsuccess = function (e) {\n      var seq = e.target.result;\n      if (typeof seq !== 'number') {\n        return checkDone();\n      }\n      seqStore.delete(seq);\n\n      var cursor = attAndSeqStore.index('seq')\n        .openCursor(IDBKeyRange.only(seq));\n\n      cursor.onsuccess = function (event) {\n        var cursor = event.target.result;\n        if (cursor) {\n          var digest = cursor.value.digestSeq.split('::')[0];\n          possiblyOrphanedDigests.push(digest);\n          attAndSeqStore.delete(cursor.primaryKey);\n          cursor.continue();\n        } else { // done\n          checkDone();\n        }\n      };\n    };\n  });\n}\n\nfunction openTransactionSafely(idb, stores, mode) {\n  try {\n    return {\n      txn: idb.transaction(stores, mode)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nvar changesHandler$$1 = new Changes();\n\nfunction idbBulkDocs(dbOpts, req, opts, api, idb, callback) {\n  var docInfos = req.docs;\n  var txn;\n  var docStore;\n  var bySeqStore;\n  var attachStore;\n  var attachAndSeqStore;\n  var metaStore;\n  var docInfoError;\n  var metaDoc;\n\n  for (var i = 0, len = docInfos.length; i < len; i++) {\n    var doc = docInfos[i];\n    if (doc._id && isLocalId(doc._id)) {\n      continue;\n    }\n    doc = docInfos[i] = parseDoc(doc, opts.new_edits);\n    if (doc.error && !docInfoError) {\n      docInfoError = doc;\n    }\n  }\n\n  if (docInfoError) {\n    return callback(docInfoError);\n  }\n\n  var allDocsProcessed = false;\n  var docCountDelta = 0;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n  var preconditionErrored = false;\n  var blobType = api._meta.blobSupport ? 'blob' : 'base64';\n\n  preprocessAttachments(docInfos, blobType, function (err) {\n    if (err) {\n      return callback(err);\n    }\n    startTransaction();\n  });\n\n  function startTransaction() {\n\n    var stores = [\n      DOC_STORE, BY_SEQ_STORE,\n      ATTACH_STORE,\n      LOCAL_STORE, ATTACH_AND_SEQ_STORE,\n      META_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    txn = txnResult.txn;\n    txn.onabort = idbError(callback);\n    txn.ontimeout = idbError(callback);\n    txn.oncomplete = complete;\n    docStore = txn.objectStore(DOC_STORE);\n    bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    attachStore = txn.objectStore(ATTACH_STORE);\n    attachAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n    metaStore = txn.objectStore(META_STORE);\n\n    metaStore.get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result;\n      updateDocCountIfReady();\n    };\n\n    verifyAttachments(function (err) {\n      if (err) {\n        preconditionErrored = true;\n        return callback(err);\n      }\n      fetchExistingDocs();\n    });\n  }\n\n  function onAllDocsProcessed() {\n    allDocsProcessed = true;\n    updateDocCountIfReady();\n  }\n\n  function idbProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs,\n                txn, results, writeDoc, opts, onAllDocsProcessed);\n  }\n\n  function updateDocCountIfReady() {\n    if (!metaDoc || !allDocsProcessed) {\n      return;\n    }\n    // caching the docCount saves a lot of time in allDocs() and\n    // info(), which is why we go to all the trouble of doing this\n    metaDoc.docCount += docCountDelta;\n    metaStore.put(metaDoc);\n  }\n\n  function fetchExistingDocs() {\n\n    if (!docInfos.length) {\n      return;\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        idbProcessDocs();\n      }\n    }\n\n    function readMetadata(event) {\n      var metadata = decodeMetadata(event.target.result);\n\n      if (metadata) {\n        fetchedDocs.set(metadata.id, metadata);\n      }\n      checkDone();\n    }\n\n    for (var i = 0, len = docInfos.length; i < len; i++) {\n      var docInfo = docInfos[i];\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        checkDone(); // skip local docs\n        continue;\n      }\n      var req = docStore.get(docInfo.metadata.id);\n      req.onsuccess = readMetadata;\n    }\n  }\n\n  function complete() {\n    if (preconditionErrored) {\n      return;\n    }\n\n    changesHandler$$1.notify(api._meta.name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n\n    var req = attachStore.get(digest);\n    req.onsuccess = function (e) {\n      if (!e.target.result) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        err.status = 412;\n        callback(err);\n      } else {\n        callback();\n      }\n    };\n  }\n\n  function verifyAttachments(finish) {\n\n\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    docInfo.metadata.winningRev = winningRev$$1;\n    docInfo.metadata.deleted = winningRevIsDeleted;\n\n    var doc = docInfo.data;\n    doc._id = docInfo.metadata.id;\n    doc._rev = docInfo.metadata.rev;\n\n    if (newRevIsDeleted) {\n      doc._deleted = true;\n    }\n\n    var hasAttachments = doc._attachments &&\n      Object.keys(doc._attachments).length;\n    if (hasAttachments) {\n      return writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n        isUpdate, resultsIdx, callback);\n    }\n\n    docCountDelta += delta;\n    updateDocCountIfReady();\n\n    finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n      isUpdate, resultsIdx, callback);\n  }\n\n  function finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n                     isUpdate, resultsIdx, callback) {\n\n    var doc = docInfo.data;\n    var metadata = docInfo.metadata;\n\n    doc._doc_id_rev = metadata.id + '::' + metadata.rev;\n    delete doc._id;\n    delete doc._rev;\n\n    function afterPutDoc(e) {\n      var revsToDelete = docInfo.stemmedRevs || [];\n\n      if (isUpdate && api.auto_compaction) {\n        revsToDelete = revsToDelete.concat(compactTree(docInfo.metadata));\n      }\n\n      if (revsToDelete && revsToDelete.length) {\n        compactRevs(revsToDelete, docInfo.metadata.id, txn);\n      }\n\n      metadata.seq = e.target.result;\n      // Current _rev is calculated from _rev_tree on read\n      // delete metadata.rev;\n      var metadataToStore = encodeMetadata(metadata, winningRev$$1,\n        winningRevIsDeleted);\n      var metaDataReq = docStore.put(metadataToStore);\n      metaDataReq.onsuccess = afterPutMetadata;\n    }\n\n    function afterPutDocError(e) {\n      // ConstraintError, need to update, not put (see #1638 for details)\n      e.preventDefault(); // avoid transaction abort\n      e.stopPropagation(); // avoid transaction onerror\n      var index = bySeqStore.index('_doc_id_rev');\n      var getKeyReq = index.getKey(doc._doc_id_rev);\n      getKeyReq.onsuccess = function (e) {\n        var putReq = bySeqStore.put(doc, e.target.result);\n        putReq.onsuccess = afterPutDoc;\n      };\n    }\n\n    function afterPutMetadata() {\n      results[resultsIdx] = {\n        ok: true,\n        id: metadata.id,\n        rev: metadata.rev\n      };\n      fetchedDocs.set(docInfo.metadata.id, docInfo.metadata);\n      insertAttachmentMappings(docInfo, metadata.seq, callback);\n    }\n\n    var putReq = bySeqStore.put(doc);\n\n    putReq.onsuccess = afterPutDoc;\n    putReq.onerror = afterPutDocError;\n  }\n\n  function writeAttachments(docInfo, winningRev$$1, winningRevIsDeleted,\n                            isUpdate, resultsIdx, callback) {\n\n\n    var doc = docInfo.data;\n\n    var numDone = 0;\n    var attachments = Object.keys(doc._attachments);\n\n    function collectResults() {\n      if (numDone === attachments.length) {\n        finishDoc(docInfo, winningRev$$1, winningRevIsDeleted,\n          isUpdate, resultsIdx, callback);\n      }\n    }\n\n    function attachmentSaved() {\n      numDone++;\n      collectResults();\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        numDone++;\n        collectResults();\n      }\n    });\n  }\n\n  // map seqs to attachment digests, which\n  // we will need later during compaction\n  function insertAttachmentMappings(docInfo, seq, callback) {\n\n    var attsAdded = 0;\n    var attsToAdd = Object.keys(docInfo.data._attachments || {});\n\n    if (!attsToAdd.length) {\n      return callback();\n    }\n\n    function checkDone() {\n      if (++attsAdded === attsToAdd.length) {\n        callback();\n      }\n    }\n\n    function add(att) {\n      var digest = docInfo.data._attachments[att].digest;\n      var req = attachAndSeqStore.put({\n        seq: seq,\n        digestSeq: digest + '::' + seq\n      });\n\n      req.onsuccess = checkDone;\n      req.onerror = function (e) {\n        // this callback is for a constaint error, which we ignore\n        // because this docid/rev has already been associated with\n        // the digest (e.g. when new_edits == false)\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n        checkDone();\n      };\n    }\n    for (var i = 0; i < attsToAdd.length; i++) {\n      add(attsToAdd[i]); // do in parallel\n    }\n  }\n\n  function saveAttachment(digest, data, callback) {\n\n\n    var getKeyReq = attachStore.count(digest);\n    getKeyReq.onsuccess = function (e) {\n      var count = e.target.result;\n      if (count) {\n        return callback(); // already exists\n      }\n      var newAtt = {\n        digest: digest,\n        body: data\n      };\n      var putReq = attachStore.put(newAtt);\n      putReq.onsuccess = callback;\n    };\n  }\n}\n\n// Abstraction over IDBCursor and getAll()/getAllKeys() that allows us to batch our operations\n// while falling back to a normal IDBCursor operation on browsers that don't support getAll() or\n// getAllKeys(). This allows for a much faster implementation than just straight-up cursors, because\n// we're not processing each document one-at-a-time.\nfunction runBatchedCursor(objectStore, keyRange, descending, batchSize, onBatch) {\n\n  // Bail out of getAll()/getAllKeys() in the following cases:\n  // 1) either method is unsupported - we need both\n  // 2) batchSize is 1 (might as well use IDBCursor), or batchSize is -1 (i.e. batchSize unlimited,\n  //    not really clear the user wants a batched approach where the entire DB is read into memory,\n  //    perhaps they are filtering on a per-doc basis)\n  // 3) descending – no real way to do this via getAll()/getAllKeys()\n\n  var useGetAll = typeof objectStore.getAll === 'function' &&\n    typeof objectStore.getAllKeys === 'function' &&\n    batchSize > 1 && !descending;\n\n  var keysBatch;\n  var valuesBatch;\n  var pseudoCursor;\n\n  function onGetAll(e) {\n    valuesBatch = e.target.result;\n    if (keysBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function onGetAllKeys(e) {\n    keysBatch = e.target.result;\n    if (valuesBatch) {\n      onBatch(keysBatch, valuesBatch, pseudoCursor);\n    }\n  }\n\n  function continuePseudoCursor() {\n    if (!keysBatch.length) { // no more results\n      return onBatch();\n    }\n    // fetch next batch, exclusive start\n    var lastKey = keysBatch[keysBatch.length - 1];\n    var newKeyRange;\n    if (keyRange && keyRange.upper) {\n      try {\n        newKeyRange = IDBKeyRange.bound(lastKey, keyRange.upper,\n          true, keyRange.upperOpen);\n      } catch (e) {\n        if (e.name === \"DataError\" && e.code === 0) {\n          return onBatch(); // we're done, startkey and endkey are equal\n        }\n      }\n    } else {\n      newKeyRange = IDBKeyRange.lowerBound(lastKey, true);\n    }\n    keyRange = newKeyRange;\n    keysBatch = null;\n    valuesBatch = null;\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  }\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (!cursor) { // done\n      return onBatch();\n    }\n    // regular IDBCursor acts like a batch where batch size is always 1\n    onBatch([cursor.key], [cursor.value], cursor);\n  }\n\n  if (useGetAll) {\n    pseudoCursor = {\"continue\": continuePseudoCursor};\n    objectStore.getAll(keyRange, batchSize).onsuccess = onGetAll;\n    objectStore.getAllKeys(keyRange, batchSize).onsuccess = onGetAllKeys;\n  } else if (descending) {\n    objectStore.openCursor(keyRange, 'prev').onsuccess = onCursor;\n  } else {\n    objectStore.openCursor(keyRange).onsuccess = onCursor;\n  }\n}\n\n// simple shim for objectStore.getAll(), falling back to IDBCursor\nfunction getAll(objectStore, keyRange, onSuccess) {\n  if (typeof objectStore.getAll === 'function') {\n    // use native getAll\n    objectStore.getAll(keyRange).onsuccess = onSuccess;\n    return;\n  }\n  // fall back to cursors\n  var values = [];\n\n  function onCursor(e) {\n    var cursor = e.target.result;\n    if (cursor) {\n      values.push(cursor.value);\n      cursor.continue();\n    } else {\n      onSuccess({\n        target: {\n          result: values\n        }\n      });\n    }\n  }\n\n  objectStore.openCursor(keyRange).onsuccess = onCursor;\n}\n\nfunction allDocsKeys(keys, docStore, onBatch) {\n  // It's not guaranted to be returned in right order  \n  var valuesBatch = [];\n  var count = 0;\n  keys.forEach(function (key, index) {\n    docStore.get(key).onsuccess = function (event) {\n      if (event.target.result) {\n        valuesBatch[index] = event.target.result;\n      } else {\n        valuesBatch[index] = {key: key, error: 'not_found'};\n      }\n      count++;\n      if (count === keys.length) {\n        onBatch(keys, valuesBatch, {});\n      }\n    };\n  });\n}\n\nfunction createKeyRange(start, end, inclusiveEnd, key, descending) {\n  try {\n    if (start && end) {\n      if (descending) {\n        return IDBKeyRange.bound(end, start, !inclusiveEnd, false);\n      } else {\n        return IDBKeyRange.bound(start, end, false, !inclusiveEnd);\n      }\n    } else if (start) {\n      if (descending) {\n        return IDBKeyRange.upperBound(start);\n      } else {\n        return IDBKeyRange.lowerBound(start);\n      }\n    } else if (end) {\n      if (descending) {\n        return IDBKeyRange.lowerBound(end, !inclusiveEnd);\n      } else {\n        return IDBKeyRange.upperBound(end, !inclusiveEnd);\n      }\n    } else if (key) {\n      return IDBKeyRange.only(key);\n    }\n  } catch (e) {\n    return {error: e};\n  }\n  return null;\n}\n\nfunction idbAllDocs(opts, idb, callback) {\n  var start = 'startkey' in opts ? opts.startkey : false;\n  var end = 'endkey' in opts ? opts.endkey : false;\n  var key = 'key' in opts ? opts.key : false;\n  var keys = 'keys' in opts ? opts.keys : false; \n  var skip = opts.skip || 0;\n  var limit = typeof opts.limit === 'number' ? opts.limit : -1;\n  var inclusiveEnd = opts.inclusive_end !== false;\n\n  var keyRange; \n  var keyRangeError;\n  if (!keys) {\n    keyRange = createKeyRange(start, end, inclusiveEnd, key, opts.descending);\n    keyRangeError = keyRange && keyRange.error;\n    if (keyRangeError && \n      !(keyRangeError.name === \"DataError\" && keyRangeError.code === 0)) {\n      // DataError with error code 0 indicates start is less than end, so\n      // can just do an empty query. Else need to throw\n      return callback(createError(IDB_ERROR,\n        keyRangeError.name, keyRangeError.message));\n    }\n  }\n\n  var stores = [DOC_STORE, BY_SEQ_STORE, META_STORE];\n\n  if (opts.attachments) {\n    stores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, stores, 'readonly');\n  if (txnResult.error) {\n    return callback(txnResult.error);\n  }\n  var txn = txnResult.txn;\n  txn.oncomplete = onTxnComplete;\n  txn.onabort = idbError(callback);\n  var docStore = txn.objectStore(DOC_STORE);\n  var seqStore = txn.objectStore(BY_SEQ_STORE);\n  var metaStore = txn.objectStore(META_STORE);\n  var docIdRevIndex = seqStore.index('_doc_id_rev');\n  var results = [];\n  var docCount;\n  var updateSeq;\n\n  metaStore.get(META_STORE).onsuccess = function (e) {\n    docCount = e.target.result.docCount;\n  };\n\n  /* istanbul ignore if */\n  if (opts.update_seq) {\n    getMaxUpdateSeq(seqStore, function (e) { \n      if (e.target.result && e.target.result.length > 0) {\n        updateSeq = e.target.result[0];\n      }\n    });\n  }\n\n  function getMaxUpdateSeq(objectStore, onSuccess) {\n    function onCursor(e) {\n      var cursor = e.target.result;\n      var maxKey = undefined;\n      if (cursor && cursor.key) {\n        maxKey = cursor.key;\n      } \n      return onSuccess({\n        target: {\n          result: [maxKey]\n        }\n      });\n    }\n    objectStore.openCursor(null, 'prev').onsuccess = onCursor;\n  }\n\n  // if the user specifies include_docs=true, then we don't\n  // want to block the main cursor while we're fetching the doc\n  function fetchDocAsynchronously(metadata, row, winningRev$$1) {\n    var key = metadata.id + \"::\" + winningRev$$1;\n    docIdRevIndex.get(key).onsuccess =  function onGetDoc(e) {\n      row.doc = decodeDoc(e.target.result);\n      if (opts.conflicts) {\n        var conflicts = collectConflicts(metadata);\n        if (conflicts.length) {\n          row.doc._conflicts = conflicts;\n        }\n      }\n      fetchAttachmentsIfNecessary(row.doc, opts, txn);\n    };\n  }\n\n  function allDocsInner(winningRev$$1, metadata) {\n    var row = {\n      id: metadata.id,\n      key: metadata.id,\n      value: {\n        rev: winningRev$$1\n      }\n    };\n    var deleted = metadata.deleted;\n    if (deleted) {\n      if (keys) {\n        results.push(row);\n        // deleted docs are okay with \"keys\" requests\n        row.value.deleted = true;\n        row.doc = null;\n      }\n    } else if (skip-- <= 0) {\n      results.push(row);\n      if (opts.include_docs) {\n        fetchDocAsynchronously(metadata, row, winningRev$$1);\n      }\n    }\n  }\n\n  function processBatch(batchValues) {\n    for (var i = 0, len = batchValues.length; i < len; i++) {\n      if (results.length === limit) {\n        break;\n      }\n      var batchValue = batchValues[i];\n      if (batchValue.error && keys) {\n        // key was not found with \"keys\" requests\n        results.push(batchValue);\n        continue;\n      }\n      var metadata = decodeMetadata(batchValue);\n      var winningRev$$1 = metadata.winningRev;\n      allDocsInner(winningRev$$1, metadata);\n    }\n  }\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor) {\n      return;\n    }\n    processBatch(batchValues);\n    if (results.length < limit) {\n      cursor.continue();\n    }\n  }\n\n  function onGetAll(e) {\n    var values = e.target.result;\n    if (opts.descending) {\n      values = values.reverse();\n    }\n    processBatch(values);\n  }\n\n  function onResultsReady() {\n    var returnVal = {\n      total_rows: docCount,\n      offset: opts.skip,\n      rows: results\n    };\n    \n    /* istanbul ignore if */\n    if (opts.update_seq && updateSeq !== undefined) {\n      returnVal.update_seq = updateSeq;\n    }\n    callback(null, returnVal);\n  }\n\n  function onTxnComplete() {\n    if (opts.attachments) {\n      postProcessAttachments(results, opts.binary).then(onResultsReady);\n    } else {\n      onResultsReady();\n    }\n  }\n\n  // don't bother doing any requests if start > end or limit === 0\n  if (keyRangeError || limit === 0) {\n    return;\n  }\n  if (keys) {\n    return allDocsKeys(opts.keys, docStore, onBatch);\n  }\n  if (limit === -1) { // just fetch everything\n    return getAll(docStore, keyRange, onGetAll);\n  }\n  // else do a cursor\n  // choose a batch size based on the skip, since we'll need to skip that many\n  runBatchedCursor(docStore, keyRange, opts.descending, limit + skip, onBatch);\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\nfunction checkBlobSupport(txn) {\n  return new PouchPromise(function (resolve) {\n    var blob$$1 = createBlob(['']);\n    var req = txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob$$1, 'key');\n\n    req.onsuccess = function () {\n      var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n      var matchedEdge = navigator.userAgent.match(/Edge\\//);\n      // MS Edge pretends to be Chrome 42:\n      // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n      resolve(matchedEdge || !matchedChrome ||\n        parseInt(matchedChrome[1], 10) >= 43);\n    };\n\n    txn.onabort = function (e) {\n      // If the transaction aborts now its due to not being able to\n      // write to the database, likely due to the disk being full\n      e.preventDefault();\n      e.stopPropagation();\n      resolve(false);\n    };\n  }).catch(function () {\n    return false; // error, so assume unsupported\n  });\n}\n\nfunction countDocs(txn, cb) {\n  var index = txn.objectStore(DOC_STORE).index('deletedOrLocal');\n  index.count(IDBKeyRange.only('0')).onsuccess = function (e) {\n    cb(e.target.result);\n  };\n}\n\n// This task queue ensures that IDB open calls are done in their own tick\n// and sequentially - i.e. we wait for the async IDB open to *fully* complete\n// before calling the next one. This works around IE/Edge race conditions in IDB.\n\nvar running = false;\nvar queue = [];\n\nfunction tryCode(fun, err, res, PouchDB) {\n  try {\n    fun(err, res);\n  } catch (err) {\n    // Shouldn't happen, but in some odd cases\n    // IndexedDB implementations might throw a sync\n    // error, in which case this will at least log it.\n    PouchDB.emit('error', err);\n  }\n}\n\nfunction applyNext() {\n  if (running || !queue.length) {\n    return;\n  }\n  running = true;\n  queue.shift()();\n}\n\nfunction enqueueTask(action, callback, PouchDB) {\n  queue.push(function runAction() {\n    action(function runCallback(err, res) {\n      tryCode(callback, err, res, PouchDB);\n      running = false;\n      nextTick(function runNext() {\n        applyNext(PouchDB);\n      });\n    });\n  });\n  applyNext();\n}\n\nfunction changes(opts, api, dbName, idb) {\n  opts = clone(opts);\n\n  if (opts.continuous) {\n    var id = dbName + ':' + uuid();\n    changesHandler$$1.addListener(dbName, id, api, opts);\n    changesHandler$$1.notify(dbName);\n    return {\n      cancel: function () {\n        changesHandler$$1.removeListener(dbName, id);\n      }\n    };\n  }\n\n  var docIds = opts.doc_ids && new ExportedSet(opts.doc_ids);\n\n  opts.since = opts.since || 0;\n  var lastSeq = opts.since;\n\n  var limit = 'limit' in opts ? opts.limit : -1;\n  if (limit === 0) {\n    limit = 1; // per CouchDB _changes spec\n  }\n  var returnDocs;\n  if ('return_docs' in opts) {\n    returnDocs = opts.return_docs;\n  } else if ('returnDocs' in opts) {\n    // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n    returnDocs = opts.returnDocs;\n  } else {\n    returnDocs = true;\n  }\n\n  var results = [];\n  var numResults = 0;\n  var filter = filterChange(opts);\n  var docIdsToMetadata = new ExportedMap();\n\n  var txn;\n  var bySeqStore;\n  var docStore;\n  var docIdRevIndex;\n\n  function onBatch(batchKeys, batchValues, cursor) {\n    if (!cursor || !batchKeys.length) { // done\n      return;\n    }\n\n    var winningDocs = new Array(batchKeys.length);\n    var metadatas = new Array(batchKeys.length);\n\n    function processMetadataAndWinningDoc(metadata, winningDoc) {\n      var change = opts.processChange(winningDoc, metadata, opts);\n      lastSeq = change.seq = metadata.seq;\n\n      var filtered = filter(change);\n      if (typeof filtered === 'object') { // anything but true/false indicates error\n        return opts.complete(filtered);\n      }\n\n      if (filtered) {\n        numResults++;\n        if (returnDocs) {\n          results.push(change);\n        }\n        // process the attachment immediately\n        // for the benefit of live listeners\n        if (opts.attachments && opts.include_docs) {\n          fetchAttachmentsIfNecessary(winningDoc, opts, txn, function () {\n            postProcessAttachments([change], opts.binary).then(function () {\n              opts.onChange(change);\n            });\n          });\n        } else {\n          opts.onChange(change);\n        }\n      }\n    }\n\n    function onBatchDone() {\n      for (var i = 0, len = winningDocs.length; i < len; i++) {\n        if (numResults === limit) {\n          break;\n        }\n        var winningDoc = winningDocs[i];\n        if (!winningDoc) {\n          continue;\n        }\n        var metadata = metadatas[i];\n        processMetadataAndWinningDoc(metadata, winningDoc);\n      }\n\n      if (numResults !== limit) {\n        cursor.continue();\n      }\n    }\n\n    // Fetch all metadatas/winningdocs from this batch in parallel, then process\n    // them all only once all data has been collected. This is done in parallel\n    // because it's faster than doing it one-at-a-time.\n    var numDone = 0;\n    batchValues.forEach(function (value, i) {\n      var doc = decodeDoc(value);\n      var seq = batchKeys[i];\n      fetchWinningDocAndMetadata(doc, seq, function (metadata, winningDoc) {\n        metadatas[i] = metadata;\n        winningDocs[i] = winningDoc;\n        if (++numDone === batchKeys.length) {\n          onBatchDone();\n        }\n      });\n    });\n  }\n\n  function onGetMetadata(doc, seq, metadata, cb) {\n    if (metadata.seq !== seq) {\n      // some other seq is later\n      return cb();\n    }\n\n    if (metadata.winningRev === doc._rev) {\n      // this is the winning doc\n      return cb(metadata, doc);\n    }\n\n    // fetch winning doc in separate request\n    var docIdRev = doc._id + '::' + metadata.winningRev;\n    var req = docIdRevIndex.get(docIdRev);\n    req.onsuccess = function (e) {\n      cb(metadata, decodeDoc(e.target.result));\n    };\n  }\n\n  function fetchWinningDocAndMetadata(doc, seq, cb) {\n    if (docIds && !docIds.has(doc._id)) {\n      return cb();\n    }\n\n    var metadata = docIdsToMetadata.get(doc._id);\n    if (metadata) { // cached\n      return onGetMetadata(doc, seq, metadata, cb);\n    }\n    // metadata not cached, have to go fetch it\n    docStore.get(doc._id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      docIdsToMetadata.set(doc._id, metadata);\n      onGetMetadata(doc, seq, metadata, cb);\n    };\n  }\n\n  function finish() {\n    opts.complete(null, {\n      results: results,\n      last_seq: lastSeq\n    });\n  }\n\n  function onTxnComplete() {\n    if (!opts.continuous && opts.attachments) {\n      // cannot guarantee that postProcessing was already done,\n      // so do it again\n      postProcessAttachments(results).then(finish);\n    } else {\n      finish();\n    }\n  }\n\n  var objectStores = [DOC_STORE, BY_SEQ_STORE];\n  if (opts.attachments) {\n    objectStores.push(ATTACH_STORE);\n  }\n  var txnResult = openTransactionSafely(idb, objectStores, 'readonly');\n  if (txnResult.error) {\n    return opts.complete(txnResult.error);\n  }\n  txn = txnResult.txn;\n  txn.onabort = idbError(opts.complete);\n  txn.oncomplete = onTxnComplete;\n\n  bySeqStore = txn.objectStore(BY_SEQ_STORE);\n  docStore = txn.objectStore(DOC_STORE);\n  docIdRevIndex = bySeqStore.index('_doc_id_rev');\n\n  var keyRange = (opts.since && !opts.descending) ?\n    IDBKeyRange.lowerBound(opts.since, true) : null;\n\n  runBatchedCursor(bySeqStore, keyRange, opts.descending, limit, onBatch);\n}\n\nvar cachedDBs = new ExportedMap();\nvar blobSupportPromise;\nvar openReqList = new ExportedMap();\n\nfunction IdbPouch(opts, callback) {\n  var api = this;\n\n  enqueueTask(function (thisCallback) {\n    init(api, opts, thisCallback);\n  }, callback, api.constructor);\n}\n\nfunction init(api, opts, callback) {\n\n  var dbName = opts.name;\n\n  var idb = null;\n  api._meta = null;\n\n  // called when creating a fresh new database\n  function createSchema(db) {\n    var docStore = db.createObjectStore(DOC_STORE, {keyPath : 'id'});\n    db.createObjectStore(BY_SEQ_STORE, {autoIncrement: true})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n    db.createObjectStore(ATTACH_STORE, {keyPath: 'digest'});\n    db.createObjectStore(META_STORE, {keyPath: 'id', autoIncrement: false});\n    db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n\n    // added in v2\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    // added in v3\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'});\n\n    // added in v4\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 2\n  // unfortunately \"deletedOrLocal\" is a misnomer now that we no longer\n  // store local docs in the main doc-store, but whaddyagonnado\n  function addDeletedOrLocalIndex(txn, callback) {\n    var docStore = txn.objectStore(DOC_STORE);\n    docStore.createIndex('deletedOrLocal', 'deletedOrLocal', {unique : false});\n\n    docStore.openCursor().onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var deleted = isDeleted(metadata);\n        metadata.deletedOrLocal = deleted ? \"1\" : \"0\";\n        docStore.put(metadata);\n        cursor.continue();\n      } else {\n        callback();\n      }\n    };\n  }\n\n  // migration to version 3 (part 1)\n  function createLocalStoreSchema(db) {\n    db.createObjectStore(LOCAL_STORE, {keyPath: '_id'})\n      .createIndex('_doc_id_rev', '_doc_id_rev', {unique: true});\n  }\n\n  // migration to version 3 (part 2)\n  function migrateLocalStore(txn, cb) {\n    var localStore = txn.objectStore(LOCAL_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (event) {\n      var cursor = event.target.result;\n      if (cursor) {\n        var metadata = cursor.value;\n        var docId = metadata.id;\n        var local = isLocalId(docId);\n        var rev$$1 = winningRev(metadata);\n        if (local) {\n          var docIdRev = docId + \"::\" + rev$$1;\n          // remove all seq entries\n          // associated with this docId\n          var start = docId + \"::\";\n          var end = docId + \"::~\";\n          var index = seqStore.index('_doc_id_rev');\n          var range = IDBKeyRange.bound(start, end, false, false);\n          var seqCursor = index.openCursor(range);\n          seqCursor.onsuccess = function (e) {\n            seqCursor = e.target.result;\n            if (!seqCursor) {\n              // done\n              docStore.delete(cursor.primaryKey);\n              cursor.continue();\n            } else {\n              var data = seqCursor.value;\n              if (data._doc_id_rev === docIdRev) {\n                localStore.put(data);\n              }\n              seqStore.delete(seqCursor.primaryKey);\n              seqCursor.continue();\n            }\n          };\n        } else {\n          cursor.continue();\n        }\n      } else if (cb) {\n        cb();\n      }\n    };\n  }\n\n  // migration to version 4 (part 1)\n  function addAttachAndSeqStore(db) {\n    var attAndSeqStore = db.createObjectStore(ATTACH_AND_SEQ_STORE,\n      {autoIncrement: true});\n    attAndSeqStore.createIndex('seq', 'seq');\n    attAndSeqStore.createIndex('digestSeq', 'digestSeq', {unique: true});\n  }\n\n  // migration to version 4 (part 2)\n  function migrateAttsAndSeqs(txn, callback) {\n    var seqStore = txn.objectStore(BY_SEQ_STORE);\n    var attStore = txn.objectStore(ATTACH_STORE);\n    var attAndSeqStore = txn.objectStore(ATTACH_AND_SEQ_STORE);\n\n    // need to actually populate the table. this is the expensive part,\n    // so as an optimization, check first that this database even\n    // contains attachments\n    var req = attStore.count();\n    req.onsuccess = function (e) {\n      var count = e.target.result;\n      if (!count) {\n        return callback(); // done\n      }\n\n      seqStore.openCursor().onsuccess = function (e) {\n        var cursor = e.target.result;\n        if (!cursor) {\n          return callback(); // done\n        }\n        var doc = cursor.value;\n        var seq = cursor.primaryKey;\n        var atts = Object.keys(doc._attachments || {});\n        var digestMap = {};\n        for (var j = 0; j < atts.length; j++) {\n          var att = doc._attachments[atts[j]];\n          digestMap[att.digest] = true; // uniq digests, just in case\n        }\n        var digests = Object.keys(digestMap);\n        for (j = 0; j < digests.length; j++) {\n          var digest = digests[j];\n          attAndSeqStore.put({\n            seq: seq,\n            digestSeq: digest + '::' + seq\n          });\n        }\n        cursor.continue();\n      };\n    };\n  }\n\n  // migration to version 5\n  // Instead of relying on on-the-fly migration of metadata,\n  // this brings the doc-store to its modern form:\n  // - metadata.winningrev\n  // - metadata.seq\n  // - stringify the metadata when storing it\n  function migrateMetadata(txn) {\n\n    function decodeMetadataCompat(storedObject) {\n      if (!storedObject.data) {\n        // old format, when we didn't store it stringified\n        storedObject.deleted = storedObject.deletedOrLocal === '1';\n        return storedObject;\n      }\n      return decodeMetadata(storedObject);\n    }\n\n    // ensure that every metadata has a winningRev and seq,\n    // which was previously created on-the-fly but better to migrate\n    var bySeqStore = txn.objectStore(BY_SEQ_STORE);\n    var docStore = txn.objectStore(DOC_STORE);\n    var cursor = docStore.openCursor();\n    cursor.onsuccess = function (e) {\n      var cursor = e.target.result;\n      if (!cursor) {\n        return; // done\n      }\n      var metadata = decodeMetadataCompat(cursor.value);\n\n      metadata.winningRev = metadata.winningRev ||\n        winningRev(metadata);\n\n      function fetchMetadataSeq() {\n        // metadata.seq was added post-3.2.0, so if it's missing,\n        // we need to fetch it manually\n        var start = metadata.id + '::';\n        var end = metadata.id + '::\\uffff';\n        var req = bySeqStore.index('_doc_id_rev').openCursor(\n          IDBKeyRange.bound(start, end));\n\n        var metadataSeq = 0;\n        req.onsuccess = function (e) {\n          var cursor = e.target.result;\n          if (!cursor) {\n            metadata.seq = metadataSeq;\n            return onGetMetadataSeq();\n          }\n          var seq = cursor.primaryKey;\n          if (seq > metadataSeq) {\n            metadataSeq = seq;\n          }\n          cursor.continue();\n        };\n      }\n\n      function onGetMetadataSeq() {\n        var metadataToStore = encodeMetadata(metadata,\n          metadata.winningRev, metadata.deleted);\n\n        var req = docStore.put(metadataToStore);\n        req.onsuccess = function () {\n          cursor.continue();\n        };\n      }\n\n      if (metadata.seq) {\n        return onGetMetadataSeq();\n      }\n\n      fetchMetadataSeq();\n    };\n\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'idb';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, api._meta.instanceId);\n  });\n\n  api._bulkDocs = function idb_bulkDocs(req, reqOpts, callback) {\n    idbBulkDocs(opts, req, reqOpts, api, idb, callback);\n  };\n\n  // First we look up the metadata in the ids database, then we fetch the\n  // current revision(s) from the by sequence store\n  api._get = function idb_get(id, opts, callback) {\n    var doc;\n    var metadata;\n    var err;\n    var txn = opts.ctx;\n    if (!txn) {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n\n    function finish() {\n      callback(err, {doc: doc, metadata: metadata, ctx: txn});\n    }\n\n    txn.objectStore(DOC_STORE).get(id).onsuccess = function (e) {\n      metadata = decodeMetadata(e.target.result);\n      // we can determine the result here if:\n      // 1. there is no such document\n      // 2. the document is deleted and we don't ask about specific rev\n      // When we ask with opts.rev we expect the answer to be either\n      // doc (possibly with _deleted=true) or missing error\n      if (!metadata) {\n        err = createError(MISSING_DOC, 'missing');\n        return finish();\n      }\n\n      var rev$$1;\n      if (!opts.rev) {\n        rev$$1 = metadata.winningRev;\n        var deleted = isDeleted(metadata);\n        if (deleted) {\n          err = createError(MISSING_DOC, \"deleted\");\n          return finish();\n        }\n      } else {\n        rev$$1 = opts.latest ? latest(opts.rev, metadata) : opts.rev;\n      }\n\n      var objectStore = txn.objectStore(BY_SEQ_STORE);\n      var key = metadata.id + '::' + rev$$1;\n\n      objectStore.index('_doc_id_rev').get(key).onsuccess = function (e) {\n        doc = e.target.result;\n        if (doc) {\n          doc = decodeDoc(doc);\n        }\n        if (!doc) {\n          err = createError(MISSING_DOC, 'missing');\n          return finish();\n        }\n        finish();\n      };\n    };\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var txn;\n    if (opts.ctx) {\n      txn = opts.ctx;\n    } else {\n      var txnResult = openTransactionSafely(idb,\n        [DOC_STORE, BY_SEQ_STORE, ATTACH_STORE], 'readonly');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      txn = txnResult.txn;\n    }\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n\n    txn.objectStore(ATTACH_STORE).get(digest).onsuccess = function (e) {\n      var body = e.target.result.body;\n      readBlobData(body, type, opts.binary, function (blobData) {\n        callback(null, blobData);\n      });\n    };\n  };\n\n  api._info = function idb_info(callback) {\n    var updateSeq;\n    var docCount;\n\n    var txnResult = openTransactionSafely(idb, [META_STORE, BY_SEQ_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      docCount = e.target.result.docCount;\n    };\n    txn.objectStore(BY_SEQ_STORE).openCursor(null, 'prev').onsuccess = function (e) {\n      var cursor = e.target.result;\n      updateSeq = cursor ? cursor.key : 0;\n    };\n\n    txn.oncomplete = function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: updateSeq,\n        // for debugging\n        idb_attachment_format: (api._meta.blobSupport ? 'binary' : 'base64')\n      });\n    };\n  };\n\n  api._allDocs = function idb_allDocs(opts, callback) {\n    idbAllDocs(opts, idb, callback);\n  };\n\n  api._changes = function idbChanges(opts) {\n    return changes(opts, api, dbName, idb);\n  };\n\n  api._close = function (callback) {\n    // https://developer.mozilla.org/en-US/docs/IndexedDB/IDBDatabase#close\n    // \"Returns immediately and closes the connection in a separate thread...\"\n    idb.close();\n    cachedDBs.delete(dbName);\n    callback();\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    var txnResult = openTransactionSafely(idb, [DOC_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n    var req = txn.objectStore(DOC_STORE).get(docId);\n    req.onsuccess = function (event) {\n      var doc = decodeMetadata(event.target.result);\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        callback(null, doc.rev_tree);\n      }\n    };\n  };\n\n  // This function removes revisions of document docId\n  // which are listed in revs and sets this document\n  // revision to to rev_tree\n  api._doCompaction = function (docId, revs, callback) {\n    var stores = [\n      DOC_STORE,\n      BY_SEQ_STORE,\n      ATTACH_STORE,\n      ATTACH_AND_SEQ_STORE\n    ];\n    var txnResult = openTransactionSafely(idb, stores, 'readwrite');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var txn = txnResult.txn;\n\n    var docStore = txn.objectStore(DOC_STORE);\n\n    docStore.get(docId).onsuccess = function (event) {\n      var metadata = decodeMetadata(event.target.result);\n      traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                         revHash, ctx, opts) {\n        var rev$$1 = pos + '-' + revHash;\n        if (revs.indexOf(rev$$1) !== -1) {\n          opts.status = 'missing';\n        }\n      });\n      compactRevs(revs, docId, txn);\n      var winningRev$$1 = metadata.winningRev;\n      var deleted = metadata.deleted;\n      txn.objectStore(DOC_STORE).put(\n        encodeMetadata(metadata, winningRev$$1, deleted));\n    };\n    txn.onabort = idbError(callback);\n    txn.oncomplete = function () {\n      callback();\n    };\n  };\n\n\n  api._getLocal = function (id, callback) {\n    var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readonly');\n    if (txnResult.error) {\n      return callback(txnResult.error);\n    }\n    var tx = txnResult.txn;\n    var req = tx.objectStore(LOCAL_STORE).get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var doc = e.target.result;\n      if (!doc) {\n        callback(createError(MISSING_DOC));\n      } else {\n        delete doc['_doc_id_rev']; // for backwards compat\n        callback(null, doc);\n      }\n    };\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    if (!oldRev) {\n      doc._rev = '0-1';\n    } else {\n      doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n\n    var tx = opts.ctx;\n    var ret;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.onerror = idbError(callback);\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req;\n    if (oldRev) {\n      req = oStore.get(id);\n      req.onsuccess = function (e) {\n        var oldDoc = e.target.result;\n        if (!oldDoc || oldDoc._rev !== oldRev) {\n          callback(createError(REV_CONFLICT));\n        } else { // update\n          var req = oStore.put(doc);\n          req.onsuccess = function () {\n            ret = {ok: true, id: doc._id, rev: doc._rev};\n            if (opts.ctx) { // return immediately\n              callback(null, ret);\n            }\n          };\n        }\n      };\n    } else { // new doc\n      req = oStore.add(doc);\n      req.onerror = function (e) {\n        // constraint error, already exists\n        callback(createError(REV_CONFLICT));\n        e.preventDefault(); // avoid transaction abort\n        e.stopPropagation(); // avoid transaction onerror\n      };\n      req.onsuccess = function () {\n        ret = {ok: true, id: doc._id, rev: doc._rev};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      };\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var tx = opts.ctx;\n    if (!tx) {\n      var txnResult = openTransactionSafely(idb, [LOCAL_STORE], 'readwrite');\n      if (txnResult.error) {\n        return callback(txnResult.error);\n      }\n      tx = txnResult.txn;\n      tx.oncomplete = function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      };\n    }\n    var ret;\n    var id = doc._id;\n    var oStore = tx.objectStore(LOCAL_STORE);\n    var req = oStore.get(id);\n\n    req.onerror = idbError(callback);\n    req.onsuccess = function (e) {\n      var oldDoc = e.target.result;\n      if (!oldDoc || oldDoc._rev !== doc._rev) {\n        callback(createError(MISSING_DOC));\n      } else {\n        oStore.delete(id);\n        ret = {ok: true, id: id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      }\n    };\n  };\n\n  api._destroy = function (opts, callback) {\n    changesHandler$$1.removeAllListeners(dbName);\n\n    //Close open request for \"dbName\" database to fix ie delay.\n    var openReq = openReqList.get(dbName);\n    if (openReq && openReq.result) {\n      openReq.result.close();\n      cachedDBs.delete(dbName);\n    }\n    var req = indexedDB.deleteDatabase(dbName);\n\n    req.onsuccess = function () {\n      //Remove open request from the list.\n      openReqList.delete(dbName);\n      if (hasLocalStorage() && (dbName in localStorage)) {\n        delete localStorage[dbName];\n      }\n      callback(null, { 'ok': true });\n    };\n\n    req.onerror = idbError(callback);\n  };\n\n  var cached = cachedDBs.get(dbName);\n\n  if (cached) {\n    idb = cached.idb;\n    api._meta = cached.global;\n    return nextTick(function () {\n      callback(null, api);\n    });\n  }\n\n  var req;\n  if (opts.storage) {\n    req = tryStorageOption(dbName, opts.storage);\n  } else {\n    req = indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n\n  openReqList.set(dbName, req);\n\n  req.onupgradeneeded = function (e) {\n    var db = e.target.result;\n    if (e.oldVersion < 1) {\n      return createSchema(db); // new db, initial schema\n    }\n    // do migrations\n\n    var txn = e.currentTarget.transaction;\n    // these migrations have to be done in this function, before\n    // control is returned to the event loop, because IndexedDB\n\n    if (e.oldVersion < 3) {\n      createLocalStoreSchema(db); // v2 -> v3\n    }\n    if (e.oldVersion < 4) {\n      addAttachAndSeqStore(db); // v3 -> v4\n    }\n\n    var migrations = [\n      addDeletedOrLocalIndex, // v1 -> v2\n      migrateLocalStore,      // v2 -> v3\n      migrateAttsAndSeqs,     // v3 -> v4\n      migrateMetadata         // v4 -> v5\n    ];\n\n    var i = e.oldVersion;\n\n    function next() {\n      var migration = migrations[i - 1];\n      i++;\n      if (migration) {\n        migration(txn, next);\n      }\n    }\n\n    next();\n  };\n\n  req.onsuccess = function (e) {\n\n    idb = e.target.result;\n\n    idb.onversionchange = function () {\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    idb.onabort = function (e) {\n      guardedConsole('error', 'Database has a global failure', e.target.error);\n      idb.close();\n      cachedDBs.delete(dbName);\n    };\n\n    // Do a few setup operations (in parallel as much as possible):\n    // 1. Fetch meta doc\n    // 2. Check blob support\n    // 3. Calculate docCount\n    // 4. Generate an instanceId if necessary\n    // 5. Store docCount and instanceId on meta doc\n\n    var txn = idb.transaction([\n      META_STORE,\n      DETECT_BLOB_SUPPORT_STORE,\n      DOC_STORE\n    ], 'readwrite');\n\n    var storedMetaDoc = false;\n    var metaDoc;\n    var docCount;\n    var blobSupport;\n    var instanceId;\n\n    function completeSetup() {\n      if (typeof blobSupport === 'undefined' || !storedMetaDoc) {\n        return;\n      }\n      api._meta = {\n        name: dbName,\n        instanceId: instanceId,\n        blobSupport: blobSupport\n      };\n\n      cachedDBs.set(dbName, {\n        idb: idb,\n        global: api._meta\n      });\n      callback(null, api);\n    }\n\n    function storeMetaDocIfReady() {\n      if (typeof docCount === 'undefined' || typeof metaDoc === 'undefined') {\n        return;\n      }\n      var instanceKey = dbName + '_id';\n      if (instanceKey in metaDoc) {\n        instanceId = metaDoc[instanceKey];\n      } else {\n        metaDoc[instanceKey] = instanceId = uuid();\n      }\n      metaDoc.docCount = docCount;\n      txn.objectStore(META_STORE).put(metaDoc);\n    }\n\n    //\n    // fetch or generate the instanceId\n    //\n    txn.objectStore(META_STORE).get(META_STORE).onsuccess = function (e) {\n      metaDoc = e.target.result || { id: META_STORE };\n      storeMetaDocIfReady();\n    };\n\n    //\n    // countDocs\n    //\n    countDocs(txn, function (count) {\n      docCount = count;\n      storeMetaDocIfReady();\n    });\n\n    //\n    // check blob support\n    //\n    if (!blobSupportPromise) {\n      // make sure blob support is only checked once\n      blobSupportPromise = checkBlobSupport(txn);\n    }\n\n    blobSupportPromise.then(function (val) {\n      blobSupport = val;\n      completeSetup();\n    });\n\n    // only when the metadata put transaction has completed,\n    // consider the setup done\n    txn.oncomplete = function () {\n      storedMetaDoc = true;\n      completeSetup();\n    };\n  };\n\n  req.onerror = function () {\n    var msg = 'Failed to open indexedDB, are you in private browsing mode?';\n    guardedConsole('error', msg);\n    callback(createError(IDB_ERROR, msg));\n  };\n}\n\nIdbPouch.valid = function () {\n  // Issue #2533, we finally gave up on doing bug\n  // detection instead of browser sniffing. Safari brought us\n  // to our knees.\n  var isSafari = typeof openDatabase !== 'undefined' &&\n    /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) &&\n    !/Chrome/.test(navigator.userAgent) &&\n    !/BlackBerry/.test(navigator.platform);\n\n  // On Firefox SecurityError is thrown while referencing indexedDB if cookies\n  // are not allowed. `typeof indexedDB` also triggers the error.\n  try {\n    // some outdated implementations of IDB that appear on Samsung\n    // and HTC Android devices <4.4 are missing IDBKeyRange\n    return !isSafari && typeof indexedDB !== 'undefined' &&\n      typeof IDBKeyRange !== 'undefined';\n  } catch (e) {\n    return false;\n  }\n};\n\nfunction tryStorageOption(dbName, storage) {\n  try { // option only available in Firefox 26+\n    return indexedDB.open(dbName, {\n      version: ADAPTER_VERSION,\n      storage: storage\n    });\n  } catch (err) {\n      return indexedDB.open(dbName, ADAPTER_VERSION);\n  }\n}\n\nfunction IDBPouch (PouchDB) {\n  PouchDB.adapter('idb', IdbPouch, true);\n}\n\n//\n// Parsing hex strings. Yeah.\n//\n// So basically we need this because of a bug in WebSQL:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n//\n// UTF-8 and UTF-16 are provided as separate functions\n// for meager performance improvements\n//\n\nfunction decodeUtf8(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction hexToInt(charCode) {\n  // '0'-'9' is 48-57\n  // 'A'-'F' is 65-70\n  // SQLite will only give us uppercase hex\n  return charCode < 65 ? (charCode - 48) : (charCode - 55);\n}\n\n\n// Example:\n// pragma encoding=utf8;\n// select hex('A');\n// returns '41'\nfunction parseHexUtf8(str, start, end) {\n  var result = '';\n  while (start < end) {\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start++)) << 4) |\n        hexToInt(str.charCodeAt(start++)));\n  }\n  return result;\n}\n\n// Example:\n// pragma encoding=utf16;\n// select hex('A');\n// returns '4100'\n// notice that the 00 comes after the 41 (i.e. it's swizzled)\nfunction parseHexUtf16(str, start, end) {\n  var result = '';\n  while (start < end) {\n    // UTF-16, so swizzle the bytes\n    result += String.fromCharCode(\n      (hexToInt(str.charCodeAt(start + 2)) << 12) |\n        (hexToInt(str.charCodeAt(start + 3)) << 8) |\n        (hexToInt(str.charCodeAt(start)) << 4) |\n        hexToInt(str.charCodeAt(start + 1)));\n    start += 4;\n  }\n  return result;\n}\n\nfunction parseHexString(str, encoding) {\n  if (encoding === 'UTF-8') {\n    return decodeUtf8(parseHexUtf8(str, 0, str.length));\n  } else {\n    return parseHexUtf16(str, 0, str.length);\n  }\n}\n\nfunction quote(str) {\n  return \"'\" + str + \"'\";\n}\n\nvar ADAPTER_VERSION$1 = 7; // used to manage migrations\n\n// The object stores created for each database\n// DOC_STORE stores the document meta data, its revision history and state\nvar DOC_STORE$1 = quote('document-store');\n// BY_SEQ_STORE stores a particular version of a document, keyed by its\n// sequence id\nvar BY_SEQ_STORE$1 = quote('by-sequence');\n// Where we store attachments\nvar ATTACH_STORE$1 = quote('attach-store');\nvar LOCAL_STORE$1 = quote('local-store');\nvar META_STORE$1 = quote('metadata-store');\n// where we store many-to-many relations between attachment\n// digests and seqs\nvar ATTACH_AND_SEQ_STORE$1 = quote('attach-seq-store');\n\n// escapeBlob and unescapeBlob are workarounds for a websql bug:\n// https://code.google.com/p/chromium/issues/detail?id=422690\n// https://bugs.webkit.org/show_bug.cgi?id=137637\n// The goal is to never actually insert the \\u0000 character\n// in the database.\nfunction escapeBlob(str) {\n  return str\n    .replace(/\\u0002/g, '\\u0002\\u0002')\n    .replace(/\\u0001/g, '\\u0001\\u0002')\n    .replace(/\\u0000/g, '\\u0001\\u0001');\n}\n\nfunction unescapeBlob(str) {\n  return str\n    .replace(/\\u0001\\u0001/g, '\\u0000')\n    .replace(/\\u0001\\u0002/g, '\\u0001')\n    .replace(/\\u0002\\u0002/g, '\\u0002');\n}\n\nfunction stringifyDoc(doc) {\n  // don't bother storing the id/rev. it uses lots of space,\n  // in persistent map/reduce especially\n  delete doc._id;\n  delete doc._rev;\n  return JSON.stringify(doc);\n}\n\nfunction unstringifyDoc(doc, id, rev$$1) {\n  doc = JSON.parse(doc);\n  doc._id = id;\n  doc._rev = rev$$1;\n  return doc;\n}\n\n// question mark groups IN queries, e.g. 3 -> '(?,?,?)'\nfunction qMarks(num) {\n  var s = '(';\n  while (num--) {\n    s += '?';\n    if (num) {\n      s += ',';\n    }\n  }\n  return s + ')';\n}\n\nfunction select(selector, table, joiner, where, orderBy) {\n  return 'SELECT ' + selector + ' FROM ' +\n    (typeof table === 'string' ? table : table.join(' JOIN ')) +\n    (joiner ? (' ON ' + joiner) : '') +\n    (where ? (' WHERE ' +\n    (typeof where === 'string' ? where : where.join(' AND '))) : '') +\n    (orderBy ? (' ORDER BY ' + orderBy) : '');\n}\n\nfunction compactRevs$1(revs, docId, tx) {\n\n  if (!revs.length) {\n    return;\n  }\n\n  var numDone = 0;\n  var seqs = [];\n\n  function checkDone() {\n    if (++numDone === revs.length) { // done\n      deleteOrphans();\n    }\n  }\n\n  function deleteOrphans() {\n    // find orphaned attachment digests\n\n    if (!seqs.length) {\n      return;\n    }\n\n    var sql = 'SELECT DISTINCT digest AS digest FROM ' +\n      ATTACH_AND_SEQ_STORE$1 + ' WHERE seq IN ' + qMarks(seqs.length);\n\n    tx.executeSql(sql, seqs, function (tx, res) {\n\n      var digestsToCheck = [];\n      for (var i = 0; i < res.rows.length; i++) {\n        digestsToCheck.push(res.rows.item(i).digest);\n      }\n      if (!digestsToCheck.length) {\n        return;\n      }\n\n      var sql = 'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 +\n        ' WHERE seq IN (' +\n        seqs.map(function () { return '?'; }).join(',') +\n        ')';\n      tx.executeSql(sql, seqs, function (tx) {\n\n        var sql = 'SELECT digest FROM ' + ATTACH_AND_SEQ_STORE$1 +\n          ' WHERE digest IN (' +\n          digestsToCheck.map(function () { return '?'; }).join(',') +\n          ')';\n        tx.executeSql(sql, digestsToCheck, function (tx, res) {\n          var nonOrphanedDigests = new ExportedSet();\n          for (var i = 0; i < res.rows.length; i++) {\n            nonOrphanedDigests.add(res.rows.item(i).digest);\n          }\n          digestsToCheck.forEach(function (digest) {\n            if (nonOrphanedDigests.has(digest)) {\n              return;\n            }\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_AND_SEQ_STORE$1 + ' WHERE digest=?',\n              [digest]);\n            tx.executeSql(\n              'DELETE FROM ' + ATTACH_STORE$1 + ' WHERE digest=?', [digest]);\n          });\n        });\n      });\n    });\n  }\n\n  // update by-seq and attach stores in parallel\n  revs.forEach(function (rev$$1) {\n    var sql = 'SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=? AND rev=?';\n\n    tx.executeSql(sql, [docId, rev$$1], function (tx, res) {\n      if (!res.rows.length) { // already deleted\n        return checkDone();\n      }\n      var seq = res.rows.item(0).seq;\n      seqs.push(seq);\n\n      tx.executeSql(\n        'DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?', [seq], checkDone);\n    });\n  });\n}\n\nfunction websqlError(callback) {\n  return function (event) {\n    guardedConsole('error', 'WebSQL threw an error', event);\n    // event may actually be a SQLError object, so report is as such\n    var errorNameMatch = event && event.constructor.toString()\n        .match(/function ([^(]+)/);\n    var errorName = (errorNameMatch && errorNameMatch[1]) || event.type;\n    var errorReason = event.target || event.message;\n    callback(createError(WSQ_ERROR, errorReason, errorName));\n  };\n}\n\nfunction getSize(opts) {\n  if ('size' in opts) {\n    // triggers immediate popup in iOS, fixes #2347\n    // e.g. 5000001 asks for 5 MB, 10000001 asks for 10 MB,\n    return opts.size * 1000000;\n  }\n  // In iOS, doesn't matter as long as it's <= 5000000.\n  // Except that if you request too much, our tests fail\n  // because of the native \"do you accept?\" popup.\n  // In Android <=4.3, this value is actually used as an\n  // honest-to-god ceiling for data, so we need to\n  // set it to a decently high number.\n  var isAndroid = typeof navigator !== 'undefined' &&\n    /Android/.test(navigator.userAgent);\n  return isAndroid ? 5000000 : 1; // in PhantomJS, if you use 0 it will crash\n}\n\nfunction websqlBulkDocs(dbOpts, req, opts, api, db, websqlChanges, callback) {\n  var newEdits = opts.new_edits;\n  var userDocs = req.docs;\n\n  // Parse the docs, give them a sequence number for the result\n  var docInfos = userDocs.map(function (doc) {\n    if (doc._id && isLocalId(doc._id)) {\n      return doc;\n    }\n    var newDoc = parseDoc(doc, newEdits);\n    return newDoc;\n  });\n\n  var docInfoErrors = docInfos.filter(function (docInfo) {\n    return docInfo.error;\n  });\n  if (docInfoErrors.length) {\n    return callback(docInfoErrors[0]);\n  }\n\n  var tx;\n  var results = new Array(docInfos.length);\n  var fetchedDocs = new ExportedMap();\n\n  var preconditionErrored;\n  function complete() {\n    if (preconditionErrored) {\n      return callback(preconditionErrored);\n    }\n    websqlChanges.notify(api._name);\n    callback(null, results);\n  }\n\n  function verifyAttachment(digest, callback) {\n    var sql = 'SELECT count(*) as cnt FROM ' + ATTACH_STORE$1 +\n      ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.item(0).cnt === 0) {\n        var err = createError(MISSING_STUB,\n          'unknown stub attachment with digest ' +\n          digest);\n        callback(err);\n      } else {\n        callback();\n      }\n    });\n  }\n\n  function verifyAttachments(finish) {\n    var digests = [];\n    docInfos.forEach(function (docInfo) {\n      if (docInfo.data && docInfo.data._attachments) {\n        Object.keys(docInfo.data._attachments).forEach(function (filename) {\n          var att = docInfo.data._attachments[filename];\n          if (att.stub) {\n            digests.push(att.digest);\n          }\n        });\n      }\n    });\n    if (!digests.length) {\n      return finish();\n    }\n    var numDone = 0;\n    var err;\n\n    function checkDone() {\n      if (++numDone === digests.length) {\n        finish(err);\n      }\n    }\n    digests.forEach(function (digest) {\n      verifyAttachment(digest, function (attErr) {\n        if (attErr && !err) {\n          err = attErr;\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function writeDoc(docInfo, winningRev$$1, winningRevIsDeleted, newRevIsDeleted,\n                    isUpdate, delta, resultsIdx, callback) {\n\n    function finish() {\n      var data = docInfo.data;\n      var deletedInt = newRevIsDeleted ? 1 : 0;\n\n      var id = data._id;\n      var rev = data._rev;\n      var json = stringifyDoc(data);\n      var sql = 'INSERT INTO ' + BY_SEQ_STORE$1 +\n        ' (doc_id, rev, json, deleted) VALUES (?, ?, ?, ?);';\n      var sqlArgs = [id, rev, json, deletedInt];\n\n      // map seqs to attachment digests, which\n      // we will need later during compaction\n      function insertAttachmentMappings(seq, callback) {\n        var attsAdded = 0;\n        var attsToAdd = Object.keys(data._attachments || {});\n\n        if (!attsToAdd.length) {\n          return callback();\n        }\n        function checkDone() {\n          if (++attsAdded === attsToAdd.length) {\n            callback();\n          }\n          return false; // ack handling a constraint error\n        }\n        function add(att) {\n          var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n            ' (digest, seq) VALUES (?,?)';\n          var sqlArgs = [data._attachments[att].digest, seq];\n          tx.executeSql(sql, sqlArgs, checkDone, checkDone);\n          // second callback is for a constaint error, which we ignore\n          // because this docid/rev has already been associated with\n          // the digest (e.g. when new_edits == false)\n        }\n        for (var i = 0; i < attsToAdd.length; i++) {\n          add(attsToAdd[i]); // do in parallel\n        }\n      }\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        var seq = result.insertId;\n        insertAttachmentMappings(seq, function () {\n          dataWritten(tx, seq);\n        });\n      }, function () {\n        // constraint error, recover by updating instead (see #1638)\n        var fetchSql = select('seq', BY_SEQ_STORE$1, null,\n          'doc_id=? AND rev=?');\n        tx.executeSql(fetchSql, [id, rev], function (tx, res) {\n          var seq = res.rows.item(0).seq;\n          var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n            ' SET json=?, deleted=? WHERE doc_id=? AND rev=?;';\n          var sqlArgs = [json, deletedInt, id, rev];\n          tx.executeSql(sql, sqlArgs, function (tx) {\n            insertAttachmentMappings(seq, function () {\n              dataWritten(tx, seq);\n            });\n          });\n        });\n        return false; // ack that we've handled the error\n      });\n    }\n\n    function collectResults(attachmentErr) {\n      if (!err) {\n        if (attachmentErr) {\n          err = attachmentErr;\n          callback(err);\n        } else if (recv === attachments.length) {\n          finish();\n        }\n      }\n    }\n\n    var err = null;\n    var recv = 0;\n\n    docInfo.data._id = docInfo.metadata.id;\n    docInfo.data._rev = docInfo.metadata.rev;\n    var attachments = Object.keys(docInfo.data._attachments || {});\n\n\n    if (newRevIsDeleted) {\n      docInfo.data._deleted = true;\n    }\n\n    function attachmentSaved(err) {\n      recv++;\n      collectResults(err);\n    }\n\n    attachments.forEach(function (key) {\n      var att = docInfo.data._attachments[key];\n      if (!att.stub) {\n        var data = att.data;\n        delete att.data;\n        att.revpos = parseInt(winningRev$$1, 10);\n        var digest = att.digest;\n        saveAttachment(digest, data, attachmentSaved);\n      } else {\n        recv++;\n        collectResults();\n      }\n    });\n\n    if (!attachments.length) {\n      finish();\n    }\n\n    function dataWritten(tx, seq) {\n      var id = docInfo.metadata.id;\n\n      var revsToCompact = docInfo.stemmedRevs || [];\n      if (isUpdate && api.auto_compaction) {\n        revsToCompact = compactTree(docInfo.metadata).concat(revsToCompact);\n      }\n      if (revsToCompact.length) {\n        compactRevs$1(revsToCompact, id, tx);\n      }\n\n      docInfo.metadata.seq = seq;\n      var rev = docInfo.metadata.rev;\n      delete docInfo.metadata.rev;\n\n      var sql = isUpdate ?\n      'UPDATE ' + DOC_STORE$1 +\n      ' SET json=?, max_seq=?, winningseq=' +\n      '(SELECT seq FROM ' + BY_SEQ_STORE$1 +\n      ' WHERE doc_id=' + DOC_STORE$1 + '.id AND rev=?) WHERE id=?'\n        : 'INSERT INTO ' + DOC_STORE$1 +\n      ' (id, winningseq, max_seq, json) VALUES (?,?,?,?);';\n      var metadataStr = safeJsonStringify(docInfo.metadata);\n      var params = isUpdate ?\n        [metadataStr, seq, winningRev$$1, id] :\n        [id, seq, seq, metadataStr];\n      tx.executeSql(sql, params, function () {\n        results[resultsIdx] = {\n          ok: true,\n          id: docInfo.metadata.id,\n          rev: rev\n        };\n        fetchedDocs.set(id, docInfo.metadata);\n        callback();\n      });\n    }\n  }\n\n  function websqlProcessDocs() {\n    processDocs(dbOpts.revs_limit, docInfos, api, fetchedDocs, tx,\n                results, writeDoc, opts);\n  }\n\n  function fetchExistingDocs(callback) {\n    if (!docInfos.length) {\n      return callback();\n    }\n\n    var numFetched = 0;\n\n    function checkDone() {\n      if (++numFetched === docInfos.length) {\n        callback();\n      }\n    }\n\n    docInfos.forEach(function (docInfo) {\n      if (docInfo._id && isLocalId(docInfo._id)) {\n        return checkDone(); // skip local docs\n      }\n      var id = docInfo.metadata.id;\n      tx.executeSql('SELECT json FROM ' + DOC_STORE$1 +\n      ' WHERE id = ?', [id], function (tx, result) {\n        if (result.rows.length) {\n          var metadata = safeJsonParse(result.rows.item(0).json);\n          fetchedDocs.set(id, metadata);\n        }\n        checkDone();\n      });\n    });\n  }\n\n  function saveAttachment(digest, data, callback) {\n    var sql = 'SELECT digest FROM ' + ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      if (result.rows.length) { // attachment already exists\n        return callback();\n      }\n      // we could just insert before selecting and catch the error,\n      // but my hunch is that it's cheaper not to serialize the blob\n      // from JS to C if we don't have to (TODO: confirm this)\n      sql = 'INSERT INTO ' + ATTACH_STORE$1 +\n      ' (digest, body, escaped) VALUES (?,?,1)';\n      tx.executeSql(sql, [digest, escapeBlob(data)], function () {\n        callback();\n      }, function () {\n        // ignore constaint errors, means it already exists\n        callback();\n        return false; // ack we handled the error\n      });\n    });\n  }\n\n  preprocessAttachments(docInfos, 'binary', function (err) {\n    if (err) {\n      return callback(err);\n    }\n    db.transaction(function (txn) {\n      tx = txn;\n      verifyAttachments(function (err) {\n        if (err) {\n          preconditionErrored = err;\n        } else {\n          fetchExistingDocs(websqlProcessDocs);\n        }\n      });\n    }, websqlError(callback), complete);\n  });\n}\n\nvar cachedDatabases = new ExportedMap();\n\n// openDatabase passed in through opts (e.g. for node-websql)\nfunction openDatabaseWithOpts(opts) {\n  return opts.websql(opts.name, opts.version, opts.description, opts.size);\n}\n\nfunction openDBSafely(opts) {\n  try {\n    return {\n      db: openDatabaseWithOpts(opts)\n    };\n  } catch (err) {\n    return {\n      error: err\n    };\n  }\n}\n\nfunction openDB$1(opts) {\n  var cachedResult = cachedDatabases.get(opts.name);\n  if (!cachedResult) {\n    cachedResult = openDBSafely(opts);\n    cachedDatabases.set(opts.name, cachedResult);\n  }\n  return cachedResult;\n}\n\nvar websqlChanges = new Changes();\n\nfunction fetchAttachmentsIfNecessary$1(doc, opts, api, txn, cb) {\n  var attachments = Object.keys(doc._attachments || {});\n  if (!attachments.length) {\n    return cb && cb();\n  }\n  var numDone = 0;\n\n  function checkDone() {\n    if (++numDone === attachments.length && cb) {\n      cb();\n    }\n  }\n\n  function fetchAttachment(doc, att) {\n    var attObj = doc._attachments[att];\n    var attOpts = {binary: opts.binary, ctx: txn};\n    api._getAttachment(doc._id, att, attObj, attOpts, function (_, data) {\n      doc._attachments[att] = $inject_Object_assign(\n        pick(attObj, ['digest', 'content_type']),\n        { data: data }\n      );\n      checkDone();\n    });\n  }\n\n  attachments.forEach(function (att) {\n    if (opts.attachments && opts.include_docs) {\n      fetchAttachment(doc, att);\n    } else {\n      doc._attachments[att].stub = true;\n      checkDone();\n    }\n  });\n}\n\nvar POUCH_VERSION = 1;\n\n// these indexes cover the ground for most allDocs queries\nvar BY_SEQ_STORE_DELETED_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'by-seq-deleted-idx\\' ON ' +\n  BY_SEQ_STORE$1 + ' (seq, deleted)';\nvar BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'by-seq-doc-id-rev\\' ON ' +\n    BY_SEQ_STORE$1 + ' (doc_id, rev)';\nvar DOC_STORE_WINNINGSEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'doc-winningseq-idx\\' ON ' +\n  DOC_STORE$1 + ' (winningseq)';\nvar ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL =\n  'CREATE INDEX IF NOT EXISTS \\'attach-seq-seq-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (seq)';\nvar ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL =\n  'CREATE UNIQUE INDEX IF NOT EXISTS \\'attach-seq-digest-idx\\' ON ' +\n    ATTACH_AND_SEQ_STORE$1 + ' (digest, seq)';\n\nvar DOC_STORE_AND_BY_SEQ_JOINER = BY_SEQ_STORE$1 +\n  '.seq = ' + DOC_STORE$1 + '.winningseq';\n\nvar SELECT_DOCS = BY_SEQ_STORE$1 + '.seq AS seq, ' +\n  BY_SEQ_STORE$1 + '.deleted AS deleted, ' +\n  BY_SEQ_STORE$1 + '.json AS data, ' +\n  BY_SEQ_STORE$1 + '.rev AS rev, ' +\n  DOC_STORE$1 + '.json AS metadata';\n\nfunction WebSqlPouch$1(opts, callback) {\n  var api = this;\n  var instanceId = null;\n  var size = getSize(opts);\n  var idRequests = [];\n  var encoding;\n\n  api._name = opts.name;\n\n  // extend the options here, because sqlite plugin has a ton of options\n  // and they are constantly changing, so it's more prudent to allow anything\n  var websqlOpts = $inject_Object_assign({}, opts, {\n    version: POUCH_VERSION,\n    description: opts.name,\n    size: size\n  });\n  var openDBResult = openDB$1(websqlOpts);\n  if (openDBResult.error) {\n    return websqlError(callback)(openDBResult.error);\n  }\n  var db = openDBResult.db;\n  if (typeof db.readTransaction !== 'function') {\n    // doesn't exist in sqlite plugin\n    db.readTransaction = db.transaction;\n  }\n\n  function dbCreated() {\n    // note the db name in case the browser upgrades to idb\n    if (hasLocalStorage()) {\n      window.localStorage['_pouch__websqldb_' + api._name] = true;\n    }\n    callback(null, api);\n  }\n\n  // In this migration, we added the 'deleted' and 'local' columns to the\n  // by-seq and doc store tables.\n  // To preserve existing user data, we re-process all the existing JSON\n  // and add these values.\n  // Called migration2 because it corresponds to adapter version (db_version) #2\n  function runMigration2(tx, callback) {\n    // index used for the join in the allDocs query\n    tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n\n    tx.executeSql('ALTER TABLE ' + BY_SEQ_STORE$1 +\n      ' ADD COLUMN deleted TINYINT(1) DEFAULT 0', [], function () {\n      tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n      tx.executeSql('ALTER TABLE ' + DOC_STORE$1 +\n        ' ADD COLUMN local TINYINT(1) DEFAULT 0', [], function () {\n        tx.executeSql('CREATE INDEX IF NOT EXISTS \\'doc-store-local-idx\\' ON ' +\n          DOC_STORE$1 + ' (local, id)');\n\n        var sql = 'SELECT ' + DOC_STORE$1 + '.winningseq AS seq, ' + DOC_STORE$1 +\n          '.json AS metadata FROM ' + BY_SEQ_STORE$1 + ' JOIN ' + DOC_STORE$1 +\n          ' ON ' + BY_SEQ_STORE$1 + '.seq = ' + DOC_STORE$1 + '.winningseq';\n\n        tx.executeSql(sql, [], function (tx, result) {\n\n          var deleted = [];\n          var local = [];\n\n          for (var i = 0; i < result.rows.length; i++) {\n            var item = result.rows.item(i);\n            var seq = item.seq;\n            var metadata = JSON.parse(item.metadata);\n            if (isDeleted(metadata)) {\n              deleted.push(seq);\n            }\n            if (isLocalId(metadata.id)) {\n              local.push(metadata.id);\n            }\n          }\n          tx.executeSql('UPDATE ' + DOC_STORE$1 + 'SET local = 1 WHERE id IN ' +\n            qMarks(local.length), local, function () {\n            tx.executeSql('UPDATE ' + BY_SEQ_STORE$1 +\n              ' SET deleted = 1 WHERE seq IN ' +\n              qMarks(deleted.length), deleted, callback);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we make all the local docs unversioned\n  function runMigration3(tx, callback) {\n    var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n      ' (id UNIQUE, rev, json)';\n    tx.executeSql(local, [], function () {\n      var sql = 'SELECT ' + DOC_STORE$1 + '.id AS id, ' +\n        BY_SEQ_STORE$1 + '.json AS data ' +\n        'FROM ' + BY_SEQ_STORE$1 + ' JOIN ' +\n        DOC_STORE$1 + ' ON ' + BY_SEQ_STORE$1 + '.seq = ' +\n        DOC_STORE$1 + '.winningseq WHERE local = 1';\n      tx.executeSql(sql, [], function (tx, res) {\n        var rows = [];\n        for (var i = 0; i < res.rows.length; i++) {\n          rows.push(res.rows.item(i));\n        }\n        function doNext() {\n          if (!rows.length) {\n            return callback(tx);\n          }\n          var row = rows.shift();\n          var rev$$1 = JSON.parse(row.data)._rev;\n          tx.executeSql('INSERT INTO ' + LOCAL_STORE$1 +\n              ' (id, rev, json) VALUES (?,?,?)',\n              [row.id, rev$$1, row.data], function (tx) {\n            tx.executeSql('DELETE FROM ' + DOC_STORE$1 + ' WHERE id=?',\n                [row.id], function (tx) {\n              tx.executeSql('DELETE FROM ' + BY_SEQ_STORE$1 + ' WHERE seq=?',\n                  [row.seq], function () {\n                doNext();\n              });\n            });\n          });\n        }\n        doNext();\n      });\n    });\n  }\n\n  // in this migration, we remove doc_id_rev and just use rev\n  function runMigration4(tx, callback) {\n\n    function updateRows(rows) {\n      function doNext() {\n        if (!rows.length) {\n          return callback(tx);\n        }\n        var row = rows.shift();\n        var doc_id_rev = parseHexString(row.hex, encoding);\n        var idx = doc_id_rev.lastIndexOf('::');\n        var doc_id = doc_id_rev.substring(0, idx);\n        var rev$$1 = doc_id_rev.substring(idx + 2);\n        var sql = 'UPDATE ' + BY_SEQ_STORE$1 +\n          ' SET doc_id=?, rev=? WHERE doc_id_rev=?';\n        tx.executeSql(sql, [doc_id, rev$$1, doc_id_rev], function () {\n          doNext();\n        });\n      }\n      doNext();\n    }\n\n    var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN doc_id';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'ALTER TABLE ' + BY_SEQ_STORE$1 + ' ADD COLUMN rev';\n      tx.executeSql(sql, [], function (tx) {\n        tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL, [], function (tx) {\n          var sql = 'SELECT hex(doc_id_rev) as hex FROM ' + BY_SEQ_STORE$1;\n          tx.executeSql(sql, [], function (tx, res) {\n            var rows = [];\n            for (var i = 0; i < res.rows.length; i++) {\n              rows.push(res.rows.item(i));\n            }\n            updateRows(rows);\n          });\n        });\n      });\n    });\n  }\n\n  // in this migration, we add the attach_and_seq table\n  // for issue #2818\n  function runMigration5(tx, callback) {\n\n    function migrateAttsAndSeqs(tx) {\n      // need to actually populate the table. this is the expensive part,\n      // so as an optimization, check first that this database even\n      // contains attachments\n      var sql = 'SELECT COUNT(*) AS cnt FROM ' + ATTACH_STORE$1;\n      tx.executeSql(sql, [], function (tx, res) {\n        var count = res.rows.item(0).cnt;\n        if (!count) {\n          return callback(tx);\n        }\n\n        var offset = 0;\n        var pageSize = 10;\n        function nextPage() {\n          var sql = select(\n            SELECT_DOCS + ', ' + DOC_STORE$1 + '.id AS id',\n            [DOC_STORE$1, BY_SEQ_STORE$1],\n            DOC_STORE_AND_BY_SEQ_JOINER,\n            null,\n            DOC_STORE$1 + '.id '\n          );\n          sql += ' LIMIT ' + pageSize + ' OFFSET ' + offset;\n          offset += pageSize;\n          tx.executeSql(sql, [], function (tx, res) {\n            if (!res.rows.length) {\n              return callback(tx);\n            }\n            var digestSeqs = {};\n            function addDigestSeq(digest, seq) {\n              // uniq digest/seq pairs, just in case there are dups\n              var seqs = digestSeqs[digest] = (digestSeqs[digest] || []);\n              if (seqs.indexOf(seq) === -1) {\n                seqs.push(seq);\n              }\n            }\n            for (var i = 0; i < res.rows.length; i++) {\n              var row = res.rows.item(i);\n              var doc = unstringifyDoc(row.data, row.id, row.rev);\n              var atts = Object.keys(doc._attachments || {});\n              for (var j = 0; j < atts.length; j++) {\n                var att = doc._attachments[atts[j]];\n                addDigestSeq(att.digest, row.seq);\n              }\n            }\n            var digestSeqPairs = [];\n            Object.keys(digestSeqs).forEach(function (digest) {\n              var seqs = digestSeqs[digest];\n              seqs.forEach(function (seq) {\n                digestSeqPairs.push([digest, seq]);\n              });\n            });\n            if (!digestSeqPairs.length) {\n              return nextPage();\n            }\n            var numDone = 0;\n            digestSeqPairs.forEach(function (pair) {\n              var sql = 'INSERT INTO ' + ATTACH_AND_SEQ_STORE$1 +\n                ' (digest, seq) VALUES (?,?)';\n              tx.executeSql(sql, pair, function () {\n                if (++numDone === digestSeqPairs.length) {\n                  nextPage();\n                }\n              });\n            });\n          });\n        }\n        nextPage();\n      });\n    }\n\n    var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n      ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n    tx.executeSql(attachAndRev, [], function (tx) {\n      tx.executeSql(\n        ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL, [], function (tx) {\n          tx.executeSql(\n            ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL, [],\n            migrateAttsAndSeqs);\n        });\n    });\n  }\n\n  // in this migration, we use escapeBlob() and unescapeBlob()\n  // instead of reading out the binary as HEX, which is slow\n  function runMigration6(tx, callback) {\n    var sql = 'ALTER TABLE ' + ATTACH_STORE$1 +\n      ' ADD COLUMN escaped TINYINT(1) DEFAULT 0';\n    tx.executeSql(sql, [], callback);\n  }\n\n  // issue #3136, in this migration we need a \"latest seq\" as well\n  // as the \"winning seq\" in the doc store\n  function runMigration7(tx, callback) {\n    var sql = 'ALTER TABLE ' + DOC_STORE$1 +\n      ' ADD COLUMN max_seq INTEGER';\n    tx.executeSql(sql, [], function (tx) {\n      var sql = 'UPDATE ' + DOC_STORE$1 + ' SET max_seq=(SELECT MAX(seq) FROM ' +\n        BY_SEQ_STORE$1 + ' WHERE doc_id=id)';\n      tx.executeSql(sql, [], function (tx) {\n        // add unique index after filling, else we'll get a constraint\n        // error when we do the ALTER TABLE\n        var sql =\n          'CREATE UNIQUE INDEX IF NOT EXISTS \\'doc-max-seq-idx\\' ON ' +\n          DOC_STORE$1 + ' (max_seq)';\n        tx.executeSql(sql, [], callback);\n      });\n    });\n  }\n\n  function checkEncoding(tx, cb) {\n    // UTF-8 on chrome/android, UTF-16 on safari < 7.1\n    tx.executeSql('SELECT HEX(\"a\") AS hex', [], function (tx, res) {\n        var hex = res.rows.item(0).hex;\n        encoding = hex.length === 2 ? 'UTF-8' : 'UTF-16';\n        cb();\n      }\n    );\n  }\n\n  function onGetInstanceId() {\n    while (idRequests.length > 0) {\n      var idCallback = idRequests.pop();\n      idCallback(null, instanceId);\n    }\n  }\n\n  function onGetVersion(tx, dbVersion) {\n    if (dbVersion === 0) {\n      // initial schema\n\n      var meta = 'CREATE TABLE IF NOT EXISTS ' + META_STORE$1 +\n        ' (dbid, db_version INTEGER)';\n      var attach = 'CREATE TABLE IF NOT EXISTS ' + ATTACH_STORE$1 +\n        ' (digest UNIQUE, escaped TINYINT(1), body BLOB)';\n      var attachAndRev = 'CREATE TABLE IF NOT EXISTS ' +\n        ATTACH_AND_SEQ_STORE$1 + ' (digest, seq INTEGER)';\n      // TODO: migrate winningseq to INTEGER\n      var doc = 'CREATE TABLE IF NOT EXISTS ' + DOC_STORE$1 +\n        ' (id unique, json, winningseq, max_seq INTEGER UNIQUE)';\n      var seq = 'CREATE TABLE IF NOT EXISTS ' + BY_SEQ_STORE$1 +\n        ' (seq INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, ' +\n        'json, deleted TINYINT(1), doc_id, rev)';\n      var local = 'CREATE TABLE IF NOT EXISTS ' + LOCAL_STORE$1 +\n        ' (id UNIQUE, rev, json)';\n\n      // creates\n      tx.executeSql(attach);\n      tx.executeSql(local);\n      tx.executeSql(attachAndRev, [], function () {\n        tx.executeSql(ATTACH_AND_SEQ_STORE_SEQ_INDEX_SQL);\n        tx.executeSql(ATTACH_AND_SEQ_STORE_ATTACH_INDEX_SQL);\n      });\n      tx.executeSql(doc, [], function () {\n        tx.executeSql(DOC_STORE_WINNINGSEQ_INDEX_SQL);\n        tx.executeSql(seq, [], function () {\n          tx.executeSql(BY_SEQ_STORE_DELETED_INDEX_SQL);\n          tx.executeSql(BY_SEQ_STORE_DOC_ID_REV_INDEX_SQL);\n          tx.executeSql(meta, [], function () {\n            // mark the db version, and new dbid\n            var initSeq = 'INSERT INTO ' + META_STORE$1 +\n              ' (db_version, dbid) VALUES (?,?)';\n            instanceId = uuid();\n            var initSeqArgs = [ADAPTER_VERSION$1, instanceId];\n            tx.executeSql(initSeq, initSeqArgs, function () {\n              onGetInstanceId();\n            });\n          });\n        });\n      });\n    } else { // version > 0\n\n      var setupDone = function () {\n        var migrated = dbVersion < ADAPTER_VERSION$1;\n        if (migrated) {\n          // update the db version within this transaction\n          tx.executeSql('UPDATE ' + META_STORE$1 + ' SET db_version = ' +\n            ADAPTER_VERSION$1);\n        }\n        // notify db.id() callers\n        var sql = 'SELECT dbid FROM ' + META_STORE$1;\n        tx.executeSql(sql, [], function (tx, result) {\n          instanceId = result.rows.item(0).dbid;\n          onGetInstanceId();\n        });\n      };\n\n      // would love to use promises here, but then websql\n      // ends the transaction early\n      var tasks = [\n        runMigration2,\n        runMigration3,\n        runMigration4,\n        runMigration5,\n        runMigration6,\n        runMigration7,\n        setupDone\n      ];\n\n      // run each migration sequentially\n      var i = dbVersion;\n      var nextMigration = function (tx) {\n        tasks[i - 1](tx, nextMigration);\n        i++;\n      };\n      nextMigration(tx);\n    }\n  }\n\n  function setup() {\n    db.transaction(function (tx) {\n      // first check the encoding\n      checkEncoding(tx, function () {\n        // then get the version\n        fetchVersion(tx);\n      });\n    }, websqlError(callback), dbCreated);\n  }\n\n  function fetchVersion(tx) {\n    var sql = 'SELECT sql FROM sqlite_master WHERE tbl_name = ' + META_STORE$1;\n    tx.executeSql(sql, [], function (tx, result) {\n      if (!result.rows.length) {\n        // database hasn't even been created yet (version 0)\n        onGetVersion(tx, 0);\n      } else if (!/db_version/.test(result.rows.item(0).sql)) {\n        // table was created, but without the new db_version column,\n        // so add it.\n        tx.executeSql('ALTER TABLE ' + META_STORE$1 +\n          ' ADD COLUMN db_version INTEGER', [], function () {\n          // before version 2, this column didn't even exist\n          onGetVersion(tx, 1);\n        });\n      } else { // column exists, we can safely get it\n        tx.executeSql('SELECT db_version FROM ' + META_STORE$1,\n          [], function (tx, result) {\n          var dbVersion = result.rows.item(0).db_version;\n          onGetVersion(tx, dbVersion);\n        });\n      }\n    });\n  }\n\n  setup();\n\n  function getMaxSeq(tx, callback) {\n    var sql = 'SELECT MAX(seq) AS seq FROM ' + BY_SEQ_STORE$1;\n    tx.executeSql(sql, [], function (tx, res) {\n      var updateSeq = res.rows.item(0).seq || 0;\n      callback(updateSeq);\n    });\n  }\n\n  function countDocs(tx, callback) {\n    // count the total rows\n    var sql = select(\n      'COUNT(' + DOC_STORE$1 + '.id) AS \\'num\\'',\n      [DOC_STORE$1, BY_SEQ_STORE$1],\n      DOC_STORE_AND_BY_SEQ_JOINER,\n      BY_SEQ_STORE$1 + '.deleted=0');\n\n    tx.executeSql(sql, [], function (tx, result) {\n      callback(result.rows.item(0).num);\n    });\n  }\n\n  api._remote = false;\n  api.type = function () {\n    return 'websql';\n  };\n\n  api._id = toPromise(function (callback) {\n    callback(null, instanceId);\n  });\n\n  api._info = function (callback) {\n    var seq;\n    var docCount;\n    db.readTransaction(function (tx) {\n      getMaxSeq(tx, function (theSeq) {\n        seq = theSeq;\n      });\n      countDocs(tx, function (theDocCount) {\n        docCount = theDocCount;\n      });\n    }, websqlError(callback), function () {\n      callback(null, {\n        doc_count: docCount,\n        update_seq: seq,\n        websql_encoding: encoding\n      });\n    });\n  };\n\n  api._bulkDocs = function (req, reqOpts, callback) {\n    websqlBulkDocs(opts, req, reqOpts, api, db, websqlChanges, callback);\n  };\n\n  function latest$$1(tx, id, rev$$1, callback, finish) {\n    var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n    var sqlArgs = [id];\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var err = createError(MISSING_DOC, 'missing');\n        return finish(err);\n      }\n      var item = results.rows.item(0);\n      var metadata = safeJsonParse(item.metadata);\n      callback(latest(rev$$1, metadata));\n    });\n  }\n\n  api._get = function (id, opts, callback) {\n    var doc;\n    var metadata;\n    var tx = opts.ctx;\n    if (!tx) {\n      return db.readTransaction(function (txn) {\n        api._get(id, $inject_Object_assign({ctx: txn}, opts), callback);\n      });\n    }\n\n    function finish(err) {\n      callback(err, {doc: doc, metadata: metadata, ctx: tx});\n    }\n\n    var sql;\n    var sqlArgs;\n\n    if (!opts.rev) {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        DOC_STORE$1 + '.id=?');\n      sqlArgs = [id];\n    } else if (opts.latest) {\n      latest$$1(tx, id, opts.rev, function (latestRev) {\n        opts.latest = false;\n        opts.rev = latestRev;\n        api._get(id, opts, callback);\n      }, finish);\n      return;\n    } else {\n      sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id',\n        [BY_SEQ_STORE$1 + '.doc_id=?', BY_SEQ_STORE$1 + '.rev=?']);\n      sqlArgs = [id, opts.rev];\n    }\n\n    tx.executeSql(sql, sqlArgs, function (a, results) {\n      if (!results.rows.length) {\n        var missingErr = createError(MISSING_DOC, 'missing');\n        return finish(missingErr);\n      }\n      var item = results.rows.item(0);\n      metadata = safeJsonParse(item.metadata);\n      if (item.deleted && !opts.rev) {\n        var deletedErr = createError(MISSING_DOC, 'deleted');\n        return finish(deletedErr);\n      }\n      doc = unstringifyDoc(item.data, metadata.id, item.rev);\n      finish();\n    });\n  };\n\n  api._allDocs = function (opts, callback) {\n    var results = [];\n    var totalRows;\n    var updateSeq;\n\n    var start = 'startkey' in opts ? opts.startkey : false;\n    var end = 'endkey' in opts ? opts.endkey : false;\n    var key = 'key' in opts ? opts.key : false;\n    var keys = 'keys' in opts ? opts.keys : false;\n    var descending = 'descending' in opts ? opts.descending : false;\n    var limit = 'limit' in opts ? opts.limit : -1;\n    var offset = 'skip' in opts ? opts.skip : 0;\n    var inclusiveEnd = opts.inclusive_end !== false;\n    \n    var sqlArgs = [];\n    var criteria = [];\n\n    if (keys) {\n      var destinctKeys = [];\n      var bindingStr = \"\";\n      keys.forEach(function (key) {\n        if (destinctKeys.indexOf(key) === -1) {\n          destinctKeys.push(key);\n          bindingStr += '?,';\n        }\n      });\n      bindingStr = bindingStr.substring(0, bindingStr.length - 1); // keys is never empty\n      criteria.push(DOC_STORE$1 + '.id IN (' + bindingStr + ')');\n      sqlArgs = sqlArgs.concat(destinctKeys);\n    } else if (key !== false) {\n      criteria.push(DOC_STORE$1 + '.id = ?');\n      sqlArgs.push(key);\n    } else if (start !== false || end !== false) {\n      if (start !== false) {\n        criteria.push(DOC_STORE$1 + '.id ' + (descending ? '<=' : '>=') + ' ?');\n        sqlArgs.push(start);\n      }\n      if (end !== false) {\n        var comparator = descending ? '>' : '<';\n        if (inclusiveEnd) {\n          comparator += '=';\n        }\n        criteria.push(DOC_STORE$1 + '.id ' + comparator + ' ?');\n        sqlArgs.push(end);\n      }\n      if (key !== false) {\n        criteria.push(DOC_STORE$1 + '.id = ?');\n        sqlArgs.push(key);\n      }\n    }\n\n    if (!keys) {\n      // report deleted if keys are specified\n      criteria.push(BY_SEQ_STORE$1 + '.deleted = 0');\n    }\n\n    db.readTransaction(function (tx) {\n      // count the docs in parallel to other operations\n      countDocs(tx, function (docCount) {\n        totalRows = docCount;\n      });\n\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        // get max sequence in parallel to other operations\n        getMaxSeq(tx, function (theSeq) {\n          updateSeq = theSeq;\n        });\n      }\n\n      if (limit === 0) {\n        return;\n      }\n\n      // do a single query to fetch the documents\n      var sql = select(\n        SELECT_DOCS,\n        [DOC_STORE$1, BY_SEQ_STORE$1],\n        DOC_STORE_AND_BY_SEQ_JOINER,\n        criteria,\n        DOC_STORE$1 + '.id ' + (descending ? 'DESC' : 'ASC')\n        );\n      sql += ' LIMIT ' + limit + ' OFFSET ' + offset;\n\n      tx.executeSql(sql, sqlArgs, function (tx, result) {\n        for (var i = 0, l = result.rows.length; i < l; i++) {\n          var item = result.rows.item(i);\n          var metadata = safeJsonParse(item.metadata);\n          var id = metadata.id;\n          var data = unstringifyDoc(item.data, id, item.rev);\n          var winningRev$$1 = data._rev;\n          var doc = {\n            id: id,\n            key: id,\n            value: {rev: winningRev$$1}\n          };\n          if (opts.include_docs) {\n            doc.doc = data;\n            doc.doc._rev = winningRev$$1;\n            if (opts.conflicts) {\n              var conflicts = collectConflicts(metadata);\n              if (conflicts.length) {\n                doc.doc._conflicts = conflicts;\n              }\n            }\n            fetchAttachmentsIfNecessary$1(doc.doc, opts, api, tx);\n          }\n          if (item.deleted) {\n            if (keys) {\n              doc.value.deleted = true;\n              doc.doc = null;\n            } else {\n              // propably should not happen\n              continue;\n            }\n          }\n          if (!keys) {\n            results.push(doc);\n          } else {\n            var index = keys.indexOf(id, index);\n            do {\n              results[index] = doc;\n              index = keys.indexOf(id, index + 1);\n            } while (index > -1 && index < keys.length);\n          }\n        }\n        if (keys) {\n          keys.forEach(function (key, index) {\n            if (!results[index]) {\n              results[index] = {key: key, error: 'not_found'};\n            }\n          });\n        }\n      });\n    }, websqlError(callback), function () {\n      var returnVal = {\n        total_rows: totalRows,\n        offset: opts.skip,\n        rows: results\n      };\n\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        returnVal.update_seq = updateSeq;\n      }\n      callback(null, returnVal);\n    });\n  };\n\n  api._changes = function (opts) {\n    opts = clone(opts);\n\n    if (opts.continuous) {\n      var id = api._name + ':' + uuid();\n      websqlChanges.addListener(api._name, id, api, opts);\n      websqlChanges.notify(api._name);\n      return {\n        cancel: function () {\n          websqlChanges.removeListener(api._name, id);\n        }\n      };\n    }\n\n    var descending = opts.descending;\n\n    // Ignore the `since` parameter when `descending` is true\n    opts.since = opts.since && !descending ? opts.since : 0;\n\n    var limit = 'limit' in opts ? opts.limit : -1;\n    if (limit === 0) {\n      limit = 1; // per CouchDB _changes spec\n    }\n\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    var results = [];\n    var numResults = 0;\n\n    function fetchChanges() {\n\n      var selectStmt =\n        DOC_STORE$1 + '.json AS metadata, ' +\n        DOC_STORE$1 + '.max_seq AS maxSeq, ' +\n        BY_SEQ_STORE$1 + '.json AS winningDoc, ' +\n        BY_SEQ_STORE$1 + '.rev AS winningRev ';\n\n      var from = DOC_STORE$1 + ' JOIN ' + BY_SEQ_STORE$1;\n\n      var joiner = DOC_STORE$1 + '.id=' + BY_SEQ_STORE$1 + '.doc_id' +\n        ' AND ' + DOC_STORE$1 + '.winningseq=' + BY_SEQ_STORE$1 + '.seq';\n\n      var criteria = ['maxSeq > ?'];\n      var sqlArgs = [opts.since];\n\n      if (opts.doc_ids) {\n        criteria.push(DOC_STORE$1 + '.id IN ' + qMarks(opts.doc_ids.length));\n        sqlArgs = sqlArgs.concat(opts.doc_ids);\n      }\n\n      var orderBy = 'maxSeq ' + (descending ? 'DESC' : 'ASC');\n\n      var sql = select(selectStmt, from, joiner, criteria, orderBy);\n\n      var filter = filterChange(opts);\n      if (!opts.view && !opts.filter) {\n        // we can just limit in the query\n        sql += ' LIMIT ' + limit;\n      }\n\n      var lastSeq = opts.since || 0;\n      db.readTransaction(function (tx) {\n        tx.executeSql(sql, sqlArgs, function (tx, result) {\n          function reportChange(change) {\n            return function () {\n              opts.onChange(change);\n            };\n          }\n          for (var i = 0, l = result.rows.length; i < l; i++) {\n            var item = result.rows.item(i);\n            var metadata = safeJsonParse(item.metadata);\n            lastSeq = item.maxSeq;\n\n            var doc = unstringifyDoc(item.winningDoc, metadata.id,\n              item.winningRev);\n            var change = opts.processChange(doc, metadata, opts);\n            change.seq = item.maxSeq;\n\n            var filtered = filter(change);\n            if (typeof filtered === 'object') {\n              return opts.complete(filtered);\n            }\n\n            if (filtered) {\n              numResults++;\n              if (returnDocs) {\n                results.push(change);\n              }\n              // process the attachment immediately\n              // for the benefit of live listeners\n              if (opts.attachments && opts.include_docs) {\n                fetchAttachmentsIfNecessary$1(doc, opts, api, tx,\n                  reportChange(change));\n              } else {\n                reportChange(change)();\n              }\n            }\n            if (numResults === limit) {\n              break;\n            }\n          }\n        });\n      }, websqlError(opts.complete), function () {\n        if (!opts.continuous) {\n          opts.complete(null, {\n            results: results,\n            last_seq: lastSeq\n          });\n        }\n      });\n    }\n\n    fetchChanges();\n  };\n\n  api._close = function (callback) {\n    //WebSQL databases do not need to be closed\n    callback();\n  };\n\n  api._getAttachment = function (docId, attachId, attachment, opts, callback) {\n    var res;\n    var tx = opts.ctx;\n    var digest = attachment.digest;\n    var type = attachment.content_type;\n    var sql = 'SELECT escaped, ' +\n      'CASE WHEN escaped = 1 THEN body ELSE HEX(body) END AS body FROM ' +\n      ATTACH_STORE$1 + ' WHERE digest=?';\n    tx.executeSql(sql, [digest], function (tx, result) {\n      // websql has a bug where \\u0000 causes early truncation in strings\n      // and blobs. to work around this, we used to use the hex() function,\n      // but that's not performant. after migration 6, we remove \\u0000\n      // and add it back in afterwards\n      var item = result.rows.item(0);\n      var data = item.escaped ? unescapeBlob(item.body) :\n        parseHexString(item.body, encoding);\n      if (opts.binary) {\n        res = binStringToBluffer(data, type);\n      } else {\n        res = thisBtoa(data);\n      }\n      callback(null, res);\n    });\n  };\n\n  api._getRevisionTree = function (docId, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        if (!result.rows.length) {\n          callback(createError(MISSING_DOC));\n        } else {\n          var data = safeJsonParse(result.rows.item(0).metadata);\n          callback(null, data.rev_tree);\n        }\n      });\n    });\n  };\n\n  api._doCompaction = function (docId, revs, callback) {\n    if (!revs.length) {\n      return callback();\n    }\n    db.transaction(function (tx) {\n\n      // update doc store\n      var sql = 'SELECT json AS metadata FROM ' + DOC_STORE$1 + ' WHERE id = ?';\n      tx.executeSql(sql, [docId], function (tx, result) {\n        var metadata = safeJsonParse(result.rows.item(0).metadata);\n        traverseRevTree(metadata.rev_tree, function (isLeaf, pos,\n                                                           revHash, ctx, opts) {\n          var rev$$1 = pos + '-' + revHash;\n          if (revs.indexOf(rev$$1) !== -1) {\n            opts.status = 'missing';\n          }\n        });\n\n        var sql = 'UPDATE ' + DOC_STORE$1 + ' SET json = ? WHERE id = ?';\n        tx.executeSql(sql, [safeJsonStringify(metadata), docId]);\n      });\n\n      compactRevs$1(revs, docId, tx);\n    }, websqlError(callback), function () {\n      callback();\n    });\n  };\n\n  api._getLocal = function (id, callback) {\n    db.readTransaction(function (tx) {\n      var sql = 'SELECT json, rev FROM ' + LOCAL_STORE$1 + ' WHERE id=?';\n      tx.executeSql(sql, [id], function (tx, res) {\n        if (res.rows.length) {\n          var item = res.rows.item(0);\n          var doc = unstringifyDoc(item.json, id, item.rev);\n          callback(null, doc);\n        } else {\n          callback(createError(MISSING_DOC));\n        }\n      });\n    });\n  };\n\n  api._putLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    delete doc._revisions; // ignore this, trust the rev\n    var oldRev = doc._rev;\n    var id = doc._id;\n    var newRev;\n    if (!oldRev) {\n      newRev = doc._rev = '0-1';\n    } else {\n      newRev = doc._rev = '0-' + (parseInt(oldRev.split('-')[1], 10) + 1);\n    }\n    var json = stringifyDoc(doc);\n\n    var ret;\n    function putLocal(tx) {\n      var sql;\n      var values;\n      if (oldRev) {\n        sql = 'UPDATE ' + LOCAL_STORE$1 + ' SET rev=?, json=? ' +\n          'WHERE id=? AND rev=?';\n        values = [newRev, json, id, oldRev];\n      } else {\n        sql = 'INSERT INTO ' + LOCAL_STORE$1 + ' (id, rev, json) VALUES (?,?,?)';\n        values = [id, newRev, json];\n      }\n      tx.executeSql(sql, values, function (tx, res) {\n        if (res.rowsAffected) {\n          ret = {ok: true, id: id, rev: newRev};\n          if (opts.ctx) { // return immediately\n            callback(null, ret);\n          }\n        } else {\n          callback(createError(REV_CONFLICT));\n        }\n      }, function () {\n        callback(createError(REV_CONFLICT));\n        return false; // ack that we handled the error\n      });\n    }\n\n    if (opts.ctx) {\n      putLocal(opts.ctx);\n    } else {\n      db.transaction(putLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._removeLocal = function (doc, opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var ret;\n\n    function removeLocal(tx) {\n      var sql = 'DELETE FROM ' + LOCAL_STORE$1 + ' WHERE id=? AND rev=?';\n      var params = [doc._id, doc._rev];\n      tx.executeSql(sql, params, function (tx, res) {\n        if (!res.rowsAffected) {\n          return callback(createError(MISSING_DOC));\n        }\n        ret = {ok: true, id: doc._id, rev: '0-0'};\n        if (opts.ctx) { // return immediately\n          callback(null, ret);\n        }\n      });\n    }\n\n    if (opts.ctx) {\n      removeLocal(opts.ctx);\n    } else {\n      db.transaction(removeLocal, websqlError(callback), function () {\n        if (ret) {\n          callback(null, ret);\n        }\n      });\n    }\n  };\n\n  api._destroy = function (opts, callback) {\n    websqlChanges.removeAllListeners(api._name);\n    db.transaction(function (tx) {\n      var stores = [DOC_STORE$1, BY_SEQ_STORE$1, ATTACH_STORE$1, META_STORE$1,\n        LOCAL_STORE$1, ATTACH_AND_SEQ_STORE$1];\n      stores.forEach(function (store) {\n        tx.executeSql('DROP TABLE IF EXISTS ' + store, []);\n      });\n    }, websqlError(callback), function () {\n      if (hasLocalStorage()) {\n        delete window.localStorage['_pouch__websqldb_' + api._name];\n        delete window.localStorage[api._name];\n      }\n      callback(null, {'ok': true});\n    });\n  };\n}\n\nfunction canOpenTestDB() {\n  try {\n    openDatabase('_pouch_validate_websql', 1, '', 1);\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\n// WKWebView had a bug where WebSQL would throw a DOM Exception 18\n// (see https://bugs.webkit.org/show_bug.cgi?id=137760 and\n// https://github.com/pouchdb/pouchdb/issues/5079)\n// This has been fixed in latest WebKit, so we try to detect it here.\nfunction isValidWebSQL() {\n  // WKWebView UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 9_2 like Mac OS X)\n  //   AppleWebKit/601.1.46 (KHTML, like Gecko) Mobile/13C75\n  // Chrome for iOS UA:\n  //   Mozilla/5.0 (iPhone; U; CPU iPhone OS 5_1_1 like Mac OS X; en)\n  //   AppleWebKit/534.46.0 (KHTML, like Gecko) CriOS/19.0.1084.60\n  //   Mobile/9B206 Safari/7534.48.3\n  // Firefox for iOS UA:\n  //   Mozilla/5.0 (iPhone; CPU iPhone OS 8_3 like Mac OS X) AppleWebKit/600.1.4\n  //   (KHTML, like Gecko) FxiOS/1.0 Mobile/12F69 Safari/600.1.4\n\n  // indexedDB is null on some UIWebViews and undefined in others\n  // see: https://bugs.webkit.org/show_bug.cgi?id=137034\n  if (typeof indexedDB === 'undefined' || indexedDB === null ||\n      !/iP(hone|od|ad)/.test(navigator.userAgent)) {\n    // definitely not WKWebView, avoid creating an unnecessary database\n    return true;\n  }\n  // Cache the result in LocalStorage. Reason we do this is because if we\n  // call openDatabase() too many times, Safari craps out in SauceLabs and\n  // starts throwing DOM Exception 14s.\n  var hasLS = hasLocalStorage();\n  // Include user agent in the hash, so that if Safari is upgraded, we don't\n  // continually think it's broken.\n  var localStorageKey = '_pouch__websqldb_valid_' + navigator.userAgent;\n  if (hasLS && localStorage[localStorageKey]) {\n    return localStorage[localStorageKey] === '1';\n  }\n  var openedTestDB = canOpenTestDB();\n  if (hasLS) {\n    localStorage[localStorageKey] = openedTestDB ? '1' : '0';\n  }\n  return openedTestDB;\n}\n\nfunction valid() {\n  if (typeof openDatabase !== 'function') {\n    return false;\n  }\n  return isValidWebSQL();\n}\n\nfunction openDB(name, version, description, size) {\n  // Traditional WebSQL API\n  return openDatabase(name, version, description, size);\n}\n\nfunction WebSQLPouch(opts, callback) {\n  var _opts = $inject_Object_assign({\n    websql: openDB\n  }, opts);\n\n  WebSqlPouch$1.call(this, _opts, callback);\n}\n\nWebSQLPouch.valid = valid;\n\nWebSQLPouch.use_prefix = true;\n\nfunction WebSqlPouch (PouchDB) {\n  PouchDB.adapter('websql', WebSQLPouch, true);\n}\n\n/* global fetch */\n/* global Headers */\nfunction wrappedFetch() {\n  var wrappedPromise = {};\n\n  var promise = new PouchPromise(function (resolve, reject) {\n    wrappedPromise.resolve = resolve;\n    wrappedPromise.reject = reject;\n  });\n\n  var args = new Array(arguments.length);\n\n  for (var i = 0; i < args.length; i++) {\n    args[i] = arguments[i];\n  }\n\n  wrappedPromise.promise = promise;\n\n  PouchPromise.resolve().then(function () {\n    return fetch.apply(null, args);\n  }).then(function (response) {\n    wrappedPromise.resolve(response);\n  }).catch(function (error) {\n    wrappedPromise.reject(error);\n  });\n\n  return wrappedPromise;\n}\n\nfunction fetchRequest(options, callback) {\n  var wrappedPromise, timer, response;\n\n  var headers = new Headers();\n\n  var fetchOptions = {\n    method: options.method,\n    credentials: 'include',\n    headers: headers\n  };\n\n  if (options.json) {\n    headers.set('Accept', 'application/json');\n    headers.set('Content-Type', options.headers['Content-Type'] ||\n      'application/json');\n  }\n\n  if (options.body &&\n      options.processData &&\n      typeof options.body !== 'string') {\n    fetchOptions.body = JSON.stringify(options.body);\n  } else if ('body' in options) {\n    fetchOptions.body = options.body;\n  } else {\n    fetchOptions.body = null;\n  }\n\n  Object.keys(options.headers).forEach(function (key) {\n    if (options.headers.hasOwnProperty(key)) {\n      headers.set(key, options.headers[key]);\n    }\n  });\n\n  wrappedPromise = wrappedFetch(options.url, fetchOptions);\n\n  if (options.timeout > 0) {\n    timer = setTimeout(function () {\n      wrappedPromise.reject(new Error('Load timeout for resource: ' +\n        options.url));\n    }, options.timeout);\n  }\n\n  wrappedPromise.promise.then(function (fetchResponse) {\n    response = {\n      statusCode: fetchResponse.status\n    };\n\n    if (options.timeout > 0) {\n      clearTimeout(timer);\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      return options.binary ? fetchResponse.blob() : fetchResponse.text();\n    }\n\n    return fetchResponse.json();\n  }).then(function (result) {\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      callback(null, response, result);\n    } else {\n      result.status = response.statusCode;\n      callback(result);\n    }\n  }).catch(function (error) {\n    if (!error) {\n      // this happens when the listener is canceled\n      error = new Error('canceled');\n    }\n    callback(error);\n  });\n\n  return {abort: wrappedPromise.reject};\n}\n\nfunction xhRequest(options, callback) {\n\n  var xhr, timer;\n  var timedout = false;\n\n  var abortReq = function () {\n    xhr.abort();\n    cleanUp();\n  };\n\n  var timeoutReq = function () {\n    timedout = true;\n    xhr.abort();\n    cleanUp();\n  };\n\n  var ret = {abort: abortReq};\n\n  var cleanUp = function () {\n    clearTimeout(timer);\n    ret.abort = function () {};\n    if (xhr) {\n      xhr.onprogress = undefined;\n      if (xhr.upload) {\n        xhr.upload.onprogress = undefined;\n      }\n      xhr.onreadystatechange = undefined;\n      xhr = undefined;\n    }\n  };\n\n  if (options.xhr) {\n    xhr = new options.xhr();\n  } else {\n    xhr = new XMLHttpRequest();\n  }\n\n  try {\n    xhr.open(options.method, options.url);\n  } catch (exception) {\n    return callback(new Error(exception.name || 'Url is invalid'));\n  }\n\n  xhr.withCredentials = ('withCredentials' in options) ?\n    options.withCredentials : true;\n\n  if (options.method === 'GET') {\n    delete options.headers['Content-Type'];\n  } else if (options.json) {\n    options.headers.Accept = 'application/json';\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n    if (options.body &&\n        options.processData &&\n        typeof options.body !== \"string\") {\n      options.body = JSON.stringify(options.body);\n    }\n  }\n\n  if (options.binary) {\n    xhr.responseType = 'arraybuffer';\n  }\n\n  if (!('body' in options)) {\n    options.body = null;\n  }\n\n  for (var key in options.headers) {\n    if (options.headers.hasOwnProperty(key)) {\n      xhr.setRequestHeader(key, options.headers[key]);\n    }\n  }\n\n  if (options.timeout > 0) {\n    timer = setTimeout(timeoutReq, options.timeout);\n    xhr.onprogress = function () {\n      clearTimeout(timer);\n      if (xhr.readyState !== 4) {\n        timer = setTimeout(timeoutReq, options.timeout);\n      }\n    };\n    if (typeof xhr.upload !== 'undefined') { // does not exist in ie9\n      xhr.upload.onprogress = xhr.onprogress;\n    }\n  }\n\n  xhr.onreadystatechange = function () {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    var response = {\n      statusCode: xhr.status\n    };\n\n    if (xhr.status >= 200 && xhr.status < 300) {\n      var data;\n      if (options.binary) {\n        data = createBlob([xhr.response || ''], {\n          type: xhr.getResponseHeader('Content-Type')\n        });\n      } else {\n        data = xhr.responseText;\n      }\n      callback(null, response, data);\n    } else {\n      var err = {};\n      if (timedout) {\n        err = new Error('ETIMEDOUT');\n        err.code = 'ETIMEDOUT';\n      } else if (typeof xhr.response === 'string') {\n        try {\n          err = JSON.parse(xhr.response);\n        } catch (e) {}\n      }\n      err.status = xhr.status;\n      callback(err);\n    }\n    cleanUp();\n  };\n\n  if (options.body && (options.body instanceof Blob)) {\n    readAsArrayBuffer(options.body, function (arrayBuffer) {\n      xhr.send(arrayBuffer);\n    });\n  } else {\n    xhr.send(options.body);\n  }\n\n  return ret;\n}\n\nfunction testXhr() {\n  try {\n    new XMLHttpRequest();\n    return true;\n  } catch (err) {\n    return false;\n  }\n}\n\nvar hasXhr = testXhr();\n\nfunction ajax$1(options, callback) {\n  if (!false && (hasXhr || options.xhr)) {\n    return xhRequest(options, callback);\n  } else {\n    return fetchRequest(options, callback);\n  }\n}\n\n// the blob already has a type; do nothing\n\nfunction defaultBody() {\n  return '';\n}\n\nfunction ajaxCore$1(options, callback) {\n\n  options = clone(options);\n\n  var defaultOptions = {\n    method : \"GET\",\n    headers: {},\n    json: true,\n    processData: true,\n    timeout: 10000,\n    cache: false\n  };\n\n  options = $inject_Object_assign(defaultOptions, options);\n\n  function onSuccess(obj, resp, cb) {\n    if (!options.binary && options.json && typeof obj === 'string') {\n      /* istanbul ignore next */\n      try {\n        obj = JSON.parse(obj);\n      } catch (e) {\n        // Probably a malformed JSON from server\n        return cb(e);\n      }\n    }\n    if (Array.isArray(obj)) {\n      obj = obj.map(function (v) {\n        if (v.error || v.missing) {\n          return generateErrorFromResponse(v);\n        } else {\n          return v;\n        }\n      });\n    }\n    if (options.binary) {\n      \n    }\n    cb(null, obj, resp);\n  }\n\n  if (options.json) {\n    if (!options.binary) {\n      options.headers.Accept = 'application/json';\n    }\n    options.headers['Content-Type'] = options.headers['Content-Type'] ||\n      'application/json';\n  }\n\n  if (options.binary) {\n    options.encoding = null;\n    options.json = false;\n  }\n\n  if (!options.processData) {\n    options.json = false;\n  }\n\n  return ajax$1(options, function (err, response, body) {\n\n    if (err) {\n      return callback(generateErrorFromResponse(err));\n    }\n\n    var error;\n    var content_type = response.headers && response.headers['content-type'];\n    var data = body || defaultBody();\n\n    // CouchDB doesn't always return the right content-type for JSON data, so\n    // we check for ^{ and }$ (ignoring leading/trailing whitespace)\n    if (!options.binary && (options.json || !options.processData) &&\n        typeof data !== 'object' &&\n        (/json/.test(content_type) ||\n         (/^[\\s]*\\{/.test(data) && /\\}[\\s]*$/.test(data)))) {\n      try {\n        data = JSON.parse(data.toString());\n      } catch (e) {}\n    }\n\n    if (response.statusCode >= 200 && response.statusCode < 300) {\n      onSuccess(data, response, callback);\n    } else {\n      error = generateErrorFromResponse(data);\n      error.status = response.statusCode;\n      callback(error);\n    }\n  });\n}\n\nfunction ajax(opts, callback) {\n\n  // cache-buster, specifically designed to work around IE's aggressive caching\n  // see http://www.dashbay.com/2011/05/internet-explorer-caches-ajax/\n  // Also Safari caches POSTs, so we need to cache-bust those too.\n  var ua = (navigator && navigator.userAgent) ?\n    navigator.userAgent.toLowerCase() : '';\n\n  var isSafari = ua.indexOf('safari') !== -1 && ua.indexOf('chrome') === -1;\n  var isIE = ua.indexOf('msie') !== -1;\n  var isTrident = ua.indexOf('trident') !== -1;\n  var isEdge = ua.indexOf('edge') !== -1;\n\n  // it appears the new version of safari also caches GETs,\n  // see https://github.com/pouchdb/pouchdb/issues/5010\n  var shouldCacheBust = (isSafari ||\n    ((isIE || isTrident || isEdge) && opts.method === 'GET'));\n\n  var cache = 'cache' in opts ? opts.cache : true;\n\n  var isBlobUrl = /^blob:/.test(opts.url); // don't append nonces for blob URLs\n\n  if (!isBlobUrl && (shouldCacheBust || !cache)) {\n    var hasArgs = opts.url.indexOf('?') !== -1;\n    opts.url += (hasArgs ? '&' : '?') + '_nonce=' + Date.now();\n  }\n\n  return ajaxCore$1(opts, callback);\n}\n\n// dead simple promise pool, inspired by https://github.com/timdp/es6-promise-pool\n// but much smaller in code size. limits the number of concurrent promises that are executed\n\n\nfunction pool(promiseFactories, limit) {\n  return new PouchPromise(function (resolve, reject) {\n    var running = 0;\n    var current = 0;\n    var done = 0;\n    var len = promiseFactories.length;\n    var err;\n\n    function runNext() {\n      running++;\n      promiseFactories[current++]().then(onSuccess, onError);\n    }\n\n    function doNext() {\n      if (++done === len) {\n        /* istanbul ignore if */\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      } else {\n        runNextBatch();\n      }\n    }\n\n    function onSuccess() {\n      running--;\n      doNext();\n    }\n\n    /* istanbul ignore next */\n    function onError(thisErr) {\n      running--;\n      err = err || thisErr;\n      doNext();\n    }\n\n    function runNextBatch() {\n      while (running < limit && current < len) {\n        runNext();\n      }\n    }\n\n    runNextBatch();\n  });\n}\n\nvar CHANGES_BATCH_SIZE = 25;\nvar MAX_SIMULTANEOUS_REVS = 50;\nvar CHANGES_TIMEOUT_BUFFER = 5000;\nvar DEFAULT_HEARTBEAT = 10000;\n\nvar supportsBulkGetMap = {};\n\nfunction readAttachmentsAsBlobOrBuffer(row) {\n  var doc = row.doc || row.ok;\n  var atts = doc._attachments;\n  if (!atts) {\n    return;\n  }\n  Object.keys(atts).forEach(function (filename) {\n    var att = atts[filename];\n    att.data = b64ToBluffer(att.data, att.content_type);\n  });\n}\n\nfunction encodeDocId(id) {\n  if (/^_design/.test(id)) {\n    return '_design/' + encodeURIComponent(id.slice(8));\n  }\n  if (/^_local/.test(id)) {\n    return '_local/' + encodeURIComponent(id.slice(7));\n  }\n  return encodeURIComponent(id);\n}\n\nfunction preprocessAttachments$2(doc) {\n  if (!doc._attachments || !Object.keys(doc._attachments)) {\n    return PouchPromise.resolve();\n  }\n\n  return PouchPromise.all(Object.keys(doc._attachments).map(function (key) {\n    var attachment = doc._attachments[key];\n    if (attachment.data && typeof attachment.data !== 'string') {\n      return new PouchPromise(function (resolve) {\n        blobToBase64(attachment.data, resolve);\n      }).then(function (b64) {\n        attachment.data = b64;\n      });\n    }\n  }));\n}\n\nfunction hasUrlPrefix(opts) {\n  if (!opts.prefix) {\n    return false;\n  }\n\n  var protocol = parseUri(opts.prefix).protocol;\n\n  return protocol === 'http' || protocol === 'https';\n}\n\n// Get all the information you possibly can about the URI given by name and\n// return it as a suitable object.\nfunction getHost(name, opts) {\n\n  // encode db name if opts.prefix is a url (#5574)\n  if (hasUrlPrefix(opts)) {\n    var dbName = opts.name.substr(opts.prefix.length);\n    name = opts.prefix + encodeURIComponent(dbName);\n  }\n\n  // Prase the URI into all its little bits\n  var uri = parseUri(name);\n\n  // Store the user and password as a separate auth object\n  if (uri.user || uri.password) {\n    uri.auth = {username: uri.user, password: uri.password};\n  }\n\n  // Split the path part of the URI into parts using '/' as the delimiter\n  // after removing any leading '/' and any trailing '/'\n  var parts = uri.path.replace(/(^\\/|\\/$)/g, '').split('/');\n\n  // Store the first part as the database name and remove it from the parts\n  // array\n  uri.db = parts.pop();\n  // Prevent double encoding of URI component\n  if (uri.db.indexOf('%') === -1) {\n    uri.db = encodeURIComponent(uri.db);\n  }\n\n  // Restore the path by joining all the remaining parts (all the parts\n  // except for the database name) with '/'s\n  uri.path = parts.join('/');\n\n  return uri;\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genDBUrl(opts, path) {\n  return genUrl(opts, opts.db + '/' + path);\n}\n\n// Generate a URL with the host data given by opts and the given path\nfunction genUrl(opts, path) {\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  var pathDel = !opts.path ? '' : '/';\n\n  // If the host already has a path, then we need to have a path delimiter\n  // Otherwise, the path delimiter is the empty string\n  return opts.protocol + '://' + opts.host +\n         (opts.port ? (':' + opts.port) : '') +\n         '/' + opts.path + pathDel + path;\n}\n\nfunction paramsToStr(params) {\n  return '?' + Object.keys(params).map(function (k) {\n    return k + '=' + encodeURIComponent(params[k]);\n  }).join('&');\n}\n\n// Implements the PouchDB API for dealing with CouchDB instances over HTTP\nfunction HttpPouch(opts, callback) {\n\n  // The functions that will be publicly available for HttpPouch\n  var api = this;\n\n  var host = getHost(opts.name, opts);\n  var dbUrl = genDBUrl(host, '');\n\n  opts = clone(opts);\n  var ajaxOpts = opts.ajax || {};\n\n  if (opts.auth || host.auth) {\n    var nAuth = opts.auth || host.auth;\n    var str = nAuth.username + ':' + nAuth.password;\n    var token = thisBtoa(unescape(encodeURIComponent(str)));\n    ajaxOpts.headers = ajaxOpts.headers || {};\n    ajaxOpts.headers.Authorization = 'Basic ' + token;\n  }\n\n  // Not strictly necessary, but we do this because numerous tests\n  // rely on swapping ajax in and out.\n  api._ajax = ajax;\n\n  function ajax$$1(userOpts, options, callback) {\n    var reqAjax = (userOpts || {}).ajax || {};\n    var reqOpts = $inject_Object_assign(clone(ajaxOpts), reqAjax, options);\n    var defaultHeaders = clone(ajaxOpts.headers || {});\n    reqOpts.headers = $inject_Object_assign(defaultHeaders, reqAjax.headers,\n      options.headers || {});\n    /* istanbul ignore if */\n    if (api.constructor.listeners('debug').length) {\n      api.constructor.emit('debug', ['http', reqOpts.method, reqOpts.url]);\n    }\n    return api._ajax(reqOpts, callback);\n  }\n\n  function ajaxPromise(userOpts, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      ajax$$1(userOpts, opts, function (err, res) {\n        /* istanbul ignore if */\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function adapterFun$$1(name, fun) {\n    return adapterFun(name, getArguments(function (args) {\n      setup().then(function () {\n        return fun.apply(this, args);\n      }).catch(function (e) {\n        var callback = args.pop();\n        callback(e);\n      });\n    }));\n  }\n\n  var setupPromise;\n\n  function setup() {\n    // TODO: Remove `skipSetup` in favor of `skip_setup` in a future release\n    if (opts.skipSetup || opts.skip_setup) {\n      return PouchPromise.resolve();\n    }\n\n    // If there is a setup in process or previous successful setup\n    // done then we will use that\n    // If previous setups have been rejected we will try again\n    if (setupPromise) {\n      return setupPromise;\n    }\n\n    var checkExists = {method: 'GET', url: dbUrl};\n    setupPromise = ajaxPromise({}, checkExists).catch(function (err) {\n      if (err && err.status && err.status === 404) {\n        // Doesnt exist, create it\n        explainError(404, 'PouchDB is just detecting if the remote exists.');\n        return ajaxPromise({}, {method: 'PUT', url: dbUrl});\n      } else {\n        return PouchPromise.reject(err);\n      }\n    }).catch(function (err) {\n      // If we try to create a database that already exists, skipped in\n      // istanbul since its catching a race condition.\n      /* istanbul ignore if */\n      if (err && err.status && err.status === 412) {\n        return true;\n      }\n      return PouchPromise.reject(err);\n    });\n\n    setupPromise.catch(function () {\n      setupPromise = null;\n    });\n\n    return setupPromise;\n  }\n\n  nextTick(function () {\n    callback(null, api);\n  });\n\n  api._remote = true;\n  /* istanbul ignore next */\n  api.type = function () {\n    return 'http';\n  };\n\n  api.id = adapterFun$$1('id', function (callback) {\n    ajax$$1({}, {method: 'GET', url: genUrl(host, '')}, function (err, result) {\n      var uuid$$1 = (result && result.uuid) ?\n        (result.uuid + host.db) : genDBUrl(host, '');\n      callback(null, uuid$$1);\n    });\n  });\n\n  api.request = adapterFun$$1('request', function (options, callback) {\n    options.url = genDBUrl(host, options.url);\n    ajax$$1({}, options, callback);\n  });\n\n  // Sends a POST request to the host calling the couchdb _compact function\n  //    version: The version of CouchDB it is running\n  api.compact = adapterFun$$1('compact', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n    ajax$$1(opts, {\n      url: genDBUrl(host, '_compact'),\n      method: 'POST'\n    }, function () {\n      function ping() {\n        api.info(function (err, res) {\n          // CouchDB may send a \"compact_running:true\" if it's\n          // already compacting. PouchDB Server doesn't.\n          /* istanbul ignore else */\n          if (res && !res.compact_running) {\n            callback(null, {ok: true});\n          } else {\n            setTimeout(ping, opts.interval || 200);\n          }\n        });\n      }\n      // Ping the http if it's finished compaction\n      ping();\n    });\n  });\n\n  api.bulkGet = adapterFun('bulkGet', function (opts, callback) {\n    var self = this;\n\n    function doBulkGet(cb) {\n      var params = {};\n      if (opts.revs) {\n        params.revs = true;\n      }\n      if (opts.attachments) {\n        /* istanbul ignore next */\n        params.attachments = true;\n      }\n      if (opts.latest) {\n        params.latest = true;\n      }\n      ajax$$1(opts, {\n        url: genDBUrl(host, '_bulk_get' + paramsToStr(params)),\n        method: 'POST',\n        body: { docs: opts.docs}\n      }, function (err, result) {\n        if (!err && opts.attachments && opts.binary) {\n          result.results.forEach(function (res) {\n            res.docs.forEach(readAttachmentsAsBlobOrBuffer);\n          });\n        }\n        cb(err, result);\n      });\n    }\n\n    /* istanbul ignore next */\n    function doBulkGetShim() {\n      // avoid \"url too long error\" by splitting up into multiple requests\n      var batchSize = MAX_SIMULTANEOUS_REVS;\n      var numBatches = Math.ceil(opts.docs.length / batchSize);\n      var numDone = 0;\n      var results = new Array(numBatches);\n\n      function onResult(batchNum) {\n        return function (err, res) {\n          // err is impossible because shim returns a list of errs in that case\n          results[batchNum] = res.results;\n          if (++numDone === numBatches) {\n            callback(null, {results: flatten(results)});\n          }\n        };\n      }\n\n      for (var i = 0; i < numBatches; i++) {\n        var subOpts = pick(opts, ['revs', 'attachments', 'binary', 'latest']);\n        subOpts.ajax = ajaxOpts;\n        subOpts.docs = opts.docs.slice(i * batchSize,\n          Math.min(opts.docs.length, (i + 1) * batchSize));\n        bulkGet(self, subOpts, onResult(i));\n      }\n    }\n\n    // mark the whole database as either supporting or not supporting _bulk_get\n    var dbUrl = genUrl(host, '');\n    var supportsBulkGet = supportsBulkGetMap[dbUrl];\n\n    /* istanbul ignore next */\n    if (typeof supportsBulkGet !== 'boolean') {\n      // check if this database supports _bulk_get\n      doBulkGet(function (err, res) {\n        if (err) {\n          supportsBulkGetMap[dbUrl] = false;\n          explainError(\n            err.status,\n            'PouchDB is just detecting if the remote ' +\n            'supports the _bulk_get API.'\n          );\n          doBulkGetShim();\n        } else {\n          supportsBulkGetMap[dbUrl] = true;\n          callback(null, res);\n        }\n      });\n    } else if (supportsBulkGet) {\n      doBulkGet(callback);\n    } else {\n      doBulkGetShim();\n    }\n  });\n\n  // Calls GET on the host, which gets back a JSON string containing\n  //    couchdb: A welcome string\n  //    version: The version of CouchDB it is running\n  api._info = function (callback) {\n    setup().then(function () {\n      ajax$$1({}, {\n        method: 'GET',\n        url: genDBUrl(host, '')\n      }, function (err, res) {\n        /* istanbul ignore next */\n        if (err) {\n        return callback(err);\n        }\n        res.host = genDBUrl(host, '');\n        callback(null, res);\n      });\n    }).catch(callback);\n  };\n\n  // Get the document with the given id from the database given by host.\n  // The id could be solely the _id in the database, or it may be a\n  // _design/ID or _local/ID path\n  api.get = adapterFun$$1('get', function (id, opts, callback) {\n    // If no options were given, set the callback to the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n\n    if (opts.revs) {\n      params.revs = true;\n    }\n\n    if (opts.revs_info) {\n      params.revs_info = true;\n    }\n\n    if (opts.latest) {\n      params.latest = true;\n    }\n\n    if (opts.open_revs) {\n      if (opts.open_revs !== \"all\") {\n        opts.open_revs = JSON.stringify(opts.open_revs);\n      }\n      params.open_revs = opts.open_revs;\n    }\n\n    if (opts.rev) {\n      params.rev = opts.rev;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = opts.conflicts;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = opts.update_seq;\n    }\n\n    id = encodeDocId(id);\n\n    // Set the options for the ajax call\n    var options = {\n      method: 'GET',\n      url: genDBUrl(host, id + paramsToStr(params))\n    };\n\n    function fetchAttachments(doc) {\n      var atts = doc._attachments;\n      var filenames = atts && Object.keys(atts);\n      if (!atts || !filenames.length) {\n        return;\n      }\n      // we fetch these manually in separate XHRs, because\n      // Sync Gateway would normally send it back as multipart/mixed,\n      // which we cannot parse. Also, this is more efficient than\n      // receiving attachments as base64-encoded strings.\n      function fetch(filename) {\n        var att = atts[filename];\n        var path = encodeDocId(doc._id) + '/' + encodeAttachmentId(filename) +\n          '?rev=' + doc._rev;\n        return ajaxPromise(opts, {\n          method: 'GET',\n          url: genDBUrl(host, path),\n          binary: true\n        }).then(function (blob) {\n          if (opts.binary) {\n            return blob;\n          }\n          return new PouchPromise(function (resolve) {\n            blobToBase64(blob, resolve);\n          });\n        }).then(function (data) {\n          delete att.stub;\n          delete att.length;\n          att.data = data;\n        });\n      }\n\n      var promiseFactories = filenames.map(function (filename) {\n        return function () {\n          return fetch(filename);\n        };\n      });\n\n      // This limits the number of parallel xhr requests to 5 any time\n      // to avoid issues with maximum browser request limits\n      return pool(promiseFactories, 5);\n    }\n\n    function fetchAllAttachments(docOrDocs) {\n      if (Array.isArray(docOrDocs)) {\n        return PouchPromise.all(docOrDocs.map(function (doc) {\n          if (doc.ok) {\n            return fetchAttachments(doc.ok);\n          }\n        }));\n      }\n      return fetchAttachments(docOrDocs);\n    }\n\n    ajaxPromise(opts, options).then(function (res) {\n      return PouchPromise.resolve().then(function () {\n        if (opts.attachments) {\n          return fetchAllAttachments(res);\n        }\n      }).then(function () {\n        callback(null, res);\n      });\n    }).catch(function (e) {\n      e.docId = id;\n      callback(e);\n    });\n  });\n\n  // Delete the document given by doc from the database given by host.\n  api.remove = adapterFun$$1('remove',\n      function (docOrId, optsOrRev, opts, callback) {\n    var doc;\n    if (typeof optsOrRev === 'string') {\n      // id, rev, opts, callback style\n      doc = {\n        _id: docOrId,\n        _rev: optsOrRev\n      };\n      if (typeof opts === 'function') {\n        callback = opts;\n        opts = {};\n      }\n    } else {\n      // doc, opts, callback style\n      doc = docOrId;\n      if (typeof optsOrRev === 'function') {\n        callback = optsOrRev;\n        opts = {};\n      } else {\n        callback = opts;\n        opts = optsOrRev;\n      }\n    }\n\n    var rev$$1 = (doc._rev || opts.rev);\n\n    // Delete the document\n    ajax$$1(opts, {\n      method: 'DELETE',\n      url: genDBUrl(host, encodeDocId(doc._id)) + '?rev=' + rev$$1\n    }, callback);\n  });\n\n  function encodeAttachmentId(attachmentId) {\n    return attachmentId.split(\"/\").map(encodeURIComponent).join(\"/\");\n  }\n\n  // Get the attachment\n  api.getAttachment =\n    adapterFun$$1('getAttachment', function (docId, attachmentId, opts,\n                                                callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    var params = opts.rev ? ('?rev=' + opts.rev) : '';\n    var url = genDBUrl(host, encodeDocId(docId)) + '/' +\n      encodeAttachmentId(attachmentId) + params;\n    ajax$$1(opts, {\n      method: 'GET',\n      url: url,\n      binary: true\n    }, callback);\n  });\n\n  // Remove the attachment given by the id and rev\n  api.removeAttachment =\n    adapterFun$$1('removeAttachment', function (docId, attachmentId, rev$$1,\n                                                   callback) {\n\n    var url = genDBUrl(host, encodeDocId(docId) + '/' +\n      encodeAttachmentId(attachmentId)) + '?rev=' + rev$$1;\n\n    ajax$$1({}, {\n      method: 'DELETE',\n      url: url\n    }, callback);\n  });\n\n  // Add the attachment given by blob and its contentType property\n  // to the document with the given id, the revision given by rev, and\n  // add it to the database given by host.\n  api.putAttachment =\n    adapterFun$$1('putAttachment', function (docId, attachmentId, rev$$1, blob,\n                                                type, callback) {\n    if (typeof type === 'function') {\n      callback = type;\n      type = blob;\n      blob = rev$$1;\n      rev$$1 = null;\n    }\n    var id = encodeDocId(docId) + '/' + encodeAttachmentId(attachmentId);\n    var url = genDBUrl(host, id);\n    if (rev$$1) {\n      url += '?rev=' + rev$$1;\n    }\n\n    if (typeof blob === 'string') {\n      // input is assumed to be a base64 string\n      var binary;\n      try {\n        binary = thisAtob(blob);\n      } catch (err) {\n        return callback(createError(BAD_ARG,\n                        'Attachment is not a valid base64 string'));\n      }\n      blob = binary ? binStringToBluffer(binary, type) : '';\n    }\n\n    var opts = {\n      headers: {'Content-Type': type},\n      method: 'PUT',\n      url: url,\n      processData: false,\n      body: blob,\n      timeout: ajaxOpts.timeout || 60000\n    };\n    // Add the attachment\n    ajax$$1({}, opts, callback);\n  });\n\n  // Update/create multiple documents given by req in the database\n  // given by host.\n  api._bulkDocs = function (req, opts, callback) {\n    // If new_edits=false then it prevents the database from creating\n    // new revision numbers for the documents. Instead it just uses\n    // the old ones. This is used in database replication.\n    req.new_edits = opts.new_edits;\n\n    setup().then(function () {\n      return PouchPromise.all(req.docs.map(preprocessAttachments$2));\n    }).then(function () {\n      // Update/create the documents\n      ajax$$1(opts, {\n        method: 'POST',\n        url: genDBUrl(host, '_bulk_docs'),\n        timeout: opts.timeout,\n        body: req\n      }, function (err, results) {\n        if (err) {\n          return callback(err);\n        }\n        results.forEach(function (result) {\n          result.ok = true; // smooths out cloudant not adding this\n        });\n        callback(null, results);\n      });\n    }).catch(callback);\n  };\n\n\n  // Update/create document\n  api._put = function (doc, opts, callback) {\n    setup().then(function () {\n      return preprocessAttachments$2(doc);\n    }).then(function () {\n      // Update/create the document\n      ajax$$1(opts, {\n        method: 'PUT',\n        url: genDBUrl(host, encodeDocId(doc._id)),\n        body: doc\n      }, function (err, result) {\n        if (err) {\n          err.docId = doc && doc._id;\n          return callback(err);\n        }\n        callback(null, result);\n      });\n    }).catch(callback);\n  };\n\n\n  // Get a listing of the documents in the database given\n  // by host and ordered by increasing id.\n  api.allDocs = adapterFun$$1('allDocs', function (opts, callback) {\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = clone(opts);\n\n    // List of parameters to add to the GET request\n    var params = {};\n    var body;\n    var method = 'GET';\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n\n    if (opts.include_docs) {\n      params.include_docs = true;\n    }\n\n    // added in CouchDB 1.6.0\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.key) {\n      params.key = JSON.stringify(opts.key);\n    }\n\n    if (opts.start_key) {\n      opts.startkey = opts.start_key;\n    }\n\n    if (opts.startkey) {\n      params.startkey = JSON.stringify(opts.startkey);\n    }\n\n    if (opts.end_key) {\n      opts.endkey = opts.end_key;\n    }\n\n    if (opts.endkey) {\n      params.endkey = JSON.stringify(opts.endkey);\n    }\n\n    if (typeof opts.inclusive_end !== 'undefined') {\n      params.inclusive_end = !!opts.inclusive_end;\n    }\n\n    if (typeof opts.limit !== 'undefined') {\n      params.limit = opts.limit;\n    }\n\n    if (typeof opts.skip !== 'undefined') {\n      params.skip = opts.skip;\n    }\n\n    var paramStr = paramsToStr(params);\n\n    if (typeof opts.keys !== 'undefined') {\n      method = 'POST';\n      body = {keys: opts.keys};\n    }\n\n    // Get the document listing\n    ajaxPromise(opts, {\n      method: method,\n      url: genDBUrl(host, '_all_docs' + paramStr),\n      body: body\n    }).then(function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        res.rows.forEach(readAttachmentsAsBlobOrBuffer);\n      }\n      callback(null, res);\n    }).catch(callback);\n  });\n\n  // Get a list of changes made to documents in the database given by host.\n  // TODO According to the README, there should be two other methods here,\n  // api.changes.addListener and api.changes.removeListener.\n  api._changes = function (opts) {\n\n    // We internally page the results of a changes request, this means\n    // if there is a large set of changes to be returned we can start\n    // processing them quicker instead of waiting on the entire\n    // set of changes to return and attempting to process them at once\n    var batchSize = 'batch_size' in opts ? opts.batch_size : CHANGES_BATCH_SIZE;\n\n    opts = clone(opts);\n\n    if (opts.continuous && !('heartbeat' in opts)) {\n      opts.heartbeat = DEFAULT_HEARTBEAT;\n    }\n\n    var requestTimeout = ('timeout' in opts) ? opts.timeout :\n      ('timeout' in ajaxOpts) ? ajaxOpts.timeout :\n      30 * 1000;\n\n    // ensure CHANGES_TIMEOUT_BUFFER applies\n    if ('timeout' in opts && opts.timeout &&\n      (requestTimeout - opts.timeout) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.timeout + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    if ('heartbeat' in opts && opts.heartbeat &&\n       (requestTimeout - opts.heartbeat) < CHANGES_TIMEOUT_BUFFER) {\n        requestTimeout = opts.heartbeat + CHANGES_TIMEOUT_BUFFER;\n    }\n\n    var params = {};\n    if ('timeout' in opts && opts.timeout) {\n      params.timeout = opts.timeout;\n    }\n\n    var limit = (typeof opts.limit !== 'undefined') ? opts.limit : false;\n    var returnDocs;\n    if ('return_docs' in opts) {\n      returnDocs = opts.return_docs;\n    } else if ('returnDocs' in opts) {\n      // TODO: Remove 'returnDocs' in favor of 'return_docs' in a future release\n      returnDocs = opts.returnDocs;\n    } else {\n      returnDocs = true;\n    }\n    //\n    var leftToFetch = limit;\n\n    if (opts.style) {\n      params.style = opts.style;\n    }\n\n    if (opts.include_docs || opts.filter && typeof opts.filter === 'function') {\n      params.include_docs = true;\n    }\n\n    if (opts.attachments) {\n      params.attachments = true;\n    }\n\n    if (opts.continuous) {\n      params.feed = 'longpoll';\n    }\n\n    if (opts.seq_interval) {\n      params.seq_interval = opts.seq_interval;\n    }\n\n    if (opts.conflicts) {\n      params.conflicts = true;\n    }\n\n    if (opts.descending) {\n      params.descending = true;\n    }\n    \n    /* istanbul ignore if */\n    if (opts.update_seq) {\n      params.update_seq = true;\n    }\n\n    if ('heartbeat' in opts) {\n      // If the heartbeat value is false, it disables the default heartbeat\n      if (opts.heartbeat) {\n        params.heartbeat = opts.heartbeat;\n      }\n    }\n\n    if (opts.filter && typeof opts.filter === 'string') {\n      params.filter = opts.filter;\n    }\n\n    if (opts.view && typeof opts.view === 'string') {\n      params.filter = '_view';\n      params.view = opts.view;\n    }\n\n    // If opts.query_params exists, pass it through to the changes request.\n    // These parameters may be used by the filter on the source database.\n    if (opts.query_params && typeof opts.query_params === 'object') {\n      for (var param_name in opts.query_params) {\n        /* istanbul ignore else */\n        if (opts.query_params.hasOwnProperty(param_name)) {\n          params[param_name] = opts.query_params[param_name];\n        }\n      }\n    }\n\n    var method = 'GET';\n    var body;\n\n    if (opts.doc_ids) {\n      // set this automagically for the user; it's annoying that couchdb\n      // requires both a \"filter\" and a \"doc_ids\" param.\n      params.filter = '_doc_ids';\n      method = 'POST';\n      body = {doc_ids: opts.doc_ids };\n    }\n    /* istanbul ignore next */\n    else if (opts.selector) {\n      // set this automagically for the user, similar to above\n      params.filter = '_selector';\n      method = 'POST';\n      body = {selector: opts.selector };\n    }\n\n    var xhr;\n    var lastFetchedSeq;\n\n    // Get all the changes starting wtih the one immediately after the\n    // sequence number given by since.\n    var fetch = function (since, callback) {\n      if (opts.aborted) {\n        return;\n      }\n      params.since = since;\n      // \"since\" can be any kind of json object in Coudant/CouchDB 2.x\n      /* istanbul ignore next */\n      if (typeof params.since === \"object\") {\n        params.since = JSON.stringify(params.since);\n      }\n\n      if (opts.descending) {\n        if (limit) {\n          params.limit = leftToFetch;\n        }\n      } else {\n        params.limit = (!limit || leftToFetch > batchSize) ?\n          batchSize : leftToFetch;\n      }\n\n      // Set the options for the ajax call\n      var xhrOpts = {\n        method: method,\n        url: genDBUrl(host, '_changes' + paramsToStr(params)),\n        timeout: requestTimeout,\n        body: body\n      };\n      lastFetchedSeq = since;\n\n      /* istanbul ignore if */\n      if (opts.aborted) {\n        return;\n      }\n\n      // Get the changes\n      setup().then(function () {\n        xhr = ajax$$1(opts, xhrOpts, callback);\n      }).catch(callback);\n    };\n\n    // If opts.since exists, get all the changes from the sequence\n    // number given by opts.since. Otherwise, get all the changes\n    // from the sequence number 0.\n    var results = {results: []};\n\n    var fetched = function (err, res) {\n      if (opts.aborted) {\n        return;\n      }\n      var raw_results_length = 0;\n      // If the result of the ajax call (res) contains changes (res.results)\n      if (res && res.results) {\n        raw_results_length = res.results.length;\n        results.last_seq = res.last_seq;\n        var pending = null;\n        var lastSeq = null;\n        // Attach 'pending' property if server supports it (CouchDB 2.0+)\n        /* istanbul ignore if */\n        if (typeof res.pending === 'number') {\n          pending = res.pending;\n        }\n        if (typeof results.last_seq === 'string' || typeof results.last_seq === 'number') {\n          lastSeq = results.last_seq;\n        }\n        // For each change\n        var req = {};\n        req.query = opts.query_params;\n        res.results = res.results.filter(function (c) {\n          leftToFetch--;\n          var ret = filterChange(opts)(c);\n          if (ret) {\n            if (opts.include_docs && opts.attachments && opts.binary) {\n              readAttachmentsAsBlobOrBuffer(c);\n            }\n            if (returnDocs) {\n              results.results.push(c);\n            }\n            opts.onChange(c, pending, lastSeq);\n          }\n          return ret;\n        });\n      } else if (err) {\n        // In case of an error, stop listening for changes and call\n        // opts.complete\n        opts.aborted = true;\n        opts.complete(err);\n        return;\n      }\n\n      // The changes feed may have timed out with no results\n      // if so reuse last update sequence\n      if (res && res.last_seq) {\n        lastFetchedSeq = res.last_seq;\n      }\n\n      var finished = (limit && leftToFetch <= 0) ||\n        (res && raw_results_length < batchSize) ||\n        (opts.descending);\n\n      if ((opts.continuous && !(limit && leftToFetch <= 0)) || !finished) {\n        // Queue a call to fetch again with the newest sequence number\n        nextTick(function () { fetch(lastFetchedSeq, fetched); });\n      } else {\n        // We're done, call the callback\n        opts.complete(null, results);\n      }\n    };\n\n    fetch(opts.since || 0, fetched);\n\n    // Return a method to cancel this method from processing any more\n    return {\n      cancel: function () {\n        opts.aborted = true;\n        if (xhr) {\n          xhr.abort();\n        }\n      }\n    };\n  };\n\n  // Given a set of document/revision IDs (given by req), tets the subset of\n  // those that do NOT correspond to revisions stored in the database.\n  // See http://wiki.apache.org/couchdb/HttpPostRevsDiff\n  api.revsDiff = adapterFun$$1('revsDiff', function (req, opts, callback) {\n    // If no options were given, set the callback to be the second parameter\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    // Get the missing document/revision IDs\n    ajax$$1(opts, {\n      method: 'POST',\n      url: genDBUrl(host, '_revs_diff'),\n      body: req\n    }, callback);\n  });\n\n  api._close = function (callback) {\n    callback();\n  };\n\n  api._destroy = function (options, callback) {\n    ajax$$1(options, {\n      url: genDBUrl(host, ''),\n      method: 'DELETE'\n    }, function (err, resp) {\n      if (err && err.status && err.status !== 404) {\n        return callback(err);\n      }\n      callback(null, resp);\n    });\n  };\n}\n\n// HttpPouch is a valid adapter.\nHttpPouch.valid = function () {\n  return true;\n};\n\nfunction HttpPouch$1 (PouchDB) {\n  PouchDB.adapter('http', HttpPouch, false);\n  PouchDB.adapter('https', HttpPouch, false);\n}\n\nfunction QueryParseError(message) {\n  this.status = 400;\n  this.name = 'query_parse_error';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, QueryParseError);\n  } catch (e) {}\n}\n\ninherits(QueryParseError, Error);\n\nfunction NotFoundError(message) {\n  this.status = 404;\n  this.name = 'not_found';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, NotFoundError);\n  } catch (e) {}\n}\n\ninherits(NotFoundError, Error);\n\nfunction BuiltInError(message) {\n  this.status = 500;\n  this.name = 'invalid_value';\n  this.message = message;\n  this.error = true;\n  try {\n    Error.captureStackTrace(this, BuiltInError);\n  } catch (e) {}\n}\n\ninherits(BuiltInError, Error);\n\nfunction promisedCallback(promise, callback) {\n  if (callback) {\n    promise.then(function (res) {\n      nextTick(function () {\n        callback(null, res);\n      });\n    }, function (reason) {\n      nextTick(function () {\n        callback(reason);\n      });\n    });\n  }\n  return promise;\n}\n\nfunction callbackify(fun) {\n  return getArguments(function (args) {\n    var cb = args.pop();\n    var promise = fun.apply(this, args);\n    if (typeof cb === 'function') {\n      promisedCallback(promise, cb);\n    }\n    return promise;\n  });\n}\n\n// Promise finally util similar to Q.finally\nfunction fin(promise, finalPromiseFactory) {\n  return promise.then(function (res) {\n    return finalPromiseFactory().then(function () {\n      return res;\n    });\n  }, function (reason) {\n    return finalPromiseFactory().then(function () {\n      throw reason;\n    });\n  });\n}\n\nfunction sequentialize(queue, promiseFactory) {\n  return function () {\n    var args = arguments;\n    var that = this;\n    return queue.add(function () {\n      return promiseFactory.apply(that, args);\n    });\n  };\n}\n\n// uniq an array of strings, order not guaranteed\n// similar to underscore/lodash _.uniq\nfunction uniq(arr) {\n  var theSet = new ExportedSet(arr);\n  var result = new Array(theSet.size);\n  var index = -1;\n  theSet.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nfunction mapToKeysArray(map) {\n  var result = new Array(map.size);\n  var index = -1;\n  map.forEach(function (value, key) {\n    result[++index] = key;\n  });\n  return result;\n}\n\nfunction createBuiltInError(name) {\n  var message = 'builtin ' + name +\n    ' function requires map values to be numbers' +\n    ' or number arrays';\n  return new BuiltInError(message);\n}\n\nfunction sum(values) {\n  var result = 0;\n  for (var i = 0, len = values.length; i < len; i++) {\n    var num = values[i];\n    if (typeof num !== 'number') {\n      if (Array.isArray(num)) {\n        // lists of numbers are also allowed, sum them separately\n        result = typeof result === 'number' ? [result] : result;\n        for (var j = 0, jLen = num.length; j < jLen; j++) {\n          var jNum = num[j];\n          if (typeof jNum !== 'number') {\n            throw createBuiltInError('_sum');\n          } else if (typeof result[j] === 'undefined') {\n            result.push(jNum);\n          } else {\n            result[j] += jNum;\n          }\n        }\n      } else { // not array/number\n        throw createBuiltInError('_sum');\n      }\n    } else if (typeof result === 'number') {\n      result += num;\n    } else { // add number to array\n      result[0] += num;\n    }\n  }\n  return result;\n}\n\nvar log = guardedConsole.bind(null, 'log');\nvar isArray = Array.isArray;\nvar toJSON = JSON.parse;\n\nfunction evalFunctionWithEval(func, emit) {\n  return scopeEval(\n    \"return (\" + func.replace(/;\\s*$/, \"\") + \");\",\n    {\n      emit: emit,\n      sum: sum,\n      log: log,\n      isArray: isArray,\n      toJSON: toJSON\n    }\n  );\n}\n\n/*\n * Simple task queue to sequentialize actions. Assumes\n * callbacks will eventually fire (once).\n */\n\n\nfunction TaskQueue$2() {\n  this.promise = new PouchPromise(function (fulfill) {fulfill(); });\n}\nTaskQueue$2.prototype.add = function (promiseFactory) {\n  this.promise = this.promise.catch(function () {\n    // just recover\n  }).then(function () {\n    return promiseFactory();\n  });\n  return this.promise;\n};\nTaskQueue$2.prototype.finish = function () {\n  return this.promise;\n};\n\nfunction stringify(input) {\n  if (!input) {\n    return 'undefined'; // backwards compat for empty reduce\n  }\n  // for backwards compat with mapreduce, functions/strings are stringified\n  // as-is. everything else is JSON-stringified.\n  switch (typeof input) {\n    case 'function':\n      // e.g. a mapreduce map\n      return input.toString();\n    case 'string':\n      // e.g. a mapreduce built-in _reduce function\n      return input.toString();\n    default:\n      // e.g. a JSON object in the case of mango queries\n      return JSON.stringify(input);\n  }\n}\n\n/* create a string signature for a view so we can cache it and uniq it */\nfunction createViewSignature(mapFun, reduceFun) {\n  // the \"undefined\" part is for backwards compatibility\n  return stringify(mapFun) + stringify(reduceFun) + 'undefined';\n}\n\nfunction createView(sourceDB, viewName, mapFun, reduceFun, temporary, localDocName) {\n  var viewSignature = createViewSignature(mapFun, reduceFun);\n\n  var cachedViews;\n  if (!temporary) {\n    // cache this to ensure we don't try to update the same view twice\n    cachedViews = sourceDB._cachedViews = sourceDB._cachedViews || {};\n    if (cachedViews[viewSignature]) {\n      return cachedViews[viewSignature];\n    }\n  }\n\n  var promiseForView = sourceDB.info().then(function (info) {\n\n    var depDbName = info.db_name + '-mrview-' +\n      (temporary ? 'temp' : stringMd5(viewSignature));\n\n    // save the view name in the source db so it can be cleaned up if necessary\n    // (e.g. when the _design doc is deleted, remove all associated view data)\n    function diffFunction(doc) {\n      doc.views = doc.views || {};\n      var fullViewName = viewName;\n      if (fullViewName.indexOf('/') === -1) {\n        fullViewName = viewName + '/' + viewName;\n      }\n      var depDbs = doc.views[fullViewName] = doc.views[fullViewName] || {};\n      /* istanbul ignore if */\n      if (depDbs[depDbName]) {\n        return; // no update necessary\n      }\n      depDbs[depDbName] = true;\n      return doc;\n    }\n    return upsert(sourceDB, '_local/' + localDocName, diffFunction).then(function () {\n      return sourceDB.registerDependentDatabase(depDbName).then(function (res) {\n        var db = res.db;\n        db.auto_compaction = true;\n        var view = {\n          name: depDbName,\n          db: db,\n          sourceDB: sourceDB,\n          adapter: sourceDB.adapter,\n          mapFun: mapFun,\n          reduceFun: reduceFun\n        };\n        return view.db.get('_local/lastSeq').catch(function (err) {\n          /* istanbul ignore if */\n          if (err.status !== 404) {\n            throw err;\n          }\n        }).then(function (lastSeqDoc) {\n          view.seq = lastSeqDoc ? lastSeqDoc.seq : 0;\n          if (cachedViews) {\n            view.db.once('destroyed', function () {\n              delete cachedViews[viewSignature];\n            });\n          }\n          return view;\n        });\n      });\n    });\n  });\n\n  if (cachedViews) {\n    cachedViews[viewSignature] = promiseForView;\n  }\n  return promiseForView;\n}\n\nvar persistentQueues = {};\nvar tempViewQueue = new TaskQueue$2();\nvar CHANGES_BATCH_SIZE$1 = 50;\n\nfunction parseViewName(name) {\n  // can be either 'ddocname/viewname' or just 'viewname'\n  // (where the ddoc name is the same)\n  return name.indexOf('/') === -1 ? [name, name] : name.split('/');\n}\n\nfunction isGenOne(changes) {\n  // only return true if the current change is 1-\n  // and there are no other leafs\n  return changes.length === 1 && /^1-/.test(changes[0].rev);\n}\n\nfunction emitError(db, e) {\n  try {\n    db.emit('error', e);\n  } catch (err) {\n    guardedConsole('error',\n      'The user\\'s map/reduce function threw an uncaught error.\\n' +\n      'You can debug this error by doing:\\n' +\n      'myDatabase.on(\\'error\\', function (err) { debugger; });\\n' +\n      'Please double-check your map/reduce function.');\n    guardedConsole('error', e);\n  }\n}\n\n/**\n * Returns an \"abstract\" mapreduce object of the form:\n *\n *   {\n *     query: queryFun,\n *     viewCleanup: viewCleanupFun\n *   }\n *\n * Arguments are:\n *\n * localDoc: string\n *   This is for the local doc that gets saved in order to track the\n *   \"dependent\" DBs and clean them up for viewCleanup. It should be\n *   unique, so that indexer plugins don't collide with each other.\n * mapper: function (mapFunDef, emit)\n *   Returns a map function based on the mapFunDef, which in the case of\n *   normal map/reduce is just the de-stringified function, but may be\n *   something else, such as an object in the case of pouchdb-find.\n * reducer: function (reduceFunDef)\n *   Ditto, but for reducing. Modules don't have to support reducing\n *   (e.g. pouchdb-find).\n * ddocValidator: function (ddoc, viewName)\n *   Throws an error if the ddoc or viewName is not valid.\n *   This could be a way to communicate to the user that the configuration for the\n *   indexer is invalid.\n */\nfunction createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator) {\n\n  function tryMap(db, fun, doc) {\n    // emit an event if there was an error thrown by a map function.\n    // putting try/catches in a single function also avoids deoptimizations.\n    try {\n      fun(doc);\n    } catch (e) {\n      emitError(db, e);\n    }\n  }\n\n  function tryReduce(db, fun, keys, values, rereduce) {\n    // same as above, but returning the result or an error. there are two separate\n    // functions to avoid extra memory allocations since the tryCode() case is used\n    // for custom map functions (common) vs this function, which is only used for\n    // custom reduce functions (rare)\n    try {\n      return {output : fun(keys, values, rereduce)};\n    } catch (e) {\n      emitError(db, e);\n      return {error: e};\n    }\n  }\n\n  function sortByKeyThenValue(x, y) {\n    var keyCompare = collate(x.key, y.key);\n    return keyCompare !== 0 ? keyCompare : collate(x.value, y.value);\n  }\n\n  function sliceResults(results, limit, skip) {\n    skip = skip || 0;\n    if (typeof limit === 'number') {\n      return results.slice(skip, limit + skip);\n    } else if (skip > 0) {\n      return results.slice(skip);\n    }\n    return results;\n  }\n\n  function rowToDocId(row) {\n    var val = row.value;\n    // Users can explicitly specify a joined doc _id, or it\n    // defaults to the doc _id that emitted the key/value.\n    var docId = (val && typeof val === 'object' && val._id) || row.id;\n    return docId;\n  }\n\n  function readAttachmentsAsBlobOrBuffer(res) {\n    res.rows.forEach(function (row) {\n      var atts = row.doc && row.doc._attachments;\n      if (!atts) {\n        return;\n      }\n      Object.keys(atts).forEach(function (filename) {\n        var att = atts[filename];\n        atts[filename].data = b64ToBluffer(att.data, att.content_type);\n      });\n    });\n  }\n\n  function postprocessAttachments(opts) {\n    return function (res) {\n      if (opts.include_docs && opts.attachments && opts.binary) {\n        readAttachmentsAsBlobOrBuffer(res);\n      }\n      return res;\n    };\n  }\n\n  function addHttpParam(paramName, opts, params, asJson) {\n    // add an http param from opts to params, optionally json-encoded\n    var val = opts[paramName];\n    if (typeof val !== 'undefined') {\n      if (asJson) {\n        val = encodeURIComponent(JSON.stringify(val));\n      }\n      params.push(paramName + '=' + val);\n    }\n  }\n\n  function coerceInteger(integerCandidate) {\n    if (typeof integerCandidate !== 'undefined') {\n      var asNumber = Number(integerCandidate);\n      // prevents e.g. '1foo' or '1.1' being coerced to 1\n      if (!isNaN(asNumber) && asNumber === parseInt(integerCandidate, 10)) {\n        return asNumber;\n      } else {\n        return integerCandidate;\n      }\n    }\n  }\n\n  function coerceOptions(opts) {\n    opts.group_level = coerceInteger(opts.group_level);\n    opts.limit = coerceInteger(opts.limit);\n    opts.skip = coerceInteger(opts.skip);\n    return opts;\n  }\n\n  function checkPositiveInteger(number) {\n    if (number) {\n      if (typeof number !== 'number') {\n        return  new QueryParseError('Invalid value for integer: \"' +\n          number + '\"');\n      }\n      if (number < 0) {\n        return new QueryParseError('Invalid value for positive integer: ' +\n          '\"' + number + '\"');\n      }\n    }\n  }\n\n  function checkQueryParseError(options, fun) {\n    var startkeyName = options.descending ? 'endkey' : 'startkey';\n    var endkeyName = options.descending ? 'startkey' : 'endkey';\n\n    if (typeof options[startkeyName] !== 'undefined' &&\n      typeof options[endkeyName] !== 'undefined' &&\n      collate(options[startkeyName], options[endkeyName]) > 0) {\n      throw new QueryParseError('No rows can match your key range, ' +\n        'reverse your start_key and end_key or set {descending : true}');\n    } else if (fun.reduce && options.reduce !== false) {\n      if (options.include_docs) {\n        throw new QueryParseError('{include_docs:true} is invalid for reduce');\n      } else if (options.keys && options.keys.length > 1 &&\n        !options.group && !options.group_level) {\n        throw new QueryParseError('Multi-key fetches for reduce views must use ' +\n          '{group: true}');\n      }\n    }\n    ['group_level', 'limit', 'skip'].forEach(function (optionName) {\n      var error = checkPositiveInteger(options[optionName]);\n      if (error) {\n        throw error;\n      }\n    });\n  }\n\n  function httpQuery(db, fun, opts) {\n    // List of parameters to add to the PUT request\n    var params = [];\n    var body;\n    var method = 'GET';\n\n    // If opts.reduce exists and is defined, then add it to the list\n    // of parameters.\n    // If reduce=false then the results are that of only the map function\n    // not the final result of map and reduce.\n    addHttpParam('reduce', opts, params);\n    addHttpParam('include_docs', opts, params);\n    addHttpParam('attachments', opts, params);\n    addHttpParam('limit', opts, params);\n    addHttpParam('descending', opts, params);\n    addHttpParam('group', opts, params);\n    addHttpParam('group_level', opts, params);\n    addHttpParam('skip', opts, params);\n    addHttpParam('stale', opts, params);\n    addHttpParam('conflicts', opts, params);\n    addHttpParam('startkey', opts, params, true);\n    addHttpParam('start_key', opts, params, true);\n    addHttpParam('endkey', opts, params, true);\n    addHttpParam('end_key', opts, params, true);\n    addHttpParam('inclusive_end', opts, params);\n    addHttpParam('key', opts, params, true);\n    addHttpParam('update_seq', opts, params);\n\n    // Format the list of parameters into a valid URI query string\n    params = params.join('&');\n    params = params === '' ? '' : '?' + params;\n\n    // If keys are supplied, issue a POST to circumvent GET query string limits\n    // see http://wiki.apache.org/couchdb/HTTP_view_API#Querying_Options\n    if (typeof opts.keys !== 'undefined') {\n      var MAX_URL_LENGTH = 2000;\n      // according to http://stackoverflow.com/a/417184/680742,\n      // the de facto URL length limit is 2000 characters\n\n      var keysAsString =\n        'keys=' + encodeURIComponent(JSON.stringify(opts.keys));\n      if (keysAsString.length + params.length + 1 <= MAX_URL_LENGTH) {\n        // If the keys are short enough, do a GET. we do this to work around\n        // Safari not understanding 304s on POSTs (see pouchdb/pouchdb#1239)\n        params += (params[0] === '?' ? '&' : '?') + keysAsString;\n      } else {\n        method = 'POST';\n        if (typeof fun === 'string') {\n          body = {keys: opts.keys};\n        } else { // fun is {map : mapfun}, so append to this\n          fun.keys = opts.keys;\n        }\n      }\n    }\n\n    // We are referencing a query defined in the design doc\n    if (typeof fun === 'string') {\n      var parts = parseViewName(fun);\n      return db.request({\n        method: method,\n        url: '_design/' + parts[0] + '/_view/' + parts[1] + params,\n        body: body\n      }).then(\n        /* istanbul ignore next */\n        function (result) {\n          // fail the entire request if the result contains an error\n          result.rows.forEach(function (row) {\n            if (row.value && row.value.error && row.value.error === \"builtin_reduce_error\") {\n              throw new Error(row.reason);\n            }\n          });\n\n          return result;\n      })\n      .then(postprocessAttachments(opts));\n    }\n\n    // We are using a temporary view, terrible for performance, good for testing\n    body = body || {};\n    Object.keys(fun).forEach(function (key) {\n      if (Array.isArray(fun[key])) {\n        body[key] = fun[key];\n      } else {\n        body[key] = fun[key].toString();\n      }\n    });\n    return db.request({\n      method: 'POST',\n      url: '_temp_view' + params,\n      body: body\n    }).then(postprocessAttachments(opts));\n  }\n\n  // custom adapters can define their own api._query\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customQuery(db, fun, opts) {\n    return new PouchPromise(function (resolve, reject) {\n      db._query(fun, opts, function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  // custom adapters can define their own api._viewCleanup\n  // and override the default behavior\n  /* istanbul ignore next */\n  function customViewCleanup(db) {\n    return new PouchPromise(function (resolve, reject) {\n      db._viewCleanup(function (err, res) {\n        if (err) {\n          return reject(err);\n        }\n        resolve(res);\n      });\n    });\n  }\n\n  function defaultsTo(value) {\n    return function (reason) {\n      /* istanbul ignore else */\n      if (reason.status === 404) {\n        return value;\n      } else {\n        throw reason;\n      }\n    };\n  }\n\n  // returns a promise for a list of docs to update, based on the input docId.\n  // the order doesn't matter, because post-3.2.0, bulkDocs\n  // is an atomic operation in all three adapters.\n  function getDocsToPersist(docId, view, docIdsToChangesAndEmits) {\n    var metaDocId = '_local/doc_' + docId;\n    var defaultMetaDoc = {_id: metaDocId, keys: []};\n    var docData = docIdsToChangesAndEmits.get(docId);\n    var indexableKeysToKeyValues = docData[0];\n    var changes = docData[1];\n\n    function getMetaDoc() {\n      if (isGenOne(changes)) {\n        // generation 1, so we can safely assume initial state\n        // for performance reasons (avoids unnecessary GETs)\n        return PouchPromise.resolve(defaultMetaDoc);\n      }\n      return view.db.get(metaDocId).catch(defaultsTo(defaultMetaDoc));\n    }\n\n    function getKeyValueDocs(metaDoc) {\n      if (!metaDoc.keys.length) {\n        // no keys, no need for a lookup\n        return PouchPromise.resolve({rows: []});\n      }\n      return view.db.allDocs({\n        keys: metaDoc.keys,\n        include_docs: true\n      });\n    }\n\n    function processKeyValueDocs(metaDoc, kvDocsRes) {\n      var kvDocs = [];\n      var oldKeys = new ExportedSet();\n\n      for (var i = 0, len = kvDocsRes.rows.length; i < len; i++) {\n        var row = kvDocsRes.rows[i];\n        var doc = row.doc;\n        if (!doc) { // deleted\n          continue;\n        }\n        kvDocs.push(doc);\n        oldKeys.add(doc._id);\n        doc._deleted = !indexableKeysToKeyValues.has(doc._id);\n        if (!doc._deleted) {\n          var keyValue = indexableKeysToKeyValues.get(doc._id);\n          if ('value' in keyValue) {\n            doc.value = keyValue.value;\n          }\n        }\n      }\n      var newKeys = mapToKeysArray(indexableKeysToKeyValues);\n      newKeys.forEach(function (key) {\n        if (!oldKeys.has(key)) {\n          // new doc\n          var kvDoc = {\n            _id: key\n          };\n          var keyValue = indexableKeysToKeyValues.get(key);\n          if ('value' in keyValue) {\n            kvDoc.value = keyValue.value;\n          }\n          kvDocs.push(kvDoc);\n        }\n      });\n      metaDoc.keys = uniq(newKeys.concat(metaDoc.keys));\n      kvDocs.push(metaDoc);\n\n      return kvDocs;\n    }\n\n    return getMetaDoc().then(function (metaDoc) {\n      return getKeyValueDocs(metaDoc).then(function (kvDocsRes) {\n        return processKeyValueDocs(metaDoc, kvDocsRes);\n      });\n    });\n  }\n\n  // updates all emitted key/value docs and metaDocs in the mrview database\n  // for the given batch of documents from the source database\n  function saveKeyValues(view, docIdsToChangesAndEmits, seq) {\n    var seqDocId = '_local/lastSeq';\n    return view.db.get(seqDocId)\n      .catch(defaultsTo({_id: seqDocId, seq: 0}))\n      .then(function (lastSeqDoc) {\n        var docIds = mapToKeysArray(docIdsToChangesAndEmits);\n        return PouchPromise.all(docIds.map(function (docId) {\n          return getDocsToPersist(docId, view, docIdsToChangesAndEmits);\n        })).then(function (listOfDocsToPersist) {\n          var docsToPersist = flatten(listOfDocsToPersist);\n          lastSeqDoc.seq = seq;\n          docsToPersist.push(lastSeqDoc);\n          // write all docs in a single operation, update the seq once\n          return view.db.bulkDocs({docs : docsToPersist});\n        });\n      });\n  }\n\n  function getQueue(view) {\n    var viewName = typeof view === 'string' ? view : view.name;\n    var queue = persistentQueues[viewName];\n    if (!queue) {\n      queue = persistentQueues[viewName] = new TaskQueue$2();\n    }\n    return queue;\n  }\n\n  function updateView(view) {\n    return sequentialize(getQueue(view), function () {\n      return updateViewInQueue(view);\n    })();\n  }\n\n  function updateViewInQueue(view) {\n    // bind the emit function once\n    var mapResults;\n    var doc;\n\n    function emit(key, value) {\n      var output = {id: doc._id, key: normalizeKey(key)};\n      // Don't explicitly store the value unless it's defined and non-null.\n      // This saves on storage space, because often people don't use it.\n      if (typeof value !== 'undefined' && value !== null) {\n        output.value = normalizeKey(value);\n      }\n      mapResults.push(output);\n    }\n\n    var mapFun = mapper(view.mapFun, emit);\n\n    var currentSeq = view.seq || 0;\n\n    function processChange(docIdsToChangesAndEmits, seq) {\n      return function () {\n        return saveKeyValues(view, docIdsToChangesAndEmits, seq);\n      };\n    }\n\n    var queue = new TaskQueue$2();\n\n    function processNextBatch() {\n      return view.sourceDB.changes({\n        conflicts: true,\n        include_docs: true,\n        style: 'all_docs',\n        since: currentSeq,\n        limit: CHANGES_BATCH_SIZE$1\n      }).then(processBatch);\n    }\n\n    function processBatch(response) {\n      var results = response.results;\n      if (!results.length) {\n        return;\n      }\n      var docIdsToChangesAndEmits = createDocIdsToChangesAndEmits(results);\n      queue.add(processChange(docIdsToChangesAndEmits, currentSeq));\n      if (results.length < CHANGES_BATCH_SIZE$1) {\n        return;\n      }\n      return processNextBatch();\n    }\n\n    function createDocIdsToChangesAndEmits(results) {\n      var docIdsToChangesAndEmits = new ExportedMap();\n      for (var i = 0, len = results.length; i < len; i++) {\n        var change = results[i];\n        if (change.doc._id[0] !== '_') {\n          mapResults = [];\n          doc = change.doc;\n\n          if (!doc._deleted) {\n            tryMap(view.sourceDB, mapFun, doc);\n          }\n          mapResults.sort(sortByKeyThenValue);\n\n          var indexableKeysToKeyValues = createIndexableKeysToKeyValues(mapResults);\n          docIdsToChangesAndEmits.set(change.doc._id, [\n            indexableKeysToKeyValues,\n            change.changes\n          ]);\n        }\n        currentSeq = change.seq;\n      }\n      return docIdsToChangesAndEmits;\n    }\n\n    function createIndexableKeysToKeyValues(mapResults) {\n      var indexableKeysToKeyValues = new ExportedMap();\n      var lastKey;\n      for (var i = 0, len = mapResults.length; i < len; i++) {\n        var emittedKeyValue = mapResults[i];\n        var complexKey = [emittedKeyValue.key, emittedKeyValue.id];\n        if (i > 0 && collate(emittedKeyValue.key, lastKey) === 0) {\n          complexKey.push(i); // dup key+id, so make it unique\n        }\n        indexableKeysToKeyValues.set(toIndexableString(complexKey), emittedKeyValue);\n        lastKey = emittedKeyValue.key;\n      }\n      return indexableKeysToKeyValues;\n    }\n\n    return processNextBatch().then(function () {\n      return queue.finish();\n    }).then(function () {\n      view.seq = currentSeq;\n    });\n  }\n\n  function reduceView(view, results, options) {\n    if (options.group_level === 0) {\n      delete options.group_level;\n    }\n\n    var shouldGroup = options.group || options.group_level;\n\n    var reduceFun = reducer(view.reduceFun);\n\n    var groups = [];\n    var lvl = isNaN(options.group_level) ? Number.POSITIVE_INFINITY :\n      options.group_level;\n    results.forEach(function (e) {\n      var last = groups[groups.length - 1];\n      var groupKey = shouldGroup ? e.key : null;\n\n      // only set group_level for array keys\n      if (shouldGroup && Array.isArray(groupKey)) {\n        groupKey = groupKey.slice(0, lvl);\n      }\n\n      if (last && collate(last.groupKey, groupKey) === 0) {\n        last.keys.push([e.key, e.id]);\n        last.values.push(e.value);\n        return;\n      }\n      groups.push({\n        keys: [[e.key, e.id]],\n        values: [e.value],\n        groupKey: groupKey\n      });\n    });\n    results = [];\n    for (var i = 0, len = groups.length; i < len; i++) {\n      var e = groups[i];\n      var reduceTry = tryReduce(view.sourceDB, reduceFun, e.keys, e.values, false);\n      if (reduceTry.error && reduceTry.error instanceof BuiltInError) {\n        // CouchDB returns an error if a built-in errors out\n        throw reduceTry.error;\n      }\n      results.push({\n        // CouchDB just sets the value to null if a non-built-in errors out\n        value: reduceTry.error ? null : reduceTry.output,\n        key: e.groupKey\n      });\n    }\n    // no total_rows/offset when reducing\n    return {rows: sliceResults(results, options.limit, options.skip)};\n  }\n\n  function queryView(view, opts) {\n    return sequentialize(getQueue(view), function () {\n      return queryViewInQueue(view, opts);\n    })();\n  }\n\n  function queryViewInQueue(view, opts) {\n    var totalRows;\n    var shouldReduce = view.reduceFun && opts.reduce !== false;\n    var skip = opts.skip || 0;\n    if (typeof opts.keys !== 'undefined' && !opts.keys.length) {\n      // equivalent query\n      opts.limit = 0;\n      delete opts.keys;\n    }\n\n    function fetchFromView(viewOpts) {\n      viewOpts.include_docs = true;\n      return view.db.allDocs(viewOpts).then(function (res) {\n        totalRows = res.total_rows;\n        return res.rows.map(function (result) {\n\n          // implicit migration - in older versions of PouchDB,\n          // we explicitly stored the doc as {id: ..., key: ..., value: ...}\n          // this is tested in a migration test\n          /* istanbul ignore next */\n          if ('value' in result.doc && typeof result.doc.value === 'object' &&\n            result.doc.value !== null) {\n            var keys = Object.keys(result.doc.value).sort();\n            // this detection method is not perfect, but it's unlikely the user\n            // emitted a value which was an object with these 3 exact keys\n            var expectedKeys = ['id', 'key', 'value'];\n            if (!(keys < expectedKeys || keys > expectedKeys)) {\n              return result.doc.value;\n            }\n          }\n\n          var parsedKeyAndDocId = parseIndexableString(result.doc._id);\n          return {\n            key: parsedKeyAndDocId[0],\n            id: parsedKeyAndDocId[1],\n            value: ('value' in result.doc ? result.doc.value : null)\n          };\n        });\n      });\n    }\n\n    function onMapResultsReady(rows) {\n      var finalResults;\n      if (shouldReduce) {\n        finalResults = reduceView(view, rows, opts);\n      } else {\n        finalResults = {\n          total_rows: totalRows,\n          offset: skip,\n          rows: rows\n        };\n      }\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        finalResults.update_seq = view.seq;\n      }\n      if (opts.include_docs) {\n        var docIds = uniq(rows.map(rowToDocId));\n\n        return view.sourceDB.allDocs({\n          keys: docIds,\n          include_docs: true,\n          conflicts: opts.conflicts,\n          attachments: opts.attachments,\n          binary: opts.binary\n        }).then(function (allDocsRes) {\n          var docIdsToDocs = new ExportedMap();\n          allDocsRes.rows.forEach(function (row) {\n            docIdsToDocs.set(row.id, row.doc);\n          });\n          rows.forEach(function (row) {\n            var docId = rowToDocId(row);\n            var doc = docIdsToDocs.get(docId);\n            if (doc) {\n              row.doc = doc;\n            }\n          });\n          return finalResults;\n        });\n      } else {\n        return finalResults;\n      }\n    }\n\n    if (typeof opts.keys !== 'undefined') {\n      var keys = opts.keys;\n      var fetchPromises = keys.map(function (key) {\n        var viewOpts = {\n          startkey : toIndexableString([key]),\n          endkey   : toIndexableString([key, {}])\n        };\n        /* istanbul ignore if */\n        if (opts.update_seq) {\n          viewOpts.update_seq = true;\n        }\n        return fetchFromView(viewOpts);\n      });\n      return PouchPromise.all(fetchPromises).then(flatten).then(onMapResultsReady);\n    } else { // normal query, no 'keys'\n      var viewOpts = {\n        descending : opts.descending\n      };\n      /* istanbul ignore if */\n      if (opts.update_seq) {\n        viewOpts.update_seq = true;\n      }\n      var startkey;\n      var endkey;\n      if ('start_key' in opts) {\n        startkey = opts.start_key;\n      }\n      if ('startkey' in opts) {\n        startkey = opts.startkey;\n      }\n      if ('end_key' in opts) {\n        endkey = opts.end_key;\n      }\n      if ('endkey' in opts) {\n        endkey = opts.endkey;\n      }\n      if (typeof startkey !== 'undefined') {\n        viewOpts.startkey = opts.descending ?\n          toIndexableString([startkey, {}]) :\n          toIndexableString([startkey]);\n      }\n      if (typeof endkey !== 'undefined') {\n        var inclusiveEnd = opts.inclusive_end !== false;\n        if (opts.descending) {\n          inclusiveEnd = !inclusiveEnd;\n        }\n\n        viewOpts.endkey = toIndexableString(\n          inclusiveEnd ? [endkey, {}] : [endkey]);\n      }\n      if (typeof opts.key !== 'undefined') {\n        var keyStart = toIndexableString([opts.key]);\n        var keyEnd = toIndexableString([opts.key, {}]);\n        if (viewOpts.descending) {\n          viewOpts.endkey = keyStart;\n          viewOpts.startkey = keyEnd;\n        } else {\n          viewOpts.startkey = keyStart;\n          viewOpts.endkey = keyEnd;\n        }\n      }\n      if (!shouldReduce) {\n        if (typeof opts.limit === 'number') {\n          viewOpts.limit = opts.limit;\n        }\n        viewOpts.skip = skip;\n      }\n      return fetchFromView(viewOpts).then(onMapResultsReady);\n    }\n  }\n\n  function httpViewCleanup(db) {\n    return db.request({\n      method: 'POST',\n      url: '_view_cleanup'\n    });\n  }\n\n  function localViewCleanup(db) {\n    return db.get('_local/' + localDocName).then(function (metaDoc) {\n      var docsToViews = new ExportedMap();\n      Object.keys(metaDoc.views).forEach(function (fullViewName) {\n        var parts = parseViewName(fullViewName);\n        var designDocName = '_design/' + parts[0];\n        var viewName = parts[1];\n        var views = docsToViews.get(designDocName);\n        if (!views) {\n          views = new ExportedSet();\n          docsToViews.set(designDocName, views);\n        }\n        views.add(viewName);\n      });\n      var opts = {\n        keys : mapToKeysArray(docsToViews),\n        include_docs : true\n      };\n      return db.allDocs(opts).then(function (res) {\n        var viewsToStatus = {};\n        res.rows.forEach(function (row) {\n          var ddocName = row.key.substring(8); // cuts off '_design/'\n          docsToViews.get(row.key).forEach(function (viewName) {\n            var fullViewName = ddocName + '/' + viewName;\n            /* istanbul ignore if */\n            if (!metaDoc.views[fullViewName]) {\n              // new format, without slashes, to support PouchDB 2.2.0\n              // migration test in pouchdb's browser.migration.js verifies this\n              fullViewName = viewName;\n            }\n            var viewDBNames = Object.keys(metaDoc.views[fullViewName]);\n            // design doc deleted, or view function nonexistent\n            var statusIsGood = row.doc && row.doc.views &&\n              row.doc.views[viewName];\n            viewDBNames.forEach(function (viewDBName) {\n              viewsToStatus[viewDBName] =\n                viewsToStatus[viewDBName] || statusIsGood;\n            });\n          });\n        });\n        var dbsToDelete = Object.keys(viewsToStatus).filter(\n          function (viewDBName) { return !viewsToStatus[viewDBName]; });\n        var destroyPromises = dbsToDelete.map(function (viewDBName) {\n          return sequentialize(getQueue(viewDBName), function () {\n            return new db.constructor(viewDBName, db.__opts).destroy();\n          })();\n        });\n        return PouchPromise.all(destroyPromises).then(function () {\n          return {ok: true};\n        });\n      });\n    }, defaultsTo({ok: true}));\n  }\n\n  function queryPromised(db, fun, opts) {\n    /* istanbul ignore next */\n    if (typeof db._query === 'function') {\n      return customQuery(db, fun, opts);\n    }\n    if (isRemote(db)) {\n      return httpQuery(db, fun, opts);\n    }\n    \n    if (typeof fun !== 'string') {\n      // temp_view\n      checkQueryParseError(opts, fun);\n\n      tempViewQueue.add(function () {\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ 'temp_view/temp_view',\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ true,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          return fin(updateView(view).then(function () {\n            return queryView(view, opts);\n          }), function () {\n            return view.db.destroy();\n          });\n        });\n      });\n      return tempViewQueue.finish();\n    } else {\n      // persistent view\n      var fullViewName = fun;\n      var parts = parseViewName(fullViewName);\n      var designDocName = parts[0];\n      var viewName = parts[1];\n      return db.get('_design/' + designDocName).then(function (doc) {\n        var fun = doc.views && doc.views[viewName];\n\n        if (!fun) {\n          // basic validator; it's assumed that every subclass would want this\n          throw new NotFoundError('ddoc ' + doc._id + ' has no view named ' +\n            viewName);\n        }\n\n        ddocValidator(doc, viewName);\n        checkQueryParseError(opts, fun);\n\n        var createViewPromise = createView(\n          /* sourceDB */ db,\n          /* viewName */ fullViewName,\n          /* mapFun */ fun.map,\n          /* reduceFun */ fun.reduce,\n          /* temporary */ false,\n          /* localDocName */ localDocName);\n        return createViewPromise.then(function (view) {\n          if (opts.stale === 'ok' || opts.stale === 'update_after') {\n            if (opts.stale === 'update_after') {\n              nextTick(function () {\n                updateView(view);\n              });\n            }\n            return queryView(view, opts);\n          } else { // stale not ok\n            return updateView(view).then(function () {\n              return queryView(view, opts);\n            });\n          }\n        });\n      });\n    }\n  }\n\n  function abstractQuery(fun, opts, callback) {\n    var db = this;\n    if (typeof opts === 'function') {\n      callback = opts;\n      opts = {};\n    }\n    opts = opts ? coerceOptions(opts) : {};\n\n    if (typeof fun === 'function') {\n      fun = {map : fun};\n    }\n\n    var promise = PouchPromise.resolve().then(function () {\n      return queryPromised(db, fun, opts);\n    });\n    promisedCallback(promise, callback);\n    return promise;\n  }\n\n  var abstractViewCleanup = callbackify(function () {\n    var db = this;\n    /* istanbul ignore next */\n    if (typeof db._viewCleanup === 'function') {\n      return customViewCleanup(db);\n    }\n    if (isRemote(db)) {\n      return httpViewCleanup(db);\n    }\n    return localViewCleanup(db);\n  });\n\n  return {\n    query: abstractQuery,\n    viewCleanup: abstractViewCleanup\n  };\n}\n\nvar builtInReduce = {\n  _sum: function (keys, values) {\n    return sum(values);\n  },\n\n  _count: function (keys, values) {\n    return values.length;\n  },\n\n  _stats: function (keys, values) {\n    // no need to implement rereduce=true, because Pouch\n    // will never call it\n    function sumsqr(values) {\n      var _sumsqr = 0;\n      for (var i = 0, len = values.length; i < len; i++) {\n        var num = values[i];\n        _sumsqr += (num * num);\n      }\n      return _sumsqr;\n    }\n    return {\n      sum     : sum(values),\n      min     : Math.min.apply(null, values),\n      max     : Math.max.apply(null, values),\n      count   : values.length,\n      sumsqr : sumsqr(values)\n    };\n  }\n};\n\nfunction getBuiltIn(reduceFunString) {\n  if (/^_sum/.test(reduceFunString)) {\n    return builtInReduce._sum;\n  } else if (/^_count/.test(reduceFunString)) {\n    return builtInReduce._count;\n  } else if (/^_stats/.test(reduceFunString)) {\n    return builtInReduce._stats;\n  } else if (/^_/.test(reduceFunString)) {\n    throw new Error(reduceFunString + ' is not a supported reduce function.');\n  }\n}\n\nfunction mapper(mapFun, emit) {\n  // for temp_views one can use emit(doc, emit), see #38\n  if (typeof mapFun === \"function\" && mapFun.length === 2) {\n    var origMap = mapFun;\n    return function (doc) {\n      return origMap(doc, emit);\n    };\n  } else {\n    return evalFunctionWithEval(mapFun.toString(), emit);\n  }\n}\n\nfunction reducer(reduceFun) {\n  var reduceFunString = reduceFun.toString();\n  var builtIn = getBuiltIn(reduceFunString);\n  if (builtIn) {\n    return builtIn;\n  } else {\n    return evalFunctionWithEval(reduceFunString);\n  }\n}\n\nfunction ddocValidator(ddoc, viewName) {\n  var fun = ddoc.views && ddoc.views[viewName];\n  if (typeof fun.map !== 'string') {\n    throw new NotFoundError('ddoc ' + ddoc._id + ' has no string view named ' +\n      viewName + ', instead found object of type: ' + typeof fun.map);\n  }\n}\n\nvar localDocName = 'mrviews';\nvar abstract = createAbstractMapReduce(localDocName, mapper, reducer, ddocValidator);\n\nfunction query(fun, opts, callback) {\n  return abstract.query.call(this, fun, opts, callback);\n}\n\nfunction viewCleanup(callback) {\n  return abstract.viewCleanup.call(this, callback);\n}\n\nvar mapreduce = {\n  query: query,\n  viewCleanup: viewCleanup\n};\n\nfunction isGenOne$1(rev$$1) {\n  return /^1-/.test(rev$$1);\n}\n\nfunction fileHasChanged(localDoc, remoteDoc, filename) {\n  return !localDoc._attachments ||\n         !localDoc._attachments[filename] ||\n         localDoc._attachments[filename].digest !== remoteDoc._attachments[filename].digest;\n}\n\nfunction getDocAttachments(db, doc) {\n  var filenames = Object.keys(doc._attachments);\n  return PouchPromise.all(filenames.map(function (filename) {\n    return db.getAttachment(doc._id, filename, {rev: doc._rev});\n  }));\n}\n\nfunction getDocAttachmentsFromTargetOrSource(target, src, doc) {\n  var doCheckForLocalAttachments = isRemote(src) && !isRemote(target);\n  var filenames = Object.keys(doc._attachments);\n\n  if (!doCheckForLocalAttachments) {\n    return getDocAttachments(src, doc);\n  }\n\n  return target.get(doc._id).then(function (localDoc) {\n    return PouchPromise.all(filenames.map(function (filename) {\n      if (fileHasChanged(localDoc, doc, filename)) {\n        return src.getAttachment(doc._id, filename);\n      }\n\n      return target.getAttachment(localDoc._id, filename);\n    }));\n  }).catch(function (error) {\n    /* istanbul ignore if */\n    if (error.status !== 404) {\n      throw error;\n    }\n\n    return getDocAttachments(src, doc);\n  });\n}\n\nfunction createBulkGetOpts(diffs) {\n  var requests = [];\n  Object.keys(diffs).forEach(function (id) {\n    var missingRevs = diffs[id].missing;\n    missingRevs.forEach(function (missingRev) {\n      requests.push({\n        id: id,\n        rev: missingRev\n      });\n    });\n  });\n\n  return {\n    docs: requests,\n    revs: true,\n    latest: true\n  };\n}\n\n//\n// Fetch all the documents from the src as described in the \"diffs\",\n// which is a mapping of docs IDs to revisions. If the state ever\n// changes to \"cancelled\", then the returned promise will be rejected.\n// Else it will be resolved with a list of fetched documents.\n//\nfunction getDocs(src, target, diffs, state) {\n  diffs = clone(diffs); // we do not need to modify this\n\n  var resultDocs = [],\n      ok = true;\n\n  function getAllDocs() {\n\n    var bulkGetOpts = createBulkGetOpts(diffs);\n\n    if (!bulkGetOpts.docs.length) { // optimization: skip empty requests\n      return;\n    }\n\n    return src.bulkGet(bulkGetOpts).then(function (bulkGetResponse) {\n      /* istanbul ignore if */\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      return PouchPromise.all(bulkGetResponse.results.map(function (bulkGetInfo) {\n        return PouchPromise.all(bulkGetInfo.docs.map(function (doc) {\n          var remoteDoc = doc.ok;\n\n          if (doc.error) {\n            // when AUTO_COMPACTION is set, docs can be returned which look\n            // like this: {\"missing\":\"1-7c3ac256b693c462af8442f992b83696\"}\n            ok = false;\n          }\n\n          if (!remoteDoc || !remoteDoc._attachments) {\n            return remoteDoc;\n          }\n\n          return getDocAttachmentsFromTargetOrSource(target, src, remoteDoc)\n                   .then(function (attachments) {\n                           var filenames = Object.keys(remoteDoc._attachments);\n                           attachments\n                             .forEach(function (attachment, i) {\n                                        var att = remoteDoc._attachments[filenames[i]];\n                                        delete att.stub;\n                                        delete att.length;\n                                        att.data = attachment;\n                                      });\n\n                                      return remoteDoc;\n                                    });\n        }));\n      }))\n\n      .then(function (results) {\n        resultDocs = resultDocs.concat(flatten(results).filter(Boolean));\n      });\n    });\n  }\n\n  function hasAttachments(doc) {\n    return doc._attachments && Object.keys(doc._attachments).length > 0;\n  }\n\n  function hasConflicts(doc) {\n    return doc._conflicts && doc._conflicts.length > 0;\n  }\n\n  function fetchRevisionOneDocs(ids) {\n    // Optimization: fetch gen-1 docs and attachments in\n    // a single request using _all_docs\n    return src.allDocs({\n      keys: ids,\n      include_docs: true,\n      conflicts: true\n    }).then(function (res) {\n      if (state.cancelled) {\n        throw new Error('cancelled');\n      }\n      res.rows.forEach(function (row) {\n        if (row.deleted || !row.doc || !isGenOne$1(row.value.rev) ||\n            hasAttachments(row.doc) || hasConflicts(row.doc)) {\n          // if any of these conditions apply, we need to fetch using get()\n          return;\n        }\n\n        // strip _conflicts array to appease CSG (#5793)\n        /* istanbul ignore if */\n        if (row.doc._conflicts) {\n          delete row.doc._conflicts;\n        }\n\n        // the doc we got back from allDocs() is sufficient\n        resultDocs.push(row.doc);\n        delete diffs[row.id];\n      });\n    });\n  }\n\n  function getRevisionOneDocs() {\n    // filter out the generation 1 docs and get them\n    // leaving the non-generation one docs to be got otherwise\n    var ids = Object.keys(diffs).filter(function (id) {\n      var missing = diffs[id].missing;\n      return missing.length === 1 && isGenOne$1(missing[0]);\n    });\n    if (ids.length > 0) {\n      return fetchRevisionOneDocs(ids);\n    }\n  }\n\n  function returnResult() {\n    return { ok:ok, docs:resultDocs };\n  }\n\n  return PouchPromise.resolve()\n    .then(getRevisionOneDocs)\n    .then(getAllDocs)\n    .then(returnResult);\n}\n\nvar CHECKPOINT_VERSION = 1;\nvar REPLICATOR = \"pouchdb\";\n// This is an arbitrary number to limit the\n// amount of replication history we save in the checkpoint.\n// If we save too much, the checkpoing docs will become very big,\n// if we save fewer, we'll run a greater risk of having to\n// read all the changes from 0 when checkpoint PUTs fail\n// CouchDB 2.0 has a more involved history pruning,\n// but let's go for the simple version for now.\nvar CHECKPOINT_HISTORY_SIZE = 5;\nvar LOWEST_SEQ = 0;\n\nfunction updateCheckpoint(db, id, checkpoint, session, returnValue) {\n  return db.get(id).catch(function (err) {\n    if (err.status === 404) {\n      if (db.adapter === 'http' || db.adapter === 'https') {\n        explainError(\n          404, 'PouchDB is just checking if a remote checkpoint exists.'\n        );\n      }\n      return {\n        session_id: session,\n        _id: id,\n        history: [],\n        replicator: REPLICATOR,\n        version: CHECKPOINT_VERSION\n      };\n    }\n    throw err;\n  }).then(function (doc) {\n    if (returnValue.cancelled) {\n      return;\n    }\n\n    // if the checkpoint has not changed, do not update\n    if (doc.last_seq === checkpoint) {\n      return;\n    }\n\n    // Filter out current entry for this replication\n    doc.history = (doc.history || []).filter(function (item) {\n      return item.session_id !== session;\n    });\n\n    // Add the latest checkpoint to history\n    doc.history.unshift({\n      last_seq: checkpoint,\n      session_id: session\n    });\n\n    // Just take the last pieces in history, to\n    // avoid really big checkpoint docs.\n    // see comment on history size above\n    doc.history = doc.history.slice(0, CHECKPOINT_HISTORY_SIZE);\n\n    doc.version = CHECKPOINT_VERSION;\n    doc.replicator = REPLICATOR;\n\n    doc.session_id = session;\n    doc.last_seq = checkpoint;\n\n    return db.put(doc).catch(function (err) {\n      if (err.status === 409) {\n        // retry; someone is trying to write a checkpoint simultaneously\n        return updateCheckpoint(db, id, checkpoint, session, returnValue);\n      }\n      throw err;\n    });\n  });\n}\n\nfunction Checkpointer(src, target, id, returnValue, opts) {\n  this.src = src;\n  this.target = target;\n  this.id = id;\n  this.returnValue = returnValue;\n  this.opts = opts || {};\n}\n\nCheckpointer.prototype.writeCheckpoint = function (checkpoint, session) {\n  var self = this;\n  return this.updateTarget(checkpoint, session).then(function () {\n    return self.updateSource(checkpoint, session);\n  });\n};\n\nCheckpointer.prototype.updateTarget = function (checkpoint, session) {\n  if (this.opts.writeTargetCheckpoint) {\n    return updateCheckpoint(this.target, this.id, checkpoint,\n      session, this.returnValue);\n  } else {\n    return PouchPromise.resolve(true);\n  }\n};\n\nCheckpointer.prototype.updateSource = function (checkpoint, session) {\n  if (this.opts.writeSourceCheckpoint) {\n    var self = this;\n    return updateCheckpoint(this.src, this.id, checkpoint,\n      session, this.returnValue)\n      .catch(function (err) {\n        if (isForbiddenError(err)) {\n          self.opts.writeSourceCheckpoint = false;\n          return true;\n        }\n        throw err;\n      });\n  } else {\n    return PouchPromise.resolve(true);\n  }\n};\n\nvar comparisons = {\n  \"undefined\": function (targetDoc, sourceDoc) {\n    // This is the previous comparison function\n    if (collate(targetDoc.last_seq, sourceDoc.last_seq) === 0) {\n      return sourceDoc.last_seq;\n    }\n    /* istanbul ignore next */\n    return 0;\n  },\n  \"1\": function (targetDoc, sourceDoc) {\n    // This is the comparison function ported from CouchDB\n    return compareReplicationLogs(sourceDoc, targetDoc).last_seq;\n  }\n};\n\nCheckpointer.prototype.getCheckpoint = function () {\n  var self = this;\n\n  if (self.opts && self.opts.writeSourceCheckpoint && !self.opts.writeTargetCheckpoint) {\n    return self.src.get(self.id).then(function (sourceDoc) {\n      return sourceDoc.last_seq || LOWEST_SEQ;\n    }).catch(function (err) {\n      /* istanbul ignore if */\n      if (err.status !== 404) {\n        throw err;\n      }\n      return LOWEST_SEQ;\n    });\n  }\n\n  return self.target.get(self.id).then(function (targetDoc) {\n    if (self.opts && self.opts.writeTargetCheckpoint && !self.opts.writeSourceCheckpoint) {\n      return targetDoc.last_seq || LOWEST_SEQ;\n    }\n\n    return self.src.get(self.id).then(function (sourceDoc) {\n      // Since we can't migrate an old version doc to a new one\n      // (no session id), we just go with the lowest seq in this case\n      /* istanbul ignore if */\n      if (targetDoc.version !== sourceDoc.version) {\n        return LOWEST_SEQ;\n      }\n\n      var version;\n      if (targetDoc.version) {\n        version = targetDoc.version.toString();\n      } else {\n        version = \"undefined\";\n      }\n\n      if (version in comparisons) {\n        return comparisons[version](targetDoc, sourceDoc);\n      }\n      /* istanbul ignore next */\n      return LOWEST_SEQ;\n    }, function (err) {\n      if (err.status === 404 && targetDoc.last_seq) {\n        return self.src.put({\n          _id: self.id,\n          last_seq: LOWEST_SEQ\n        }).then(function () {\n          return LOWEST_SEQ;\n        }, function (err) {\n          if (isForbiddenError(err)) {\n            self.opts.writeSourceCheckpoint = false;\n            return targetDoc.last_seq;\n          }\n          /* istanbul ignore next */\n          return LOWEST_SEQ;\n        });\n      }\n      throw err;\n    });\n  }).catch(function (err) {\n    if (err.status !== 404) {\n      throw err;\n    }\n    return LOWEST_SEQ;\n  });\n};\n// This checkpoint comparison is ported from CouchDBs source\n// they come from here:\n// https://github.com/apache/couchdb-couch-replicator/blob/master/src/couch_replicator.erl#L863-L906\n\nfunction compareReplicationLogs(srcDoc, tgtDoc) {\n  if (srcDoc.session_id === tgtDoc.session_id) {\n    return {\n      last_seq: srcDoc.last_seq,\n      history: srcDoc.history\n    };\n  }\n\n  return compareReplicationHistory(srcDoc.history, tgtDoc.history);\n}\n\nfunction compareReplicationHistory(sourceHistory, targetHistory) {\n  // the erlang loop via function arguments is not so easy to repeat in JS\n  // therefore, doing this as recursion\n  var S = sourceHistory[0];\n  var sourceRest = sourceHistory.slice(1);\n  var T = targetHistory[0];\n  var targetRest = targetHistory.slice(1);\n\n  if (!S || targetHistory.length === 0) {\n    return {\n      last_seq: LOWEST_SEQ,\n      history: []\n    };\n  }\n\n  var sourceId = S.session_id;\n  /* istanbul ignore if */\n  if (hasSessionId(sourceId, targetHistory)) {\n    return {\n      last_seq: S.last_seq,\n      history: sourceHistory\n    };\n  }\n\n  var targetId = T.session_id;\n  if (hasSessionId(targetId, sourceRest)) {\n    return {\n      last_seq: T.last_seq,\n      history: targetRest\n    };\n  }\n\n  return compareReplicationHistory(sourceRest, targetRest);\n}\n\nfunction hasSessionId(sessionId, history) {\n  var props = history[0];\n  var rest = history.slice(1);\n\n  if (!sessionId || history.length === 0) {\n    return false;\n  }\n\n  if (sessionId === props.session_id) {\n    return true;\n  }\n\n  return hasSessionId(sessionId, rest);\n}\n\nfunction isForbiddenError(err) {\n  return typeof err.status === 'number' && Math.floor(err.status / 100) === 4;\n}\n\nvar STARTING_BACK_OFF = 0;\n\nfunction backOff(opts, returnValue, error, callback) {\n  if (opts.retry === false) {\n    returnValue.emit('error', error);\n    returnValue.removeAllListeners();\n    return;\n  }\n  if (typeof opts.back_off_function !== 'function') {\n    opts.back_off_function = defaultBackOff;\n  }\n  returnValue.emit('requestError', error);\n  if (returnValue.state === 'active' || returnValue.state === 'pending') {\n    returnValue.emit('paused', error);\n    returnValue.state = 'stopped';\n    var backOffSet = function backoffTimeSet() {\n      opts.current_back_off = STARTING_BACK_OFF;\n    };\n    var removeBackOffSetter = function removeBackOffTimeSet() {\n      returnValue.removeListener('active', backOffSet);\n    };\n    returnValue.once('paused', removeBackOffSetter);\n    returnValue.once('active', backOffSet);\n  }\n\n  opts.current_back_off = opts.current_back_off || STARTING_BACK_OFF;\n  opts.current_back_off = opts.back_off_function(opts.current_back_off);\n  setTimeout(callback, opts.current_back_off);\n}\n\nfunction sortObjectPropertiesByKey(queryParams) {\n  return Object.keys(queryParams).sort(collate).reduce(function (result, key) {\n    result[key] = queryParams[key];\n    return result;\n  }, {});\n}\n\n// Generate a unique id particular to this replication.\n// Not guaranteed to align perfectly with CouchDB's rep ids.\nfunction generateReplicationId(src, target, opts) {\n  var docIds = opts.doc_ids ? opts.doc_ids.sort(collate) : '';\n  var filterFun = opts.filter ? opts.filter.toString() : '';\n  var queryParams = '';\n  var filterViewName =  '';\n  var selector = '';\n\n  // possibility for checkpoints to be lost here as behaviour of\n  // JSON.stringify is not stable (see #6226)\n  /* istanbul ignore if */\n  if (opts.selector) {\n    selector = JSON.stringify(opts.selector);\n  }\n\n  if (opts.filter && opts.query_params) {\n    queryParams = JSON.stringify(sortObjectPropertiesByKey(opts.query_params));\n  }\n\n  if (opts.filter && opts.filter === '_view') {\n    filterViewName = opts.view.toString();\n  }\n\n  return PouchPromise.all([src.id(), target.id()]).then(function (res) {\n    var queryData = res[0] + res[1] + filterFun + filterViewName +\n      queryParams + docIds + selector;\n    return new PouchPromise(function (resolve) {\n      binaryMd5(queryData, resolve);\n    });\n  }).then(function (md5sum) {\n    // can't use straight-up md5 alphabet, because\n    // the char '/' is interpreted as being for attachments,\n    // and + is also not url-safe\n    md5sum = md5sum.replace(/\\//g, '.').replace(/\\+/g, '_');\n    return '_local/' + md5sum;\n  });\n}\n\nfunction replicate(src, target, opts, returnValue, result) {\n  var batches = [];               // list of batches to be processed\n  var currentBatch;               // the batch currently being processed\n  var pendingBatch = {\n    seq: 0,\n    changes: [],\n    docs: []\n  }; // next batch, not yet ready to be processed\n  var writingCheckpoint = false;  // true while checkpoint is being written\n  var changesCompleted = false;   // true when all changes received\n  var replicationCompleted = false; // true when replication has completed\n  var last_seq = 0;\n  var continuous = opts.continuous || opts.live || false;\n  var batch_size = opts.batch_size || 100;\n  var batches_limit = opts.batches_limit || 10;\n  var changesPending = false;     // true while src.changes is running\n  var doc_ids = opts.doc_ids;\n  var selector = opts.selector;\n  var repId;\n  var checkpointer;\n  var changedDocs = [];\n  // Like couchdb, every replication gets a unique session id\n  var session = uuid();\n  var seq_interval = opts.seq_interval;\n\n  result = result || {\n    ok: true,\n    start_time: new Date(),\n    docs_read: 0,\n    docs_written: 0,\n    doc_write_failures: 0,\n    errors: []\n  };\n\n  var changesOpts = {};\n  returnValue.ready(src, target);\n\n  function initCheckpointer() {\n    if (checkpointer) {\n      return PouchPromise.resolve();\n    }\n    return generateReplicationId(src, target, opts).then(function (res) {\n      repId = res;\n\n      var checkpointOpts = {};\n      if (opts.checkpoint === false) {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'source') {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: false };\n      } else if (opts.checkpoint === 'target') {\n        checkpointOpts = { writeSourceCheckpoint: false, writeTargetCheckpoint: true };\n      } else {\n        checkpointOpts = { writeSourceCheckpoint: true, writeTargetCheckpoint: true };\n      }\n\n      checkpointer = new Checkpointer(src, target, repId, returnValue, checkpointOpts);\n    });\n  }\n\n  function writeDocs() {\n    changedDocs = [];\n\n    if (currentBatch.docs.length === 0) {\n      return;\n    }\n    var docs = currentBatch.docs;\n    var bulkOpts = {timeout: opts.timeout};\n    return target.bulkDocs({docs: docs, new_edits: false}, bulkOpts).then(function (res) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n\n      // `res` doesn't include full documents (which live in `docs`), so we create a map of \n      // (id -> error), and check for errors while iterating over `docs`\n      var errorsById = Object.create(null);\n      res.forEach(function (res) {\n        if (res.error) {\n          errorsById[res.id] = res;\n        }\n      });\n\n      var errorsNo = Object.keys(errorsById).length;\n      result.doc_write_failures += errorsNo;\n      result.docs_written += docs.length - errorsNo;\n\n      docs.forEach(function (doc) {\n        var error = errorsById[doc._id];\n        if (error) {\n          result.errors.push(error);\n          // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n          var errorName = (error.name || '').toLowerCase();\n          if (errorName === 'unauthorized' || errorName === 'forbidden') {\n            returnValue.emit('denied', clone(error));\n          } else {\n            throw error;\n          }\n        } else {\n          changedDocs.push(doc);\n        }\n      });\n\n    }, function (err) {\n      result.doc_write_failures += docs.length;\n      throw err;\n    });\n  }\n\n  function finishBatch() {\n    if (currentBatch.error) {\n      throw new Error('There was a problem getting docs.');\n    }\n    result.last_seq = last_seq = currentBatch.seq;\n    var outResult = clone(result);\n    if (changedDocs.length) {\n      outResult.docs = changedDocs;\n      // Attach 'pending' property if server supports it (CouchDB 2.0+)\n      /* istanbul ignore if */\n      if (typeof currentBatch.pending === 'number') {\n        outResult.pending = currentBatch.pending;\n        delete currentBatch.pending;\n      }\n      returnValue.emit('change', outResult);\n    }\n    writingCheckpoint = true;\n    return checkpointer.writeCheckpoint(currentBatch.seq,\n        session).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      currentBatch = undefined;\n      getChanges();\n    }).catch(function (err) {\n      onCheckpointError(err);\n      throw err;\n    });\n  }\n\n  function getDiffs() {\n    var diff = {};\n    currentBatch.changes.forEach(function (change) {\n      // Couchbase Sync Gateway emits these, but we can ignore them\n      /* istanbul ignore if */\n      if (change.id === \"_user/\") {\n        return;\n      }\n      diff[change.id] = change.changes.map(function (x) {\n        return x.rev;\n      });\n    });\n    return target.revsDiff(diff).then(function (diffs) {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        throw new Error('cancelled');\n      }\n      // currentBatch.diffs elements are deleted as the documents are written\n      currentBatch.diffs = diffs;\n    });\n  }\n\n  function getBatchDocs() {\n    return getDocs(src, target, currentBatch.diffs, returnValue).then(function (got) {\n      currentBatch.error = !got.ok;\n      got.docs.forEach(function (doc) {\n        delete currentBatch.diffs[doc._id];\n        result.docs_read++;\n        currentBatch.docs.push(doc);\n      });\n    });\n  }\n\n  function startNextBatch() {\n    if (returnValue.cancelled || currentBatch) {\n      return;\n    }\n    if (batches.length === 0) {\n      processPendingBatch(true);\n      return;\n    }\n    currentBatch = batches.shift();\n    getDiffs()\n      .then(getBatchDocs)\n      .then(writeDocs)\n      .then(finishBatch)\n      .then(startNextBatch)\n      .catch(function (err) {\n        abortReplication('batch processing terminated with error', err);\n      });\n  }\n\n\n  function processPendingBatch(immediate) {\n    if (pendingBatch.changes.length === 0) {\n      if (batches.length === 0 && !currentBatch) {\n        if ((continuous && changesOpts.live) || changesCompleted) {\n          returnValue.state = 'pending';\n          returnValue.emit('paused');\n        }\n        if (changesCompleted) {\n          completeReplication();\n        }\n      }\n      return;\n    }\n    if (\n      immediate ||\n      changesCompleted ||\n      pendingBatch.changes.length >= batch_size\n    ) {\n      batches.push(pendingBatch);\n      pendingBatch = {\n        seq: 0,\n        changes: [],\n        docs: []\n      };\n      if (returnValue.state === 'pending' || returnValue.state === 'stopped') {\n        returnValue.state = 'active';\n        returnValue.emit('active');\n      }\n      startNextBatch();\n    }\n  }\n\n\n  function abortReplication(reason, err) {\n    if (replicationCompleted) {\n      return;\n    }\n    if (!err.message) {\n      err.message = reason;\n    }\n    result.ok = false;\n    result.status = 'aborting';\n    batches = [];\n    pendingBatch = {\n      seq: 0,\n      changes: [],\n      docs: []\n    };\n    completeReplication(err);\n  }\n\n\n  function completeReplication(fatalError) {\n    if (replicationCompleted) {\n      return;\n    }\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      result.status = 'cancelled';\n      if (writingCheckpoint) {\n        return;\n      }\n    }\n    result.status = result.status || 'complete';\n    result.end_time = new Date();\n    result.last_seq = last_seq;\n    replicationCompleted = true;\n\n    if (fatalError) {\n      // need to extend the error because Firefox considers \".result\" read-only\n      fatalError = createError(fatalError);\n      fatalError.result = result;\n\n      // Normalize error name. i.e. 'Unauthorized' -> 'unauthorized' (eg Sync Gateway)\n      var errorName = (fatalError.name || '').toLowerCase();\n      if (errorName === 'unauthorized' || errorName === 'forbidden') {\n        returnValue.emit('error', fatalError);\n        returnValue.removeAllListeners();\n      } else {\n        backOff(opts, returnValue, fatalError, function () {\n          replicate(src, target, opts, returnValue);\n        });\n      }\n    } else {\n      returnValue.emit('complete', result);\n      returnValue.removeAllListeners();\n    }\n  }\n\n\n  function onChange(change, pending, lastSeq) {\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    // Attach 'pending' property if server supports it (CouchDB 2.0+)\n    /* istanbul ignore if */\n    if (typeof pending === 'number') {\n      pendingBatch.pending = pending;\n    }\n\n    var filter = filterChange(opts)(change);\n    if (!filter) {\n      return;\n    }\n    pendingBatch.seq = change.seq || lastSeq;\n    pendingBatch.changes.push(change);\n    processPendingBatch(batches.length === 0 && changesOpts.live);\n  }\n\n\n  function onChangesComplete(changes) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n\n    // if no results were returned then we're done,\n    // else fetch more\n    if (changes.results.length > 0) {\n      changesOpts.since = changes.last_seq;\n      getChanges();\n      processPendingBatch(true);\n    } else {\n\n      var complete = function () {\n        if (continuous) {\n          changesOpts.live = true;\n          getChanges();\n        } else {\n          changesCompleted = true;\n        }\n        processPendingBatch(true);\n      };\n\n      // update the checkpoint so we start from the right seq next time\n      if (!currentBatch && changes.results.length === 0) {\n        writingCheckpoint = true;\n        checkpointer.writeCheckpoint(changes.last_seq,\n            session).then(function () {\n          writingCheckpoint = false;\n          result.last_seq = last_seq = changes.last_seq;\n          complete();\n        })\n        .catch(onCheckpointError);\n      } else {\n        complete();\n      }\n    }\n  }\n\n\n  function onChangesError(err) {\n    changesPending = false;\n    /* istanbul ignore if */\n    if (returnValue.cancelled) {\n      return completeReplication();\n    }\n    abortReplication('changes rejected', err);\n  }\n\n\n  function getChanges() {\n    if (!(\n      !changesPending &&\n      !changesCompleted &&\n      batches.length < batches_limit\n      )) {\n      return;\n    }\n    changesPending = true;\n    function abortChanges() {\n      changes.cancel();\n    }\n    function removeListener() {\n      returnValue.removeListener('cancel', abortChanges);\n    }\n\n    if (returnValue._changes) { // remove old changes() and listeners\n      returnValue.removeListener('cancel', returnValue._abortChanges);\n      returnValue._changes.cancel();\n    }\n    returnValue.once('cancel', abortChanges);\n\n    var changes = src.changes(changesOpts)\n      .on('change', onChange);\n    changes.then(removeListener, removeListener);\n    changes.then(onChangesComplete)\n      .catch(onChangesError);\n\n    if (opts.retry) {\n      // save for later so we can cancel if necessary\n      returnValue._changes = changes;\n      returnValue._abortChanges = abortChanges;\n    }\n  }\n\n\n  function startChanges() {\n    initCheckpointer().then(function () {\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      return checkpointer.getCheckpoint().then(function (checkpoint) {\n        last_seq = checkpoint;\n        changesOpts = {\n          since: last_seq,\n          limit: batch_size,\n          batch_size: batch_size,\n          style: 'all_docs',\n          doc_ids: doc_ids,\n          selector: selector,\n          return_docs: true // required so we know when we're done\n        };\n        if (seq_interval !== false) {\n          changesOpts.seq_interval = seq_interval || batch_size;\n        }\n        if (opts.filter) {\n          if (typeof opts.filter !== 'string') {\n            // required for the client-side filter in onChange\n            changesOpts.include_docs = true;\n          } else { // ddoc filter\n            changesOpts.filter = opts.filter;\n          }\n        }\n        if ('heartbeat' in opts) {\n          changesOpts.heartbeat = opts.heartbeat;\n        }\n        if ('timeout' in opts) {\n          changesOpts.timeout = opts.timeout;\n        }\n        if (opts.query_params) {\n          changesOpts.query_params = opts.query_params;\n        }\n        if (opts.view) {\n          changesOpts.view = opts.view;\n        }\n        getChanges();\n      });\n    }).catch(function (err) {\n      abortReplication('getCheckpoint rejected with ', err);\n    });\n  }\n\n  /* istanbul ignore next */\n  function onCheckpointError(err) {\n    writingCheckpoint = false;\n    abortReplication('writeCheckpoint completed with error', err);\n  }\n\n  /* istanbul ignore if */\n  if (returnValue.cancelled) { // cancelled immediately\n    completeReplication();\n    return;\n  }\n\n  if (!returnValue._addedListeners) {\n    returnValue.once('cancel', completeReplication);\n\n    if (typeof opts.complete === 'function') {\n      returnValue.once('error', opts.complete);\n      returnValue.once('complete', function (result) {\n        opts.complete(null, result);\n      });\n    }\n    returnValue._addedListeners = true;\n  }\n\n  if (typeof opts.since === 'undefined') {\n    startChanges();\n  } else {\n    initCheckpointer().then(function () {\n      writingCheckpoint = true;\n      return checkpointer.writeCheckpoint(opts.since, session);\n    }).then(function () {\n      writingCheckpoint = false;\n      /* istanbul ignore if */\n      if (returnValue.cancelled) {\n        completeReplication();\n        return;\n      }\n      last_seq = opts.since;\n      startChanges();\n    }).catch(onCheckpointError);\n  }\n}\n\n// We create a basic promise so the caller can cancel the replication possibly\n// before we have actually started listening to changes etc\ninherits(Replication, events.EventEmitter);\nfunction Replication() {\n  events.EventEmitter.call(this);\n  this.cancelled = false;\n  this.state = 'pending';\n  var self = this;\n  var promise = new PouchPromise(function (fulfill, reject) {\n    self.once('complete', fulfill);\n    self.once('error', reject);\n  });\n  self.then = function (resolve, reject) {\n    return promise.then(resolve, reject);\n  };\n  self.catch = function (reject) {\n    return promise.catch(reject);\n  };\n  // As we allow error handling via \"error\" event as well,\n  // put a stub in here so that rejecting never throws UnhandledError.\n  self.catch(function () {});\n}\n\nReplication.prototype.cancel = function () {\n  this.cancelled = true;\n  this.state = 'cancelled';\n  this.emit('cancel');\n};\n\nReplication.prototype.ready = function (src, target) {\n  var self = this;\n  if (self._readyCalled) {\n    return;\n  }\n  self._readyCalled = true;\n\n  function onDestroy() {\n    self.cancel();\n  }\n  src.once('destroyed', onDestroy);\n  target.once('destroyed', onDestroy);\n  function cleanup() {\n    src.removeListener('destroyed', onDestroy);\n    target.removeListener('destroyed', onDestroy);\n  }\n  self.once('complete', cleanup);\n};\n\nfunction toPouch(db, opts) {\n  var PouchConstructor = opts.PouchConstructor;\n  if (typeof db === 'string') {\n    return new PouchConstructor(db, opts);\n  } else {\n    return db;\n  }\n}\n\nfunction replicateWrapper(src, target, opts, callback) {\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n\n  if (opts.doc_ids && !Array.isArray(opts.doc_ids)) {\n    throw createError(BAD_REQUEST,\n                       \"`doc_ids` filter parameter is not a list.\");\n  }\n\n  opts.complete = callback;\n  opts = clone(opts);\n  opts.continuous = opts.continuous || opts.live;\n  opts.retry = ('retry' in opts) ? opts.retry : false;\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  var replicateRet = new Replication(opts);\n  var srcPouch = toPouch(src, opts);\n  var targetPouch = toPouch(target, opts);\n  replicate(srcPouch, targetPouch, opts, replicateRet);\n  return replicateRet;\n}\n\ninherits(Sync, events.EventEmitter);\nfunction sync$1(src, target, opts, callback) {\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = {};\n  }\n  if (typeof opts === 'undefined') {\n    opts = {};\n  }\n  opts = clone(opts);\n  /*jshint validthis:true */\n  opts.PouchConstructor = opts.PouchConstructor || this;\n  src = toPouch(src, opts);\n  target = toPouch(target, opts);\n  return new Sync(src, target, opts, callback);\n}\n\nfunction Sync(src, target, opts, callback) {\n  var self = this;\n  this.canceled = false;\n\n  var optsPush = opts.push ? $inject_Object_assign({}, opts, opts.push) : opts;\n  var optsPull = opts.pull ? $inject_Object_assign({}, opts, opts.pull) : opts;\n\n  this.push = replicateWrapper(src, target, optsPush);\n  this.pull = replicateWrapper(target, src, optsPull);\n\n  this.pushPaused = true;\n  this.pullPaused = true;\n\n  function pullChange(change) {\n    self.emit('change', {\n      direction: 'pull',\n      change: change\n    });\n  }\n  function pushChange(change) {\n    self.emit('change', {\n      direction: 'push',\n      change: change\n    });\n  }\n  function pushDenied(doc) {\n    self.emit('denied', {\n      direction: 'push',\n      doc: doc\n    });\n  }\n  function pullDenied(doc) {\n    self.emit('denied', {\n      direction: 'pull',\n      doc: doc\n    });\n  }\n  function pushPaused() {\n    self.pushPaused = true;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('paused');\n    }\n  }\n  function pullPaused() {\n    self.pullPaused = true;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('paused');\n    }\n  }\n  function pushActive() {\n    self.pushPaused = false;\n    /* istanbul ignore if */\n    if (self.pullPaused) {\n      self.emit('active', {\n        direction: 'push'\n      });\n    }\n  }\n  function pullActive() {\n    self.pullPaused = false;\n    /* istanbul ignore if */\n    if (self.pushPaused) {\n      self.emit('active', {\n        direction: 'pull'\n      });\n    }\n  }\n\n  var removed = {};\n\n  function removeAll(type) { // type is 'push' or 'pull'\n    return function (event, func) {\n      var isChange = event === 'change' &&\n        (func === pullChange || func === pushChange);\n      var isDenied = event === 'denied' &&\n        (func === pullDenied || func === pushDenied);\n      var isPaused = event === 'paused' &&\n        (func === pullPaused || func === pushPaused);\n      var isActive = event === 'active' &&\n        (func === pullActive || func === pushActive);\n\n      if (isChange || isDenied || isPaused || isActive) {\n        if (!(event in removed)) {\n          removed[event] = {};\n        }\n        removed[event][type] = true;\n        if (Object.keys(removed[event]).length === 2) {\n          // both push and pull have asked to be removed\n          self.removeAllListeners(event);\n        }\n      }\n    };\n  }\n\n  if (opts.live) {\n    this.push.on('complete', self.pull.cancel.bind(self.pull));\n    this.pull.on('complete', self.push.cancel.bind(self.push));\n  }\n\n  function addOneListener(ee, event, listener) {\n    if (ee.listeners(event).indexOf(listener) == -1) {\n      ee.on(event, listener);\n    }\n  }\n\n  this.on('newListener', function (event) {\n    if (event === 'change') {\n      addOneListener(self.pull, 'change', pullChange);\n      addOneListener(self.push, 'change', pushChange);\n    } else if (event === 'denied') {\n      addOneListener(self.pull, 'denied', pullDenied);\n      addOneListener(self.push, 'denied', pushDenied);\n    } else if (event === 'active') {\n      addOneListener(self.pull, 'active', pullActive);\n      addOneListener(self.push, 'active', pushActive);\n    } else if (event === 'paused') {\n      addOneListener(self.pull, 'paused', pullPaused);\n      addOneListener(self.push, 'paused', pushPaused);\n    }\n  });\n\n  this.on('removeListener', function (event) {\n    if (event === 'change') {\n      self.pull.removeListener('change', pullChange);\n      self.push.removeListener('change', pushChange);\n    } else if (event === 'denied') {\n      self.pull.removeListener('denied', pullDenied);\n      self.push.removeListener('denied', pushDenied);\n    } else if (event === 'active') {\n      self.pull.removeListener('active', pullActive);\n      self.push.removeListener('active', pushActive);\n    } else if (event === 'paused') {\n      self.pull.removeListener('paused', pullPaused);\n      self.push.removeListener('paused', pushPaused);\n    }\n  });\n\n  this.pull.on('removeListener', removeAll('pull'));\n  this.push.on('removeListener', removeAll('push'));\n\n  var promise = PouchPromise.all([\n    this.push,\n    this.pull\n  ]).then(function (resp) {\n    var out = {\n      push: resp[0],\n      pull: resp[1]\n    };\n    self.emit('complete', out);\n    if (callback) {\n      callback(null, out);\n    }\n    self.removeAllListeners();\n    return out;\n  }, function (err) {\n    self.cancel();\n    if (callback) {\n      // if there's a callback, then the callback can receive\n      // the error event\n      callback(err);\n    } else {\n      // if there's no callback, then we're safe to emit an error\n      // event, which would otherwise throw an unhandled error\n      // due to 'error' being a special event in EventEmitters\n      self.emit('error', err);\n    }\n    self.removeAllListeners();\n    if (callback) {\n      // no sense throwing if we're already emitting an 'error' event\n      throw err;\n    }\n  });\n\n  this.then = function (success, err) {\n    return promise.then(success, err);\n  };\n\n  this.catch = function (err) {\n    return promise.catch(err);\n  };\n}\n\nSync.prototype.cancel = function () {\n  if (!this.canceled) {\n    this.canceled = true;\n    this.push.cancel();\n    this.pull.cancel();\n  }\n};\n\nfunction replication(PouchDB) {\n  PouchDB.replicate = replicateWrapper;\n  PouchDB.sync = sync$1;\n\n  Object.defineProperty(PouchDB.prototype, 'replicate', {\n    get: function () {\n      var self = this;\n      if (typeof this.replicateMethods === 'undefined') {\n        this.replicateMethods = {\n          from: function (other, opts, callback) {\n            return self.constructor.replicate(other, self, opts, callback);\n          },\n          to: function (other, opts, callback) {\n            return self.constructor.replicate(self, other, opts, callback);\n          }\n        };\n      }\n      return this.replicateMethods;\n    }\n  });\n\n  PouchDB.prototype.sync = function (dbName, opts, callback) {\n    return this.constructor.sync(this, dbName, opts, callback);\n  };\n}\n\nPouchDB$5.plugin(IDBPouch)\n  .plugin(WebSqlPouch)\n  .plugin(HttpPouch$1)\n  .plugin(mapreduce)\n  .plugin(replication);\n\n// Pull from src because pouchdb-node/pouchdb-browser themselves\n// are aggressively optimized and jsnext:main would normally give us this\n// aggressive bundle.\n\nmodule.exports = PouchDB$5;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/lib/index-browser.js\n// module id = 77\n// module chunks = 0","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/index.js\n// module id = 78\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v1.js\n// module id = 79\n// module chunks = 0","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16); // eslint-disable-line no-undef\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/rng-browser.js\n// module id = 80\n// module chunks = 0","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/bytesToUuid.js\n// module id = 81\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v4.js\n// module id = 82\n// module chunks = 0","'use strict';\nvar immediate = require('immediate');\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lie/lib/browser.js\n// module id = 83\n// module chunks = 0","'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/immediate/lib/browser.js\n// module id = 84\n// module chunks = 0","'use strict';\n\nmodule.exports = argsArray;\n\nfunction argsArray(fun) {\n  return function () {\n    var len = arguments.length;\n    if (len) {\n      var args = [];\n      var i = -1;\n      while (++i < len) {\n        args[i] = arguments[i];\n      }\n      return fun.call(this, args);\n    } else {\n      return fun.call(this, []);\n    }\n  };\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/argsarray/index.js\n// module id = 85\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/events/events.js\n// module id = 86\n// module chunks = 0","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/inherits/inherits_browser.js\n// module id = 87\n// module chunks = 0","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/~/debug/src/browser.js\n// module id = 88\n// module chunks = 0","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pouchdb/~/debug/src/debug.js\n// module id = 90\n// module chunks = 0","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ms/index.js\n// module id = 91\n// module chunks = 0","(function (factory) {\n    if (typeof exports === 'object') {\n        // Node/CommonJS\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        // AMD\n        define(factory);\n    } else {\n        // Browser globals (with support for web workers)\n        var glob;\n\n        try {\n            glob = window;\n        } catch (e) {\n            glob = self;\n        }\n\n        glob.SparkMD5 = factory();\n    }\n}(function (undefined) {\n\n    'use strict';\n\n    /*\n     * Fastest md5 implementation around (JKM md5).\n     * Credits: Joseph Myers\n     *\n     * @see http://www.myersdaily.org/joseph/javascript/md5-text.html\n     * @see http://jsperf.com/md5-shootout/7\n     */\n\n    /* this function is much faster,\n      so if possible we use it. Some IEs\n      are the only ones I know of that\n      need the idiotic second function,\n      generated by an if clause.  */\n    var add32 = function (a, b) {\n        return (a + b) & 0xFFFFFFFF;\n    },\n        hex_chr = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n\n\n    function cmn(q, a, b, x, s, t) {\n        a = add32(add32(a, q), add32(x, t));\n        return add32((a << s) | (a >>> (32 - s)), b);\n    }\n\n    function md5cycle(x, k) {\n        var a = x[0],\n            b = x[1],\n            c = x[2],\n            d = x[3];\n\n        a += (b & c | ~b & d) + k[0] - 680876936 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[1] - 389564586 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[2] + 606105819 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[3] - 1044525330 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[4] - 176418897 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[5] + 1200080426 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[6] - 1473231341 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[7] - 45705983 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[8] + 1770035416 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[9] - 1958414417 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[10] - 42063 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[11] - 1990404162 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n        a += (b & c | ~b & d) + k[12] + 1804603682 | 0;\n        a  = (a << 7 | a >>> 25) + b | 0;\n        d += (a & b | ~a & c) + k[13] - 40341101 | 0;\n        d  = (d << 12 | d >>> 20) + a | 0;\n        c += (d & a | ~d & b) + k[14] - 1502002290 | 0;\n        c  = (c << 17 | c >>> 15) + d | 0;\n        b += (c & d | ~c & a) + k[15] + 1236535329 | 0;\n        b  = (b << 22 | b >>> 10) + c | 0;\n\n        a += (b & d | c & ~d) + k[1] - 165796510 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[6] - 1069501632 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[11] + 643717713 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[0] - 373897302 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[5] - 701558691 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[10] + 38016083 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[15] - 660478335 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[4] - 405537848 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[9] + 568446438 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[14] - 1019803690 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[3] - 187363961 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[8] + 1163531501 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n        a += (b & d | c & ~d) + k[13] - 1444681467 | 0;\n        a  = (a << 5 | a >>> 27) + b | 0;\n        d += (a & c | b & ~c) + k[2] - 51403784 | 0;\n        d  = (d << 9 | d >>> 23) + a | 0;\n        c += (d & b | a & ~b) + k[7] + 1735328473 | 0;\n        c  = (c << 14 | c >>> 18) + d | 0;\n        b += (c & a | d & ~a) + k[12] - 1926607734 | 0;\n        b  = (b << 20 | b >>> 12) + c | 0;\n\n        a += (b ^ c ^ d) + k[5] - 378558 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[8] - 2022574463 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[11] + 1839030562 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[14] - 35309556 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[1] - 1530992060 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[4] + 1272893353 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[7] - 155497632 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[10] - 1094730640 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[13] + 681279174 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[0] - 358537222 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[3] - 722521979 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[6] + 76029189 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n        a += (b ^ c ^ d) + k[9] - 640364487 | 0;\n        a  = (a << 4 | a >>> 28) + b | 0;\n        d += (a ^ b ^ c) + k[12] - 421815835 | 0;\n        d  = (d << 11 | d >>> 21) + a | 0;\n        c += (d ^ a ^ b) + k[15] + 530742520 | 0;\n        c  = (c << 16 | c >>> 16) + d | 0;\n        b += (c ^ d ^ a) + k[2] - 995338651 | 0;\n        b  = (b << 23 | b >>> 9) + c | 0;\n\n        a += (c ^ (b | ~d)) + k[0] - 198630844 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[7] + 1126891415 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[14] - 1416354905 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[5] - 57434055 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[12] + 1700485571 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[3] - 1894986606 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[10] - 1051523 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[1] - 2054922799 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[8] + 1873313359 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[15] - 30611744 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[6] - 1560198380 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[13] + 1309151649 | 0;\n        b  = (b << 21 |b >>> 11) + c | 0;\n        a += (c ^ (b | ~d)) + k[4] - 145523070 | 0;\n        a  = (a << 6 | a >>> 26) + b | 0;\n        d += (b ^ (a | ~c)) + k[11] - 1120210379 | 0;\n        d  = (d << 10 | d >>> 22) + a | 0;\n        c += (a ^ (d | ~b)) + k[2] + 718787259 | 0;\n        c  = (c << 15 | c >>> 17) + d | 0;\n        b += (d ^ (c | ~a)) + k[9] - 343485551 | 0;\n        b  = (b << 21 | b >>> 11) + c | 0;\n\n        x[0] = a + x[0] | 0;\n        x[1] = b + x[1] | 0;\n        x[2] = c + x[2] | 0;\n        x[3] = d + x[3] | 0;\n    }\n\n    function md5blk(s) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = s.charCodeAt(i) + (s.charCodeAt(i + 1) << 8) + (s.charCodeAt(i + 2) << 16) + (s.charCodeAt(i + 3) << 24);\n        }\n        return md5blks;\n    }\n\n    function md5blk_array(a) {\n        var md5blks = [],\n            i; /* Andy King said do it this way. */\n\n        for (i = 0; i < 64; i += 4) {\n            md5blks[i >> 2] = a[i] + (a[i + 1] << 8) + (a[i + 2] << 16) + (a[i + 3] << 24);\n        }\n        return md5blks;\n    }\n\n    function md51(s) {\n        var n = s.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk(s.substring(i - 64, i)));\n        }\n        s = s.substring(i - 64);\n        length = s.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= s.charCodeAt(i) << ((i % 4) << 3);\n        }\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n        return state;\n    }\n\n    function md51_array(a) {\n        var n = a.length,\n            state = [1732584193, -271733879, -1732584194, 271733878],\n            i,\n            length,\n            tail,\n            tmp,\n            lo,\n            hi;\n\n        for (i = 64; i <= n; i += 64) {\n            md5cycle(state, md5blk_array(a.subarray(i - 64, i)));\n        }\n\n        // Not sure if it is a bug, however IE10 will always produce a sub array of length 1\n        // containing the last element of the parent array if the sub array specified starts\n        // beyond the length of the parent array - weird.\n        // https://connect.microsoft.com/IE/feedback/details/771452/typed-array-subarray-issue\n        a = (i - 64) < n ? a.subarray(i - 64) : new Uint8Array(0);\n\n        length = a.length;\n        tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= a[i] << ((i % 4) << 3);\n        }\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(state, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Beware that the final length might not fit in 32 bits so we take care of that\n        tmp = n * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n\n        md5cycle(state, tail);\n\n        return state;\n    }\n\n    function rhex(n) {\n        var s = '',\n            j;\n        for (j = 0; j < 4; j += 1) {\n            s += hex_chr[(n >> (j * 8 + 4)) & 0x0F] + hex_chr[(n >> (j * 8)) & 0x0F];\n        }\n        return s;\n    }\n\n    function hex(x) {\n        var i;\n        for (i = 0; i < x.length; i += 1) {\n            x[i] = rhex(x[i]);\n        }\n        return x.join('');\n    }\n\n    // In some cases the fast add32 function cannot be used..\n    if (hex(md51('hello')) !== '5d41402abc4b2a76b9719d911017c592') {\n        add32 = function (x, y) {\n            var lsw = (x & 0xFFFF) + (y & 0xFFFF),\n                msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n            return (msw << 16) | (lsw & 0xFFFF);\n        };\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * ArrayBuffer slice polyfill.\n     *\n     * @see https://github.com/ttaubert/node-arraybuffer-slice\n     */\n\n    if (typeof ArrayBuffer !== 'undefined' && !ArrayBuffer.prototype.slice) {\n        (function () {\n            function clamp(val, length) {\n                val = (val | 0) || 0;\n\n                if (val < 0) {\n                    return Math.max(val + length, 0);\n                }\n\n                return Math.min(val, length);\n            }\n\n            ArrayBuffer.prototype.slice = function (from, to) {\n                var length = this.byteLength,\n                    begin = clamp(from, length),\n                    end = length,\n                    num,\n                    target,\n                    targetArray,\n                    sourceArray;\n\n                if (to !== undefined) {\n                    end = clamp(to, length);\n                }\n\n                if (begin > end) {\n                    return new ArrayBuffer(0);\n                }\n\n                num = end - begin;\n                target = new ArrayBuffer(num);\n                targetArray = new Uint8Array(target);\n\n                sourceArray = new Uint8Array(this, begin, num);\n                targetArray.set(sourceArray);\n\n                return target;\n            };\n        })();\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * Helpers.\n     */\n\n    function toUtf8(str) {\n        if (/[\\u0080-\\uFFFF]/.test(str)) {\n            str = unescape(encodeURIComponent(str));\n        }\n\n        return str;\n    }\n\n    function utf8Str2ArrayBuffer(str, returnUInt8Array) {\n        var length = str.length,\n           buff = new ArrayBuffer(length),\n           arr = new Uint8Array(buff),\n           i;\n\n        for (i = 0; i < length; i += 1) {\n            arr[i] = str.charCodeAt(i);\n        }\n\n        return returnUInt8Array ? arr : buff;\n    }\n\n    function arrayBuffer2Utf8Str(buff) {\n        return String.fromCharCode.apply(null, new Uint8Array(buff));\n    }\n\n    function concatenateArrayBuffers(first, second, returnUInt8Array) {\n        var result = new Uint8Array(first.byteLength + second.byteLength);\n\n        result.set(new Uint8Array(first));\n        result.set(new Uint8Array(second), first.byteLength);\n\n        return returnUInt8Array ? result : result.buffer;\n    }\n\n    function hexToBinaryString(hex) {\n        var bytes = [],\n            length = hex.length,\n            x;\n\n        for (x = 0; x < length - 1; x += 2) {\n            bytes.push(parseInt(hex.substr(x, 2), 16));\n        }\n\n        return String.fromCharCode.apply(String, bytes);\n    }\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation.\n     *\n     * Use this class to perform an incremental md5, otherwise use the\n     * static methods instead.\n     */\n\n    function SparkMD5() {\n        // call reset to init the instance\n        this.reset();\n    }\n\n    /**\n     * Appends a string.\n     * A conversion will be applied if an utf8 string is detected.\n     *\n     * @param {String} str The string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.append = function (str) {\n        // Converts the string to utf8 bytes if necessary\n        // Then append as binary\n        this.appendBinary(toUtf8(str));\n\n        return this;\n    };\n\n    /**\n     * Appends a binary string.\n     *\n     * @param {String} contents The binary string to be appended\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.appendBinary = function (contents) {\n        this._buff += contents;\n        this._length += contents.length;\n\n        var length = this._buff.length,\n            i;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk(this._buff.substring(i - 64, i)));\n        }\n\n        this._buff = this._buff.substring(i - 64);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            i,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff.charCodeAt(i) << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.reset = function () {\n        this._buff = '';\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.prototype.getState = function () {\n        return {\n            buff: this._buff,\n            length: this._length,\n            hash: this._hash\n        };\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5} The instance itself\n     */\n    SparkMD5.prototype.setState = function (state) {\n        this._buff = state.buff;\n        this._length = state.length;\n        this._hash = state.hash;\n\n        return this;\n    };\n\n    /**\n     * Releases memory used by the incremental buffer and other additional\n     * resources. If you plan to use the instance again, use reset instead.\n     */\n    SparkMD5.prototype.destroy = function () {\n        delete this._hash;\n        delete this._buff;\n        delete this._length;\n    };\n\n    /**\n     * Finish the final calculation based on the tail.\n     *\n     * @param {Array}  tail   The tail (will be modified)\n     * @param {Number} length The length of the remaining buffer\n     */\n    SparkMD5.prototype._finish = function (tail, length) {\n        var i = length,\n            tmp,\n            lo,\n            hi;\n\n        tail[i >> 2] |= 0x80 << ((i % 4) << 3);\n        if (i > 55) {\n            md5cycle(this._hash, tail);\n            for (i = 0; i < 16; i += 1) {\n                tail[i] = 0;\n            }\n        }\n\n        // Do the final computation based on the tail and length\n        // Beware that the final length may not fit in 32 bits so we take care of that\n        tmp = this._length * 8;\n        tmp = tmp.toString(16).match(/(.*?)(.{0,8})$/);\n        lo = parseInt(tmp[2], 16);\n        hi = parseInt(tmp[1], 16) || 0;\n\n        tail[14] = lo;\n        tail[15] = hi;\n        md5cycle(this._hash, tail);\n    };\n\n    /**\n     * Performs the md5 hash on a string.\n     * A conversion will be applied if utf8 string is detected.\n     *\n     * @param {String}  str The string\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hash = function (str, raw) {\n        // Converts the string to utf8 bytes if necessary\n        // Then compute it using the binary function\n        return SparkMD5.hashBinary(toUtf8(str), raw);\n    };\n\n    /**\n     * Performs the md5 hash on a binary string.\n     *\n     * @param {String}  content The binary string\n     * @param {Boolean} raw     True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.hashBinary = function (content, raw) {\n        var hash = md51(content),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    // ---------------------------------------------------\n\n    /**\n     * SparkMD5 OOP implementation for array buffers.\n     *\n     * Use this class to perform an incremental md5 ONLY for array buffers.\n     */\n    SparkMD5.ArrayBuffer = function () {\n        // call reset to init the instance\n        this.reset();\n    };\n\n    /**\n     * Appends an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array to be appended\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.append = function (arr) {\n        var buff = concatenateArrayBuffers(this._buff.buffer, arr, true),\n            length = buff.length,\n            i;\n\n        this._length += arr.byteLength;\n\n        for (i = 64; i <= length; i += 64) {\n            md5cycle(this._hash, md5blk_array(buff.subarray(i - 64, i)));\n        }\n\n        this._buff = (i - 64) < length ? new Uint8Array(buff.buffer.slice(i - 64)) : new Uint8Array(0);\n\n        return this;\n    };\n\n    /**\n     * Finishes the incremental computation, reseting the internal state and\n     * returning the result.\n     *\n     * @param {Boolean} raw True to get the raw string, false to get the hex string\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.prototype.end = function (raw) {\n        var buff = this._buff,\n            length = buff.length,\n            tail = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n            i,\n            ret;\n\n        for (i = 0; i < length; i += 1) {\n            tail[i >> 2] |= buff[i] << ((i % 4) << 3);\n        }\n\n        this._finish(tail, length);\n        ret = hex(this._hash);\n\n        if (raw) {\n            ret = hexToBinaryString(ret);\n        }\n\n        this.reset();\n\n        return ret;\n    };\n\n    /**\n     * Resets the internal state of the computation.\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.reset = function () {\n        this._buff = new Uint8Array(0);\n        this._length = 0;\n        this._hash = [1732584193, -271733879, -1732584194, 271733878];\n\n        return this;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @return {Object} The state\n     */\n    SparkMD5.ArrayBuffer.prototype.getState = function () {\n        var state = SparkMD5.prototype.getState.call(this);\n\n        // Convert buffer to a string\n        state.buff = arrayBuffer2Utf8Str(state.buff);\n\n        return state;\n    };\n\n    /**\n     * Gets the internal state of the computation.\n     *\n     * @param {Object} state The state\n     *\n     * @return {SparkMD5.ArrayBuffer} The instance itself\n     */\n    SparkMD5.ArrayBuffer.prototype.setState = function (state) {\n        // Convert string to buffer\n        state.buff = utf8Str2ArrayBuffer(state.buff, true);\n\n        return SparkMD5.prototype.setState.call(this, state);\n    };\n\n    SparkMD5.ArrayBuffer.prototype.destroy = SparkMD5.prototype.destroy;\n\n    SparkMD5.ArrayBuffer.prototype._finish = SparkMD5.prototype._finish;\n\n    /**\n     * Performs the md5 hash on an array buffer.\n     *\n     * @param {ArrayBuffer} arr The array buffer\n     * @param {Boolean}     raw True to get the raw string, false to get the hex one\n     *\n     * @return {String} The result\n     */\n    SparkMD5.ArrayBuffer.hash = function (arr, raw) {\n        var hash = md51_array(new Uint8Array(arr)),\n            ret = hex(hash);\n\n        return raw ? hexToBinaryString(ret) : ret;\n    };\n\n    return SparkMD5;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/spark-md5/spark-md5.js\n// module id = 92\n// module chunks = 0","'use strict';\n\n/**\n * Stringify/parse functions that don't operate\n * recursively, so they avoid call stack exceeded\n * errors.\n */\nexports.stringify = function stringify(input) {\n  var queue = [];\n  queue.push({obj: input});\n\n  var res = '';\n  var next, obj, prefix, val, i, arrayPrefix, keys, k, key, value, objPrefix;\n  while ((next = queue.pop())) {\n    obj = next.obj;\n    prefix = next.prefix || '';\n    val = next.val || '';\n    res += prefix;\n    if (val) {\n      res += val;\n    } else if (typeof obj !== 'object') {\n      res += typeof obj === 'undefined' ? null : JSON.stringify(obj);\n    } else if (obj === null) {\n      res += 'null';\n    } else if (Array.isArray(obj)) {\n      queue.push({val: ']'});\n      for (i = obj.length - 1; i >= 0; i--) {\n        arrayPrefix = i === 0 ? '' : ',';\n        queue.push({obj: obj[i], prefix: arrayPrefix});\n      }\n      queue.push({val: '['});\n    } else { // object\n      keys = [];\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          keys.push(k);\n        }\n      }\n      queue.push({val: '}'});\n      for (i = keys.length - 1; i >= 0; i--) {\n        key = keys[i];\n        value = obj[key];\n        objPrefix = (i > 0 ? ',' : '');\n        objPrefix += JSON.stringify(key) + ':';\n        queue.push({obj: value, prefix: objPrefix});\n      }\n      queue.push({val: '{'});\n    }\n  }\n  return res;\n};\n\n// Convenience function for the parse function.\n// This pop function is basically copied from\n// pouchCollate.parseIndexableString\nfunction pop(obj, stack, metaStack) {\n  var lastMetaElement = metaStack[metaStack.length - 1];\n  if (obj === lastMetaElement.element) {\n    // popping a meta-element, e.g. an object whose value is another object\n    metaStack.pop();\n    lastMetaElement = metaStack[metaStack.length - 1];\n  }\n  var element = lastMetaElement.element;\n  var lastElementIndex = lastMetaElement.index;\n  if (Array.isArray(element)) {\n    element.push(obj);\n  } else if (lastElementIndex === stack.length - 2) { // obj with key+value\n    var key = stack.pop();\n    element[key] = obj;\n  } else {\n    stack.push(obj); // obj with key only\n  }\n}\n\nexports.parse = function (str) {\n  var stack = [];\n  var metaStack = []; // stack for arrays and objects\n  var i = 0;\n  var collationIndex,parsedNum,numChar;\n  var parsedString,lastCh,numConsecutiveSlashes,ch;\n  var arrayElement, objElement;\n  while (true) {\n    collationIndex = str[i++];\n    if (collationIndex === '}' ||\n        collationIndex === ']' ||\n        typeof collationIndex === 'undefined') {\n      if (stack.length === 1) {\n        return stack.pop();\n      } else {\n        pop(stack.pop(), stack, metaStack);\n        continue;\n      }\n    }\n    switch (collationIndex) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case ':':\n      case ',':\n        break;\n      case 'n':\n        i += 3; // 'ull'\n        pop(null, stack, metaStack);\n        break;\n      case 't':\n        i += 3; // 'rue'\n        pop(true, stack, metaStack);\n        break;\n      case 'f':\n        i += 4; // 'alse'\n        pop(false, stack, metaStack);\n        break;\n      case '0':\n      case '1':\n      case '2':\n      case '3':\n      case '4':\n      case '5':\n      case '6':\n      case '7':\n      case '8':\n      case '9':\n      case '-':\n        parsedNum = '';\n        i--;\n        while (true) {\n          numChar = str[i++];\n          if (/[\\d\\.\\-e\\+]/.test(numChar)) {\n            parsedNum += numChar;\n          } else {\n            i--;\n            break;\n          }\n        }\n        pop(parseFloat(parsedNum), stack, metaStack);\n        break;\n      case '\"':\n        parsedString = '';\n        lastCh = void 0;\n        numConsecutiveSlashes = 0;\n        while (true) {\n          ch = str[i++];\n          if (ch !== '\"' || (lastCh === '\\\\' &&\n              numConsecutiveSlashes % 2 === 1)) {\n            parsedString += ch;\n            lastCh = ch;\n            if (lastCh === '\\\\') {\n              numConsecutiveSlashes++;\n            } else {\n              numConsecutiveSlashes = 0;\n            }\n          } else {\n            break;\n          }\n        }\n        pop(JSON.parse('\"' + parsedString + '\"'), stack, metaStack);\n        break;\n      case '[':\n        arrayElement = { element: [], index: stack.length };\n        stack.push(arrayElement.element);\n        metaStack.push(arrayElement);\n        break;\n      case '{':\n        objElement = { element: {}, index: stack.length };\n        stack.push(objElement.element);\n        metaStack.push(objElement);\n        break;\n      default:\n        throw new Error(\n          'unexpectedly reached end of input: ' + collationIndex);\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vuvuzela/index.js\n// module id = 93\n// module chunks = 0","import { Injectable,\n         EventEmitter } from '@angular/core';\nimport * as dragula     from 'dragula';\n\n@Injectable()\nexport class DragulaService {\n  public cancel:      EventEmitter<any> = new EventEmitter();\n  public cloned:      EventEmitter<any> = new EventEmitter();\n  public drag:        EventEmitter<any> = new EventEmitter();\n  public dragend:     EventEmitter<any> = new EventEmitter();\n  public drop:        EventEmitter<any> = new EventEmitter();\n  public out:         EventEmitter<any> = new EventEmitter();\n  public over:        EventEmitter<any> = new EventEmitter();\n  public remove:      EventEmitter<any> = new EventEmitter();\n  public shadow:      EventEmitter<any> = new EventEmitter();\n  public dropModel:   EventEmitter<any> = new EventEmitter();\n  public removeModel: EventEmitter<any> = new EventEmitter();\n  private events: Array<string> = [\n    'cancel',\n    'cloned',\n    'drag',\n    'dragend',\n    'drop',\n    'out',\n    'over',\n    'remove',\n    'shadow',\n    'dropModel',\n    'removeModel'\n  ];\n  private bags: Array<any> = [];\n\n  public add(name: string, drake: any): any {\n    let bag = this.find(name);\n    if (bag) {\n      throw new Error('Bag named: \"' + name + '\" already exists.');\n    }\n    bag = {\n      name: name,\n      drake: drake\n    };\n    this.bags.push(bag);\n    if (drake.models) {\n      this.handleModels(name, drake);\n    }\n    if (!bag.initEvents) {\n      this.setupEvents(bag);\n    }\n    return bag;\n  }\n\n  public find(name: string): any {\n    for (var i = 0; i < this.bags.length; i++) {\n      if (this.bags[i].name === name) {\n        return this.bags[i];\n      }\n    }\n  }\n\n  public destroy(name: string): void {\n    let bag = this.find(name);\n    let i = this.bags.indexOf(bag);\n    this.bags.splice(i, 1);\n    bag.drake.destroy();\n  }\n\n  public setOptions(name: string, options: any) {\n    let bag = this.add(name, dragula(options));\n    this.handleModels(name, bag.drake);\n  }\n\n  private handleModels(name: string, drake: any) {\n    let dragElm: any;\n    let dragIndex: number;\n    let dropIndex: number;\n    let sourceModel: any;\n    drake.on('remove', (el: any, source: any) => {\n      if (!drake.models) {\n        return;\n      }\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      sourceModel.splice(dragIndex, 1);\n      this.removeModel.emit([name, el, source]);\n    });\n    drake.on('drag', (el: any, source: any) => {\n      dragElm = el;\n      dragIndex = this.domIndexOf(el, source);\n    });\n    drake.on('drop', (dropElm: any, target: any, source: any) => {\n      if (!drake.models || !target) {\n        return;\n      }\n      dropIndex = this.domIndexOf(dropElm, target);\n      sourceModel = drake.models[drake.containers.indexOf(source)];\n      if (target === source) {\n        sourceModel.splice(dropIndex, 0, sourceModel.splice(dragIndex, 1)[0]);\n      } else {\n        let notCopy = dragElm === dropElm;\n        let targetModel = drake.models[drake.containers.indexOf(target)];\n        let dropElmModel = notCopy ? sourceModel[dragIndex] : JSON.parse(JSON.stringify(sourceModel[dragIndex]));\n\n        if (notCopy) {\n          sourceModel.splice(dragIndex, 1);\n        }\n        targetModel.splice(dropIndex, 0, dropElmModel);\n        target.removeChild(dropElm); // element must be removed for ngFor to apply correctly\n      }\n      this.dropModel.emit([name, dropElm, target, source]);\n    });\n  }\n\n  private setupEvents(bag: any) {\n    bag.initEvents = true;\n    let that: any = this;\n    let emitter = (type: any) => {\n      function replicate () {\n        let args = Array.prototype.slice.call(arguments);\n        that[type].emit([bag.name].concat(args));\n      }\n      bag.drake.on(type, replicate);\n    };\n    this.events.forEach(emitter);\n  }\n\n  private domIndexOf(child: any, parent: any) {\n    return Array.prototype.indexOf.call(parent.children, child);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/services/dragula_service.ts","'use strict';\n\nvar emitter = require('contra/emitter');\nvar crossvent = require('crossvent');\nvar classes = require('./classes');\nvar doc = document;\nvar documentElement = doc.documentElement;\n\nfunction dragula (initialContainers, options) {\n  var len = arguments.length;\n  if (len === 1 && Array.isArray(initialContainers) === false) {\n    options = initialContainers;\n    initialContainers = [];\n  }\n  var _mirror; // mirror image\n  var _source; // source container\n  var _item; // item being dragged\n  var _offsetX; // reference x\n  var _offsetY; // reference y\n  var _moveX; // reference move x\n  var _moveY; // reference move y\n  var _initialSibling; // reference sibling when grabbed\n  var _currentSibling; // reference sibling now\n  var _copy; // item used for copying\n  var _renderTimer; // timer for setTimeout renderMirrorImage\n  var _lastDropTarget = null; // last container item was over\n  var _grabbed; // holds mousedown context until first mousemove\n\n  var o = options || {};\n  if (o.moves === void 0) { o.moves = always; }\n  if (o.accepts === void 0) { o.accepts = always; }\n  if (o.invalid === void 0) { o.invalid = invalidTarget; }\n  if (o.containers === void 0) { o.containers = initialContainers || []; }\n  if (o.isContainer === void 0) { o.isContainer = never; }\n  if (o.copy === void 0) { o.copy = false; }\n  if (o.copySortSource === void 0) { o.copySortSource = false; }\n  if (o.revertOnSpill === void 0) { o.revertOnSpill = false; }\n  if (o.removeOnSpill === void 0) { o.removeOnSpill = false; }\n  if (o.direction === void 0) { o.direction = 'vertical'; }\n  if (o.ignoreInputTextSelection === void 0) { o.ignoreInputTextSelection = true; }\n  if (o.mirrorContainer === void 0) { o.mirrorContainer = doc.body; }\n\n  var drake = emitter({\n    containers: o.containers,\n    start: manualStart,\n    end: end,\n    cancel: cancel,\n    remove: remove,\n    destroy: destroy,\n    canMove: canMove,\n    dragging: false\n  });\n\n  if (o.removeOnSpill === true) {\n    drake.on('over', spillOver).on('out', spillOut);\n  }\n\n  events();\n\n  return drake;\n\n  function isContainer (el) {\n    return drake.containers.indexOf(el) !== -1 || o.isContainer(el);\n  }\n\n  function events (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousedown', grab);\n    touchy(documentElement, op, 'mouseup', release);\n  }\n\n  function eventualMovements (remove) {\n    var op = remove ? 'remove' : 'add';\n    touchy(documentElement, op, 'mousemove', startBecauseMouseMoved);\n  }\n\n  function movements (remove) {\n    var op = remove ? 'remove' : 'add';\n    crossvent[op](documentElement, 'selectstart', preventGrabbed); // IE8\n    crossvent[op](documentElement, 'click', preventGrabbed);\n  }\n\n  function destroy () {\n    events(true);\n    release({});\n  }\n\n  function preventGrabbed (e) {\n    if (_grabbed) {\n      e.preventDefault();\n    }\n  }\n\n  function grab (e) {\n    _moveX = e.clientX;\n    _moveY = e.clientY;\n\n    var ignore = whichMouseButton(e) !== 1 || e.metaKey || e.ctrlKey;\n    if (ignore) {\n      return; // we only care about honest-to-god left clicks and touch events\n    }\n    var item = e.target;\n    var context = canStart(item);\n    if (!context) {\n      return;\n    }\n    _grabbed = context;\n    eventualMovements();\n    if (e.type === 'mousedown') {\n      if (isInput(item)) { // see also: https://github.com/bevacqua/dragula/issues/208\n        item.focus(); // fixes https://github.com/bevacqua/dragula/issues/176\n      } else {\n        e.preventDefault(); // fixes https://github.com/bevacqua/dragula/issues/155\n      }\n    }\n  }\n\n  function startBecauseMouseMoved (e) {\n    if (!_grabbed) {\n      return;\n    }\n    if (whichMouseButton(e) === 0) {\n      release({});\n      return; // when text is selected on an input and then dragged, mouseup doesn't fire. this is our only hope\n    }\n    // truthy check fixes #239, equality fixes #207\n    if (e.clientX !== void 0 && e.clientX === _moveX && e.clientY !== void 0 && e.clientY === _moveY) {\n      return;\n    }\n    if (o.ignoreInputTextSelection) {\n      var clientX = getCoord('clientX', e);\n      var clientY = getCoord('clientY', e);\n      var elementBehindCursor = doc.elementFromPoint(clientX, clientY);\n      if (isInput(elementBehindCursor)) {\n        return;\n      }\n    }\n\n    var grabbed = _grabbed; // call to end() unsets _grabbed\n    eventualMovements(true);\n    movements();\n    end();\n    start(grabbed);\n\n    var offset = getOffset(_item);\n    _offsetX = getCoord('pageX', e) - offset.left;\n    _offsetY = getCoord('pageY', e) - offset.top;\n\n    classes.add(_copy || _item, 'gu-transit');\n    renderMirrorImage();\n    drag(e);\n  }\n\n  function canStart (item) {\n    if (drake.dragging && _mirror) {\n      return;\n    }\n    if (isContainer(item)) {\n      return; // don't drag container itself\n    }\n    var handle = item;\n    while (getParent(item) && isContainer(getParent(item)) === false) {\n      if (o.invalid(item, handle)) {\n        return;\n      }\n      item = getParent(item); // drag target should be a top element\n      if (!item) {\n        return;\n      }\n    }\n    var source = getParent(item);\n    if (!source) {\n      return;\n    }\n    if (o.invalid(item, handle)) {\n      return;\n    }\n\n    var movable = o.moves(item, source, handle, nextEl(item));\n    if (!movable) {\n      return;\n    }\n\n    return {\n      item: item,\n      source: source\n    };\n  }\n\n  function canMove (item) {\n    return !!canStart(item);\n  }\n\n  function manualStart (item) {\n    var context = canStart(item);\n    if (context) {\n      start(context);\n    }\n  }\n\n  function start (context) {\n    if (isCopy(context.item, context.source)) {\n      _copy = context.item.cloneNode(true);\n      drake.emit('cloned', _copy, context.item, 'copy');\n    }\n\n    _source = context.source;\n    _item = context.item;\n    _initialSibling = _currentSibling = nextEl(context.item);\n\n    drake.dragging = true;\n    drake.emit('drag', _item, _source);\n  }\n\n  function invalidTarget () {\n    return false;\n  }\n\n  function end () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    drop(item, getParent(item));\n  }\n\n  function ungrab () {\n    _grabbed = false;\n    eventualMovements(true);\n    movements(true);\n  }\n\n  function release (e) {\n    ungrab();\n\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    if (dropTarget && ((_copy && o.copySortSource) || (!_copy || dropTarget !== _source))) {\n      drop(item, dropTarget);\n    } else if (o.removeOnSpill) {\n      remove();\n    } else {\n      cancel();\n    }\n  }\n\n  function drop (item, target) {\n    var parent = getParent(item);\n    if (_copy && o.copySortSource && target === _source) {\n      parent.removeChild(_item);\n    }\n    if (isInitialPlacement(target)) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, target, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function remove () {\n    if (!drake.dragging) {\n      return;\n    }\n    var item = _copy || _item;\n    var parent = getParent(item);\n    if (parent) {\n      parent.removeChild(item);\n    }\n    drake.emit(_copy ? 'cancel' : 'remove', item, parent, _source);\n    cleanup();\n  }\n\n  function cancel (revert) {\n    if (!drake.dragging) {\n      return;\n    }\n    var reverts = arguments.length > 0 ? revert : o.revertOnSpill;\n    var item = _copy || _item;\n    var parent = getParent(item);\n    var initial = isInitialPlacement(parent);\n    if (initial === false && reverts) {\n      if (_copy) {\n        if (parent) {\n          parent.removeChild(_copy);\n        }\n      } else {\n        _source.insertBefore(item, _initialSibling);\n      }\n    }\n    if (initial || reverts) {\n      drake.emit('cancel', item, _source, _source);\n    } else {\n      drake.emit('drop', item, parent, _source, _currentSibling);\n    }\n    cleanup();\n  }\n\n  function cleanup () {\n    var item = _copy || _item;\n    ungrab();\n    removeMirrorImage();\n    if (item) {\n      classes.rm(item, 'gu-transit');\n    }\n    if (_renderTimer) {\n      clearTimeout(_renderTimer);\n    }\n    drake.dragging = false;\n    if (_lastDropTarget) {\n      drake.emit('out', item, _lastDropTarget, _source);\n    }\n    drake.emit('dragend', item);\n    _source = _item = _copy = _initialSibling = _currentSibling = _renderTimer = _lastDropTarget = null;\n  }\n\n  function isInitialPlacement (target, s) {\n    var sibling;\n    if (s !== void 0) {\n      sibling = s;\n    } else if (_mirror) {\n      sibling = _currentSibling;\n    } else {\n      sibling = nextEl(_copy || _item);\n    }\n    return target === _source && sibling === _initialSibling;\n  }\n\n  function findDropTarget (elementBehindCursor, clientX, clientY) {\n    var target = elementBehindCursor;\n    while (target && !accepted()) {\n      target = getParent(target);\n    }\n    return target;\n\n    function accepted () {\n      var droppable = isContainer(target);\n      if (droppable === false) {\n        return false;\n      }\n\n      var immediate = getImmediateChild(target, elementBehindCursor);\n      var reference = getReference(target, immediate, clientX, clientY);\n      var initial = isInitialPlacement(target, reference);\n      if (initial) {\n        return true; // should always be able to drop it right back where it was\n      }\n      return o.accepts(_item, target, _source, reference);\n    }\n  }\n\n  function drag (e) {\n    if (!_mirror) {\n      return;\n    }\n    e.preventDefault();\n\n    var clientX = getCoord('clientX', e);\n    var clientY = getCoord('clientY', e);\n    var x = clientX - _offsetX;\n    var y = clientY - _offsetY;\n\n    _mirror.style.left = x + 'px';\n    _mirror.style.top = y + 'px';\n\n    var item = _copy || _item;\n    var elementBehindCursor = getElementBehindPoint(_mirror, clientX, clientY);\n    var dropTarget = findDropTarget(elementBehindCursor, clientX, clientY);\n    var changed = dropTarget !== null && dropTarget !== _lastDropTarget;\n    if (changed || dropTarget === null) {\n      out();\n      _lastDropTarget = dropTarget;\n      over();\n    }\n    var parent = getParent(item);\n    if (dropTarget === _source && _copy && !o.copySortSource) {\n      if (parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    var reference;\n    var immediate = getImmediateChild(dropTarget, elementBehindCursor);\n    if (immediate !== null) {\n      reference = getReference(dropTarget, immediate, clientX, clientY);\n    } else if (o.revertOnSpill === true && !_copy) {\n      reference = _initialSibling;\n      dropTarget = _source;\n    } else {\n      if (_copy && parent) {\n        parent.removeChild(item);\n      }\n      return;\n    }\n    if (\n      (reference === null && changed) ||\n      reference !== item &&\n      reference !== nextEl(item)\n    ) {\n      _currentSibling = reference;\n      dropTarget.insertBefore(item, reference);\n      drake.emit('shadow', item, dropTarget, _source);\n    }\n    function moved (type) { drake.emit(type, item, _lastDropTarget, _source); }\n    function over () { if (changed) { moved('over'); } }\n    function out () { if (_lastDropTarget) { moved('out'); } }\n  }\n\n  function spillOver (el) {\n    classes.rm(el, 'gu-hide');\n  }\n\n  function spillOut (el) {\n    if (drake.dragging) { classes.add(el, 'gu-hide'); }\n  }\n\n  function renderMirrorImage () {\n    if (_mirror) {\n      return;\n    }\n    var rect = _item.getBoundingClientRect();\n    _mirror = _item.cloneNode(true);\n    _mirror.style.width = getRectWidth(rect) + 'px';\n    _mirror.style.height = getRectHeight(rect) + 'px';\n    classes.rm(_mirror, 'gu-transit');\n    classes.add(_mirror, 'gu-mirror');\n    o.mirrorContainer.appendChild(_mirror);\n    touchy(documentElement, 'add', 'mousemove', drag);\n    classes.add(o.mirrorContainer, 'gu-unselectable');\n    drake.emit('cloned', _mirror, _item, 'mirror');\n  }\n\n  function removeMirrorImage () {\n    if (_mirror) {\n      classes.rm(o.mirrorContainer, 'gu-unselectable');\n      touchy(documentElement, 'remove', 'mousemove', drag);\n      getParent(_mirror).removeChild(_mirror);\n      _mirror = null;\n    }\n  }\n\n  function getImmediateChild (dropTarget, target) {\n    var immediate = target;\n    while (immediate !== dropTarget && getParent(immediate) !== dropTarget) {\n      immediate = getParent(immediate);\n    }\n    if (immediate === documentElement) {\n      return null;\n    }\n    return immediate;\n  }\n\n  function getReference (dropTarget, target, x, y) {\n    var horizontal = o.direction === 'horizontal';\n    var reference = target !== dropTarget ? inside() : outside();\n    return reference;\n\n    function outside () { // slower, but able to figure out any position\n      var len = dropTarget.children.length;\n      var i;\n      var el;\n      var rect;\n      for (i = 0; i < len; i++) {\n        el = dropTarget.children[i];\n        rect = el.getBoundingClientRect();\n        if (horizontal && (rect.left + rect.width / 2) > x) { return el; }\n        if (!horizontal && (rect.top + rect.height / 2) > y) { return el; }\n      }\n      return null;\n    }\n\n    function inside () { // faster, but only available if dropped inside a child element\n      var rect = target.getBoundingClientRect();\n      if (horizontal) {\n        return resolve(x > rect.left + getRectWidth(rect) / 2);\n      }\n      return resolve(y > rect.top + getRectHeight(rect) / 2);\n    }\n\n    function resolve (after) {\n      return after ? nextEl(target) : target;\n    }\n  }\n\n  function isCopy (item, container) {\n    return typeof o.copy === 'boolean' ? o.copy : o.copy(item, container);\n  }\n}\n\nfunction touchy (el, op, type, fn) {\n  var touch = {\n    mouseup: 'touchend',\n    mousedown: 'touchstart',\n    mousemove: 'touchmove'\n  };\n  var pointers = {\n    mouseup: 'pointerup',\n    mousedown: 'pointerdown',\n    mousemove: 'pointermove'\n  };\n  var microsoft = {\n    mouseup: 'MSPointerUp',\n    mousedown: 'MSPointerDown',\n    mousemove: 'MSPointerMove'\n  };\n  if (global.navigator.pointerEnabled) {\n    crossvent[op](el, pointers[type], fn);\n  } else if (global.navigator.msPointerEnabled) {\n    crossvent[op](el, microsoft[type], fn);\n  } else {\n    crossvent[op](el, touch[type], fn);\n    crossvent[op](el, type, fn);\n  }\n}\n\nfunction whichMouseButton (e) {\n  if (e.touches !== void 0) { return e.touches.length; }\n  if (e.which !== void 0 && e.which !== 0) { return e.which; } // see https://github.com/bevacqua/dragula/issues/261\n  if (e.buttons !== void 0) { return e.buttons; }\n  var button = e.button;\n  if (button !== void 0) { // see https://github.com/jquery/jquery/blob/99e8ff1baa7ae341e94bb89c3e84570c7c3ad9ea/src/event.js#L573-L575\n    return button & 1 ? 1 : button & 2 ? 3 : (button & 4 ? 2 : 0);\n  }\n}\n\nfunction getOffset (el) {\n  var rect = el.getBoundingClientRect();\n  return {\n    left: rect.left + getScroll('scrollLeft', 'pageXOffset'),\n    top: rect.top + getScroll('scrollTop', 'pageYOffset')\n  };\n}\n\nfunction getScroll (scrollProp, offsetProp) {\n  if (typeof global[offsetProp] !== 'undefined') {\n    return global[offsetProp];\n  }\n  if (documentElement.clientHeight) {\n    return documentElement[scrollProp];\n  }\n  return doc.body[scrollProp];\n}\n\nfunction getElementBehindPoint (point, x, y) {\n  var p = point || {};\n  var state = p.className;\n  var el;\n  p.className += ' gu-hide';\n  el = doc.elementFromPoint(x, y);\n  p.className = state;\n  return el;\n}\n\nfunction never () { return false; }\nfunction always () { return true; }\nfunction getRectWidth (rect) { return rect.width || (rect.right - rect.left); }\nfunction getRectHeight (rect) { return rect.height || (rect.bottom - rect.top); }\nfunction getParent (el) { return el.parentNode === doc ? null : el.parentNode; }\nfunction isInput (el) { return el.tagName === 'INPUT' || el.tagName === 'TEXTAREA' || el.tagName === 'SELECT' || isEditable(el); }\nfunction isEditable (el) {\n  if (!el) { return false; } // no parents were editable\n  if (el.contentEditable === 'false') { return false; } // stop the lookup\n  if (el.contentEditable === 'true') { return true; } // found a contentEditable element in the chain\n  return isEditable(getParent(el)); // contentEditable is set to 'inherit'\n}\n\nfunction nextEl (el) {\n  return el.nextElementSibling || manually();\n  function manually () {\n    var sibling = el;\n    do {\n      sibling = sibling.nextSibling;\n    } while (sibling && sibling.nodeType !== 1);\n    return sibling;\n  }\n}\n\nfunction getEventHost (e) {\n  // on touchend event, we have to use `e.changedTouches`\n  // see http://stackoverflow.com/questions/7192563/touchend-event-properties\n  // see https://github.com/bevacqua/dragula/issues/34\n  if (e.targetTouches && e.targetTouches.length) {\n    return e.targetTouches[0];\n  }\n  if (e.changedTouches && e.changedTouches.length) {\n    return e.changedTouches[0];\n  }\n  return e;\n}\n\nfunction getCoord (coord, e) {\n  var host = getEventHost(e);\n  var missMap = {\n    pageX: 'clientX', // IE8\n    pageY: 'clientY' // IE8\n  };\n  if (coord in missMap && !(coord in host) && missMap[coord] in host) {\n    coord = missMap[coord];\n  }\n  return host[coord];\n}\n\nmodule.exports = dragula;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dragula/dragula.js\n// module id = 95\n// module chunks = 0","'use strict';\n\nvar atoa = require('atoa');\nvar debounce = require('./debounce');\n\nmodule.exports = function emitter (thing, options) {\n  var opts = options || {};\n  var evt = {};\n  if (thing === undefined) { thing = {}; }\n  thing.on = function (type, fn) {\n    if (!evt[type]) {\n      evt[type] = [fn];\n    } else {\n      evt[type].push(fn);\n    }\n    return thing;\n  };\n  thing.once = function (type, fn) {\n    fn._once = true; // thing.off(fn) still works!\n    thing.on(type, fn);\n    return thing;\n  };\n  thing.off = function (type, fn) {\n    var c = arguments.length;\n    if (c === 1) {\n      delete evt[type];\n    } else if (c === 0) {\n      evt = {};\n    } else {\n      var et = evt[type];\n      if (!et) { return thing; }\n      et.splice(et.indexOf(fn), 1);\n    }\n    return thing;\n  };\n  thing.emit = function () {\n    var args = atoa(arguments);\n    return thing.emitterSnapshot(args.shift()).apply(this, args);\n  };\n  thing.emitterSnapshot = function (type) {\n    var et = (evt[type] || []).slice(0);\n    return function () {\n      var args = atoa(arguments);\n      var ctx = this || thing;\n      if (type === 'error' && opts.throws !== false && !et.length) { throw args.length === 1 ? args[0] : args; }\n      et.forEach(function emitter (listen) {\n        if (opts.async) { debounce(listen, args, ctx); } else { listen.apply(ctx, args); }\n        if (listen._once) { thing.off(type, listen); }\n      });\n      return thing;\n    };\n  };\n  return thing;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/contra/emitter.js\n// module id = 96\n// module chunks = 0","module.exports = function atoa (a, n) { return Array.prototype.slice.call(a, n); }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/atoa/atoa.js\n// module id = 97\n// module chunks = 0","'use strict';\n\nvar ticky = require('ticky');\n\nmodule.exports = function debounce (fn, args, ctx) {\n  if (!fn) { return; }\n  ticky(function run () {\n    fn.apply(ctx || null, args || []);\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/contra/debounce.js\n// module id = 98\n// module chunks = 0","var si = typeof setImmediate === 'function', tick;\nif (si) {\n  tick = function (fn) { setImmediate(fn); };\n} else {\n  tick = function (fn) { setTimeout(fn, 0); };\n}\n\nmodule.exports = tick;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ticky/ticky-browser.js\n// module id = 99\n// module chunks = 0","'use strict';\n\nvar customEvent = require('custom-event');\nvar eventmap = require('./eventmap');\nvar doc = global.document;\nvar addEvent = addEventEasy;\nvar removeEvent = removeEventEasy;\nvar hardCache = [];\n\nif (!global.addEventListener) {\n  addEvent = addEventHard;\n  removeEvent = removeEventHard;\n}\n\nmodule.exports = {\n  add: addEvent,\n  remove: removeEvent,\n  fabricate: fabricateEvent\n};\n\nfunction addEventEasy (el, type, fn, capturing) {\n  return el.addEventListener(type, fn, capturing);\n}\n\nfunction addEventHard (el, type, fn) {\n  return el.attachEvent('on' + type, wrap(el, type, fn));\n}\n\nfunction removeEventEasy (el, type, fn, capturing) {\n  return el.removeEventListener(type, fn, capturing);\n}\n\nfunction removeEventHard (el, type, fn) {\n  var listener = unwrap(el, type, fn);\n  if (listener) {\n    return el.detachEvent('on' + type, listener);\n  }\n}\n\nfunction fabricateEvent (el, type, model) {\n  var e = eventmap.indexOf(type) === -1 ? makeCustomEvent() : makeClassicEvent();\n  if (el.dispatchEvent) {\n    el.dispatchEvent(e);\n  } else {\n    el.fireEvent('on' + type, e);\n  }\n  function makeClassicEvent () {\n    var e;\n    if (doc.createEvent) {\n      e = doc.createEvent('Event');\n      e.initEvent(type, true, true);\n    } else if (doc.createEventObject) {\n      e = doc.createEventObject();\n    }\n    return e;\n  }\n  function makeCustomEvent () {\n    return new customEvent(type, { detail: model });\n  }\n}\n\nfunction wrapperFactory (el, type, fn) {\n  return function wrapper (originalEvent) {\n    var e = originalEvent || global.event;\n    e.target = e.target || e.srcElement;\n    e.preventDefault = e.preventDefault || function preventDefault () { e.returnValue = false; };\n    e.stopPropagation = e.stopPropagation || function stopPropagation () { e.cancelBubble = true; };\n    e.which = e.which || e.keyCode;\n    fn.call(el, e);\n  };\n}\n\nfunction wrap (el, type, fn) {\n  var wrapper = unwrap(el, type, fn) || wrapperFactory(el, type, fn);\n  hardCache.push({\n    wrapper: wrapper,\n    element: el,\n    type: type,\n    fn: fn\n  });\n  return wrapper;\n}\n\nfunction unwrap (el, type, fn) {\n  var i = find(el, type, fn);\n  if (i) {\n    var wrapper = hardCache[i].wrapper;\n    hardCache.splice(i, 1); // free up a tad of memory\n    return wrapper;\n  }\n}\n\nfunction find (el, type, fn) {\n  var i, item;\n  for (i = 0; i < hardCache.length; i++) {\n    item = hardCache[i];\n    if (item.element === el && item.type === type && item.fn === fn) {\n      return i;\n    }\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crossvent/src/crossvent.js\n// module id = 102\n// module chunks = 0","\nvar NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n  try {\n    var p = new NativeCustomEvent('cat', { detail: { foo: 'bar' } });\n    return  'cat' === p.type && 'bar' === p.detail.foo;\n  } catch (e) {\n  }\n  return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? NativeCustomEvent :\n\n// IE >= 9\n'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n  var e = document.createEvent('CustomEvent');\n  if (params) {\n    e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n  } else {\n    e.initCustomEvent(type, false, false, void 0);\n  }\n  return e;\n} :\n\n// IE <= 8\nfunction CustomEvent (type, params) {\n  var e = document.createEventObject();\n  e.type = type;\n  if (params) {\n    e.bubbles = Boolean(params.bubbles);\n    e.cancelable = Boolean(params.cancelable);\n    e.detail = params.detail;\n  } else {\n    e.bubbles = false;\n    e.cancelable = false;\n    e.detail = void 0;\n  }\n  return e;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/custom-event/index.js\n// module id = 103\n// module chunks = 0","'use strict';\n\nvar eventmap = [];\nvar eventname = '';\nvar ron = /^on/;\n\nfor (eventname in global) {\n  if (ron.test(eventname)) {\n    eventmap.push(eventname.slice(2));\n  }\n}\n\nmodule.exports = eventmap;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/crossvent/src/eventmap.js\n// module id = 104\n// module chunks = 0","'use strict';\n\nvar cache = {};\nvar start = '(?:^|\\\\s)';\nvar end = '(?:\\\\s|$)';\n\nfunction lookupClass (className) {\n  var cached = cache[className];\n  if (cached) {\n    cached.lastIndex = 0;\n  } else {\n    cache[className] = cached = new RegExp(start + className + end, 'g');\n  }\n  return cached;\n}\n\nfunction addClass (el, className) {\n  var current = el.className;\n  if (!current.length) {\n    el.className = className;\n  } else if (!lookupClass(className).test(current)) {\n    el.className += ' ' + className;\n  }\n}\n\nfunction rmClass (el, className) {\n  el.className = el.className.replace(lookupClass(className), ' ').trim();\n}\n\nmodule.exports = {\n  add: addClass,\n  rm: rmClass\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/dragula/classes.js\n// module id = 105\n// module chunks = 0","/**\n * @license\n * Lodash <https://lodash.com/>\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n;(function() {\n\n  /** Used as a safe reference for `undefined` in pre-ES5 environments. */\n  var undefined;\n\n  /** Used as the semantic version number. */\n  var VERSION = '4.17.4';\n\n  /** Used as the size to enable large array optimizations. */\n  var LARGE_ARRAY_SIZE = 200;\n\n  /** Error message constants. */\n  var CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.',\n      FUNC_ERROR_TEXT = 'Expected a function';\n\n  /** Used to stand-in for `undefined` hash values. */\n  var HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n  /** Used as the maximum memoize cache size. */\n  var MAX_MEMOIZE_SIZE = 500;\n\n  /** Used as the internal argument placeholder. */\n  var PLACEHOLDER = '__lodash_placeholder__';\n\n  /** Used to compose bitmasks for cloning. */\n  var CLONE_DEEP_FLAG = 1,\n      CLONE_FLAT_FLAG = 2,\n      CLONE_SYMBOLS_FLAG = 4;\n\n  /** Used to compose bitmasks for value comparisons. */\n  var COMPARE_PARTIAL_FLAG = 1,\n      COMPARE_UNORDERED_FLAG = 2;\n\n  /** Used to compose bitmasks for function metadata. */\n  var WRAP_BIND_FLAG = 1,\n      WRAP_BIND_KEY_FLAG = 2,\n      WRAP_CURRY_BOUND_FLAG = 4,\n      WRAP_CURRY_FLAG = 8,\n      WRAP_CURRY_RIGHT_FLAG = 16,\n      WRAP_PARTIAL_FLAG = 32,\n      WRAP_PARTIAL_RIGHT_FLAG = 64,\n      WRAP_ARY_FLAG = 128,\n      WRAP_REARG_FLAG = 256,\n      WRAP_FLIP_FLAG = 512;\n\n  /** Used as default options for `_.truncate`. */\n  var DEFAULT_TRUNC_LENGTH = 30,\n      DEFAULT_TRUNC_OMISSION = '...';\n\n  /** Used to detect hot functions by number of calls within a span of milliseconds. */\n  var HOT_COUNT = 800,\n      HOT_SPAN = 16;\n\n  /** Used to indicate the type of lazy iteratees. */\n  var LAZY_FILTER_FLAG = 1,\n      LAZY_MAP_FLAG = 2,\n      LAZY_WHILE_FLAG = 3;\n\n  /** Used as references for various `Number` constants. */\n  var INFINITY = 1 / 0,\n      MAX_SAFE_INTEGER = 9007199254740991,\n      MAX_INTEGER = 1.7976931348623157e+308,\n      NAN = 0 / 0;\n\n  /** Used as references for the maximum length and index of an array. */\n  var MAX_ARRAY_LENGTH = 4294967295,\n      MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\n      HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n  /** Used to associate wrap methods with their bit flags. */\n  var wrapFlags = [\n    ['ary', WRAP_ARY_FLAG],\n    ['bind', WRAP_BIND_FLAG],\n    ['bindKey', WRAP_BIND_KEY_FLAG],\n    ['curry', WRAP_CURRY_FLAG],\n    ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n    ['flip', WRAP_FLIP_FLAG],\n    ['partial', WRAP_PARTIAL_FLAG],\n    ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n    ['rearg', WRAP_REARG_FLAG]\n  ];\n\n  /** `Object#toString` result references. */\n  var argsTag = '[object Arguments]',\n      arrayTag = '[object Array]',\n      asyncTag = '[object AsyncFunction]',\n      boolTag = '[object Boolean]',\n      dateTag = '[object Date]',\n      domExcTag = '[object DOMException]',\n      errorTag = '[object Error]',\n      funcTag = '[object Function]',\n      genTag = '[object GeneratorFunction]',\n      mapTag = '[object Map]',\n      numberTag = '[object Number]',\n      nullTag = '[object Null]',\n      objectTag = '[object Object]',\n      promiseTag = '[object Promise]',\n      proxyTag = '[object Proxy]',\n      regexpTag = '[object RegExp]',\n      setTag = '[object Set]',\n      stringTag = '[object String]',\n      symbolTag = '[object Symbol]',\n      undefinedTag = '[object Undefined]',\n      weakMapTag = '[object WeakMap]',\n      weakSetTag = '[object WeakSet]';\n\n  var arrayBufferTag = '[object ArrayBuffer]',\n      dataViewTag = '[object DataView]',\n      float32Tag = '[object Float32Array]',\n      float64Tag = '[object Float64Array]',\n      int8Tag = '[object Int8Array]',\n      int16Tag = '[object Int16Array]',\n      int32Tag = '[object Int32Array]',\n      uint8Tag = '[object Uint8Array]',\n      uint8ClampedTag = '[object Uint8ClampedArray]',\n      uint16Tag = '[object Uint16Array]',\n      uint32Tag = '[object Uint32Array]';\n\n  /** Used to match empty string literals in compiled template source. */\n  var reEmptyStringLeading = /\\b__p \\+= '';/g,\n      reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n      reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n  /** Used to match HTML entities and HTML characters. */\n  var reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n      reUnescapedHtml = /[&<>\"']/g,\n      reHasEscapedHtml = RegExp(reEscapedHtml.source),\n      reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n  /** Used to match template delimiters. */\n  var reEscape = /<%-([\\s\\S]+?)%>/g,\n      reEvaluate = /<%([\\s\\S]+?)%>/g,\n      reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\n  /** Used to match property names within property paths. */\n  var reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n      reIsPlainProp = /^\\w*$/,\n      reLeadingDot = /^\\./,\n      rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n  /**\n   * Used to match `RegExp`\n   * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n   */\n  var reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n      reHasRegExpChar = RegExp(reRegExpChar.source);\n\n  /** Used to match leading and trailing whitespace. */\n  var reTrim = /^\\s+|\\s+$/g,\n      reTrimStart = /^\\s+/,\n      reTrimEnd = /\\s+$/;\n\n  /** Used to match wrap detail comments. */\n  var reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/,\n      reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n      reSplitDetails = /,? & /;\n\n  /** Used to match words composed of alphanumeric characters. */\n  var reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n  /** Used to match backslashes in property paths. */\n  var reEscapeChar = /\\\\(\\\\)?/g;\n\n  /**\n   * Used to match\n   * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n   */\n  var reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n  /** Used to match `RegExp` flags from their coerced string values. */\n  var reFlags = /\\w*$/;\n\n  /** Used to detect bad signed hexadecimal string values. */\n  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n  /** Used to detect binary string values. */\n  var reIsBinary = /^0b[01]+$/i;\n\n  /** Used to detect host constructors (Safari). */\n  var reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n  /** Used to detect octal string values. */\n  var reIsOctal = /^0o[0-7]+$/i;\n\n  /** Used to detect unsigned integer values. */\n  var reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n  /** Used to match Latin Unicode letters (excluding mathematical operators). */\n  var reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n  /** Used to ensure capturing order of template delimiters. */\n  var reNoMatch = /($^)/;\n\n  /** Used to match unescaped characters in compiled string literals. */\n  var reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n  /** Used to compose unicode character classes. */\n  var rsAstralRange = '\\\\ud800-\\\\udfff',\n      rsComboMarksRange = '\\\\u0300-\\\\u036f',\n      reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n      rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n      rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n      rsDingbatRange = '\\\\u2700-\\\\u27bf',\n      rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n      rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n      rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n      rsPunctuationRange = '\\\\u2000-\\\\u206f',\n      rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n      rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n      rsVarRange = '\\\\ufe0e\\\\ufe0f',\n      rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n  /** Used to compose unicode capture groups. */\n  var rsApos = \"['\\u2019]\",\n      rsAstral = '[' + rsAstralRange + ']',\n      rsBreak = '[' + rsBreakRange + ']',\n      rsCombo = '[' + rsComboRange + ']',\n      rsDigits = '\\\\d+',\n      rsDingbat = '[' + rsDingbatRange + ']',\n      rsLower = '[' + rsLowerRange + ']',\n      rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n      rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n      rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n      rsNonAstral = '[^' + rsAstralRange + ']',\n      rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n      rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n      rsUpper = '[' + rsUpperRange + ']',\n      rsZWJ = '\\\\u200d';\n\n  /** Used to compose unicode regexes. */\n  var rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n      rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n      rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n      rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n      reOptMod = rsModifier + '?',\n      rsOptVar = '[' + rsVarRange + ']?',\n      rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n      rsOrdLower = '\\\\d*(?:(?:1st|2nd|3rd|(?![123])\\\\dth)\\\\b)',\n      rsOrdUpper = '\\\\d*(?:(?:1ST|2ND|3RD|(?![123])\\\\dTH)\\\\b)',\n      rsSeq = rsOptVar + reOptMod + rsOptJoin,\n      rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq,\n      rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n  /** Used to match apostrophes. */\n  var reApos = RegExp(rsApos, 'g');\n\n  /**\n   * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n   * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n   */\n  var reComboMark = RegExp(rsCombo, 'g');\n\n  /** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n  var reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n  /** Used to match complex or compound words. */\n  var reUnicodeWord = RegExp([\n    rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n    rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n    rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n    rsUpper + '+' + rsOptContrUpper,\n    rsOrdUpper,\n    rsOrdLower,\n    rsDigits,\n    rsEmoji\n  ].join('|'), 'g');\n\n  /** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n  var reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n  /** Used to detect strings that need a more robust regexp to match words. */\n  var reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2,}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n  /** Used to assign default `context` object properties. */\n  var contextProps = [\n    'Array', 'Buffer', 'DataView', 'Date', 'Error', 'Float32Array', 'Float64Array',\n    'Function', 'Int8Array', 'Int16Array', 'Int32Array', 'Map', 'Math', 'Object',\n    'Promise', 'RegExp', 'Set', 'String', 'Symbol', 'TypeError', 'Uint8Array',\n    'Uint8ClampedArray', 'Uint16Array', 'Uint32Array', 'WeakMap',\n    '_', 'clearTimeout', 'isFinite', 'parseInt', 'setTimeout'\n  ];\n\n  /** Used to make template sourceURLs easier to identify. */\n  var templateCounter = -1;\n\n  /** Used to identify `toStringTag` values of typed arrays. */\n  var typedArrayTags = {};\n  typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\n  typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\n  typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\n  typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\n  typedArrayTags[uint32Tag] = true;\n  typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\n  typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\n  typedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\n  typedArrayTags[errorTag] = typedArrayTags[funcTag] =\n  typedArrayTags[mapTag] = typedArrayTags[numberTag] =\n  typedArrayTags[objectTag] = typedArrayTags[regexpTag] =\n  typedArrayTags[setTag] = typedArrayTags[stringTag] =\n  typedArrayTags[weakMapTag] = false;\n\n  /** Used to identify `toStringTag` values supported by `_.clone`. */\n  var cloneableTags = {};\n  cloneableTags[argsTag] = cloneableTags[arrayTag] =\n  cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\n  cloneableTags[boolTag] = cloneableTags[dateTag] =\n  cloneableTags[float32Tag] = cloneableTags[float64Tag] =\n  cloneableTags[int8Tag] = cloneableTags[int16Tag] =\n  cloneableTags[int32Tag] = cloneableTags[mapTag] =\n  cloneableTags[numberTag] = cloneableTags[objectTag] =\n  cloneableTags[regexpTag] = cloneableTags[setTag] =\n  cloneableTags[stringTag] = cloneableTags[symbolTag] =\n  cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\n  cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\n  cloneableTags[errorTag] = cloneableTags[funcTag] =\n  cloneableTags[weakMapTag] = false;\n\n  /** Used to map Latin Unicode letters to basic Latin letters. */\n  var deburredLetters = {\n    // Latin-1 Supplement block.\n    '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n    '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n    '\\xc7': 'C',  '\\xe7': 'c',\n    '\\xd0': 'D',  '\\xf0': 'd',\n    '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n    '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n    '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n    '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n    '\\xd1': 'N',  '\\xf1': 'n',\n    '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n    '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n    '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n    '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n    '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n    '\\xc6': 'Ae', '\\xe6': 'ae',\n    '\\xde': 'Th', '\\xfe': 'th',\n    '\\xdf': 'ss',\n    // Latin Extended-A block.\n    '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n    '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n    '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n    '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n    '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n    '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n    '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n    '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n    '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n    '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n    '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n    '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n    '\\u0134': 'J',  '\\u0135': 'j',\n    '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n    '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n    '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n    '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n    '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n    '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n    '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n    '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n    '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n    '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n    '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n    '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n    '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n    '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n    '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n    '\\u0174': 'W',  '\\u0175': 'w',\n    '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n    '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n    '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n    '\\u0132': 'IJ', '\\u0133': 'ij',\n    '\\u0152': 'Oe', '\\u0153': 'oe',\n    '\\u0149': \"'n\", '\\u017f': 's'\n  };\n\n  /** Used to map characters to HTML entities. */\n  var htmlEscapes = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  /** Used to map HTML entities to characters. */\n  var htmlUnescapes = {\n    '&amp;': '&',\n    '&lt;': '<',\n    '&gt;': '>',\n    '&quot;': '\"',\n    '&#39;': \"'\"\n  };\n\n  /** Used to escape characters for inclusion in compiled string literals. */\n  var stringEscapes = {\n    '\\\\': '\\\\',\n    \"'\": \"'\",\n    '\\n': 'n',\n    '\\r': 'r',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  /** Built-in method references without a dependency on `root`. */\n  var freeParseFloat = parseFloat,\n      freeParseInt = parseInt;\n\n  /** Detect free variable `global` from Node.js. */\n  var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n  /** Detect free variable `self`. */\n  var freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n  /** Used as a reference to the global object. */\n  var root = freeGlobal || freeSelf || Function('return this')();\n\n  /** Detect free variable `exports`. */\n  var freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n  /** Detect free variable `module`. */\n  var freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n  /** Detect the popular CommonJS extension `module.exports`. */\n  var moduleExports = freeModule && freeModule.exports === freeExports;\n\n  /** Detect free variable `process` from Node.js. */\n  var freeProcess = moduleExports && freeGlobal.process;\n\n  /** Used to access faster Node.js helpers. */\n  var nodeUtil = (function() {\n    try {\n      return freeProcess && freeProcess.binding && freeProcess.binding('util');\n    } catch (e) {}\n  }());\n\n  /* Node.js helper references. */\n  var nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer,\n      nodeIsDate = nodeUtil && nodeUtil.isDate,\n      nodeIsMap = nodeUtil && nodeUtil.isMap,\n      nodeIsRegExp = nodeUtil && nodeUtil.isRegExp,\n      nodeIsSet = nodeUtil && nodeUtil.isSet,\n      nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Adds the key-value `pair` to `map`.\n   *\n   * @private\n   * @param {Object} map The map to modify.\n   * @param {Array} pair The key-value pair to add.\n   * @returns {Object} Returns `map`.\n   */\n  function addMapEntry(map, pair) {\n    // Don't return `map.set` because it's not chainable in IE 11.\n    map.set(pair[0], pair[1]);\n    return map;\n  }\n\n  /**\n   * Adds `value` to `set`.\n   *\n   * @private\n   * @param {Object} set The set to modify.\n   * @param {*} value The value to add.\n   * @returns {Object} Returns `set`.\n   */\n  function addSetEntry(set, value) {\n    // Don't return `set.add` because it's not chainable in IE 11.\n    set.add(value);\n    return set;\n  }\n\n  /**\n   * A faster alternative to `Function#apply`, this function invokes `func`\n   * with the `this` binding of `thisArg` and the arguments of `args`.\n   *\n   * @private\n   * @param {Function} func The function to invoke.\n   * @param {*} thisArg The `this` binding of `func`.\n   * @param {Array} args The arguments to invoke `func` with.\n   * @returns {*} Returns the result of `func`.\n   */\n  function apply(func, thisArg, args) {\n    switch (args.length) {\n      case 0: return func.call(thisArg);\n      case 1: return func.call(thisArg, args[0]);\n      case 2: return func.call(thisArg, args[0], args[1]);\n      case 3: return func.call(thisArg, args[0], args[1], args[2]);\n    }\n    return func.apply(thisArg, args);\n  }\n\n  /**\n   * A specialized version of `baseAggregator` for arrays.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} setter The function to set `accumulator` values.\n   * @param {Function} iteratee The iteratee to transform keys.\n   * @param {Object} accumulator The initial aggregated object.\n   * @returns {Function} Returns `accumulator`.\n   */\n  function arrayAggregator(array, setter, iteratee, accumulator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      var value = array[index];\n      setter(accumulator, value, iteratee(value), array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.forEach` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEach(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (iteratee(array[index], index, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.forEachRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayEachRight(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n\n    while (length--) {\n      if (iteratee(array[length], length, array) === false) {\n        break;\n      }\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.every` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if all elements pass the predicate check,\n   *  else `false`.\n   */\n  function arrayEvery(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (!predicate(array[index], index, array)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * A specialized version of `_.filter` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {Array} Returns the new filtered array.\n   */\n  function arrayFilter(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (predicate(value, index, array)) {\n        result[resIndex++] = value;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.includes` for arrays without support for\n   * specifying an index to search from.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludes(array, value) {\n    var length = array == null ? 0 : array.length;\n    return !!length && baseIndexOf(array, value, 0) > -1;\n  }\n\n  /**\n   * This function is like `arrayIncludes` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} [array] The array to inspect.\n   * @param {*} target The value to search for.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {boolean} Returns `true` if `target` is found, else `false`.\n   */\n  function arrayIncludesWith(array, value, comparator) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (comparator(value, array[index])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * A specialized version of `_.map` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the new mapped array.\n   */\n  function arrayMap(array, iteratee) {\n    var index = -1,\n        length = array == null ? 0 : array.length,\n        result = Array(length);\n\n    while (++index < length) {\n      result[index] = iteratee(array[index], index, array);\n    }\n    return result;\n  }\n\n  /**\n   * Appends the elements of `values` to `array`.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {Array} values The values to append.\n   * @returns {Array} Returns `array`.\n   */\n  function arrayPush(array, values) {\n    var index = -1,\n        length = values.length,\n        offset = array.length;\n\n    while (++index < length) {\n      array[offset + index] = values[index];\n    }\n    return array;\n  }\n\n  /**\n   * A specialized version of `_.reduce` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the first element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduce(array, iteratee, accumulator, initAccum) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    if (initAccum && length) {\n      accumulator = array[++index];\n    }\n    while (++index < length) {\n      accumulator = iteratee(accumulator, array[index], index, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.reduceRight` for arrays without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} [accumulator] The initial value.\n   * @param {boolean} [initAccum] Specify using the last element of `array` as\n   *  the initial value.\n   * @returns {*} Returns the accumulated value.\n   */\n  function arrayReduceRight(array, iteratee, accumulator, initAccum) {\n    var length = array == null ? 0 : array.length;\n    if (initAccum && length) {\n      accumulator = array[--length];\n    }\n    while (length--) {\n      accumulator = iteratee(accumulator, array[length], length, array);\n    }\n    return accumulator;\n  }\n\n  /**\n   * A specialized version of `_.some` for arrays without support for iteratee\n   * shorthands.\n   *\n   * @private\n   * @param {Array} [array] The array to iterate over.\n   * @param {Function} predicate The function invoked per iteration.\n   * @returns {boolean} Returns `true` if any element passes the predicate check,\n   *  else `false`.\n   */\n  function arraySome(array, predicate) {\n    var index = -1,\n        length = array == null ? 0 : array.length;\n\n    while (++index < length) {\n      if (predicate(array[index], index, array)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Gets the size of an ASCII `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  var asciiSize = baseProperty('length');\n\n  /**\n   * Converts an ASCII `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function asciiToArray(string) {\n    return string.split('');\n  }\n\n  /**\n   * Splits an ASCII `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function asciiWords(string) {\n    return string.match(reAsciiWord) || [];\n  }\n\n  /**\n   * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n   * without support for iteratee shorthands, which iterates over `collection`\n   * using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the found element or its key, else `undefined`.\n   */\n  function baseFindKey(collection, predicate, eachFunc) {\n    var result;\n    eachFunc(collection, function(value, key, collection) {\n      if (predicate(value, key, collection)) {\n        result = key;\n        return false;\n      }\n    });\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.findIndex` and `_.findLastIndex` without\n   * support for iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {Function} predicate The function invoked per iteration.\n   * @param {number} fromIndex The index to search from.\n   * @param {boolean} [fromRight] Specify iterating from right to left.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseFindIndex(array, predicate, fromIndex, fromRight) {\n    var length = array.length,\n        index = fromIndex + (fromRight ? 1 : -1);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (predicate(array[index], index, array)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOf(array, value, fromIndex) {\n    return value === value\n      ? strictIndexOf(array, value, fromIndex)\n      : baseFindIndex(array, baseIsNaN, fromIndex);\n  }\n\n  /**\n   * This function is like `baseIndexOf` except that it accepts a comparator.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @param {Function} comparator The comparator invoked per element.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function baseIndexOfWith(array, value, fromIndex, comparator) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (comparator(array[index], value)) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * The base implementation of `_.isNaN` without support for number objects.\n   *\n   * @private\n   * @param {*} value The value to check.\n   * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n   */\n  function baseIsNaN(value) {\n    return value !== value;\n  }\n\n  /**\n   * The base implementation of `_.mean` and `_.meanBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the mean.\n   */\n  function baseMean(array, iteratee) {\n    var length = array == null ? 0 : array.length;\n    return length ? (baseSum(array, iteratee) / length) : NAN;\n  }\n\n  /**\n   * The base implementation of `_.property` without support for deep paths.\n   *\n   * @private\n   * @param {string} key The key of the property to get.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function baseProperty(key) {\n    return function(object) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.propertyOf` without support for deep paths.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @returns {Function} Returns the new accessor function.\n   */\n  function basePropertyOf(object) {\n    return function(key) {\n      return object == null ? undefined : object[key];\n    };\n  }\n\n  /**\n   * The base implementation of `_.reduce` and `_.reduceRight`, without support\n   * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n   *\n   * @private\n   * @param {Array|Object} collection The collection to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @param {*} accumulator The initial value.\n   * @param {boolean} initAccum Specify using the first or last element of\n   *  `collection` as the initial value.\n   * @param {Function} eachFunc The function to iterate over `collection`.\n   * @returns {*} Returns the accumulated value.\n   */\n  function baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n    eachFunc(collection, function(value, index, collection) {\n      accumulator = initAccum\n        ? (initAccum = false, value)\n        : iteratee(accumulator, value, index, collection);\n    });\n    return accumulator;\n  }\n\n  /**\n   * The base implementation of `_.sortBy` which uses `comparer` to define the\n   * sort order of `array` and replaces criteria objects with their corresponding\n   * values.\n   *\n   * @private\n   * @param {Array} array The array to sort.\n   * @param {Function} comparer The function to define sort order.\n   * @returns {Array} Returns `array`.\n   */\n  function baseSortBy(array, comparer) {\n    var length = array.length;\n\n    array.sort(comparer);\n    while (length--) {\n      array[length] = array[length].value;\n    }\n    return array;\n  }\n\n  /**\n   * The base implementation of `_.sum` and `_.sumBy` without support for\n   * iteratee shorthands.\n   *\n   * @private\n   * @param {Array} array The array to iterate over.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {number} Returns the sum.\n   */\n  function baseSum(array, iteratee) {\n    var result,\n        index = -1,\n        length = array.length;\n\n    while (++index < length) {\n      var current = iteratee(array[index]);\n      if (current !== undefined) {\n        result = result === undefined ? current : (result + current);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.times` without support for iteratee shorthands\n   * or max array length checks.\n   *\n   * @private\n   * @param {number} n The number of times to invoke `iteratee`.\n   * @param {Function} iteratee The function invoked per iteration.\n   * @returns {Array} Returns the array of results.\n   */\n  function baseTimes(n, iteratee) {\n    var index = -1,\n        result = Array(n);\n\n    while (++index < n) {\n      result[index] = iteratee(index);\n    }\n    return result;\n  }\n\n  /**\n   * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n   * of key-value pairs for `object` corresponding to the property names of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the key-value pairs.\n   */\n  function baseToPairs(object, props) {\n    return arrayMap(props, function(key) {\n      return [key, object[key]];\n    });\n  }\n\n  /**\n   * The base implementation of `_.unary` without support for storing metadata.\n   *\n   * @private\n   * @param {Function} func The function to cap arguments for.\n   * @returns {Function} Returns the new capped function.\n   */\n  function baseUnary(func) {\n    return function(value) {\n      return func(value);\n    };\n  }\n\n  /**\n   * The base implementation of `_.values` and `_.valuesIn` which creates an\n   * array of `object` property values corresponding to the property names\n   * of `props`.\n   *\n   * @private\n   * @param {Object} object The object to query.\n   * @param {Array} props The property names to get values for.\n   * @returns {Object} Returns the array of property values.\n   */\n  function baseValues(object, props) {\n    return arrayMap(props, function(key) {\n      return object[key];\n    });\n  }\n\n  /**\n   * Checks if a `cache` value for `key` exists.\n   *\n   * @private\n   * @param {Object} cache The cache to query.\n   * @param {string} key The key of the entry to check.\n   * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n   */\n  function cacheHas(cache, key) {\n    return cache.has(key);\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the first unmatched string symbol.\n   */\n  function charsStartIndex(strSymbols, chrSymbols) {\n    var index = -1,\n        length = strSymbols.length;\n\n    while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n   * that is not found in the character symbols.\n   *\n   * @private\n   * @param {Array} strSymbols The string symbols to inspect.\n   * @param {Array} chrSymbols The character symbols to find.\n   * @returns {number} Returns the index of the last unmatched string symbol.\n   */\n  function charsEndIndex(strSymbols, chrSymbols) {\n    var index = strSymbols.length;\n\n    while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n    return index;\n  }\n\n  /**\n   * Gets the number of `placeholder` occurrences in `array`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} placeholder The placeholder to search for.\n   * @returns {number} Returns the placeholder count.\n   */\n  function countHolders(array, placeholder) {\n    var length = array.length,\n        result = 0;\n\n    while (length--) {\n      if (array[length] === placeholder) {\n        ++result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n   * letters to basic Latin letters.\n   *\n   * @private\n   * @param {string} letter The matched letter to deburr.\n   * @returns {string} Returns the deburred letter.\n   */\n  var deburrLetter = basePropertyOf(deburredLetters);\n\n  /**\n   * Used by `_.escape` to convert characters to HTML entities.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  var escapeHtmlChar = basePropertyOf(htmlEscapes);\n\n  /**\n   * Used by `_.template` to escape characters for inclusion in compiled string literals.\n   *\n   * @private\n   * @param {string} chr The matched character to escape.\n   * @returns {string} Returns the escaped character.\n   */\n  function escapeStringChar(chr) {\n    return '\\\\' + stringEscapes[chr];\n  }\n\n  /**\n   * Gets the value at `key` of `object`.\n   *\n   * @private\n   * @param {Object} [object] The object to query.\n   * @param {string} key The key of the property to get.\n   * @returns {*} Returns the property value.\n   */\n  function getValue(object, key) {\n    return object == null ? undefined : object[key];\n  }\n\n  /**\n   * Checks if `string` contains Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n   */\n  function hasUnicode(string) {\n    return reHasUnicode.test(string);\n  }\n\n  /**\n   * Checks if `string` contains a word composed of Unicode symbols.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {boolean} Returns `true` if a word is found, else `false`.\n   */\n  function hasUnicodeWord(string) {\n    return reHasUnicodeWord.test(string);\n  }\n\n  /**\n   * Converts `iterator` to an array.\n   *\n   * @private\n   * @param {Object} iterator The iterator to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function iteratorToArray(iterator) {\n    var data,\n        result = [];\n\n    while (!(data = iterator.next()).done) {\n      result.push(data.value);\n    }\n    return result;\n  }\n\n  /**\n   * Converts `map` to its key-value pairs.\n   *\n   * @private\n   * @param {Object} map The map to convert.\n   * @returns {Array} Returns the key-value pairs.\n   */\n  function mapToArray(map) {\n    var index = -1,\n        result = Array(map.size);\n\n    map.forEach(function(value, key) {\n      result[++index] = [key, value];\n    });\n    return result;\n  }\n\n  /**\n   * Creates a unary function that invokes `func` with its argument transformed.\n   *\n   * @private\n   * @param {Function} func The function to wrap.\n   * @param {Function} transform The argument transform.\n   * @returns {Function} Returns the new function.\n   */\n  function overArg(func, transform) {\n    return function(arg) {\n      return func(transform(arg));\n    };\n  }\n\n  /**\n   * Replaces all `placeholder` elements in `array` with an internal placeholder\n   * and returns an array of their indexes.\n   *\n   * @private\n   * @param {Array} array The array to modify.\n   * @param {*} placeholder The placeholder to replace.\n   * @returns {Array} Returns the new array of placeholder indexes.\n   */\n  function replaceHolders(array, placeholder) {\n    var index = -1,\n        length = array.length,\n        resIndex = 0,\n        result = [];\n\n    while (++index < length) {\n      var value = array[index];\n      if (value === placeholder || value === PLACEHOLDER) {\n        array[index] = PLACEHOLDER;\n        result[resIndex++] = index;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Converts `set` to an array of its values.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the values.\n   */\n  function setToArray(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = value;\n    });\n    return result;\n  }\n\n  /**\n   * Converts `set` to its value-value pairs.\n   *\n   * @private\n   * @param {Object} set The set to convert.\n   * @returns {Array} Returns the value-value pairs.\n   */\n  function setToPairs(set) {\n    var index = -1,\n        result = Array(set.size);\n\n    set.forEach(function(value) {\n      result[++index] = [value, value];\n    });\n    return result;\n  }\n\n  /**\n   * A specialized version of `_.indexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictIndexOf(array, value, fromIndex) {\n    var index = fromIndex - 1,\n        length = array.length;\n\n    while (++index < length) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * A specialized version of `_.lastIndexOf` which performs strict equality\n   * comparisons of values, i.e. `===`.\n   *\n   * @private\n   * @param {Array} array The array to inspect.\n   * @param {*} value The value to search for.\n   * @param {number} fromIndex The index to search from.\n   * @returns {number} Returns the index of the matched value, else `-1`.\n   */\n  function strictLastIndexOf(array, value, fromIndex) {\n    var index = fromIndex + 1;\n    while (index--) {\n      if (array[index] === value) {\n        return index;\n      }\n    }\n    return index;\n  }\n\n  /**\n   * Gets the number of symbols in `string`.\n   *\n   * @private\n   * @param {string} string The string to inspect.\n   * @returns {number} Returns the string size.\n   */\n  function stringSize(string) {\n    return hasUnicode(string)\n      ? unicodeSize(string)\n      : asciiSize(string);\n  }\n\n  /**\n   * Converts `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function stringToArray(string) {\n    return hasUnicode(string)\n      ? unicodeToArray(string)\n      : asciiToArray(string);\n  }\n\n  /**\n   * Used by `_.unescape` to convert HTML entities to characters.\n   *\n   * @private\n   * @param {string} chr The matched character to unescape.\n   * @returns {string} Returns the unescaped character.\n   */\n  var unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\n  /**\n   * Gets the size of a Unicode `string`.\n   *\n   * @private\n   * @param {string} string The string inspect.\n   * @returns {number} Returns the string size.\n   */\n  function unicodeSize(string) {\n    var result = reUnicode.lastIndex = 0;\n    while (reUnicode.test(string)) {\n      ++result;\n    }\n    return result;\n  }\n\n  /**\n   * Converts a Unicode `string` to an array.\n   *\n   * @private\n   * @param {string} string The string to convert.\n   * @returns {Array} Returns the converted array.\n   */\n  function unicodeToArray(string) {\n    return string.match(reUnicode) || [];\n  }\n\n  /**\n   * Splits a Unicode `string` into an array of its words.\n   *\n   * @private\n   * @param {string} The string to inspect.\n   * @returns {Array} Returns the words of `string`.\n   */\n  function unicodeWords(string) {\n    return string.match(reUnicodeWord) || [];\n  }\n\n  /*--------------------------------------------------------------------------*/\n\n  /**\n   * Create a new pristine `lodash` function using the `context` object.\n   *\n   * @static\n   * @memberOf _\n   * @since 1.1.0\n   * @category Util\n   * @param {Object} [context=root] The context object.\n   * @returns {Function} Returns a new `lodash` function.\n   * @example\n   *\n   * _.mixin({ 'foo': _.constant('foo') });\n   *\n   * var lodash = _.runInContext();\n   * lodash.mixin({ 'bar': lodash.constant('bar') });\n   *\n   * _.isFunction(_.foo);\n   * // => true\n   * _.isFunction(_.bar);\n   * // => false\n   *\n   * lodash.isFunction(lodash.foo);\n   * // => false\n   * lodash.isFunction(lodash.bar);\n   * // => true\n   *\n   * // Create a suped-up `defer` in Node.js.\n   * var defer = _.runInContext({ 'setTimeout': setImmediate }).defer;\n   */\n  var runInContext = (function runInContext(context) {\n    context = context == null ? root : _.defaults(root.Object(), context, _.pick(root, contextProps));\n\n    /** Built-in constructor references. */\n    var Array = context.Array,\n        Date = context.Date,\n        Error = context.Error,\n        Function = context.Function,\n        Math = context.Math,\n        Object = context.Object,\n        RegExp = context.RegExp,\n        String = context.String,\n        TypeError = context.TypeError;\n\n    /** Used for built-in method references. */\n    var arrayProto = Array.prototype,\n        funcProto = Function.prototype,\n        objectProto = Object.prototype;\n\n    /** Used to detect overreaching core-js shims. */\n    var coreJsData = context['__core-js_shared__'];\n\n    /** Used to resolve the decompiled source of functions. */\n    var funcToString = funcProto.toString;\n\n    /** Used to check objects for own properties. */\n    var hasOwnProperty = objectProto.hasOwnProperty;\n\n    /** Used to generate unique IDs. */\n    var idCounter = 0;\n\n    /** Used to detect methods masquerading as native. */\n    var maskSrcKey = (function() {\n      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n      return uid ? ('Symbol(src)_1.' + uid) : '';\n    }());\n\n    /**\n     * Used to resolve the\n     * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n     * of values.\n     */\n    var nativeObjectToString = objectProto.toString;\n\n    /** Used to infer the `Object` constructor. */\n    var objectCtorString = funcToString.call(Object);\n\n    /** Used to restore the original `_` reference in `_.noConflict`. */\n    var oldDash = root._;\n\n    /** Used to detect if a method is native. */\n    var reIsNative = RegExp('^' +\n      funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n      .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n    );\n\n    /** Built-in value references. */\n    var Buffer = moduleExports ? context.Buffer : undefined,\n        Symbol = context.Symbol,\n        Uint8Array = context.Uint8Array,\n        allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined,\n        getPrototype = overArg(Object.getPrototypeOf, Object),\n        objectCreate = Object.create,\n        propertyIsEnumerable = objectProto.propertyIsEnumerable,\n        splice = arrayProto.splice,\n        spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined,\n        symIterator = Symbol ? Symbol.iterator : undefined,\n        symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n    var defineProperty = (function() {\n      try {\n        var func = getNative(Object, 'defineProperty');\n        func({}, '', {});\n        return func;\n      } catch (e) {}\n    }());\n\n    /** Mocked built-ins. */\n    var ctxClearTimeout = context.clearTimeout !== root.clearTimeout && context.clearTimeout,\n        ctxNow = Date && Date.now !== root.Date.now && Date.now,\n        ctxSetTimeout = context.setTimeout !== root.setTimeout && context.setTimeout;\n\n    /* Built-in method references for those with the same name as other `lodash` methods. */\n    var nativeCeil = Math.ceil,\n        nativeFloor = Math.floor,\n        nativeGetSymbols = Object.getOwnPropertySymbols,\n        nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined,\n        nativeIsFinite = context.isFinite,\n        nativeJoin = arrayProto.join,\n        nativeKeys = overArg(Object.keys, Object),\n        nativeMax = Math.max,\n        nativeMin = Math.min,\n        nativeNow = Date.now,\n        nativeParseInt = context.parseInt,\n        nativeRandom = Math.random,\n        nativeReverse = arrayProto.reverse;\n\n    /* Built-in method references that are verified to be native. */\n    var DataView = getNative(context, 'DataView'),\n        Map = getNative(context, 'Map'),\n        Promise = getNative(context, 'Promise'),\n        Set = getNative(context, 'Set'),\n        WeakMap = getNative(context, 'WeakMap'),\n        nativeCreate = getNative(Object, 'create');\n\n    /** Used to store function metadata. */\n    var metaMap = WeakMap && new WeakMap;\n\n    /** Used to lookup unminified function names. */\n    var realNames = {};\n\n    /** Used to detect maps, sets, and weakmaps. */\n    var dataViewCtorString = toSource(DataView),\n        mapCtorString = toSource(Map),\n        promiseCtorString = toSource(Promise),\n        setCtorString = toSource(Set),\n        weakMapCtorString = toSource(WeakMap);\n\n    /** Used to convert symbols to primitives and strings. */\n    var symbolProto = Symbol ? Symbol.prototype : undefined,\n        symbolValueOf = symbolProto ? symbolProto.valueOf : undefined,\n        symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` object which wraps `value` to enable implicit method\n     * chain sequences. Methods that operate on and return arrays, collections,\n     * and functions can be chained together. Methods that retrieve a single value\n     * or may return a primitive value will automatically end the chain sequence\n     * and return the unwrapped value. Otherwise, the value must be unwrapped\n     * with `_#value`.\n     *\n     * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n     * enabled using `_.chain`.\n     *\n     * The execution of chained methods is lazy, that is, it's deferred until\n     * `_#value` is implicitly or explicitly called.\n     *\n     * Lazy evaluation allows several methods to support shortcut fusion.\n     * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n     * the creation of intermediate arrays and can greatly reduce the number of\n     * iteratee executions. Sections of a chain sequence qualify for shortcut\n     * fusion if the section is applied to an array and iteratees accept only\n     * one argument. The heuristic for whether a section qualifies for shortcut\n     * fusion is subject to change.\n     *\n     * Chaining is supported in custom builds as long as the `_#value` method is\n     * directly or indirectly included in the build.\n     *\n     * In addition to lodash methods, wrappers have `Array` and `String` methods.\n     *\n     * The wrapper `Array` methods are:\n     * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n     *\n     * The wrapper `String` methods are:\n     * `replace` and `split`\n     *\n     * The wrapper methods that support shortcut fusion are:\n     * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n     * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n     * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n     *\n     * The chainable wrapper methods are:\n     * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n     * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n     * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n     * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n     * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n     * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n     * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n     * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n     * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n     * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n     * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n     * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n     * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n     * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n     * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n     * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n     * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n     * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n     * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n     * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n     * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n     * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n     * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n     * `zipObject`, `zipObjectDeep`, and `zipWith`\n     *\n     * The wrapper methods that are **not** chainable by default are:\n     * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n     * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n     * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n     * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n     * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n     * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n     * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n     * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n     * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n     * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n     * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n     * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n     * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n     * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n     * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n     * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n     * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n     * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n     * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n     * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n     * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n     * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n     * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n     * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n     * `upperFirst`, `value`, and `words`\n     *\n     * @name _\n     * @constructor\n     * @category Seq\n     * @param {*} value The value to wrap in a `lodash` instance.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2, 3]);\n     *\n     * // Returns an unwrapped value.\n     * wrapped.reduce(_.add);\n     * // => 6\n     *\n     * // Returns a wrapped value.\n     * var squares = wrapped.map(square);\n     *\n     * _.isArray(squares);\n     * // => false\n     *\n     * _.isArray(squares.value());\n     * // => true\n     */\n    function lodash(value) {\n      if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n        if (value instanceof LodashWrapper) {\n          return value;\n        }\n        if (hasOwnProperty.call(value, '__wrapped__')) {\n          return wrapperClone(value);\n        }\n      }\n      return new LodashWrapper(value);\n    }\n\n    /**\n     * The base implementation of `_.create` without support for assigning\n     * properties to the created object.\n     *\n     * @private\n     * @param {Object} proto The object to inherit from.\n     * @returns {Object} Returns the new object.\n     */\n    var baseCreate = (function() {\n      function object() {}\n      return function(proto) {\n        if (!isObject(proto)) {\n          return {};\n        }\n        if (objectCreate) {\n          return objectCreate(proto);\n        }\n        object.prototype = proto;\n        var result = new object;\n        object.prototype = undefined;\n        return result;\n      };\n    }());\n\n    /**\n     * The function whose prototype chain sequence wrappers inherit from.\n     *\n     * @private\n     */\n    function baseLodash() {\n      // No operation performed.\n    }\n\n    /**\n     * The base constructor for creating `lodash` wrapper objects.\n     *\n     * @private\n     * @param {*} value The value to wrap.\n     * @param {boolean} [chainAll] Enable explicit method chain sequences.\n     */\n    function LodashWrapper(value, chainAll) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__chain__ = !!chainAll;\n      this.__index__ = 0;\n      this.__values__ = undefined;\n    }\n\n    /**\n     * By default, the template delimiters used by lodash are like those in\n     * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n     * following template settings to use alternative delimiters.\n     *\n     * @static\n     * @memberOf _\n     * @type {Object}\n     */\n    lodash.templateSettings = {\n\n      /**\n       * Used to detect `data` property values to be HTML-escaped.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'escape': reEscape,\n\n      /**\n       * Used to detect code to be evaluated.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'evaluate': reEvaluate,\n\n      /**\n       * Used to detect `data` property values to inject.\n       *\n       * @memberOf _.templateSettings\n       * @type {RegExp}\n       */\n      'interpolate': reInterpolate,\n\n      /**\n       * Used to reference the data object in the template text.\n       *\n       * @memberOf _.templateSettings\n       * @type {string}\n       */\n      'variable': '',\n\n      /**\n       * Used to import variables into the compiled template.\n       *\n       * @memberOf _.templateSettings\n       * @type {Object}\n       */\n      'imports': {\n\n        /**\n         * A reference to the `lodash` function.\n         *\n         * @memberOf _.templateSettings.imports\n         * @type {Function}\n         */\n        '_': lodash\n      }\n    };\n\n    // Ensure wrappers are instances of `baseLodash`.\n    lodash.prototype = baseLodash.prototype;\n    lodash.prototype.constructor = lodash;\n\n    LodashWrapper.prototype = baseCreate(baseLodash.prototype);\n    LodashWrapper.prototype.constructor = LodashWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n     *\n     * @private\n     * @constructor\n     * @param {*} value The value to wrap.\n     */\n    function LazyWrapper(value) {\n      this.__wrapped__ = value;\n      this.__actions__ = [];\n      this.__dir__ = 1;\n      this.__filtered__ = false;\n      this.__iteratees__ = [];\n      this.__takeCount__ = MAX_ARRAY_LENGTH;\n      this.__views__ = [];\n    }\n\n    /**\n     * Creates a clone of the lazy wrapper object.\n     *\n     * @private\n     * @name clone\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the cloned `LazyWrapper` object.\n     */\n    function lazyClone() {\n      var result = new LazyWrapper(this.__wrapped__);\n      result.__actions__ = copyArray(this.__actions__);\n      result.__dir__ = this.__dir__;\n      result.__filtered__ = this.__filtered__;\n      result.__iteratees__ = copyArray(this.__iteratees__);\n      result.__takeCount__ = this.__takeCount__;\n      result.__views__ = copyArray(this.__views__);\n      return result;\n    }\n\n    /**\n     * Reverses the direction of lazy iteration.\n     *\n     * @private\n     * @name reverse\n     * @memberOf LazyWrapper\n     * @returns {Object} Returns the new reversed `LazyWrapper` object.\n     */\n    function lazyReverse() {\n      if (this.__filtered__) {\n        var result = new LazyWrapper(this);\n        result.__dir__ = -1;\n        result.__filtered__ = true;\n      } else {\n        result = this.clone();\n        result.__dir__ *= -1;\n      }\n      return result;\n    }\n\n    /**\n     * Extracts the unwrapped value from its lazy wrapper.\n     *\n     * @private\n     * @name value\n     * @memberOf LazyWrapper\n     * @returns {*} Returns the unwrapped value.\n     */\n    function lazyValue() {\n      var array = this.__wrapped__.value(),\n          dir = this.__dir__,\n          isArr = isArray(array),\n          isRight = dir < 0,\n          arrLength = isArr ? array.length : 0,\n          view = getView(0, arrLength, this.__views__),\n          start = view.start,\n          end = view.end,\n          length = end - start,\n          index = isRight ? end : (start - 1),\n          iteratees = this.__iteratees__,\n          iterLength = iteratees.length,\n          resIndex = 0,\n          takeCount = nativeMin(length, this.__takeCount__);\n\n      if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n        return baseWrapperValue(array, this.__actions__);\n      }\n      var result = [];\n\n      outer:\n      while (length-- && resIndex < takeCount) {\n        index += dir;\n\n        var iterIndex = -1,\n            value = array[index];\n\n        while (++iterIndex < iterLength) {\n          var data = iteratees[iterIndex],\n              iteratee = data.iteratee,\n              type = data.type,\n              computed = iteratee(value);\n\n          if (type == LAZY_MAP_FLAG) {\n            value = computed;\n          } else if (!computed) {\n            if (type == LAZY_FILTER_FLAG) {\n              continue outer;\n            } else {\n              break outer;\n            }\n          }\n        }\n        result[resIndex++] = value;\n      }\n      return result;\n    }\n\n    // Ensure `LazyWrapper` is an instance of `baseLodash`.\n    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\n    LazyWrapper.prototype.constructor = LazyWrapper;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a hash object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Hash(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the hash.\n     *\n     * @private\n     * @name clear\n     * @memberOf Hash\n     */\n    function hashClear() {\n      this.__data__ = nativeCreate ? nativeCreate(null) : {};\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the hash.\n     *\n     * @private\n     * @name delete\n     * @memberOf Hash\n     * @param {Object} hash The hash to modify.\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function hashDelete(key) {\n      var result = this.has(key) && delete this.__data__[key];\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the hash value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Hash\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function hashGet(key) {\n      var data = this.__data__;\n      if (nativeCreate) {\n        var result = data[key];\n        return result === HASH_UNDEFINED ? undefined : result;\n      }\n      return hasOwnProperty.call(data, key) ? data[key] : undefined;\n    }\n\n    /**\n     * Checks if a hash value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Hash\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function hashHas(key) {\n      var data = this.__data__;\n      return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n    }\n\n    /**\n     * Sets the hash `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Hash\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the hash instance.\n     */\n    function hashSet(key, value) {\n      var data = this.__data__;\n      this.size += this.has(key) ? 0 : 1;\n      data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n      return this;\n    }\n\n    // Add methods to `Hash`.\n    Hash.prototype.clear = hashClear;\n    Hash.prototype['delete'] = hashDelete;\n    Hash.prototype.get = hashGet;\n    Hash.prototype.has = hashHas;\n    Hash.prototype.set = hashSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an list cache object.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function ListCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the list cache.\n     *\n     * @private\n     * @name clear\n     * @memberOf ListCache\n     */\n    function listCacheClear() {\n      this.__data__ = [];\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the list cache.\n     *\n     * @private\n     * @name delete\n     * @memberOf ListCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function listCacheDelete(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        return false;\n      }\n      var lastIndex = data.length - 1;\n      if (index == lastIndex) {\n        data.pop();\n      } else {\n        splice.call(data, index, 1);\n      }\n      --this.size;\n      return true;\n    }\n\n    /**\n     * Gets the list cache value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf ListCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function listCacheGet(key) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      return index < 0 ? undefined : data[index][1];\n    }\n\n    /**\n     * Checks if a list cache value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf ListCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function listCacheHas(key) {\n      return assocIndexOf(this.__data__, key) > -1;\n    }\n\n    /**\n     * Sets the list cache `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf ListCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the list cache instance.\n     */\n    function listCacheSet(key, value) {\n      var data = this.__data__,\n          index = assocIndexOf(data, key);\n\n      if (index < 0) {\n        ++this.size;\n        data.push([key, value]);\n      } else {\n        data[index][1] = value;\n      }\n      return this;\n    }\n\n    // Add methods to `ListCache`.\n    ListCache.prototype.clear = listCacheClear;\n    ListCache.prototype['delete'] = listCacheDelete;\n    ListCache.prototype.get = listCacheGet;\n    ListCache.prototype.has = listCacheHas;\n    ListCache.prototype.set = listCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a map cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function MapCache(entries) {\n      var index = -1,\n          length = entries == null ? 0 : entries.length;\n\n      this.clear();\n      while (++index < length) {\n        var entry = entries[index];\n        this.set(entry[0], entry[1]);\n      }\n    }\n\n    /**\n     * Removes all key-value entries from the map.\n     *\n     * @private\n     * @name clear\n     * @memberOf MapCache\n     */\n    function mapCacheClear() {\n      this.size = 0;\n      this.__data__ = {\n        'hash': new Hash,\n        'map': new (Map || ListCache),\n        'string': new Hash\n      };\n    }\n\n    /**\n     * Removes `key` and its value from the map.\n     *\n     * @private\n     * @name delete\n     * @memberOf MapCache\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function mapCacheDelete(key) {\n      var result = getMapData(this, key)['delete'](key);\n      this.size -= result ? 1 : 0;\n      return result;\n    }\n\n    /**\n     * Gets the map value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf MapCache\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function mapCacheGet(key) {\n      return getMapData(this, key).get(key);\n    }\n\n    /**\n     * Checks if a map value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf MapCache\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function mapCacheHas(key) {\n      return getMapData(this, key).has(key);\n    }\n\n    /**\n     * Sets the map `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf MapCache\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the map cache instance.\n     */\n    function mapCacheSet(key, value) {\n      var data = getMapData(this, key),\n          size = data.size;\n\n      data.set(key, value);\n      this.size += data.size == size ? 0 : 1;\n      return this;\n    }\n\n    // Add methods to `MapCache`.\n    MapCache.prototype.clear = mapCacheClear;\n    MapCache.prototype['delete'] = mapCacheDelete;\n    MapCache.prototype.get = mapCacheGet;\n    MapCache.prototype.has = mapCacheHas;\n    MapCache.prototype.set = mapCacheSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     *\n     * Creates an array cache object to store unique values.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [values] The values to cache.\n     */\n    function SetCache(values) {\n      var index = -1,\n          length = values == null ? 0 : values.length;\n\n      this.__data__ = new MapCache;\n      while (++index < length) {\n        this.add(values[index]);\n      }\n    }\n\n    /**\n     * Adds `value` to the array cache.\n     *\n     * @private\n     * @name add\n     * @memberOf SetCache\n     * @alias push\n     * @param {*} value The value to cache.\n     * @returns {Object} Returns the cache instance.\n     */\n    function setCacheAdd(value) {\n      this.__data__.set(value, HASH_UNDEFINED);\n      return this;\n    }\n\n    /**\n     * Checks if `value` is in the array cache.\n     *\n     * @private\n     * @name has\n     * @memberOf SetCache\n     * @param {*} value The value to search for.\n     * @returns {number} Returns `true` if `value` is found, else `false`.\n     */\n    function setCacheHas(value) {\n      return this.__data__.has(value);\n    }\n\n    // Add methods to `SetCache`.\n    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\n    SetCache.prototype.has = setCacheHas;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a stack cache object to store key-value pairs.\n     *\n     * @private\n     * @constructor\n     * @param {Array} [entries] The key-value pairs to cache.\n     */\n    function Stack(entries) {\n      var data = this.__data__ = new ListCache(entries);\n      this.size = data.size;\n    }\n\n    /**\n     * Removes all key-value entries from the stack.\n     *\n     * @private\n     * @name clear\n     * @memberOf Stack\n     */\n    function stackClear() {\n      this.__data__ = new ListCache;\n      this.size = 0;\n    }\n\n    /**\n     * Removes `key` and its value from the stack.\n     *\n     * @private\n     * @name delete\n     * @memberOf Stack\n     * @param {string} key The key of the value to remove.\n     * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n     */\n    function stackDelete(key) {\n      var data = this.__data__,\n          result = data['delete'](key);\n\n      this.size = data.size;\n      return result;\n    }\n\n    /**\n     * Gets the stack value for `key`.\n     *\n     * @private\n     * @name get\n     * @memberOf Stack\n     * @param {string} key The key of the value to get.\n     * @returns {*} Returns the entry value.\n     */\n    function stackGet(key) {\n      return this.__data__.get(key);\n    }\n\n    /**\n     * Checks if a stack value for `key` exists.\n     *\n     * @private\n     * @name has\n     * @memberOf Stack\n     * @param {string} key The key of the entry to check.\n     * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n     */\n    function stackHas(key) {\n      return this.__data__.has(key);\n    }\n\n    /**\n     * Sets the stack `key` to `value`.\n     *\n     * @private\n     * @name set\n     * @memberOf Stack\n     * @param {string} key The key of the value to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns the stack cache instance.\n     */\n    function stackSet(key, value) {\n      var data = this.__data__;\n      if (data instanceof ListCache) {\n        var pairs = data.__data__;\n        if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n          pairs.push([key, value]);\n          this.size = ++data.size;\n          return this;\n        }\n        data = this.__data__ = new MapCache(pairs);\n      }\n      data.set(key, value);\n      this.size = data.size;\n      return this;\n    }\n\n    // Add methods to `Stack`.\n    Stack.prototype.clear = stackClear;\n    Stack.prototype['delete'] = stackDelete;\n    Stack.prototype.get = stackGet;\n    Stack.prototype.has = stackHas;\n    Stack.prototype.set = stackSet;\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of the enumerable property names of the array-like `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @param {boolean} inherited Specify returning inherited property names.\n     * @returns {Array} Returns the array of property names.\n     */\n    function arrayLikeKeys(value, inherited) {\n      var isArr = isArray(value),\n          isArg = !isArr && isArguments(value),\n          isBuff = !isArr && !isArg && isBuffer(value),\n          isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n          skipIndexes = isArr || isArg || isBuff || isType,\n          result = skipIndexes ? baseTimes(value.length, String) : [],\n          length = result.length;\n\n      for (var key in value) {\n        if ((inherited || hasOwnProperty.call(value, key)) &&\n            !(skipIndexes && (\n               // Safari 9 has enumerable `arguments.length` in strict mode.\n               key == 'length' ||\n               // Node.js 0.10 has enumerable non-index properties on buffers.\n               (isBuff && (key == 'offset' || key == 'parent')) ||\n               // PhantomJS 2 has enumerable non-index properties on typed arrays.\n               (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n               // Skip index properties.\n               isIndex(key, length)\n            ))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `_.sample` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @returns {*} Returns the random element.\n     */\n    function arraySample(array) {\n      var length = array.length;\n      return length ? array[baseRandom(0, length - 1)] : undefined;\n    }\n\n    /**\n     * A specialized version of `_.sampleSize` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function arraySampleSize(array, n) {\n      return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * A specialized version of `_.shuffle` for arrays.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function arrayShuffle(array) {\n      return shuffleSelf(copyArray(array));\n    }\n\n    /**\n     * This function is like `assignValue` except that it doesn't assign\n     * `undefined` values.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignMergeValue(object, key, value) {\n      if ((value !== undefined && !eq(object[key], value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Assigns `value` to `key` of `object` if the existing value is not equivalent\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function assignValue(object, key, value) {\n      var objValue = object[key];\n      if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n          (value === undefined && !(key in object))) {\n        baseAssignValue(object, key, value);\n      }\n    }\n\n    /**\n     * Gets the index at which the `key` is found in `array` of key-value pairs.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {*} key The key to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     */\n    function assocIndexOf(array, key) {\n      var length = array.length;\n      while (length--) {\n        if (eq(array[length][0], key)) {\n          return length;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * Aggregates elements of `collection` on `accumulator` with keys transformed\n     * by `iteratee` and values set by `setter`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform keys.\n     * @param {Object} accumulator The initial aggregated object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseAggregator(collection, setter, iteratee, accumulator) {\n      baseEach(collection, function(value, key, collection) {\n        setter(accumulator, value, iteratee(value), collection);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.assign` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssign(object, source) {\n      return object && copyObject(source, keys(source), object);\n    }\n\n    /**\n     * The base implementation of `_.assignIn` without support for multiple sources\n     * or `customizer` functions.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @returns {Object} Returns `object`.\n     */\n    function baseAssignIn(object, source) {\n      return object && copyObject(source, keysIn(source), object);\n    }\n\n    /**\n     * The base implementation of `assignValue` and `assignMergeValue` without\n     * value checks.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {string} key The key of the property to assign.\n     * @param {*} value The value to assign.\n     */\n    function baseAssignValue(object, key, value) {\n      if (key == '__proto__' && defineProperty) {\n        defineProperty(object, key, {\n          'configurable': true,\n          'enumerable': true,\n          'value': value,\n          'writable': true\n        });\n      } else {\n        object[key] = value;\n      }\n    }\n\n    /**\n     * The base implementation of `_.at` without support for individual paths.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Array} Returns the picked elements.\n     */\n    function baseAt(object, paths) {\n      var index = -1,\n          length = paths.length,\n          result = Array(length),\n          skip = object == null;\n\n      while (++index < length) {\n        result[index] = skip ? undefined : get(object, paths[index]);\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.clamp` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     */\n    function baseClamp(number, lower, upper) {\n      if (number === number) {\n        if (upper !== undefined) {\n          number = number <= upper ? number : upper;\n        }\n        if (lower !== undefined) {\n          number = number >= lower ? number : lower;\n        }\n      }\n      return number;\n    }\n\n    /**\n     * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n     * traversed objects.\n     *\n     * @private\n     * @param {*} value The value to clone.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Deep clone\n     *  2 - Flatten inherited properties\n     *  4 - Clone symbols\n     * @param {Function} [customizer] The function to customize cloning.\n     * @param {string} [key] The key of `value`.\n     * @param {Object} [object] The parent object of `value`.\n     * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n     * @returns {*} Returns the cloned value.\n     */\n    function baseClone(value, bitmask, customizer, key, object, stack) {\n      var result,\n          isDeep = bitmask & CLONE_DEEP_FLAG,\n          isFlat = bitmask & CLONE_FLAT_FLAG,\n          isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n      if (customizer) {\n        result = object ? customizer(value, key, object, stack) : customizer(value);\n      }\n      if (result !== undefined) {\n        return result;\n      }\n      if (!isObject(value)) {\n        return value;\n      }\n      var isArr = isArray(value);\n      if (isArr) {\n        result = initCloneArray(value);\n        if (!isDeep) {\n          return copyArray(value, result);\n        }\n      } else {\n        var tag = getTag(value),\n            isFunc = tag == funcTag || tag == genTag;\n\n        if (isBuffer(value)) {\n          return cloneBuffer(value, isDeep);\n        }\n        if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n          result = (isFlat || isFunc) ? {} : initCloneObject(value);\n          if (!isDeep) {\n            return isFlat\n              ? copySymbolsIn(value, baseAssignIn(result, value))\n              : copySymbols(value, baseAssign(result, value));\n          }\n        } else {\n          if (!cloneableTags[tag]) {\n            return object ? value : {};\n          }\n          result = initCloneByTag(value, tag, baseClone, isDeep);\n        }\n      }\n      // Check for circular references and return its corresponding clone.\n      stack || (stack = new Stack);\n      var stacked = stack.get(value);\n      if (stacked) {\n        return stacked;\n      }\n      stack.set(value, result);\n\n      var keysFunc = isFull\n        ? (isFlat ? getAllKeysIn : getAllKeys)\n        : (isFlat ? keysIn : keys);\n\n      var props = isArr ? undefined : keysFunc(value);\n      arrayEach(props || value, function(subValue, key) {\n        if (props) {\n          key = subValue;\n          subValue = value[key];\n        }\n        // Recursively populate clone (susceptible to call stack limits).\n        assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.conforms` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseConforms(source) {\n      var props = keys(source);\n      return function(object) {\n        return baseConformsTo(object, source, props);\n      };\n    }\n\n    /**\n     * The base implementation of `_.conformsTo` which accepts `props` to check.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     */\n    function baseConformsTo(object, source, props) {\n      var length = props.length;\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (length--) {\n        var key = props[length],\n            predicate = source[key],\n            value = object[key];\n\n        if ((value === undefined && !(key in object)) || !predicate(value)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.delay` and `_.defer` which accepts `args`\n     * to provide to `func`.\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {Array} args The arguments to provide to `func`.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    function baseDelay(func, wait, args) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return setTimeout(function() { func.apply(undefined, args); }, wait);\n    }\n\n    /**\n     * The base implementation of methods like `_.difference` without support\n     * for excluding multiple arrays or iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Array} values The values to exclude.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     */\n    function baseDifference(array, values, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          isCommon = true,\n          length = array.length,\n          result = [],\n          valuesLength = values.length;\n\n      if (!length) {\n        return result;\n      }\n      if (iteratee) {\n        values = arrayMap(values, baseUnary(iteratee));\n      }\n      if (comparator) {\n        includes = arrayIncludesWith;\n        isCommon = false;\n      }\n      else if (values.length >= LARGE_ARRAY_SIZE) {\n        includes = cacheHas;\n        isCommon = false;\n        values = new SetCache(values);\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee == null ? value : iteratee(value);\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var valuesIndex = valuesLength;\n          while (valuesIndex--) {\n            if (values[valuesIndex] === computed) {\n              continue outer;\n            }\n          }\n          result.push(value);\n        }\n        else if (!includes(values, computed, comparator)) {\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.forEach` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEach = createBaseEach(baseForOwn);\n\n    /**\n     * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     */\n    var baseEachRight = createBaseEach(baseForOwnRight, true);\n\n    /**\n     * The base implementation of `_.every` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`\n     */\n    function baseEvery(collection, predicate) {\n      var result = true;\n      baseEach(collection, function(value, index, collection) {\n        result = !!predicate(value, index, collection);\n        return result;\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of methods like `_.max` and `_.min` which accepts a\n     * `comparator` to determine the extremum value.\n     *\n     * @private\n     * @param {Array} array The array to iterate over.\n     * @param {Function} iteratee The iteratee invoked per iteration.\n     * @param {Function} comparator The comparator used to compare values.\n     * @returns {*} Returns the extremum value.\n     */\n    function baseExtremum(array, iteratee, comparator) {\n      var index = -1,\n          length = array.length;\n\n      while (++index < length) {\n        var value = array[index],\n            current = iteratee(value);\n\n        if (current != null && (computed === undefined\n              ? (current === current && !isSymbol(current))\n              : comparator(current, computed)\n            )) {\n          var computed = current,\n              result = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.fill` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     */\n    function baseFill(array, value, start, end) {\n      var length = array.length;\n\n      start = toInteger(start);\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = (end === undefined || end > length) ? length : toInteger(end);\n      if (end < 0) {\n        end += length;\n      }\n      end = start > end ? 0 : toLength(end);\n      while (start < end) {\n        array[start++] = value;\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.filter` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     */\n    function baseFilter(collection, predicate) {\n      var result = [];\n      baseEach(collection, function(value, index, collection) {\n        if (predicate(value, index, collection)) {\n          result.push(value);\n        }\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.flatten` with support for restricting flattening.\n     *\n     * @private\n     * @param {Array} array The array to flatten.\n     * @param {number} depth The maximum recursion depth.\n     * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n     * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n     * @param {Array} [result=[]] The initial result value.\n     * @returns {Array} Returns the new flattened array.\n     */\n    function baseFlatten(array, depth, predicate, isStrict, result) {\n      var index = -1,\n          length = array.length;\n\n      predicate || (predicate = isFlattenable);\n      result || (result = []);\n\n      while (++index < length) {\n        var value = array[index];\n        if (depth > 0 && predicate(value)) {\n          if (depth > 1) {\n            // Recursively flatten arrays (susceptible to call stack limits).\n            baseFlatten(value, depth - 1, predicate, isStrict, result);\n          } else {\n            arrayPush(result, value);\n          }\n        } else if (!isStrict) {\n          result[result.length] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `baseForOwn` which iterates over `object`\n     * properties returned by `keysFunc` and invokes `iteratee` for each property.\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseFor = createBaseFor();\n\n    /**\n     * This function is like `baseFor` except that it iterates over properties\n     * in the opposite order.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @returns {Object} Returns `object`.\n     */\n    var baseForRight = createBaseFor(true);\n\n    /**\n     * The base implementation of `_.forOwn` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwn(object, iteratee) {\n      return object && baseFor(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     */\n    function baseForOwnRight(object, iteratee) {\n      return object && baseForRight(object, iteratee, keys);\n    }\n\n    /**\n     * The base implementation of `_.functions` which creates an array of\n     * `object` function property names filtered from `props`.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Array} props The property names to filter.\n     * @returns {Array} Returns the function names.\n     */\n    function baseFunctions(object, props) {\n      return arrayFilter(props, function(key) {\n        return isFunction(object[key]);\n      });\n    }\n\n    /**\n     * The base implementation of `_.get` without support for default values.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseGet(object, path) {\n      path = castPath(path, object);\n\n      var index = 0,\n          length = path.length;\n\n      while (object != null && index < length) {\n        object = object[toKey(path[index++])];\n      }\n      return (index && index == length) ? object : undefined;\n    }\n\n    /**\n     * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n     * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Function} keysFunc The function to get the keys of `object`.\n     * @param {Function} symbolsFunc The function to get the symbols of `object`.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function baseGetAllKeys(object, keysFunc, symbolsFunc) {\n      var result = keysFunc(object);\n      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n    }\n\n    /**\n     * The base implementation of `getTag` without fallbacks for buggy environments.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    function baseGetTag(value) {\n      if (value == null) {\n        return value === undefined ? undefinedTag : nullTag;\n      }\n      return (symToStringTag && symToStringTag in Object(value))\n        ? getRawTag(value)\n        : objectToString(value);\n    }\n\n    /**\n     * The base implementation of `_.gt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     */\n    function baseGt(value, other) {\n      return value > other;\n    }\n\n    /**\n     * The base implementation of `_.has` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHas(object, key) {\n      return object != null && hasOwnProperty.call(object, key);\n    }\n\n    /**\n     * The base implementation of `_.hasIn` without support for deep paths.\n     *\n     * @private\n     * @param {Object} [object] The object to query.\n     * @param {Array|string} key The key to check.\n     * @returns {boolean} Returns `true` if `key` exists, else `false`.\n     */\n    function baseHasIn(object, key) {\n      return object != null && key in Object(object);\n    }\n\n    /**\n     * The base implementation of `_.inRange` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {number} number The number to check.\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     */\n    function baseInRange(number, start, end) {\n      return number >= nativeMin(start, end) && number < nativeMax(start, end);\n    }\n\n    /**\n     * The base implementation of methods like `_.intersection`, without support\n     * for iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of shared values.\n     */\n    function baseIntersection(arrays, iteratee, comparator) {\n      var includes = comparator ? arrayIncludesWith : arrayIncludes,\n          length = arrays[0].length,\n          othLength = arrays.length,\n          othIndex = othLength,\n          caches = Array(othLength),\n          maxLength = Infinity,\n          result = [];\n\n      while (othIndex--) {\n        var array = arrays[othIndex];\n        if (othIndex && iteratee) {\n          array = arrayMap(array, baseUnary(iteratee));\n        }\n        maxLength = nativeMin(array.length, maxLength);\n        caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n          ? new SetCache(othIndex && array)\n          : undefined;\n      }\n      array = arrays[0];\n\n      var index = -1,\n          seen = caches[0];\n\n      outer:\n      while (++index < length && result.length < maxLength) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (!(seen\n              ? cacheHas(seen, computed)\n              : includes(result, computed, comparator)\n            )) {\n          othIndex = othLength;\n          while (--othIndex) {\n            var cache = caches[othIndex];\n            if (!(cache\n                  ? cacheHas(cache, computed)\n                  : includes(arrays[othIndex], computed, comparator))\n                ) {\n              continue outer;\n            }\n          }\n          if (seen) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.invert` and `_.invertBy` which inverts\n     * `object` with values transformed by `iteratee` and set by `setter`.\n     *\n     * @private\n     * @param {Object} object The object to iterate over.\n     * @param {Function} setter The function to set `accumulator` values.\n     * @param {Function} iteratee The iteratee to transform values.\n     * @param {Object} accumulator The initial inverted object.\n     * @returns {Function} Returns `accumulator`.\n     */\n    function baseInverter(object, setter, iteratee, accumulator) {\n      baseForOwn(object, function(value, key, object) {\n        setter(accumulator, iteratee(value), key, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * The base implementation of `_.invoke` without support for individual\n     * method arguments.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {Array} args The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     */\n    function baseInvoke(object, path, args) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      var func = object == null ? object : object[toKey(last(path))];\n      return func == null ? undefined : apply(func, object, args);\n    }\n\n    /**\n     * The base implementation of `_.isArguments`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     */\n    function baseIsArguments(value) {\n      return isObjectLike(value) && baseGetTag(value) == argsTag;\n    }\n\n    /**\n     * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     */\n    function baseIsArrayBuffer(value) {\n      return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n    }\n\n    /**\n     * The base implementation of `_.isDate` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     */\n    function baseIsDate(value) {\n      return isObjectLike(value) && baseGetTag(value) == dateTag;\n    }\n\n    /**\n     * The base implementation of `_.isEqual` which supports partial comparisons\n     * and tracks traversed objects.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {boolean} bitmask The bitmask flags.\n     *  1 - Unordered comparison\n     *  2 - Partial comparison\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     */\n    function baseIsEqual(value, other, bitmask, customizer, stack) {\n      if (value === other) {\n        return true;\n      }\n      if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n        return value !== value && other !== other;\n      }\n      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n    }\n\n    /**\n     * A specialized version of `baseIsEqual` for arrays and objects which performs\n     * deep comparisons and tracks traversed objects enabling objects with circular\n     * references to be compared.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n      var objIsArr = isArray(object),\n          othIsArr = isArray(other),\n          objTag = objIsArr ? arrayTag : getTag(object),\n          othTag = othIsArr ? arrayTag : getTag(other);\n\n      objTag = objTag == argsTag ? objectTag : objTag;\n      othTag = othTag == argsTag ? objectTag : othTag;\n\n      var objIsObj = objTag == objectTag,\n          othIsObj = othTag == objectTag,\n          isSameTag = objTag == othTag;\n\n      if (isSameTag && isBuffer(object)) {\n        if (!isBuffer(other)) {\n          return false;\n        }\n        objIsArr = true;\n        objIsObj = false;\n      }\n      if (isSameTag && !objIsObj) {\n        stack || (stack = new Stack);\n        return (objIsArr || isTypedArray(object))\n          ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n          : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n      }\n      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n        var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n            othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n        if (objIsWrapped || othIsWrapped) {\n          var objUnwrapped = objIsWrapped ? object.value() : object,\n              othUnwrapped = othIsWrapped ? other.value() : other;\n\n          stack || (stack = new Stack);\n          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n        }\n      }\n      if (!isSameTag) {\n        return false;\n      }\n      stack || (stack = new Stack);\n      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n    }\n\n    /**\n     * The base implementation of `_.isMap` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     */\n    function baseIsMap(value) {\n      return isObjectLike(value) && getTag(value) == mapTag;\n    }\n\n    /**\n     * The base implementation of `_.isMatch` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Array} matchData The property names, values, and compare flags to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     */\n    function baseIsMatch(object, source, matchData, customizer) {\n      var index = matchData.length,\n          length = index,\n          noCustomizer = !customizer;\n\n      if (object == null) {\n        return !length;\n      }\n      object = Object(object);\n      while (index--) {\n        var data = matchData[index];\n        if ((noCustomizer && data[2])\n              ? data[1] !== object[data[0]]\n              : !(data[0] in object)\n            ) {\n          return false;\n        }\n      }\n      while (++index < length) {\n        data = matchData[index];\n        var key = data[0],\n            objValue = object[key],\n            srcValue = data[1];\n\n        if (noCustomizer && data[2]) {\n          if (objValue === undefined && !(key in object)) {\n            return false;\n          }\n        } else {\n          var stack = new Stack;\n          if (customizer) {\n            var result = customizer(objValue, srcValue, key, object, source, stack);\n          }\n          if (!(result === undefined\n                ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n                : result\n              )) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n\n    /**\n     * The base implementation of `_.isNative` without bad shim checks.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     */\n    function baseIsNative(value) {\n      if (!isObject(value) || isMasked(value)) {\n        return false;\n      }\n      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n      return pattern.test(toSource(value));\n    }\n\n    /**\n     * The base implementation of `_.isRegExp` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     */\n    function baseIsRegExp(value) {\n      return isObjectLike(value) && baseGetTag(value) == regexpTag;\n    }\n\n    /**\n     * The base implementation of `_.isSet` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     */\n    function baseIsSet(value) {\n      return isObjectLike(value) && getTag(value) == setTag;\n    }\n\n    /**\n     * The base implementation of `_.isTypedArray` without Node.js optimizations.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     */\n    function baseIsTypedArray(value) {\n      return isObjectLike(value) &&\n        isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n    }\n\n    /**\n     * The base implementation of `_.iteratee`.\n     *\n     * @private\n     * @param {*} [value=_.identity] The value to convert to an iteratee.\n     * @returns {Function} Returns the iteratee.\n     */\n    function baseIteratee(value) {\n      // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n      // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n      if (typeof value == 'function') {\n        return value;\n      }\n      if (value == null) {\n        return identity;\n      }\n      if (typeof value == 'object') {\n        return isArray(value)\n          ? baseMatchesProperty(value[0], value[1])\n          : baseMatches(value);\n      }\n      return property(value);\n    }\n\n    /**\n     * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeys(object) {\n      if (!isPrototype(object)) {\n        return nativeKeys(object);\n      }\n      var result = [];\n      for (var key in Object(object)) {\n        if (hasOwnProperty.call(object, key) && key != 'constructor') {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function baseKeysIn(object) {\n      if (!isObject(object)) {\n        return nativeKeysIn(object);\n      }\n      var isProto = isPrototype(object),\n          result = [];\n\n      for (var key in object) {\n        if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.lt` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     */\n    function baseLt(value, other) {\n      return value < other;\n    }\n\n    /**\n     * The base implementation of `_.map` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} iteratee The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     */\n    function baseMap(collection, iteratee) {\n      var index = -1,\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value, key, collection) {\n        result[++index] = iteratee(value, key, collection);\n      });\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.matches` which doesn't clone `source`.\n     *\n     * @private\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatches(source) {\n      var matchData = getMatchData(source);\n      if (matchData.length == 1 && matchData[0][2]) {\n        return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n      }\n      return function(object) {\n        return object === source || baseIsMatch(object, source, matchData);\n      };\n    }\n\n    /**\n     * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n     *\n     * @private\n     * @param {string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function baseMatchesProperty(path, srcValue) {\n      if (isKey(path) && isStrictComparable(srcValue)) {\n        return matchesStrictComparable(toKey(path), srcValue);\n      }\n      return function(object) {\n        var objValue = get(object, path);\n        return (objValue === undefined && objValue === srcValue)\n          ? hasIn(object, path)\n          : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n      };\n    }\n\n    /**\n     * The base implementation of `_.merge` without support for multiple sources.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} [customizer] The function to customize merged values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMerge(object, source, srcIndex, customizer, stack) {\n      if (object === source) {\n        return;\n      }\n      baseFor(source, function(srcValue, key) {\n        if (isObject(srcValue)) {\n          stack || (stack = new Stack);\n          baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n        }\n        else {\n          var newValue = customizer\n            ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n            : undefined;\n\n          if (newValue === undefined) {\n            newValue = srcValue;\n          }\n          assignMergeValue(object, key, newValue);\n        }\n      }, keysIn);\n    }\n\n    /**\n     * A specialized version of `baseMerge` for arrays and objects which performs\n     * deep merges and tracks traversed objects enabling objects with circular\n     * references to be merged.\n     *\n     * @private\n     * @param {Object} object The destination object.\n     * @param {Object} source The source object.\n     * @param {string} key The key of the value to merge.\n     * @param {number} srcIndex The index of `source`.\n     * @param {Function} mergeFunc The function to merge values.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     */\n    function baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n      var objValue = object[key],\n          srcValue = source[key],\n          stacked = stack.get(srcValue);\n\n      if (stacked) {\n        assignMergeValue(object, key, stacked);\n        return;\n      }\n      var newValue = customizer\n        ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      var isCommon = newValue === undefined;\n\n      if (isCommon) {\n        var isArr = isArray(srcValue),\n            isBuff = !isArr && isBuffer(srcValue),\n            isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n        newValue = srcValue;\n        if (isArr || isBuff || isTyped) {\n          if (isArray(objValue)) {\n            newValue = objValue;\n          }\n          else if (isArrayLikeObject(objValue)) {\n            newValue = copyArray(objValue);\n          }\n          else if (isBuff) {\n            isCommon = false;\n            newValue = cloneBuffer(srcValue, true);\n          }\n          else if (isTyped) {\n            isCommon = false;\n            newValue = cloneTypedArray(srcValue, true);\n          }\n          else {\n            newValue = [];\n          }\n        }\n        else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n          newValue = objValue;\n          if (isArguments(objValue)) {\n            newValue = toPlainObject(objValue);\n          }\n          else if (!isObject(objValue) || (srcIndex && isFunction(objValue))) {\n            newValue = initCloneObject(srcValue);\n          }\n        }\n        else {\n          isCommon = false;\n        }\n      }\n      if (isCommon) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, newValue);\n        mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n        stack['delete'](srcValue);\n      }\n      assignMergeValue(object, key, newValue);\n    }\n\n    /**\n     * The base implementation of `_.nth` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {number} n The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     */\n    function baseNth(array, n) {\n      var length = array.length;\n      if (!length) {\n        return;\n      }\n      n += n < 0 ? length : 0;\n      return isIndex(n, length) ? array[n] : undefined;\n    }\n\n    /**\n     * The base implementation of `_.orderBy` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n     * @param {string[]} orders The sort orders of `iteratees`.\n     * @returns {Array} Returns the new sorted array.\n     */\n    function baseOrderBy(collection, iteratees, orders) {\n      var index = -1;\n      iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(getIteratee()));\n\n      var result = baseMap(collection, function(value, key, collection) {\n        var criteria = arrayMap(iteratees, function(iteratee) {\n          return iteratee(value);\n        });\n        return { 'criteria': criteria, 'index': ++index, 'value': value };\n      });\n\n      return baseSortBy(result, function(object, other) {\n        return compareMultiple(object, other, orders);\n      });\n    }\n\n    /**\n     * The base implementation of `_.pick` without support for individual\n     * property identifiers.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @returns {Object} Returns the new object.\n     */\n    function basePick(object, paths) {\n      return basePickBy(object, paths, function(value, path) {\n        return hasIn(object, path);\n      });\n    }\n\n    /**\n     * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Object} object The source object.\n     * @param {string[]} paths The property paths to pick.\n     * @param {Function} predicate The function invoked per property.\n     * @returns {Object} Returns the new object.\n     */\n    function basePickBy(object, paths, predicate) {\n      var index = -1,\n          length = paths.length,\n          result = {};\n\n      while (++index < length) {\n        var path = paths[index],\n            value = baseGet(object, path);\n\n        if (predicate(value, path)) {\n          baseSet(result, castPath(path, object), value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseProperty` which supports deep paths.\n     *\n     * @private\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     */\n    function basePropertyDeep(path) {\n      return function(object) {\n        return baseGet(object, path);\n      };\n    }\n\n    /**\n     * The base implementation of `_.pullAllBy` without support for iteratee\n     * shorthands.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAll(array, values, iteratee, comparator) {\n      var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n          index = -1,\n          length = values.length,\n          seen = array;\n\n      if (array === values) {\n        values = copyArray(values);\n      }\n      if (iteratee) {\n        seen = arrayMap(array, baseUnary(iteratee));\n      }\n      while (++index < length) {\n        var fromIndex = 0,\n            value = values[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n          if (seen !== array) {\n            splice.call(seen, fromIndex, 1);\n          }\n          splice.call(array, fromIndex, 1);\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.pullAt` without support for individual\n     * indexes or capturing the removed elements.\n     *\n     * @private\n     * @param {Array} array The array to modify.\n     * @param {number[]} indexes The indexes of elements to remove.\n     * @returns {Array} Returns `array`.\n     */\n    function basePullAt(array, indexes) {\n      var length = array ? indexes.length : 0,\n          lastIndex = length - 1;\n\n      while (length--) {\n        var index = indexes[length];\n        if (length == lastIndex || index !== previous) {\n          var previous = index;\n          if (isIndex(index)) {\n            splice.call(array, index, 1);\n          } else {\n            baseUnset(array, index);\n          }\n        }\n      }\n      return array;\n    }\n\n    /**\n     * The base implementation of `_.random` without support for returning\n     * floating-point numbers.\n     *\n     * @private\n     * @param {number} lower The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the random number.\n     */\n    function baseRandom(lower, upper) {\n      return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n    }\n\n    /**\n     * The base implementation of `_.range` and `_.rangeRight` which doesn't\n     * coerce arguments.\n     *\n     * @private\n     * @param {number} start The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} step The value to increment or decrement by.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the range of numbers.\n     */\n    function baseRange(start, end, step, fromRight) {\n      var index = -1,\n          length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n          result = Array(length);\n\n      while (length--) {\n        result[fromRight ? length : ++index] = start;\n        start += step;\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.repeat` which doesn't coerce arguments.\n     *\n     * @private\n     * @param {string} string The string to repeat.\n     * @param {number} n The number of times to repeat the string.\n     * @returns {string} Returns the repeated string.\n     */\n    function baseRepeat(string, n) {\n      var result = '';\n      if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n        return result;\n      }\n      // Leverage the exponentiation by squaring algorithm for a faster repeat.\n      // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n      do {\n        if (n % 2) {\n          result += string;\n        }\n        n = nativeFloor(n / 2);\n        if (n) {\n          string += string;\n        }\n      } while (n);\n\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     */\n    function baseRest(func, start) {\n      return setToString(overRest(func, start, identity), func + '');\n    }\n\n    /**\n     * The base implementation of `_.sample`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     */\n    function baseSample(collection) {\n      return arraySample(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.sampleSize` without param guards.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} n The number of elements to sample.\n     * @returns {Array} Returns the random elements.\n     */\n    function baseSampleSize(collection, n) {\n      var array = values(collection);\n      return shuffleSelf(array, baseClamp(n, 0, array.length));\n    }\n\n    /**\n     * The base implementation of `_.set`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseSet(object, path, value, customizer) {\n      if (!isObject(object)) {\n        return object;\n      }\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          lastIndex = length - 1,\n          nested = object;\n\n      while (nested != null && ++index < length) {\n        var key = toKey(path[index]),\n            newValue = value;\n\n        if (index != lastIndex) {\n          var objValue = nested[key];\n          newValue = customizer ? customizer(objValue, key, nested) : undefined;\n          if (newValue === undefined) {\n            newValue = isObject(objValue)\n              ? objValue\n              : (isIndex(path[index + 1]) ? [] : {});\n          }\n        }\n        assignValue(nested, key, newValue);\n        nested = nested[key];\n      }\n      return object;\n    }\n\n    /**\n     * The base implementation of `setData` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetData = !metaMap ? identity : function(func, data) {\n      metaMap.set(func, data);\n      return func;\n    };\n\n    /**\n     * The base implementation of `setToString` without support for hot loop shorting.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var baseSetToString = !defineProperty ? identity : function(func, string) {\n      return defineProperty(func, 'toString', {\n        'configurable': true,\n        'enumerable': false,\n        'value': constant(string),\n        'writable': true\n      });\n    };\n\n    /**\n     * The base implementation of `_.shuffle`.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     */\n    function baseShuffle(collection) {\n      return shuffleSelf(values(collection));\n    }\n\n    /**\n     * The base implementation of `_.slice` without an iteratee call guard.\n     *\n     * @private\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseSlice(array, start, end) {\n      var index = -1,\n          length = array.length;\n\n      if (start < 0) {\n        start = -start > length ? 0 : (length + start);\n      }\n      end = end > length ? length : end;\n      if (end < 0) {\n        end += length;\n      }\n      length = start > end ? 0 : ((end - start) >>> 0);\n      start >>>= 0;\n\n      var result = Array(length);\n      while (++index < length) {\n        result[index] = array[index + start];\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.some` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} predicate The function invoked per iteration.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     */\n    function baseSome(collection, predicate) {\n      var result;\n\n      baseEach(collection, function(value, index, collection) {\n        result = predicate(value, index, collection);\n        return !result;\n      });\n      return !!result;\n    }\n\n    /**\n     * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n     * performs a binary search of `array` to determine the index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndex(array, value, retHighest) {\n      var low = 0,\n          high = array == null ? low : array.length;\n\n      if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n        while (low < high) {\n          var mid = (low + high) >>> 1,\n              computed = array[mid];\n\n          if (computed !== null && !isSymbol(computed) &&\n              (retHighest ? (computed <= value) : (computed < value))) {\n            low = mid + 1;\n          } else {\n            high = mid;\n          }\n        }\n        return high;\n      }\n      return baseSortedIndexBy(array, value, identity, retHighest);\n    }\n\n    /**\n     * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n     * which invokes `iteratee` for `value` and each element of `array` to compute\n     * their sort ranking. The iteratee is invoked with one argument; (value).\n     *\n     * @private\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} iteratee The iteratee invoked per element.\n     * @param {boolean} [retHighest] Specify returning the highest qualified index.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     */\n    function baseSortedIndexBy(array, value, iteratee, retHighest) {\n      value = iteratee(value);\n\n      var low = 0,\n          high = array == null ? 0 : array.length,\n          valIsNaN = value !== value,\n          valIsNull = value === null,\n          valIsSymbol = isSymbol(value),\n          valIsUndefined = value === undefined;\n\n      while (low < high) {\n        var mid = nativeFloor((low + high) / 2),\n            computed = iteratee(array[mid]),\n            othIsDefined = computed !== undefined,\n            othIsNull = computed === null,\n            othIsReflexive = computed === computed,\n            othIsSymbol = isSymbol(computed);\n\n        if (valIsNaN) {\n          var setLow = retHighest || othIsReflexive;\n        } else if (valIsUndefined) {\n          setLow = othIsReflexive && (retHighest || othIsDefined);\n        } else if (valIsNull) {\n          setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n        } else if (valIsSymbol) {\n          setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n        } else if (othIsNull || othIsSymbol) {\n          setLow = false;\n        } else {\n          setLow = retHighest ? (computed <= value) : (computed < value);\n        }\n        if (setLow) {\n          low = mid + 1;\n        } else {\n          high = mid;\n        }\n      }\n      return nativeMin(high, MAX_ARRAY_INDEX);\n    }\n\n    /**\n     * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n     * support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseSortedUniq(array, iteratee) {\n      var index = -1,\n          length = array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        if (!index || !eq(computed, seen)) {\n          var seen = computed;\n          result[resIndex++] = value === 0 ? 0 : value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.toNumber` which doesn't ensure correct\n     * conversions of binary, hexadecimal, or octal string values.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     */\n    function baseToNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      return +value;\n    }\n\n    /**\n     * The base implementation of `_.toString` which doesn't convert nullish\n     * values to empty strings.\n     *\n     * @private\n     * @param {*} value The value to process.\n     * @returns {string} Returns the string.\n     */\n    function baseToString(value) {\n      // Exit early for strings to avoid a performance hit in some environments.\n      if (typeof value == 'string') {\n        return value;\n      }\n      if (isArray(value)) {\n        // Recursively convert values (susceptible to call stack limits).\n        return arrayMap(value, baseToString) + '';\n      }\n      if (isSymbol(value)) {\n        return symbolToString ? symbolToString.call(value) : '';\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     */\n    function baseUniq(array, iteratee, comparator) {\n      var index = -1,\n          includes = arrayIncludes,\n          length = array.length,\n          isCommon = true,\n          result = [],\n          seen = result;\n\n      if (comparator) {\n        isCommon = false;\n        includes = arrayIncludesWith;\n      }\n      else if (length >= LARGE_ARRAY_SIZE) {\n        var set = iteratee ? null : createSet(array);\n        if (set) {\n          return setToArray(set);\n        }\n        isCommon = false;\n        includes = cacheHas;\n        seen = new SetCache;\n      }\n      else {\n        seen = iteratee ? [] : result;\n      }\n      outer:\n      while (++index < length) {\n        var value = array[index],\n            computed = iteratee ? iteratee(value) : value;\n\n        value = (comparator || value !== 0) ? value : 0;\n        if (isCommon && computed === computed) {\n          var seenIndex = seen.length;\n          while (seenIndex--) {\n            if (seen[seenIndex] === computed) {\n              continue outer;\n            }\n          }\n          if (iteratee) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n        else if (!includes(seen, computed, comparator)) {\n          if (seen !== result) {\n            seen.push(computed);\n          }\n          result.push(value);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * The base implementation of `_.unset`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The property path to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     */\n    function baseUnset(object, path) {\n      path = castPath(path, object);\n      object = parent(object, path);\n      return object == null || delete object[toKey(last(path))];\n    }\n\n    /**\n     * The base implementation of `_.update`.\n     *\n     * @private\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to update.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize path creation.\n     * @returns {Object} Returns `object`.\n     */\n    function baseUpdate(object, path, updater, customizer) {\n      return baseSet(object, path, updater(baseGet(object, path)), customizer);\n    }\n\n    /**\n     * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n     * without support for iteratee shorthands.\n     *\n     * @private\n     * @param {Array} array The array to query.\n     * @param {Function} predicate The function invoked per iteration.\n     * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function baseWhile(array, predicate, isDrop, fromRight) {\n      var length = array.length,\n          index = fromRight ? length : -1;\n\n      while ((fromRight ? index-- : ++index < length) &&\n        predicate(array[index], index, array)) {}\n\n      return isDrop\n        ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n        : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n    }\n\n    /**\n     * The base implementation of `wrapperValue` which returns the result of\n     * performing a sequence of actions on the unwrapped `value`, where each\n     * successive action is supplied the return value of the previous.\n     *\n     * @private\n     * @param {*} value The unwrapped value.\n     * @param {Array} actions Actions to perform to resolve the unwrapped value.\n     * @returns {*} Returns the resolved value.\n     */\n    function baseWrapperValue(value, actions) {\n      var result = value;\n      if (result instanceof LazyWrapper) {\n        result = result.value();\n      }\n      return arrayReduce(actions, function(result, action) {\n        return action.func.apply(action.thisArg, arrayPush([result], action.args));\n      }, result);\n    }\n\n    /**\n     * The base implementation of methods like `_.xor`, without support for\n     * iteratee shorthands, that accepts an array of arrays to inspect.\n     *\n     * @private\n     * @param {Array} arrays The arrays to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of values.\n     */\n    function baseXor(arrays, iteratee, comparator) {\n      var length = arrays.length;\n      if (length < 2) {\n        return length ? baseUniq(arrays[0]) : [];\n      }\n      var index = -1,\n          result = Array(length);\n\n      while (++index < length) {\n        var array = arrays[index],\n            othIndex = -1;\n\n        while (++othIndex < length) {\n          if (othIndex != index) {\n            result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n          }\n        }\n      }\n      return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n    }\n\n    /**\n     * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n     *\n     * @private\n     * @param {Array} props The property identifiers.\n     * @param {Array} values The property values.\n     * @param {Function} assignFunc The function to assign values.\n     * @returns {Object} Returns the new object.\n     */\n    function baseZipObject(props, values, assignFunc) {\n      var index = -1,\n          length = props.length,\n          valsLength = values.length,\n          result = {};\n\n      while (++index < length) {\n        var value = index < valsLength ? values[index] : undefined;\n        assignFunc(result, props[index], value);\n      }\n      return result;\n    }\n\n    /**\n     * Casts `value` to an empty array if it's not an array like object.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Array|Object} Returns the cast array-like object.\n     */\n    function castArrayLikeObject(value) {\n      return isArrayLikeObject(value) ? value : [];\n    }\n\n    /**\n     * Casts `value` to `identity` if it's not a function.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {Function} Returns cast function.\n     */\n    function castFunction(value) {\n      return typeof value == 'function' ? value : identity;\n    }\n\n    /**\n     * Casts `value` to a path array if it's not one.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {Array} Returns the cast property path array.\n     */\n    function castPath(value, object) {\n      if (isArray(value)) {\n        return value;\n      }\n      return isKey(value, object) ? [value] : stringToPath(toString(value));\n    }\n\n    /**\n     * A `baseRest` alias which can be replaced with `identity` by module\n     * replacement plugins.\n     *\n     * @private\n     * @type {Function}\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    var castRest = baseRest;\n\n    /**\n     * Casts `array` to a slice if it's needed.\n     *\n     * @private\n     * @param {Array} array The array to inspect.\n     * @param {number} start The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the cast slice.\n     */\n    function castSlice(array, start, end) {\n      var length = array.length;\n      end = end === undefined ? length : end;\n      return (!start && end >= length) ? array : baseSlice(array, start, end);\n    }\n\n    /**\n     * A simple wrapper around the global [`clearTimeout`](https://mdn.io/clearTimeout).\n     *\n     * @private\n     * @param {number|Object} id The timer id or timeout object of the timer to clear.\n     */\n    var clearTimeout = ctxClearTimeout || function(id) {\n      return root.clearTimeout(id);\n    };\n\n    /**\n     * Creates a clone of  `buffer`.\n     *\n     * @private\n     * @param {Buffer} buffer The buffer to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Buffer} Returns the cloned buffer.\n     */\n    function cloneBuffer(buffer, isDeep) {\n      if (isDeep) {\n        return buffer.slice();\n      }\n      var length = buffer.length,\n          result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n      buffer.copy(result);\n      return result;\n    }\n\n    /**\n     * Creates a clone of `arrayBuffer`.\n     *\n     * @private\n     * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n     * @returns {ArrayBuffer} Returns the cloned array buffer.\n     */\n    function cloneArrayBuffer(arrayBuffer) {\n      var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n      new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n      return result;\n    }\n\n    /**\n     * Creates a clone of `dataView`.\n     *\n     * @private\n     * @param {Object} dataView The data view to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned data view.\n     */\n    function cloneDataView(dataView, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n      return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n    }\n\n    /**\n     * Creates a clone of `map`.\n     *\n     * @private\n     * @param {Object} map The map to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned map.\n     */\n    function cloneMap(map, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n      return arrayReduce(array, addMapEntry, new map.constructor);\n    }\n\n    /**\n     * Creates a clone of `regexp`.\n     *\n     * @private\n     * @param {Object} regexp The regexp to clone.\n     * @returns {Object} Returns the cloned regexp.\n     */\n    function cloneRegExp(regexp) {\n      var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n      result.lastIndex = regexp.lastIndex;\n      return result;\n    }\n\n    /**\n     * Creates a clone of `set`.\n     *\n     * @private\n     * @param {Object} set The set to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned set.\n     */\n    function cloneSet(set, isDeep, cloneFunc) {\n      var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n      return arrayReduce(array, addSetEntry, new set.constructor);\n    }\n\n    /**\n     * Creates a clone of the `symbol` object.\n     *\n     * @private\n     * @param {Object} symbol The symbol object to clone.\n     * @returns {Object} Returns the cloned symbol object.\n     */\n    function cloneSymbol(symbol) {\n      return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n    }\n\n    /**\n     * Creates a clone of `typedArray`.\n     *\n     * @private\n     * @param {Object} typedArray The typed array to clone.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the cloned typed array.\n     */\n    function cloneTypedArray(typedArray, isDeep) {\n      var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n      return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n    }\n\n    /**\n     * Compares values to sort them in ascending order.\n     *\n     * @private\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {number} Returns the sort order indicator for `value`.\n     */\n    function compareAscending(value, other) {\n      if (value !== other) {\n        var valIsDefined = value !== undefined,\n            valIsNull = value === null,\n            valIsReflexive = value === value,\n            valIsSymbol = isSymbol(value);\n\n        var othIsDefined = other !== undefined,\n            othIsNull = other === null,\n            othIsReflexive = other === other,\n            othIsSymbol = isSymbol(other);\n\n        if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n            (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n            (valIsNull && othIsDefined && othIsReflexive) ||\n            (!valIsDefined && othIsReflexive) ||\n            !valIsReflexive) {\n          return 1;\n        }\n        if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n            (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n            (othIsNull && valIsDefined && valIsReflexive) ||\n            (!othIsDefined && valIsReflexive) ||\n            !othIsReflexive) {\n          return -1;\n        }\n      }\n      return 0;\n    }\n\n    /**\n     * Used by `_.orderBy` to compare multiple properties of a value to another\n     * and stable sort them.\n     *\n     * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n     * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n     * of corresponding values.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {boolean[]|string[]} orders The order to sort by for each property.\n     * @returns {number} Returns the sort order indicator for `object`.\n     */\n    function compareMultiple(object, other, orders) {\n      var index = -1,\n          objCriteria = object.criteria,\n          othCriteria = other.criteria,\n          length = objCriteria.length,\n          ordersLength = orders.length;\n\n      while (++index < length) {\n        var result = compareAscending(objCriteria[index], othCriteria[index]);\n        if (result) {\n          if (index >= ordersLength) {\n            return result;\n          }\n          var order = orders[index];\n          return result * (order == 'desc' ? -1 : 1);\n        }\n      }\n      // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n      // that causes it, under certain circumstances, to provide the same value for\n      // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n      // for more details.\n      //\n      // This also ensures a stable sort in V8 and other engines.\n      // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n      return object.index - other.index;\n    }\n\n    /**\n     * Creates an array that is the composition of partially applied arguments,\n     * placeholders, and provided arguments into a single array of arguments.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to prepend to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgs(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersLength = holders.length,\n          leftIndex = -1,\n          leftLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(leftLength + rangeLength),\n          isUncurried = !isCurried;\n\n      while (++leftIndex < leftLength) {\n        result[leftIndex] = partials[leftIndex];\n      }\n      while (++argsIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[holders[argsIndex]] = args[argsIndex];\n        }\n      }\n      while (rangeLength--) {\n        result[leftIndex++] = args[argsIndex++];\n      }\n      return result;\n    }\n\n    /**\n     * This function is like `composeArgs` except that the arguments composition\n     * is tailored for `_.partialRight`.\n     *\n     * @private\n     * @param {Array} args The provided arguments.\n     * @param {Array} partials The arguments to append to those provided.\n     * @param {Array} holders The `partials` placeholder indexes.\n     * @params {boolean} [isCurried] Specify composing for a curried function.\n     * @returns {Array} Returns the new array of composed arguments.\n     */\n    function composeArgsRight(args, partials, holders, isCurried) {\n      var argsIndex = -1,\n          argsLength = args.length,\n          holdersIndex = -1,\n          holdersLength = holders.length,\n          rightIndex = -1,\n          rightLength = partials.length,\n          rangeLength = nativeMax(argsLength - holdersLength, 0),\n          result = Array(rangeLength + rightLength),\n          isUncurried = !isCurried;\n\n      while (++argsIndex < rangeLength) {\n        result[argsIndex] = args[argsIndex];\n      }\n      var offset = argsIndex;\n      while (++rightIndex < rightLength) {\n        result[offset + rightIndex] = partials[rightIndex];\n      }\n      while (++holdersIndex < holdersLength) {\n        if (isUncurried || argsIndex < argsLength) {\n          result[offset + holders[holdersIndex]] = args[argsIndex++];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Copies the values of `source` to `array`.\n     *\n     * @private\n     * @param {Array} source The array to copy values from.\n     * @param {Array} [array=[]] The array to copy values to.\n     * @returns {Array} Returns `array`.\n     */\n    function copyArray(source, array) {\n      var index = -1,\n          length = source.length;\n\n      array || (array = Array(length));\n      while (++index < length) {\n        array[index] = source[index];\n      }\n      return array;\n    }\n\n    /**\n     * Copies properties of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy properties from.\n     * @param {Array} props The property identifiers to copy.\n     * @param {Object} [object={}] The object to copy properties to.\n     * @param {Function} [customizer] The function to customize copied values.\n     * @returns {Object} Returns `object`.\n     */\n    function copyObject(source, props, object, customizer) {\n      var isNew = !object;\n      object || (object = {});\n\n      var index = -1,\n          length = props.length;\n\n      while (++index < length) {\n        var key = props[index];\n\n        var newValue = customizer\n          ? customizer(object[key], source[key], key, object, source)\n          : undefined;\n\n        if (newValue === undefined) {\n          newValue = source[key];\n        }\n        if (isNew) {\n          baseAssignValue(object, key, newValue);\n        } else {\n          assignValue(object, key, newValue);\n        }\n      }\n      return object;\n    }\n\n    /**\n     * Copies own symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbols(source, object) {\n      return copyObject(source, getSymbols(source), object);\n    }\n\n    /**\n     * Copies own and inherited symbols of `source` to `object`.\n     *\n     * @private\n     * @param {Object} source The object to copy symbols from.\n     * @param {Object} [object={}] The object to copy symbols to.\n     * @returns {Object} Returns `object`.\n     */\n    function copySymbolsIn(source, object) {\n      return copyObject(source, getSymbolsIn(source), object);\n    }\n\n    /**\n     * Creates a function like `_.groupBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} [initializer] The accumulator object initializer.\n     * @returns {Function} Returns the new aggregator function.\n     */\n    function createAggregator(setter, initializer) {\n      return function(collection, iteratee) {\n        var func = isArray(collection) ? arrayAggregator : baseAggregator,\n            accumulator = initializer ? initializer() : {};\n\n        return func(collection, setter, getIteratee(iteratee, 2), accumulator);\n      };\n    }\n\n    /**\n     * Creates a function like `_.assign`.\n     *\n     * @private\n     * @param {Function} assigner The function to assign values.\n     * @returns {Function} Returns the new assigner function.\n     */\n    function createAssigner(assigner) {\n      return baseRest(function(object, sources) {\n        var index = -1,\n            length = sources.length,\n            customizer = length > 1 ? sources[length - 1] : undefined,\n            guard = length > 2 ? sources[2] : undefined;\n\n        customizer = (assigner.length > 3 && typeof customizer == 'function')\n          ? (length--, customizer)\n          : undefined;\n\n        if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n          customizer = length < 3 ? undefined : customizer;\n          length = 1;\n        }\n        object = Object(object);\n        while (++index < length) {\n          var source = sources[index];\n          if (source) {\n            assigner(object, source, index, customizer);\n          }\n        }\n        return object;\n      });\n    }\n\n    /**\n     * Creates a `baseEach` or `baseEachRight` function.\n     *\n     * @private\n     * @param {Function} eachFunc The function to iterate over a collection.\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseEach(eachFunc, fromRight) {\n      return function(collection, iteratee) {\n        if (collection == null) {\n          return collection;\n        }\n        if (!isArrayLike(collection)) {\n          return eachFunc(collection, iteratee);\n        }\n        var length = collection.length,\n            index = fromRight ? length : -1,\n            iterable = Object(collection);\n\n        while ((fromRight ? index-- : ++index < length)) {\n          if (iteratee(iterable[index], index, iterable) === false) {\n            break;\n          }\n        }\n        return collection;\n      };\n    }\n\n    /**\n     * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new base function.\n     */\n    function createBaseFor(fromRight) {\n      return function(object, iteratee, keysFunc) {\n        var index = -1,\n            iterable = Object(object),\n            props = keysFunc(object),\n            length = props.length;\n\n        while (length--) {\n          var key = props[fromRight ? length : ++index];\n          if (iteratee(iterable[key], key, iterable) === false) {\n            break;\n          }\n        }\n        return object;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the optional `this`\n     * binding of `thisArg`.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createBind(func, bitmask, thisArg) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return fn.apply(isBind ? thisArg : this, arguments);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.lowerFirst`.\n     *\n     * @private\n     * @param {string} methodName The name of the `String` case method to use.\n     * @returns {Function} Returns the new case function.\n     */\n    function createCaseFirst(methodName) {\n      return function(string) {\n        string = toString(string);\n\n        var strSymbols = hasUnicode(string)\n          ? stringToArray(string)\n          : undefined;\n\n        var chr = strSymbols\n          ? strSymbols[0]\n          : string.charAt(0);\n\n        var trailing = strSymbols\n          ? castSlice(strSymbols, 1).join('')\n          : string.slice(1);\n\n        return chr[methodName]() + trailing;\n      };\n    }\n\n    /**\n     * Creates a function like `_.camelCase`.\n     *\n     * @private\n     * @param {Function} callback The function to combine each word.\n     * @returns {Function} Returns the new compounder function.\n     */\n    function createCompounder(callback) {\n      return function(string) {\n        return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n      };\n    }\n\n    /**\n     * Creates a function that produces an instance of `Ctor` regardless of\n     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n     *\n     * @private\n     * @param {Function} Ctor The constructor to wrap.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCtor(Ctor) {\n      return function() {\n        // Use a `switch` statement to work with class constructors. See\n        // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n        // for more details.\n        var args = arguments;\n        switch (args.length) {\n          case 0: return new Ctor;\n          case 1: return new Ctor(args[0]);\n          case 2: return new Ctor(args[0], args[1]);\n          case 3: return new Ctor(args[0], args[1], args[2]);\n          case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n          case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n          case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n          case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n        }\n        var thisBinding = baseCreate(Ctor.prototype),\n            result = Ctor.apply(thisBinding, args);\n\n        // Mimic the constructor's `return` behavior.\n        // See https://es5.github.io/#x13.2.2 for more details.\n        return isObject(result) ? result : thisBinding;\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to enable currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {number} arity The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createCurry(func, bitmask, arity) {\n      var Ctor = createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length,\n            placeholder = getHolder(wrapper);\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n          ? []\n          : replaceHolders(args, placeholder);\n\n        length -= holders.length;\n        if (length < arity) {\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, undefined,\n            args, holders, undefined, undefined, arity - length);\n        }\n        var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n        return apply(fn, this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.find` or `_.findLast` function.\n     *\n     * @private\n     * @param {Function} findIndexFunc The function to find the collection index.\n     * @returns {Function} Returns the new find function.\n     */\n    function createFind(findIndexFunc) {\n      return function(collection, predicate, fromIndex) {\n        var iterable = Object(collection);\n        if (!isArrayLike(collection)) {\n          var iteratee = getIteratee(predicate, 3);\n          collection = keys(collection);\n          predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n        }\n        var index = findIndexFunc(collection, predicate, fromIndex);\n        return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n      };\n    }\n\n    /**\n     * Creates a `_.flow` or `_.flowRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new flow function.\n     */\n    function createFlow(fromRight) {\n      return flatRest(function(funcs) {\n        var length = funcs.length,\n            index = length,\n            prereq = LodashWrapper.prototype.thru;\n\n        if (fromRight) {\n          funcs.reverse();\n        }\n        while (index--) {\n          var func = funcs[index];\n          if (typeof func != 'function') {\n            throw new TypeError(FUNC_ERROR_TEXT);\n          }\n          if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n            var wrapper = new LodashWrapper([], true);\n          }\n        }\n        index = wrapper ? index : length;\n        while (++index < length) {\n          func = funcs[index];\n\n          var funcName = getFuncName(func),\n              data = funcName == 'wrapper' ? getData(func) : undefined;\n\n          if (data && isLaziable(data[0]) &&\n                data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n                !data[4].length && data[9] == 1\n              ) {\n            wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n          } else {\n            wrapper = (func.length == 1 && isLaziable(func))\n              ? wrapper[funcName]()\n              : wrapper.thru(func);\n          }\n        }\n        return function() {\n          var args = arguments,\n              value = args[0];\n\n          if (wrapper && args.length == 1 && isArray(value)) {\n            return wrapper.plant(value).value();\n          }\n          var index = 0,\n              result = length ? funcs[index].apply(this, args) : value;\n\n          while (++index < length) {\n            result = funcs[index].call(this, result);\n          }\n          return result;\n        };\n      });\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with optional `this`\n     * binding of `thisArg`, partial application, and currying.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [partialsRight] The arguments to append to those provided\n     *  to the new function.\n     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n      var isAry = bitmask & WRAP_ARY_FLAG,\n          isBind = bitmask & WRAP_BIND_FLAG,\n          isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n          isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n          isFlip = bitmask & WRAP_FLIP_FLAG,\n          Ctor = isBindKey ? undefined : createCtor(func);\n\n      function wrapper() {\n        var length = arguments.length,\n            args = Array(length),\n            index = length;\n\n        while (index--) {\n          args[index] = arguments[index];\n        }\n        if (isCurried) {\n          var placeholder = getHolder(wrapper),\n              holdersCount = countHolders(args, placeholder);\n        }\n        if (partials) {\n          args = composeArgs(args, partials, holders, isCurried);\n        }\n        if (partialsRight) {\n          args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n        }\n        length -= holdersCount;\n        if (isCurried && length < arity) {\n          var newHolders = replaceHolders(args, placeholder);\n          return createRecurry(\n            func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n            args, newHolders, argPos, ary, arity - length\n          );\n        }\n        var thisBinding = isBind ? thisArg : this,\n            fn = isBindKey ? thisBinding[func] : func;\n\n        length = args.length;\n        if (argPos) {\n          args = reorder(args, argPos);\n        } else if (isFlip && length > 1) {\n          args.reverse();\n        }\n        if (isAry && ary < length) {\n          args.length = ary;\n        }\n        if (this && this !== root && this instanceof wrapper) {\n          fn = Ctor || createCtor(fn);\n        }\n        return fn.apply(thisBinding, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a function like `_.invertBy`.\n     *\n     * @private\n     * @param {Function} setter The function to set accumulator values.\n     * @param {Function} toIteratee The function to resolve iteratees.\n     * @returns {Function} Returns the new inverter function.\n     */\n    function createInverter(setter, toIteratee) {\n      return function(object, iteratee) {\n        return baseInverter(object, setter, toIteratee(iteratee), {});\n      };\n    }\n\n    /**\n     * Creates a function that performs a mathematical operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @param {number} [defaultValue] The value used for `undefined` arguments.\n     * @returns {Function} Returns the new mathematical operation function.\n     */\n    function createMathOperation(operator, defaultValue) {\n      return function(value, other) {\n        var result;\n        if (value === undefined && other === undefined) {\n          return defaultValue;\n        }\n        if (value !== undefined) {\n          result = value;\n        }\n        if (other !== undefined) {\n          if (result === undefined) {\n            return other;\n          }\n          if (typeof value == 'string' || typeof other == 'string') {\n            value = baseToString(value);\n            other = baseToString(other);\n          } else {\n            value = baseToNumber(value);\n            other = baseToNumber(other);\n          }\n          result = operator(value, other);\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function like `_.over`.\n     *\n     * @private\n     * @param {Function} arrayFunc The function to iterate over iteratees.\n     * @returns {Function} Returns the new over function.\n     */\n    function createOver(arrayFunc) {\n      return flatRest(function(iteratees) {\n        iteratees = arrayMap(iteratees, baseUnary(getIteratee()));\n        return baseRest(function(args) {\n          var thisArg = this;\n          return arrayFunc(iteratees, function(iteratee) {\n            return apply(iteratee, thisArg, args);\n          });\n        });\n      });\n    }\n\n    /**\n     * Creates the padding for `string` based on `length`. The `chars` string\n     * is truncated if the number of characters exceeds `length`.\n     *\n     * @private\n     * @param {number} length The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padding for `string`.\n     */\n    function createPadding(length, chars) {\n      chars = chars === undefined ? ' ' : baseToString(chars);\n\n      var charsLength = chars.length;\n      if (charsLength < 2) {\n        return charsLength ? baseRepeat(chars, length) : chars;\n      }\n      var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n      return hasUnicode(chars)\n        ? castSlice(stringToArray(result), 0, length).join('')\n        : result.slice(0, length);\n    }\n\n    /**\n     * Creates a function that wraps `func` to invoke it with the `this` binding\n     * of `thisArg` and `partials` prepended to the arguments it receives.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {Array} partials The arguments to prepend to those provided to\n     *  the new function.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createPartial(func, bitmask, thisArg, partials) {\n      var isBind = bitmask & WRAP_BIND_FLAG,\n          Ctor = createCtor(func);\n\n      function wrapper() {\n        var argsIndex = -1,\n            argsLength = arguments.length,\n            leftIndex = -1,\n            leftLength = partials.length,\n            args = Array(leftLength + argsLength),\n            fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n        while (++leftIndex < leftLength) {\n          args[leftIndex] = partials[leftIndex];\n        }\n        while (argsLength--) {\n          args[leftIndex++] = arguments[++argsIndex];\n        }\n        return apply(fn, isBind ? thisArg : this, args);\n      }\n      return wrapper;\n    }\n\n    /**\n     * Creates a `_.range` or `_.rangeRight` function.\n     *\n     * @private\n     * @param {boolean} [fromRight] Specify iterating from right to left.\n     * @returns {Function} Returns the new range function.\n     */\n    function createRange(fromRight) {\n      return function(start, end, step) {\n        if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n          end = step = undefined;\n        }\n        // Ensure the sign of `-0` is preserved.\n        start = toFinite(start);\n        if (end === undefined) {\n          end = start;\n          start = 0;\n        } else {\n          end = toFinite(end);\n        }\n        step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n        return baseRange(start, end, step, fromRight);\n      };\n    }\n\n    /**\n     * Creates a function that performs a relational operation on two values.\n     *\n     * @private\n     * @param {Function} operator The function to perform the operation.\n     * @returns {Function} Returns the new relational operation function.\n     */\n    function createRelationalOperation(operator) {\n      return function(value, other) {\n        if (!(typeof value == 'string' && typeof other == 'string')) {\n          value = toNumber(value);\n          other = toNumber(other);\n        }\n        return operator(value, other);\n      };\n    }\n\n    /**\n     * Creates a function that wraps `func` to continue currying.\n     *\n     * @private\n     * @param {Function} func The function to wrap.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @param {Function} wrapFunc The function to create the `func` wrapper.\n     * @param {*} placeholder The placeholder value.\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to prepend to those provided to\n     *  the new function.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n      var isCurry = bitmask & WRAP_CURRY_FLAG,\n          newHolders = isCurry ? holders : undefined,\n          newHoldersRight = isCurry ? undefined : holders,\n          newPartials = isCurry ? partials : undefined,\n          newPartialsRight = isCurry ? undefined : partials;\n\n      bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n      bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n      if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n        bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n      }\n      var newData = [\n        func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n        newHoldersRight, argPos, ary, arity\n      ];\n\n      var result = wrapFunc.apply(undefined, newData);\n      if (isLaziable(func)) {\n        setData(result, newData);\n      }\n      result.placeholder = placeholder;\n      return setWrapToString(result, func, bitmask);\n    }\n\n    /**\n     * Creates a function like `_.round`.\n     *\n     * @private\n     * @param {string} methodName The name of the `Math` method to use when rounding.\n     * @returns {Function} Returns the new round function.\n     */\n    function createRound(methodName) {\n      var func = Math[methodName];\n      return function(number, precision) {\n        number = toNumber(number);\n        precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n        if (precision) {\n          // Shift with exponential notation to avoid floating-point issues.\n          // See [MDN](https://mdn.io/round#Examples) for more details.\n          var pair = (toString(number) + 'e').split('e'),\n              value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n          pair = (toString(value) + 'e').split('e');\n          return +(pair[0] + 'e' + (+pair[1] - precision));\n        }\n        return func(number);\n      };\n    }\n\n    /**\n     * Creates a set object of `values`.\n     *\n     * @private\n     * @param {Array} values The values to add to the set.\n     * @returns {Object} Returns the new set.\n     */\n    var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n      return new Set(values);\n    };\n\n    /**\n     * Creates a `_.toPairs` or `_.toPairsIn` function.\n     *\n     * @private\n     * @param {Function} keysFunc The function to get the keys of a given object.\n     * @returns {Function} Returns the new pairs function.\n     */\n    function createToPairs(keysFunc) {\n      return function(object) {\n        var tag = getTag(object);\n        if (tag == mapTag) {\n          return mapToArray(object);\n        }\n        if (tag == setTag) {\n          return setToPairs(object);\n        }\n        return baseToPairs(object, keysFunc(object));\n      };\n    }\n\n    /**\n     * Creates a function that either curries or invokes `func` with optional\n     * `this` binding and partially applied arguments.\n     *\n     * @private\n     * @param {Function|string} func The function or method name to wrap.\n     * @param {number} bitmask The bitmask flags.\n     *    1 - `_.bind`\n     *    2 - `_.bindKey`\n     *    4 - `_.curry` or `_.curryRight` of a bound function\n     *    8 - `_.curry`\n     *   16 - `_.curryRight`\n     *   32 - `_.partial`\n     *   64 - `_.partialRight`\n     *  128 - `_.rearg`\n     *  256 - `_.ary`\n     *  512 - `_.flip`\n     * @param {*} [thisArg] The `this` binding of `func`.\n     * @param {Array} [partials] The arguments to be partially applied.\n     * @param {Array} [holders] The `partials` placeholder indexes.\n     * @param {Array} [argPos] The argument positions of the new function.\n     * @param {number} [ary] The arity cap of `func`.\n     * @param {number} [arity] The arity of `func`.\n     * @returns {Function} Returns the new wrapped function.\n     */\n    function createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n      var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n      if (!isBindKey && typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var length = partials ? partials.length : 0;\n      if (!length) {\n        bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n        partials = holders = undefined;\n      }\n      ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n      arity = arity === undefined ? arity : toInteger(arity);\n      length -= holders ? holders.length : 0;\n\n      if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n        var partialsRight = partials,\n            holdersRight = holders;\n\n        partials = holders = undefined;\n      }\n      var data = isBindKey ? undefined : getData(func);\n\n      var newData = [\n        func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n        argPos, ary, arity\n      ];\n\n      if (data) {\n        mergeData(newData, data);\n      }\n      func = newData[0];\n      bitmask = newData[1];\n      thisArg = newData[2];\n      partials = newData[3];\n      holders = newData[4];\n      arity = newData[9] = newData[9] === undefined\n        ? (isBindKey ? 0 : func.length)\n        : nativeMax(newData[9] - length, 0);\n\n      if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n        bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n      }\n      if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n        var result = createBind(func, bitmask, thisArg);\n      } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n        result = createCurry(func, bitmask, arity);\n      } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n        result = createPartial(func, bitmask, thisArg, partials);\n      } else {\n        result = createHybrid.apply(undefined, newData);\n      }\n      var setter = data ? baseSetData : setData;\n      return setWrapToString(setter(result, newData), func, bitmask);\n    }\n\n    /**\n     * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n     * of source objects to the destination object for all destination properties\n     * that resolve to `undefined`.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to assign.\n     * @param {Object} object The parent object of `objValue`.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsAssignIn(objValue, srcValue, key, object) {\n      if (objValue === undefined ||\n          (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        return srcValue;\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n     * objects into destination objects that are passed thru.\n     *\n     * @private\n     * @param {*} objValue The destination value.\n     * @param {*} srcValue The source value.\n     * @param {string} key The key of the property to merge.\n     * @param {Object} object The parent object of `objValue`.\n     * @param {Object} source The parent object of `srcValue`.\n     * @param {Object} [stack] Tracks traversed source values and their merged\n     *  counterparts.\n     * @returns {*} Returns the value to assign.\n     */\n    function customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n      if (isObject(objValue) && isObject(srcValue)) {\n        // Recursively merge objects and arrays (susceptible to call stack limits).\n        stack.set(srcValue, objValue);\n        baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n        stack['delete'](srcValue);\n      }\n      return objValue;\n    }\n\n    /**\n     * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n     * objects.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @param {string} key The key of the property to inspect.\n     * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n     */\n    function customOmitClone(value) {\n      return isPlainObject(value) ? undefined : value;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for arrays with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Array} array The array to compare.\n     * @param {Array} other The other array to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `array` and `other` objects.\n     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n     */\n    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          arrLength = array.length,\n          othLength = other.length;\n\n      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(array);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var index = -1,\n          result = true,\n          seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n      stack.set(array, other);\n      stack.set(other, array);\n\n      // Ignore non-index properties.\n      while (++index < arrLength) {\n        var arrValue = array[index],\n            othValue = other[index];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, arrValue, index, other, array, stack)\n            : customizer(arrValue, othValue, index, array, other, stack);\n        }\n        if (compared !== undefined) {\n          if (compared) {\n            continue;\n          }\n          result = false;\n          break;\n        }\n        // Recursively compare arrays (susceptible to call stack limits).\n        if (seen) {\n          if (!arraySome(other, function(othValue, othIndex) {\n                if (!cacheHas(seen, othIndex) &&\n                    (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n                  return seen.push(othIndex);\n                }\n              })) {\n            result = false;\n            break;\n          }\n        } else if (!(\n              arrValue === othValue ||\n                equalFunc(arrValue, othValue, bitmask, customizer, stack)\n            )) {\n          result = false;\n          break;\n        }\n      }\n      stack['delete'](array);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for comparing objects of\n     * the same `toStringTag`.\n     *\n     * **Note:** This function only supports comparing values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {string} tag The `toStringTag` of the objects to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n      switch (tag) {\n        case dataViewTag:\n          if ((object.byteLength != other.byteLength) ||\n              (object.byteOffset != other.byteOffset)) {\n            return false;\n          }\n          object = object.buffer;\n          other = other.buffer;\n\n        case arrayBufferTag:\n          if ((object.byteLength != other.byteLength) ||\n              !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n            return false;\n          }\n          return true;\n\n        case boolTag:\n        case dateTag:\n        case numberTag:\n          // Coerce booleans to `1` or `0` and dates to milliseconds.\n          // Invalid dates are coerced to `NaN`.\n          return eq(+object, +other);\n\n        case errorTag:\n          return object.name == other.name && object.message == other.message;\n\n        case regexpTag:\n        case stringTag:\n          // Coerce regexes to strings and treat strings, primitives and objects,\n          // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n          // for more details.\n          return object == (other + '');\n\n        case mapTag:\n          var convert = mapToArray;\n\n        case setTag:\n          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n          convert || (convert = setToArray);\n\n          if (object.size != other.size && !isPartial) {\n            return false;\n          }\n          // Assume cyclic values are equal.\n          var stacked = stack.get(object);\n          if (stacked) {\n            return stacked == other;\n          }\n          bitmask |= COMPARE_UNORDERED_FLAG;\n\n          // Recursively compare objects (susceptible to call stack limits).\n          stack.set(object, other);\n          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n          stack['delete'](object);\n          return result;\n\n        case symbolTag:\n          if (symbolValueOf) {\n            return symbolValueOf.call(object) == symbolValueOf.call(other);\n          }\n      }\n      return false;\n    }\n\n    /**\n     * A specialized version of `baseIsEqualDeep` for objects with support for\n     * partial deep comparisons.\n     *\n     * @private\n     * @param {Object} object The object to compare.\n     * @param {Object} other The other object to compare.\n     * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n     * @param {Function} customizer The function to customize comparisons.\n     * @param {Function} equalFunc The function to determine equivalents of values.\n     * @param {Object} stack Tracks traversed `object` and `other` objects.\n     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n     */\n    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n          objProps = getAllKeys(object),\n          objLength = objProps.length,\n          othProps = getAllKeys(other),\n          othLength = othProps.length;\n\n      if (objLength != othLength && !isPartial) {\n        return false;\n      }\n      var index = objLength;\n      while (index--) {\n        var key = objProps[index];\n        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n          return false;\n        }\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked && stack.get(other)) {\n        return stacked == other;\n      }\n      var result = true;\n      stack.set(object, other);\n      stack.set(other, object);\n\n      var skipCtor = isPartial;\n      while (++index < objLength) {\n        key = objProps[index];\n        var objValue = object[key],\n            othValue = other[key];\n\n        if (customizer) {\n          var compared = isPartial\n            ? customizer(othValue, objValue, key, other, object, stack)\n            : customizer(objValue, othValue, key, object, other, stack);\n        }\n        // Recursively compare objects (susceptible to call stack limits).\n        if (!(compared === undefined\n              ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n              : compared\n            )) {\n          result = false;\n          break;\n        }\n        skipCtor || (skipCtor = key == 'constructor');\n      }\n      if (result && !skipCtor) {\n        var objCtor = object.constructor,\n            othCtor = other.constructor;\n\n        // Non `Object` object instances with different constructors are not equal.\n        if (objCtor != othCtor &&\n            ('constructor' in object && 'constructor' in other) &&\n            !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n              typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n          result = false;\n        }\n      }\n      stack['delete'](object);\n      stack['delete'](other);\n      return result;\n    }\n\n    /**\n     * A specialized version of `baseRest` which flattens the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @returns {Function} Returns the new function.\n     */\n    function flatRest(func) {\n      return setToString(overRest(func, undefined, flatten), func + '');\n    }\n\n    /**\n     * Creates an array of own enumerable property names and symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeys(object) {\n      return baseGetAllKeys(object, keys, getSymbols);\n    }\n\n    /**\n     * Creates an array of own and inherited enumerable property names and\n     * symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names and symbols.\n     */\n    function getAllKeysIn(object) {\n      return baseGetAllKeys(object, keysIn, getSymbolsIn);\n    }\n\n    /**\n     * Gets metadata for `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {*} Returns the metadata for `func`.\n     */\n    var getData = !metaMap ? noop : function(func) {\n      return metaMap.get(func);\n    };\n\n    /**\n     * Gets the name of `func`.\n     *\n     * @private\n     * @param {Function} func The function to query.\n     * @returns {string} Returns the function name.\n     */\n    function getFuncName(func) {\n      var result = (func.name + ''),\n          array = realNames[result],\n          length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n      while (length--) {\n        var data = array[length],\n            otherFunc = data.func;\n        if (otherFunc == null || otherFunc == func) {\n          return data.name;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Gets the argument placeholder value for `func`.\n     *\n     * @private\n     * @param {Function} func The function to inspect.\n     * @returns {*} Returns the placeholder value.\n     */\n    function getHolder(func) {\n      var object = hasOwnProperty.call(lodash, 'placeholder') ? lodash : func;\n      return object.placeholder;\n    }\n\n    /**\n     * Gets the appropriate \"iteratee\" function. If `_.iteratee` is customized,\n     * this function returns the custom method, otherwise it returns `baseIteratee`.\n     * If arguments are provided, the chosen function is invoked with them and\n     * its result is returned.\n     *\n     * @private\n     * @param {*} [value] The value to convert to an iteratee.\n     * @param {number} [arity] The arity of the created iteratee.\n     * @returns {Function} Returns the chosen function or its result.\n     */\n    function getIteratee() {\n      var result = lodash.iteratee || iteratee;\n      result = result === iteratee ? baseIteratee : result;\n      return arguments.length ? result(arguments[0], arguments[1]) : result;\n    }\n\n    /**\n     * Gets the data for `map`.\n     *\n     * @private\n     * @param {Object} map The map to query.\n     * @param {string} key The reference key.\n     * @returns {*} Returns the map data.\n     */\n    function getMapData(map, key) {\n      var data = map.__data__;\n      return isKeyable(key)\n        ? data[typeof key == 'string' ? 'string' : 'hash']\n        : data.map;\n    }\n\n    /**\n     * Gets the property names, values, and compare flags of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the match data of `object`.\n     */\n    function getMatchData(object) {\n      var result = keys(object),\n          length = result.length;\n\n      while (length--) {\n        var key = result[length],\n            value = object[key];\n\n        result[length] = [key, value, isStrictComparable(value)];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the native function at `key` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {string} key The key of the method to get.\n     * @returns {*} Returns the function if it's native, else `undefined`.\n     */\n    function getNative(object, key) {\n      var value = getValue(object, key);\n      return baseIsNative(value) ? value : undefined;\n    }\n\n    /**\n     * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the raw `toStringTag`.\n     */\n    function getRawTag(value) {\n      var isOwn = hasOwnProperty.call(value, symToStringTag),\n          tag = value[symToStringTag];\n\n      try {\n        value[symToStringTag] = undefined;\n        var unmasked = true;\n      } catch (e) {}\n\n      var result = nativeObjectToString.call(value);\n      if (unmasked) {\n        if (isOwn) {\n          value[symToStringTag] = tag;\n        } else {\n          delete value[symToStringTag];\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array of the own enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n      if (object == null) {\n        return [];\n      }\n      object = Object(object);\n      return arrayFilter(nativeGetSymbols(object), function(symbol) {\n        return propertyIsEnumerable.call(object, symbol);\n      });\n    };\n\n    /**\n     * Creates an array of the own and inherited enumerable symbols of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of symbols.\n     */\n    var getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n      var result = [];\n      while (object) {\n        arrayPush(result, getSymbols(object));\n        object = getPrototype(object);\n      }\n      return result;\n    };\n\n    /**\n     * Gets the `toStringTag` of `value`.\n     *\n     * @private\n     * @param {*} value The value to query.\n     * @returns {string} Returns the `toStringTag`.\n     */\n    var getTag = baseGetTag;\n\n    // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n    if ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n        (Map && getTag(new Map) != mapTag) ||\n        (Promise && getTag(Promise.resolve()) != promiseTag) ||\n        (Set && getTag(new Set) != setTag) ||\n        (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n      getTag = function(value) {\n        var result = baseGetTag(value),\n            Ctor = result == objectTag ? value.constructor : undefined,\n            ctorString = Ctor ? toSource(Ctor) : '';\n\n        if (ctorString) {\n          switch (ctorString) {\n            case dataViewCtorString: return dataViewTag;\n            case mapCtorString: return mapTag;\n            case promiseCtorString: return promiseTag;\n            case setCtorString: return setTag;\n            case weakMapCtorString: return weakMapTag;\n          }\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Gets the view, applying any `transforms` to the `start` and `end` positions.\n     *\n     * @private\n     * @param {number} start The start of the view.\n     * @param {number} end The end of the view.\n     * @param {Array} transforms The transformations to apply to the view.\n     * @returns {Object} Returns an object containing the `start` and `end`\n     *  positions of the view.\n     */\n    function getView(start, end, transforms) {\n      var index = -1,\n          length = transforms.length;\n\n      while (++index < length) {\n        var data = transforms[index],\n            size = data.size;\n\n        switch (data.type) {\n          case 'drop':      start += size; break;\n          case 'dropRight': end -= size; break;\n          case 'take':      end = nativeMin(end, start + size); break;\n          case 'takeRight': start = nativeMax(start, end - size); break;\n        }\n      }\n      return { 'start': start, 'end': end };\n    }\n\n    /**\n     * Extracts wrapper details from the `source` body comment.\n     *\n     * @private\n     * @param {string} source The source to inspect.\n     * @returns {Array} Returns the wrapper details.\n     */\n    function getWrapDetails(source) {\n      var match = source.match(reWrapDetails);\n      return match ? match[1].split(reSplitDetails) : [];\n    }\n\n    /**\n     * Checks if `path` exists on `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @param {Function} hasFunc The function to check properties.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     */\n    function hasPath(object, path, hasFunc) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length,\n          result = false;\n\n      while (++index < length) {\n        var key = toKey(path[index]);\n        if (!(result = object != null && hasFunc(object, key))) {\n          break;\n        }\n        object = object[key];\n      }\n      if (result || ++index != length) {\n        return result;\n      }\n      length = object == null ? 0 : object.length;\n      return !!length && isLength(length) && isIndex(key, length) &&\n        (isArray(object) || isArguments(object));\n    }\n\n    /**\n     * Initializes an array clone.\n     *\n     * @private\n     * @param {Array} array The array to clone.\n     * @returns {Array} Returns the initialized clone.\n     */\n    function initCloneArray(array) {\n      var length = array.length,\n          result = array.constructor(length);\n\n      // Add properties assigned by `RegExp#exec`.\n      if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n        result.index = array.index;\n        result.input = array.input;\n      }\n      return result;\n    }\n\n    /**\n     * Initializes an object clone.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneObject(object) {\n      return (typeof object.constructor == 'function' && !isPrototype(object))\n        ? baseCreate(getPrototype(object))\n        : {};\n    }\n\n    /**\n     * Initializes an object clone based on its `toStringTag`.\n     *\n     * **Note:** This function only supports cloning values with tags of\n     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n     *\n     * @private\n     * @param {Object} object The object to clone.\n     * @param {string} tag The `toStringTag` of the object to clone.\n     * @param {Function} cloneFunc The function to clone values.\n     * @param {boolean} [isDeep] Specify a deep clone.\n     * @returns {Object} Returns the initialized clone.\n     */\n    function initCloneByTag(object, tag, cloneFunc, isDeep) {\n      var Ctor = object.constructor;\n      switch (tag) {\n        case arrayBufferTag:\n          return cloneArrayBuffer(object);\n\n        case boolTag:\n        case dateTag:\n          return new Ctor(+object);\n\n        case dataViewTag:\n          return cloneDataView(object, isDeep);\n\n        case float32Tag: case float64Tag:\n        case int8Tag: case int16Tag: case int32Tag:\n        case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n          return cloneTypedArray(object, isDeep);\n\n        case mapTag:\n          return cloneMap(object, isDeep, cloneFunc);\n\n        case numberTag:\n        case stringTag:\n          return new Ctor(object);\n\n        case regexpTag:\n          return cloneRegExp(object);\n\n        case setTag:\n          return cloneSet(object, isDeep, cloneFunc);\n\n        case symbolTag:\n          return cloneSymbol(object);\n      }\n    }\n\n    /**\n     * Inserts wrapper `details` in a comment at the top of the `source` body.\n     *\n     * @private\n     * @param {string} source The source to modify.\n     * @returns {Array} details The details to insert.\n     * @returns {string} Returns the modified source.\n     */\n    function insertWrapDetails(source, details) {\n      var length = details.length;\n      if (!length) {\n        return source;\n      }\n      var lastIndex = length - 1;\n      details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n      details = details.join(length > 2 ? ', ' : ' ');\n      return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n    }\n\n    /**\n     * Checks if `value` is a flattenable `arguments` object or array.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n     */\n    function isFlattenable(value) {\n      return isArray(value) || isArguments(value) ||\n        !!(spreadableSymbol && value && value[spreadableSymbol]);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like index.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n     */\n    function isIndex(value, length) {\n      length = length == null ? MAX_SAFE_INTEGER : length;\n      return !!length &&\n        (typeof value == 'number' || reIsUint.test(value)) &&\n        (value > -1 && value % 1 == 0 && value < length);\n    }\n\n    /**\n     * Checks if the given arguments are from an iteratee call.\n     *\n     * @private\n     * @param {*} value The potential iteratee value argument.\n     * @param {*} index The potential iteratee index or key argument.\n     * @param {*} object The potential iteratee object argument.\n     * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n     *  else `false`.\n     */\n    function isIterateeCall(value, index, object) {\n      if (!isObject(object)) {\n        return false;\n      }\n      var type = typeof index;\n      if (type == 'number'\n            ? (isArrayLike(object) && isIndex(index, object.length))\n            : (type == 'string' && index in object)\n          ) {\n        return eq(object[index], value);\n      }\n      return false;\n    }\n\n    /**\n     * Checks if `value` is a property name and not a property path.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @param {Object} [object] The object to query keys on.\n     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n     */\n    function isKey(value, object) {\n      if (isArray(value)) {\n        return false;\n      }\n      var type = typeof value;\n      if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n          value == null || isSymbol(value)) {\n        return true;\n      }\n      return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n        (object != null && value in Object(object));\n    }\n\n    /**\n     * Checks if `value` is suitable for use as unique object key.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n     */\n    function isKeyable(value) {\n      var type = typeof value;\n      return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n        ? (value !== '__proto__')\n        : (value === null);\n    }\n\n    /**\n     * Checks if `func` has a lazy counterpart.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n     *  else `false`.\n     */\n    function isLaziable(func) {\n      var funcName = getFuncName(func),\n          other = lodash[funcName];\n\n      if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n        return false;\n      }\n      if (func === other) {\n        return true;\n      }\n      var data = getData(other);\n      return !!data && func === data[0];\n    }\n\n    /**\n     * Checks if `func` has its source masked.\n     *\n     * @private\n     * @param {Function} func The function to check.\n     * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n     */\n    function isMasked(func) {\n      return !!maskSrcKey && (maskSrcKey in func);\n    }\n\n    /**\n     * Checks if `func` is capable of being masked.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n     */\n    var isMaskable = coreJsData ? isFunction : stubFalse;\n\n    /**\n     * Checks if `value` is likely a prototype object.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n     */\n    function isPrototype(value) {\n      var Ctor = value && value.constructor,\n          proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n      return value === proto;\n    }\n\n    /**\n     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` if suitable for strict\n     *  equality comparisons, else `false`.\n     */\n    function isStrictComparable(value) {\n      return value === value && !isObject(value);\n    }\n\n    /**\n     * A specialized version of `matchesProperty` for source values suitable\n     * for strict equality comparisons, i.e. `===`.\n     *\n     * @private\n     * @param {string} key The key of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     */\n    function matchesStrictComparable(key, srcValue) {\n      return function(object) {\n        if (object == null) {\n          return false;\n        }\n        return object[key] === srcValue &&\n          (srcValue !== undefined || (key in Object(object)));\n      };\n    }\n\n    /**\n     * A specialized version of `_.memoize` which clears the memoized function's\n     * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n     *\n     * @private\n     * @param {Function} func The function to have its output memoized.\n     * @returns {Function} Returns the new memoized function.\n     */\n    function memoizeCapped(func) {\n      var result = memoize(func, function(key) {\n        if (cache.size === MAX_MEMOIZE_SIZE) {\n          cache.clear();\n        }\n        return key;\n      });\n\n      var cache = result.cache;\n      return result;\n    }\n\n    /**\n     * Merges the function metadata of `source` into `data`.\n     *\n     * Merging metadata reduces the number of wrappers used to invoke a function.\n     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n     * may be applied regardless of execution order. Methods like `_.ary` and\n     * `_.rearg` modify function arguments, making the order in which they are\n     * executed important, preventing the merging of metadata. However, we make\n     * an exception for a safe combined case where curried functions have `_.ary`\n     * and or `_.rearg` applied.\n     *\n     * @private\n     * @param {Array} data The destination metadata.\n     * @param {Array} source The source metadata.\n     * @returns {Array} Returns `data`.\n     */\n    function mergeData(data, source) {\n      var bitmask = data[1],\n          srcBitmask = source[1],\n          newBitmask = bitmask | srcBitmask,\n          isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n      var isCombo =\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n        ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n        ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n      // Exit early if metadata can't be merged.\n      if (!(isCommon || isCombo)) {\n        return data;\n      }\n      // Use source `thisArg` if available.\n      if (srcBitmask & WRAP_BIND_FLAG) {\n        data[2] = source[2];\n        // Set when currying a bound function.\n        newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n      }\n      // Compose partial arguments.\n      var value = source[3];\n      if (value) {\n        var partials = data[3];\n        data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n        data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n      }\n      // Compose partial right arguments.\n      value = source[5];\n      if (value) {\n        partials = data[5];\n        data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n        data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n      }\n      // Use source `argPos` if available.\n      value = source[7];\n      if (value) {\n        data[7] = value;\n      }\n      // Use source `ary` if it's smaller.\n      if (srcBitmask & WRAP_ARY_FLAG) {\n        data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n      }\n      // Use source `arity` if one is not provided.\n      if (data[9] == null) {\n        data[9] = source[9];\n      }\n      // Use source `func` and merge bitmasks.\n      data[0] = source[0];\n      data[1] = newBitmask;\n\n      return data;\n    }\n\n    /**\n     * This function is like\n     * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * except that it includes inherited enumerable properties.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     */\n    function nativeKeysIn(object) {\n      var result = [];\n      if (object != null) {\n        for (var key in Object(object)) {\n          result.push(key);\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a string using `Object.prototype.toString`.\n     *\n     * @private\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     */\n    function objectToString(value) {\n      return nativeObjectToString.call(value);\n    }\n\n    /**\n     * A specialized version of `baseRest` which transforms the rest array.\n     *\n     * @private\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @param {Function} transform The rest array transform.\n     * @returns {Function} Returns the new function.\n     */\n    function overRest(func, start, transform) {\n      start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n      return function() {\n        var args = arguments,\n            index = -1,\n            length = nativeMax(args.length - start, 0),\n            array = Array(length);\n\n        while (++index < length) {\n          array[index] = args[start + index];\n        }\n        index = -1;\n        var otherArgs = Array(start + 1);\n        while (++index < start) {\n          otherArgs[index] = args[index];\n        }\n        otherArgs[start] = transform(array);\n        return apply(func, this, otherArgs);\n      };\n    }\n\n    /**\n     * Gets the parent value at `path` of `object`.\n     *\n     * @private\n     * @param {Object} object The object to query.\n     * @param {Array} path The path to get the parent value of.\n     * @returns {*} Returns the parent value.\n     */\n    function parent(object, path) {\n      return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n    }\n\n    /**\n     * Reorder `array` according to the specified indexes where the element at\n     * the first index is assigned as the first element, the element at\n     * the second index is assigned as the second element, and so on.\n     *\n     * @private\n     * @param {Array} array The array to reorder.\n     * @param {Array} indexes The arranged array indexes.\n     * @returns {Array} Returns `array`.\n     */\n    function reorder(array, indexes) {\n      var arrLength = array.length,\n          length = nativeMin(indexes.length, arrLength),\n          oldArray = copyArray(array);\n\n      while (length--) {\n        var index = indexes[length];\n        array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n      }\n      return array;\n    }\n\n    /**\n     * Sets metadata for `func`.\n     *\n     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n     * period of time, it will trip its breaker and transition to an identity\n     * function to avoid garbage collection pauses in V8. See\n     * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n     * for more details.\n     *\n     * @private\n     * @param {Function} func The function to associate metadata with.\n     * @param {*} data The metadata.\n     * @returns {Function} Returns `func`.\n     */\n    var setData = shortOut(baseSetData);\n\n    /**\n     * A simple wrapper around the global [`setTimeout`](https://mdn.io/setTimeout).\n     *\n     * @private\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @returns {number|Object} Returns the timer id or timeout object.\n     */\n    var setTimeout = ctxSetTimeout || function(func, wait) {\n      return root.setTimeout(func, wait);\n    };\n\n    /**\n     * Sets the `toString` method of `func` to return `string`.\n     *\n     * @private\n     * @param {Function} func The function to modify.\n     * @param {Function} string The `toString` result.\n     * @returns {Function} Returns `func`.\n     */\n    var setToString = shortOut(baseSetToString);\n\n    /**\n     * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n     * with wrapper details in a comment at the top of the source body.\n     *\n     * @private\n     * @param {Function} wrapper The function to modify.\n     * @param {Function} reference The reference function.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Function} Returns `wrapper`.\n     */\n    function setWrapToString(wrapper, reference, bitmask) {\n      var source = (reference + '');\n      return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n    }\n\n    /**\n     * Creates a function that'll short out and invoke `identity` instead\n     * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n     * milliseconds.\n     *\n     * @private\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new shortable function.\n     */\n    function shortOut(func) {\n      var count = 0,\n          lastCalled = 0;\n\n      return function() {\n        var stamp = nativeNow(),\n            remaining = HOT_SPAN - (stamp - lastCalled);\n\n        lastCalled = stamp;\n        if (remaining > 0) {\n          if (++count >= HOT_COUNT) {\n            return arguments[0];\n          }\n        } else {\n          count = 0;\n        }\n        return func.apply(undefined, arguments);\n      };\n    }\n\n    /**\n     * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n     *\n     * @private\n     * @param {Array} array The array to shuffle.\n     * @param {number} [size=array.length] The size of `array`.\n     * @returns {Array} Returns `array`.\n     */\n    function shuffleSelf(array, size) {\n      var index = -1,\n          length = array.length,\n          lastIndex = length - 1;\n\n      size = size === undefined ? length : size;\n      while (++index < size) {\n        var rand = baseRandom(index, lastIndex),\n            value = array[rand];\n\n        array[rand] = array[index];\n        array[index] = value;\n      }\n      array.length = size;\n      return array;\n    }\n\n    /**\n     * Converts `string` to a property path array.\n     *\n     * @private\n     * @param {string} string The string to convert.\n     * @returns {Array} Returns the property path array.\n     */\n    var stringToPath = memoizeCapped(function(string) {\n      var result = [];\n      if (reLeadingDot.test(string)) {\n        result.push('');\n      }\n      string.replace(rePropName, function(match, number, quote, string) {\n        result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n      });\n      return result;\n    });\n\n    /**\n     * Converts `value` to a string key if it's not a string or symbol.\n     *\n     * @private\n     * @param {*} value The value to inspect.\n     * @returns {string|symbol} Returns the key.\n     */\n    function toKey(value) {\n      if (typeof value == 'string' || isSymbol(value)) {\n        return value;\n      }\n      var result = (value + '');\n      return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n    }\n\n    /**\n     * Converts `func` to its source code.\n     *\n     * @private\n     * @param {Function} func The function to convert.\n     * @returns {string} Returns the source code.\n     */\n    function toSource(func) {\n      if (func != null) {\n        try {\n          return funcToString.call(func);\n        } catch (e) {}\n        try {\n          return (func + '');\n        } catch (e) {}\n      }\n      return '';\n    }\n\n    /**\n     * Updates wrapper `details` based on `bitmask` flags.\n     *\n     * @private\n     * @returns {Array} details The details to modify.\n     * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n     * @returns {Array} Returns `details`.\n     */\n    function updateWrapDetails(details, bitmask) {\n      arrayEach(wrapFlags, function(pair) {\n        var value = '_.' + pair[0];\n        if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n          details.push(value);\n        }\n      });\n      return details.sort();\n    }\n\n    /**\n     * Creates a clone of `wrapper`.\n     *\n     * @private\n     * @param {Object} wrapper The wrapper to clone.\n     * @returns {Object} Returns the cloned wrapper.\n     */\n    function wrapperClone(wrapper) {\n      if (wrapper instanceof LazyWrapper) {\n        return wrapper.clone();\n      }\n      var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n      result.__actions__ = copyArray(wrapper.__actions__);\n      result.__index__  = wrapper.__index__;\n      result.__values__ = wrapper.__values__;\n      return result;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an array of elements split into groups the length of `size`.\n     * If `array` can't be split evenly, the final chunk will be the remaining\n     * elements.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to process.\n     * @param {number} [size=1] The length of each chunk\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the new array of chunks.\n     * @example\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 2);\n     * // => [['a', 'b'], ['c', 'd']]\n     *\n     * _.chunk(['a', 'b', 'c', 'd'], 3);\n     * // => [['a', 'b', 'c'], ['d']]\n     */\n    function chunk(array, size, guard) {\n      if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n        size = 1;\n      } else {\n        size = nativeMax(toInteger(size), 0);\n      }\n      var length = array == null ? 0 : array.length;\n      if (!length || size < 1) {\n        return [];\n      }\n      var index = 0,\n          resIndex = 0,\n          result = Array(nativeCeil(length / size));\n\n      while (index < length) {\n        result[resIndex++] = baseSlice(array, index, (index += size));\n      }\n      return result;\n    }\n\n    /**\n     * Creates an array with all falsey values removed. The values `false`, `null`,\n     * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to compact.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.compact([0, 1, false, 2, '', 3]);\n     * // => [1, 2, 3]\n     */\n    function compact(array) {\n      var index = -1,\n          length = array == null ? 0 : array.length,\n          resIndex = 0,\n          result = [];\n\n      while (++index < length) {\n        var value = array[index];\n        if (value) {\n          result[resIndex++] = value;\n        }\n      }\n      return result;\n    }\n\n    /**\n     * Creates a new array concatenating `array` with any additional arrays\n     * and/or values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to concatenate.\n     * @param {...*} [values] The values to concatenate.\n     * @returns {Array} Returns the new concatenated array.\n     * @example\n     *\n     * var array = [1];\n     * var other = _.concat(array, 2, [3], [[4]]);\n     *\n     * console.log(other);\n     * // => [1, 2, 3, [4]]\n     *\n     * console.log(array);\n     * // => [1]\n     */\n    function concat() {\n      var length = arguments.length;\n      if (!length) {\n        return [];\n      }\n      var args = Array(length - 1),\n          array = arguments[0],\n          index = length;\n\n      while (index--) {\n        args[index - 1] = arguments[index];\n      }\n      return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n    }\n\n    /**\n     * Creates an array of `array` values not included in the other given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * **Note:** Unlike `_.pullAll`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.without, _.xor\n     * @example\n     *\n     * _.difference([2, 1], [2, 3]);\n     * // => [1]\n     */\n    var difference = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `iteratee` which\n     * is invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var differenceBy = baseRest(function(array, values) {\n      var iteratee = last(values);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.difference` except that it accepts `comparator`\n     * which is invoked to compare elements of `array` to `values`. The order and\n     * references of result values are determined by the first array. The comparator\n     * is invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...Array} [values] The values to exclude.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     *\n     * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }]\n     */\n    var differenceWith = baseRest(function(array, values) {\n      var comparator = last(values);\n      if (isArrayLikeObject(comparator)) {\n        comparator = undefined;\n      }\n      return isArrayLikeObject(array)\n        ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.drop([1, 2, 3]);\n     * // => [2, 3]\n     *\n     * _.drop([1, 2, 3], 2);\n     * // => [3]\n     *\n     * _.drop([1, 2, 3], 5);\n     * // => []\n     *\n     * _.drop([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function drop(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements dropped from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to drop.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.dropRight([1, 2, 3]);\n     * // => [1, 2]\n     *\n     * _.dropRight([1, 2, 3], 2);\n     * // => [1]\n     *\n     * _.dropRight([1, 2, 3], 5);\n     * // => []\n     *\n     * _.dropRight([1, 2, 3], 0);\n     * // => [1, 2, 3]\n     */\n    function dropRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the end.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.dropRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropRightWhile(users, ['active', false]);\n     * // => objects for ['barney']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropRightWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` excluding elements dropped from the beginning.\n     * Elements are dropped until `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.dropWhile(users, function(o) { return !o.active; });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.dropWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.dropWhile(users, ['active', false]);\n     * // => objects for ['pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.dropWhile(users, 'active');\n     * // => objects for ['barney', 'fred', 'pebbles']\n     */\n    function dropWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), true)\n        : [];\n    }\n\n    /**\n     * Fills elements of `array` with `value` from `start` up to, but not\n     * including, `end`.\n     *\n     * **Note:** This method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Array\n     * @param {Array} array The array to fill.\n     * @param {*} value The value to fill `array` with.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.fill(array, 'a');\n     * console.log(array);\n     * // => ['a', 'a', 'a']\n     *\n     * _.fill(Array(3), 2);\n     * // => [2, 2, 2]\n     *\n     * _.fill([4, 6, 8, 10], '*', 1, 3);\n     * // => [4, '*', '*', 10]\n     */\n    function fill(array, value, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n        start = 0;\n        end = length;\n      }\n      return baseFill(array, value, start, end);\n    }\n\n    /**\n     * This method is like `_.find` except that it returns the index of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.findIndex(users, function(o) { return o.user == 'barney'; });\n     * // => 0\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findIndex(users, { 'user': 'fred', 'active': false });\n     * // => 1\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findIndex(users, ['active', false]);\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findIndex(users, 'active');\n     * // => 2\n     */\n    function findIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index);\n    }\n\n    /**\n     * This method is like `_.findIndex` except that it iterates over elements\n     * of `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the found element, else `-1`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n     * // => 2\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n     * // => 0\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastIndex(users, ['active', false]);\n     * // => 2\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastIndex(users, 'active');\n     * // => 0\n     */\n    function findLastIndex(array, predicate, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length - 1;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = fromIndex < 0\n          ? nativeMax(length + index, 0)\n          : nativeMin(index, length - 1);\n      }\n      return baseFindIndex(array, getIteratee(predicate, 3), index, true);\n    }\n\n    /**\n     * Flattens `array` a single level deep.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flatten([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, [3, [4]], 5]\n     */\n    function flatten(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, 1) : [];\n    }\n\n    /**\n     * Recursively flattens `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * _.flattenDeep([1, [2, [3, [4]], 5]]);\n     * // => [1, 2, 3, 4, 5]\n     */\n    function flattenDeep(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseFlatten(array, INFINITY) : [];\n    }\n\n    /**\n     * Recursively flatten `array` up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Array\n     * @param {Array} array The array to flatten.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * var array = [1, [2, [3, [4]], 5]];\n     *\n     * _.flattenDepth(array, 1);\n     * // => [1, 2, [3, [4]], 5]\n     *\n     * _.flattenDepth(array, 2);\n     * // => [1, 2, 3, [4], 5]\n     */\n    function flattenDepth(array, depth) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(array, depth);\n    }\n\n    /**\n     * The inverse of `_.toPairs`; this method returns an object composed\n     * from key-value `pairs`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} pairs The key-value pairs.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.fromPairs([['a', 1], ['b', 2]]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function fromPairs(pairs) {\n      var index = -1,\n          length = pairs == null ? 0 : pairs.length,\n          result = {};\n\n      while (++index < length) {\n        var pair = pairs[index];\n        result[pair[0]] = pair[1];\n      }\n      return result;\n    }\n\n    /**\n     * Gets the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias first\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the first element of `array`.\n     * @example\n     *\n     * _.head([1, 2, 3]);\n     * // => 1\n     *\n     * _.head([]);\n     * // => undefined\n     */\n    function head(array) {\n      return (array && array.length) ? array[0] : undefined;\n    }\n\n    /**\n     * Gets the index at which the first occurrence of `value` is found in `array`\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. If `fromIndex` is negative, it's used as the\n     * offset from the end of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.indexOf([1, 2, 1, 2], 2);\n     * // => 1\n     *\n     * // Search from the `fromIndex`.\n     * _.indexOf([1, 2, 1, 2], 2, 2);\n     * // => 3\n     */\n    function indexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = fromIndex == null ? 0 : toInteger(fromIndex);\n      if (index < 0) {\n        index = nativeMax(length + index, 0);\n      }\n      return baseIndexOf(array, value, index);\n    }\n\n    /**\n     * Gets all but the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.initial([1, 2, 3]);\n     * // => [1, 2]\n     */\n    function initial(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 0, -1) : [];\n    }\n\n    /**\n     * Creates an array of unique values that are included in all given arrays\n     * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons. The order and references of result values are\n     * determined by the first array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersection([2, 1], [2, 3]);\n     * // => [2]\n     */\n    var intersection = baseRest(function(arrays) {\n      var mapped = arrayMap(arrays, castArrayLikeObject);\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped)\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `iteratee`\n     * which is invoked for each element of each `arrays` to generate the criterion\n     * by which they're compared. The order and references of result values are\n     * determined by the first array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [2.1]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }]\n     */\n    var intersectionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      if (iteratee === last(mapped)) {\n        iteratee = undefined;\n      } else {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, getIteratee(iteratee, 2))\n        : [];\n    });\n\n    /**\n     * This method is like `_.intersection` except that it accepts `comparator`\n     * which is invoked to compare elements of `arrays`. The order and references\n     * of result values are determined by the first array. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of intersecting values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.intersectionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }]\n     */\n    var intersectionWith = baseRest(function(arrays) {\n      var comparator = last(arrays),\n          mapped = arrayMap(arrays, castArrayLikeObject);\n\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      if (comparator) {\n        mapped.pop();\n      }\n      return (mapped.length && mapped[0] === arrays[0])\n        ? baseIntersection(mapped, undefined, comparator)\n        : [];\n    });\n\n    /**\n     * Converts all elements in `array` into a string separated by `separator`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to convert.\n     * @param {string} [separator=','] The element separator.\n     * @returns {string} Returns the joined string.\n     * @example\n     *\n     * _.join(['a', 'b', 'c'], '~');\n     * // => 'a~b~c'\n     */\n    function join(array, separator) {\n      return array == null ? '' : nativeJoin.call(array, separator);\n    }\n\n    /**\n     * Gets the last element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {*} Returns the last element of `array`.\n     * @example\n     *\n     * _.last([1, 2, 3]);\n     * // => 3\n     */\n    function last(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? array[length - 1] : undefined;\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it iterates over elements of\n     * `array` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=array.length-1] The index to search from.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.lastIndexOf([1, 2, 1, 2], 2);\n     * // => 3\n     *\n     * // Search from the `fromIndex`.\n     * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n     * // => 1\n     */\n    function lastIndexOf(array, value, fromIndex) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return -1;\n      }\n      var index = length;\n      if (fromIndex !== undefined) {\n        index = toInteger(fromIndex);\n        index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n      }\n      return value === value\n        ? strictLastIndexOf(array, value, index)\n        : baseFindIndex(array, baseIsNaN, index, true);\n    }\n\n    /**\n     * Gets the element at index `n` of `array`. If `n` is negative, the nth\n     * element from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.11.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=0] The index of the element to return.\n     * @returns {*} Returns the nth element of `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     *\n     * _.nth(array, 1);\n     * // => 'b'\n     *\n     * _.nth(array, -2);\n     * // => 'c';\n     */\n    function nth(array, n) {\n      return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n    }\n\n    /**\n     * Removes all given values from `array` using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n     * to remove elements from an array by predicate.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...*} [values] The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pull(array, 'a', 'c');\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    var pull = baseRest(pullAll);\n\n    /**\n     * This method is like `_.pull` except that it accepts an array of values to remove.\n     *\n     * **Note:** Unlike `_.difference`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n     *\n     * _.pullAll(array, ['a', 'c']);\n     * console.log(array);\n     * // => ['b', 'b']\n     */\n    function pullAll(array, values) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values)\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `iteratee` which is\n     * invoked for each element of `array` and `values` to generate the criterion\n     * by which they're compared. The iteratee is invoked with one argument: (value).\n     *\n     * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n     *\n     * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n     * console.log(array);\n     * // => [{ 'x': 2 }]\n     */\n    function pullAllBy(array, values, iteratee) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, getIteratee(iteratee, 2))\n        : array;\n    }\n\n    /**\n     * This method is like `_.pullAll` except that it accepts `comparator` which\n     * is invoked to compare elements of `array` to `values`. The comparator is\n     * invoked with two arguments: (arrVal, othVal).\n     *\n     * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Array} values The values to remove.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n     *\n     * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n     * console.log(array);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n     */\n    function pullAllWith(array, values, comparator) {\n      return (array && array.length && values && values.length)\n        ? basePullAll(array, values, undefined, comparator)\n        : array;\n    }\n\n    /**\n     * Removes elements from `array` corresponding to `indexes` and returns an\n     * array of removed elements.\n     *\n     * **Note:** Unlike `_.at`, this method mutates `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = ['a', 'b', 'c', 'd'];\n     * var pulled = _.pullAt(array, [1, 3]);\n     *\n     * console.log(array);\n     * // => ['a', 'c']\n     *\n     * console.log(pulled);\n     * // => ['b', 'd']\n     */\n    var pullAt = flatRest(function(array, indexes) {\n      var length = array == null ? 0 : array.length,\n          result = baseAt(array, indexes);\n\n      basePullAt(array, arrayMap(indexes, function(index) {\n        return isIndex(index, length) ? +index : index;\n      }).sort(compareAscending));\n\n      return result;\n    });\n\n    /**\n     * Removes all elements from `array` that `predicate` returns truthy for\n     * and returns an array of the removed elements. The predicate is invoked\n     * with three arguments: (value, index, array).\n     *\n     * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n     * to pull elements from an array by value.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new array of removed elements.\n     * @example\n     *\n     * var array = [1, 2, 3, 4];\n     * var evens = _.remove(array, function(n) {\n     *   return n % 2 == 0;\n     * });\n     *\n     * console.log(array);\n     * // => [1, 3]\n     *\n     * console.log(evens);\n     * // => [2, 4]\n     */\n    function remove(array, predicate) {\n      var result = [];\n      if (!(array && array.length)) {\n        return result;\n      }\n      var index = -1,\n          indexes = [],\n          length = array.length;\n\n      predicate = getIteratee(predicate, 3);\n      while (++index < length) {\n        var value = array[index];\n        if (predicate(value, index, array)) {\n          result.push(value);\n          indexes.push(index);\n        }\n      }\n      basePullAt(array, indexes);\n      return result;\n    }\n\n    /**\n     * Reverses `array` so that the first element becomes the last, the second\n     * element becomes the second to last, and so on.\n     *\n     * **Note:** This method mutates `array` and is based on\n     * [`Array#reverse`](https://mdn.io/Array/reverse).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to modify.\n     * @returns {Array} Returns `array`.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _.reverse(array);\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function reverse(array) {\n      return array == null ? array : nativeReverse.call(array);\n    }\n\n    /**\n     * Creates a slice of `array` from `start` up to, but not including, `end`.\n     *\n     * **Note:** This method is used instead of\n     * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n     * returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to slice.\n     * @param {number} [start=0] The start position.\n     * @param {number} [end=array.length] The end position.\n     * @returns {Array} Returns the slice of `array`.\n     */\n    function slice(array, start, end) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n        start = 0;\n        end = length;\n      }\n      else {\n        start = start == null ? 0 : toInteger(start);\n        end = end === undefined ? length : toInteger(end);\n      }\n      return baseSlice(array, start, end);\n    }\n\n    /**\n     * Uses a binary search to determine the lowest index at which `value`\n     * should be inserted into `array` in order to maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedIndex([30, 50], 40);\n     * // => 1\n     */\n    function sortedIndex(array, value) {\n      return baseSortedIndex(array, value);\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 0\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 0\n     */\n    function sortedIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * This method is like `_.indexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 1\n     */\n    function sortedIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value);\n        if (index < length && eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.sortedIndex` except that it returns the highest\n     * index at which `value` should be inserted into `array` in order to\n     * maintain its sort order.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n     * // => 4\n     */\n    function sortedLastIndex(array, value) {\n      return baseSortedIndex(array, value, true);\n    }\n\n    /**\n     * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n     * which is invoked for `value` and each element of `array` to compute their\n     * sort ranking. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The sorted array to inspect.\n     * @param {*} value The value to evaluate.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the index at which `value` should be inserted\n     *  into `array`.\n     * @example\n     *\n     * var objects = [{ 'x': 4 }, { 'x': 5 }];\n     *\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n     * // => 1\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n     * // => 1\n     */\n    function sortedLastIndexBy(array, value, iteratee) {\n      return baseSortedIndexBy(array, value, getIteratee(iteratee, 2), true);\n    }\n\n    /**\n     * This method is like `_.lastIndexOf` except that it performs a binary\n     * search on a sorted `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {*} value The value to search for.\n     * @returns {number} Returns the index of the matched value, else `-1`.\n     * @example\n     *\n     * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n     * // => 3\n     */\n    function sortedLastIndexOf(array, value) {\n      var length = array == null ? 0 : array.length;\n      if (length) {\n        var index = baseSortedIndex(array, value, true) - 1;\n        if (eq(array[index], value)) {\n          return index;\n        }\n      }\n      return -1;\n    }\n\n    /**\n     * This method is like `_.uniq` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniq([1, 1, 2]);\n     * // => [1, 2]\n     */\n    function sortedUniq(array) {\n      return (array && array.length)\n        ? baseSortedUniq(array)\n        : [];\n    }\n\n    /**\n     * This method is like `_.uniqBy` except that it's designed and optimized\n     * for sorted arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n     * // => [1.1, 2.3]\n     */\n    function sortedUniqBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSortedUniq(array, getIteratee(iteratee, 2))\n        : [];\n    }\n\n    /**\n     * Gets all but the first element of `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.tail([1, 2, 3]);\n     * // => [2, 3]\n     */\n    function tail(array) {\n      var length = array == null ? 0 : array.length;\n      return length ? baseSlice(array, 1, length) : [];\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the beginning.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.take([1, 2, 3]);\n     * // => [1]\n     *\n     * _.take([1, 2, 3], 2);\n     * // => [1, 2]\n     *\n     * _.take([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.take([1, 2, 3], 0);\n     * // => []\n     */\n    function take(array, n, guard) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      return baseSlice(array, 0, n < 0 ? 0 : n);\n    }\n\n    /**\n     * Creates a slice of `array` with `n` elements taken from the end.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {number} [n=1] The number of elements to take.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * _.takeRight([1, 2, 3]);\n     * // => [3]\n     *\n     * _.takeRight([1, 2, 3], 2);\n     * // => [2, 3]\n     *\n     * _.takeRight([1, 2, 3], 5);\n     * // => [1, 2, 3]\n     *\n     * _.takeRight([1, 2, 3], 0);\n     * // => []\n     */\n    function takeRight(array, n, guard) {\n      var length = array == null ? 0 : array.length;\n      if (!length) {\n        return [];\n      }\n      n = (guard || n === undefined) ? 1 : toInteger(n);\n      n = length - n;\n      return baseSlice(array, n < 0 ? 0 : n, length);\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the end. Elements are\n     * taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': true },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': false }\n     * ];\n     *\n     * _.takeRightWhile(users, function(o) { return !o.active; });\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n     * // => objects for ['pebbles']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeRightWhile(users, ['active', false]);\n     * // => objects for ['fred', 'pebbles']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeRightWhile(users, 'active');\n     * // => []\n     */\n    function takeRightWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3), false, true)\n        : [];\n    }\n\n    /**\n     * Creates a slice of `array` with elements taken from the beginning. Elements\n     * are taken until `predicate` returns falsey. The predicate is invoked with\n     * three arguments: (value, index, array).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Array\n     * @param {Array} array The array to query.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the slice of `array`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'active': false },\n     *   { 'user': 'fred',    'active': false },\n     *   { 'user': 'pebbles', 'active': true }\n     * ];\n     *\n     * _.takeWhile(users, function(o) { return !o.active; });\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.takeWhile(users, { 'user': 'barney', 'active': false });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.takeWhile(users, ['active', false]);\n     * // => objects for ['barney', 'fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.takeWhile(users, 'active');\n     * // => []\n     */\n    function takeWhile(array, predicate) {\n      return (array && array.length)\n        ? baseWhile(array, getIteratee(predicate, 3))\n        : [];\n    }\n\n    /**\n     * Creates an array of unique values, in order, from all given arrays using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.union([2], [1, 2]);\n     * // => [2, 1]\n     */\n    var union = baseRest(function(arrays) {\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which uniqueness is computed. Result values are chosen from the first\n     * array in which the value occurs. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    var unionBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.union` except that it accepts `comparator` which\n     * is invoked to compare elements of `arrays`. Result values are chosen from\n     * the first array in which the value occurs. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of combined values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.unionWith(objects, others, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var unionWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n    });\n\n    /**\n     * Creates a duplicate-free version of an array, using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons, in which only the first occurrence of each element\n     * is kept. The order of result values is determined by the order they occur\n     * in the array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniq([2, 1, 2]);\n     * // => [2, 1]\n     */\n    function uniq(array) {\n      return (array && array.length) ? baseUniq(array) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * uniqueness is computed. The order of result values is determined by the\n     * order they occur in the array. The iteratee is invoked with one argument:\n     * (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n     * // => [2.1, 1.2]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 1 }, { 'x': 2 }]\n     */\n    function uniqBy(array, iteratee) {\n      return (array && array.length) ? baseUniq(array, getIteratee(iteratee, 2)) : [];\n    }\n\n    /**\n     * This method is like `_.uniq` except that it accepts `comparator` which\n     * is invoked to compare elements of `array`. The order of result values is\n     * determined by the order they occur in the array.The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new duplicate free array.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.uniqWith(objects, _.isEqual);\n     * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n     */\n    function uniqWith(array, comparator) {\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts an array of grouped\n     * elements and creates an array regrouping the elements to their pre-zip\n     * configuration.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.2.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     *\n     * _.unzip(zipped);\n     * // => [['a', 'b'], [1, 2], [true, false]]\n     */\n    function unzip(array) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var length = 0;\n      array = arrayFilter(array, function(group) {\n        if (isArrayLikeObject(group)) {\n          length = nativeMax(group.length, length);\n          return true;\n        }\n      });\n      return baseTimes(length, function(index) {\n        return arrayMap(array, baseProperty(index));\n      });\n    }\n\n    /**\n     * This method is like `_.unzip` except that it accepts `iteratee` to specify\n     * how regrouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {Array} array The array of grouped elements to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  regrouped values.\n     * @returns {Array} Returns the new array of regrouped elements.\n     * @example\n     *\n     * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n     * // => [[1, 10, 100], [2, 20, 200]]\n     *\n     * _.unzipWith(zipped, _.add);\n     * // => [3, 30, 300]\n     */\n    function unzipWith(array, iteratee) {\n      if (!(array && array.length)) {\n        return [];\n      }\n      var result = unzip(array);\n      if (iteratee == null) {\n        return result;\n      }\n      return arrayMap(result, function(group) {\n        return apply(iteratee, undefined, group);\n      });\n    }\n\n    /**\n     * Creates an array excluding all given values using\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * for equality comparisons.\n     *\n     * **Note:** Unlike `_.pull`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {Array} array The array to inspect.\n     * @param {...*} [values] The values to exclude.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.xor\n     * @example\n     *\n     * _.without([2, 1, 2, 3], 1, 2);\n     * // => [3]\n     */\n    var without = baseRest(function(array, values) {\n      return isArrayLikeObject(array)\n        ? baseDifference(array, values)\n        : [];\n    });\n\n    /**\n     * Creates an array of unique values that is the\n     * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n     * of the given arrays. The order of result values is determined by the order\n     * they occur in the arrays.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @returns {Array} Returns the new array of filtered values.\n     * @see _.difference, _.without\n     * @example\n     *\n     * _.xor([2, 1], [2, 3]);\n     * // => [1, 3]\n     */\n    var xor = baseRest(function(arrays) {\n      return baseXor(arrayFilter(arrays, isArrayLikeObject));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `iteratee` which is\n     * invoked for each element of each `arrays` to generate the criterion by\n     * which by which they're compared. The order of result values is determined\n     * by the order they occur in the arrays. The iteratee is invoked with one\n     * argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n     * // => [1.2, 3.4]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n     * // => [{ 'x': 2 }]\n     */\n    var xorBy = baseRest(function(arrays) {\n      var iteratee = last(arrays);\n      if (isArrayLikeObject(iteratee)) {\n        iteratee = undefined;\n      }\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), getIteratee(iteratee, 2));\n    });\n\n    /**\n     * This method is like `_.xor` except that it accepts `comparator` which is\n     * invoked to compare elements of `arrays`. The order of result values is\n     * determined by the order they occur in the arrays. The comparator is invoked\n     * with two arguments: (arrVal, othVal).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to inspect.\n     * @param {Function} [comparator] The comparator invoked per element.\n     * @returns {Array} Returns the new array of filtered values.\n     * @example\n     *\n     * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n     * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n     *\n     * _.xorWith(objects, others, _.isEqual);\n     * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n     */\n    var xorWith = baseRest(function(arrays) {\n      var comparator = last(arrays);\n      comparator = typeof comparator == 'function' ? comparator : undefined;\n      return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n    });\n\n    /**\n     * Creates an array of grouped elements, the first of which contains the\n     * first elements of the given arrays, the second of which contains the\n     * second elements of the given arrays, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zip(['a', 'b'], [1, 2], [true, false]);\n     * // => [['a', 1, true], ['b', 2, false]]\n     */\n    var zip = baseRest(unzip);\n\n    /**\n     * This method is like `_.fromPairs` except that it accepts two arrays,\n     * one of property identifiers and one of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.4.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObject(['a', 'b'], [1, 2]);\n     * // => { 'a': 1, 'b': 2 }\n     */\n    function zipObject(props, values) {\n      return baseZipObject(props || [], values || [], assignValue);\n    }\n\n    /**\n     * This method is like `_.zipObject` except that it supports property paths.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Array\n     * @param {Array} [props=[]] The property identifiers.\n     * @param {Array} [values=[]] The property values.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n     * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n     */\n    function zipObjectDeep(props, values) {\n      return baseZipObject(props || [], values || [], baseSet);\n    }\n\n    /**\n     * This method is like `_.zip` except that it accepts `iteratee` to specify\n     * how grouped values should be combined. The iteratee is invoked with the\n     * elements of each group: (...group).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Array\n     * @param {...Array} [arrays] The arrays to process.\n     * @param {Function} [iteratee=_.identity] The function to combine\n     *  grouped values.\n     * @returns {Array} Returns the new array of grouped elements.\n     * @example\n     *\n     * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n     *   return a + b + c;\n     * });\n     * // => [111, 222]\n     */\n    var zipWith = baseRest(function(arrays) {\n      var length = arrays.length,\n          iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n      iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n      return unzipWith(arrays, iteratee);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n     * chain sequences enabled. The result of such sequences must be unwrapped\n     * with `_#value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Seq\n     * @param {*} value The value to wrap.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36 },\n     *   { 'user': 'fred',    'age': 40 },\n     *   { 'user': 'pebbles', 'age': 1 }\n     * ];\n     *\n     * var youngest = _\n     *   .chain(users)\n     *   .sortBy('age')\n     *   .map(function(o) {\n     *     return o.user + ' is ' + o.age;\n     *   })\n     *   .head()\n     *   .value();\n     * // => 'pebbles is 1'\n     */\n    function chain(value) {\n      var result = lodash(value);\n      result.__chain__ = true;\n      return result;\n    }\n\n    /**\n     * This method invokes `interceptor` and returns `value`. The interceptor\n     * is invoked with one argument; (value). The purpose of this method is to\n     * \"tap into\" a method chain sequence in order to modify intermediate results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * _([1, 2, 3])\n     *  .tap(function(array) {\n     *    // Mutate input array.\n     *    array.pop();\n     *  })\n     *  .reverse()\n     *  .value();\n     * // => [2, 1]\n     */\n    function tap(value, interceptor) {\n      interceptor(value);\n      return value;\n    }\n\n    /**\n     * This method is like `_.tap` except that it returns the result of `interceptor`.\n     * The purpose of this method is to \"pass thru\" values replacing intermediate\n     * results in a method chain sequence.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Seq\n     * @param {*} value The value to provide to `interceptor`.\n     * @param {Function} interceptor The function to invoke.\n     * @returns {*} Returns the result of `interceptor`.\n     * @example\n     *\n     * _('  abc  ')\n     *  .chain()\n     *  .trim()\n     *  .thru(function(value) {\n     *    return [value];\n     *  })\n     *  .value();\n     * // => ['abc']\n     */\n    function thru(value, interceptor) {\n      return interceptor(value);\n    }\n\n    /**\n     * This method is the wrapper version of `_.at`.\n     *\n     * @name at\n     * @memberOf _\n     * @since 1.0.0\n     * @category Seq\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _(object).at(['a[0].b.c', 'a[1]']).value();\n     * // => [3, 4]\n     */\n    var wrapperAt = flatRest(function(paths) {\n      var length = paths.length,\n          start = length ? paths[0] : 0,\n          value = this.__wrapped__,\n          interceptor = function(object) { return baseAt(object, paths); };\n\n      if (length > 1 || this.__actions__.length ||\n          !(value instanceof LazyWrapper) || !isIndex(start)) {\n        return this.thru(interceptor);\n      }\n      value = value.slice(start, +start + (length ? 1 : 0));\n      value.__actions__.push({\n        'func': thru,\n        'args': [interceptor],\n        'thisArg': undefined\n      });\n      return new LodashWrapper(value, this.__chain__).thru(function(array) {\n        if (length && !array.length) {\n          array.push(undefined);\n        }\n        return array;\n      });\n    });\n\n    /**\n     * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n     *\n     * @name chain\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 }\n     * ];\n     *\n     * // A sequence without explicit chaining.\n     * _(users).head();\n     * // => { 'user': 'barney', 'age': 36 }\n     *\n     * // A sequence with explicit chaining.\n     * _(users)\n     *   .chain()\n     *   .head()\n     *   .pick('user')\n     *   .value();\n     * // => { 'user': 'barney' }\n     */\n    function wrapperChain() {\n      return chain(this);\n    }\n\n    /**\n     * Executes the chain sequence and returns the wrapped result.\n     *\n     * @name commit\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2];\n     * var wrapped = _(array).push(3);\n     *\n     * console.log(array);\n     * // => [1, 2]\n     *\n     * wrapped = wrapped.commit();\n     * console.log(array);\n     * // => [1, 2, 3]\n     *\n     * wrapped.last();\n     * // => 3\n     *\n     * console.log(array);\n     * // => [1, 2, 3]\n     */\n    function wrapperCommit() {\n      return new LodashWrapper(this.value(), this.__chain__);\n    }\n\n    /**\n     * Gets the next value on a wrapped object following the\n     * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n     *\n     * @name next\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the next iterator value.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 1 }\n     *\n     * wrapped.next();\n     * // => { 'done': false, 'value': 2 }\n     *\n     * wrapped.next();\n     * // => { 'done': true, 'value': undefined }\n     */\n    function wrapperNext() {\n      if (this.__values__ === undefined) {\n        this.__values__ = toArray(this.value());\n      }\n      var done = this.__index__ >= this.__values__.length,\n          value = done ? undefined : this.__values__[this.__index__++];\n\n      return { 'done': done, 'value': value };\n    }\n\n    /**\n     * Enables the wrapper to be iterable.\n     *\n     * @name Symbol.iterator\n     * @memberOf _\n     * @since 4.0.0\n     * @category Seq\n     * @returns {Object} Returns the wrapper object.\n     * @example\n     *\n     * var wrapped = _([1, 2]);\n     *\n     * wrapped[Symbol.iterator]() === wrapped;\n     * // => true\n     *\n     * Array.from(wrapped);\n     * // => [1, 2]\n     */\n    function wrapperToIterator() {\n      return this;\n    }\n\n    /**\n     * Creates a clone of the chain sequence planting `value` as the wrapped value.\n     *\n     * @name plant\n     * @memberOf _\n     * @since 3.2.0\n     * @category Seq\n     * @param {*} value The value to plant.\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var wrapped = _([1, 2]).map(square);\n     * var other = wrapped.plant([3, 4]);\n     *\n     * other.value();\n     * // => [9, 16]\n     *\n     * wrapped.value();\n     * // => [1, 4]\n     */\n    function wrapperPlant(value) {\n      var result,\n          parent = this;\n\n      while (parent instanceof baseLodash) {\n        var clone = wrapperClone(parent);\n        clone.__index__ = 0;\n        clone.__values__ = undefined;\n        if (result) {\n          previous.__wrapped__ = clone;\n        } else {\n          result = clone;\n        }\n        var previous = clone;\n        parent = parent.__wrapped__;\n      }\n      previous.__wrapped__ = value;\n      return result;\n    }\n\n    /**\n     * This method is the wrapper version of `_.reverse`.\n     *\n     * **Note:** This method mutates the wrapped array.\n     *\n     * @name reverse\n     * @memberOf _\n     * @since 0.1.0\n     * @category Seq\n     * @returns {Object} Returns the new `lodash` wrapper instance.\n     * @example\n     *\n     * var array = [1, 2, 3];\n     *\n     * _(array).reverse().value()\n     * // => [3, 2, 1]\n     *\n     * console.log(array);\n     * // => [3, 2, 1]\n     */\n    function wrapperReverse() {\n      var value = this.__wrapped__;\n      if (value instanceof LazyWrapper) {\n        var wrapped = value;\n        if (this.__actions__.length) {\n          wrapped = new LazyWrapper(this);\n        }\n        wrapped = wrapped.reverse();\n        wrapped.__actions__.push({\n          'func': thru,\n          'args': [reverse],\n          'thisArg': undefined\n        });\n        return new LodashWrapper(wrapped, this.__chain__);\n      }\n      return this.thru(reverse);\n    }\n\n    /**\n     * Executes the chain sequence to resolve the unwrapped value.\n     *\n     * @name value\n     * @memberOf _\n     * @since 0.1.0\n     * @alias toJSON, valueOf\n     * @category Seq\n     * @returns {*} Returns the resolved unwrapped value.\n     * @example\n     *\n     * _([1, 2, 3]).value();\n     * // => [1, 2, 3]\n     */\n    function wrapperValue() {\n      return baseWrapperValue(this.__wrapped__, this.__actions__);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the number of times the key was returned by `iteratee`. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.countBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': 1, '6': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.countBy(['one', 'two', 'three'], 'length');\n     * // => { '3': 2, '5': 1 }\n     */\n    var countBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        ++result[key];\n      } else {\n        baseAssignValue(result, key, 1);\n      }\n    });\n\n    /**\n     * Checks if `predicate` returns truthy for **all** elements of `collection`.\n     * Iteration is stopped once `predicate` returns falsey. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * **Note:** This method returns `true` for\n     * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n     * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n     * elements of empty collections.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if all elements pass the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.every([true, 1, null, 'yes'], Boolean);\n     * // => false\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.every(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.every(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.every(users, 'active');\n     * // => false\n     */\n    function every(collection, predicate, guard) {\n      var func = isArray(collection) ? arrayEvery : baseEvery;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning an array of all elements\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * **Note:** Unlike `_.remove`, this method returns a new array.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.reject\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * _.filter(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, { 'age': 36, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.filter(users, 'active');\n     * // => objects for ['barney']\n     */\n    function filter(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Iterates over elements of `collection`, returning the first element\n     * `predicate` returns truthy for. The predicate is invoked with three\n     * arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': true },\n     *   { 'user': 'fred',    'age': 40, 'active': false },\n     *   { 'user': 'pebbles', 'age': 1,  'active': true }\n     * ];\n     *\n     * _.find(users, function(o) { return o.age < 40; });\n     * // => object for 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.find(users, { 'age': 1, 'active': true });\n     * // => object for 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.find(users, ['active', false]);\n     * // => object for 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.find(users, 'active');\n     * // => object for 'barney'\n     */\n    var find = createFind(findIndex);\n\n    /**\n     * This method is like `_.find` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param {number} [fromIndex=collection.length-1] The index to search from.\n     * @returns {*} Returns the matched element, else `undefined`.\n     * @example\n     *\n     * _.findLast([1, 2, 3, 4], function(n) {\n     *   return n % 2 == 1;\n     * });\n     * // => 3\n     */\n    var findLast = createFind(findLastIndex);\n\n    /**\n     * Creates a flattened array of values by running each element in `collection`\n     * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n     * with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [n, n];\n     * }\n     *\n     * _.flatMap([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMap(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), 1);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDeep([1, 2], duplicate);\n     * // => [1, 1, 2, 2]\n     */\n    function flatMapDeep(collection, iteratee) {\n      return baseFlatten(map(collection, iteratee), INFINITY);\n    }\n\n    /**\n     * This method is like `_.flatMap` except that it recursively flattens the\n     * mapped results up to `depth` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {number} [depth=1] The maximum recursion depth.\n     * @returns {Array} Returns the new flattened array.\n     * @example\n     *\n     * function duplicate(n) {\n     *   return [[[n, n]]];\n     * }\n     *\n     * _.flatMapDepth([1, 2], duplicate, 2);\n     * // => [[1, 1], [2, 2]]\n     */\n    function flatMapDepth(collection, iteratee, depth) {\n      depth = depth === undefined ? 1 : toInteger(depth);\n      return baseFlatten(map(collection, iteratee), depth);\n    }\n\n    /**\n     * Iterates over elements of `collection` and invokes `iteratee` for each element.\n     * The iteratee is invoked with three arguments: (value, index|key, collection).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n     * property are iterated like arrays. To avoid this behavior use `_.forIn`\n     * or `_.forOwn` for object iteration.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @alias each\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEachRight\n     * @example\n     *\n     * _.forEach([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `1` then `2`.\n     *\n     * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forEach(collection, iteratee) {\n      var func = isArray(collection) ? arrayEach : baseEach;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forEach` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @alias eachRight\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array|Object} Returns `collection`.\n     * @see _.forEach\n     * @example\n     *\n     * _.forEachRight([1, 2], function(value) {\n     *   console.log(value);\n     * });\n     * // => Logs `2` then `1`.\n     */\n    function forEachRight(collection, iteratee) {\n      var func = isArray(collection) ? arrayEachRight : baseEachRight;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The order of grouped values\n     * is determined by the order they occur in `collection`. The corresponding\n     * value of each key is an array of elements responsible for generating the\n     * key. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n     * // => { '4': [4.2], '6': [6.1, 6.3] }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.groupBy(['one', 'two', 'three'], 'length');\n     * // => { '3': ['one', 'two'], '5': ['three'] }\n     */\n    var groupBy = createAggregator(function(result, value, key) {\n      if (hasOwnProperty.call(result, key)) {\n        result[key].push(value);\n      } else {\n        baseAssignValue(result, key, [value]);\n      }\n    });\n\n    /**\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\n     * checked for a substring of `value`, otherwise\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\n     * the offset from the end of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @param {*} value The value to search for.\n     * @param {number} [fromIndex=0] The index to search from.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\n     * @example\n     *\n     * _.includes([1, 2, 3], 1);\n     * // => true\n     *\n     * _.includes([1, 2, 3], 1, 2);\n     * // => false\n     *\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\n     * // => true\n     *\n     * _.includes('abcd', 'bc');\n     * // => true\n     */\n    function includes(collection, value, fromIndex, guard) {\n      collection = isArrayLike(collection) ? collection : values(collection);\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n      var length = collection.length;\n      if (fromIndex < 0) {\n        fromIndex = nativeMax(length + fromIndex, 0);\n      }\n      return isString(collection)\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n    }\n\n    /**\n     * Invokes the method at `path` of each element in `collection`, returning\n     * an array of the results of each invoked method. Any additional arguments\n     * are provided to each invoked method. If `path` is a function, it's invoked\n     * for, and `this` bound to, each element in `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array|Function|string} path The path of the method to invoke or\n     *  the function invoked per iteration.\n     * @param {...*} [args] The arguments to invoke each method with.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n     * // => [[1, 5, 7], [1, 2, 3]]\n     *\n     * _.invokeMap([123, 456], String.prototype.split, '');\n     * // => [['1', '2', '3'], ['4', '5', '6']]\n     */\n    var invokeMap = baseRest(function(collection, path, args) {\n      var index = -1,\n          isFunc = typeof path == 'function',\n          result = isArrayLike(collection) ? Array(collection.length) : [];\n\n      baseEach(collection, function(value) {\n        result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n      });\n      return result;\n    });\n\n    /**\n     * Creates an object composed of keys generated from the results of running\n     * each element of `collection` thru `iteratee`. The corresponding value of\n     * each key is the last element responsible for generating the key. The\n     * iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n     * @returns {Object} Returns the composed aggregate object.\n     * @example\n     *\n     * var array = [\n     *   { 'dir': 'left', 'code': 97 },\n     *   { 'dir': 'right', 'code': 100 }\n     * ];\n     *\n     * _.keyBy(array, function(o) {\n     *   return String.fromCharCode(o.code);\n     * });\n     * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n     *\n     * _.keyBy(array, 'dir');\n     * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n     */\n    var keyBy = createAggregator(function(result, value, key) {\n      baseAssignValue(result, key, value);\n    });\n\n    /**\n     * Creates an array of values by running each element in `collection` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n     *\n     * The guarded methods are:\n     * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n     * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n     * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n     * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new mapped array.\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * _.map([4, 8], square);\n     * // => [16, 64]\n     *\n     * _.map({ 'a': 4, 'b': 8 }, square);\n     * // => [16, 64] (iteration order is not guaranteed)\n     *\n     * var users = [\n     *   { 'user': 'barney' },\n     *   { 'user': 'fred' }\n     * ];\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, 'user');\n     * // => ['barney', 'fred']\n     */\n    function map(collection, iteratee) {\n      var func = isArray(collection) ? arrayMap : baseMap;\n      return func(collection, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.sortBy` except that it allows specifying the sort\n     * orders of the iteratees to sort by. If `orders` is unspecified, all values\n     * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n     * descending or \"asc\" for ascending sort order of corresponding values.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @param {string[]} [orders] The sort orders of `iteratees`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 34 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 36 }\n     * ];\n     *\n     * // Sort by `user` in ascending order and by `age` in descending order.\n     * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     */\n    function orderBy(collection, iteratees, orders, guard) {\n      if (collection == null) {\n        return [];\n      }\n      if (!isArray(iteratees)) {\n        iteratees = iteratees == null ? [] : [iteratees];\n      }\n      orders = guard ? undefined : orders;\n      if (!isArray(orders)) {\n        orders = orders == null ? [] : [orders];\n      }\n      return baseOrderBy(collection, iteratees, orders);\n    }\n\n    /**\n     * Creates an array of elements split into two groups, the first of which\n     * contains elements `predicate` returns truthy for, the second of which\n     * contains elements `predicate` returns falsey for. The predicate is\n     * invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of grouped elements.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney',  'age': 36, 'active': false },\n     *   { 'user': 'fred',    'age': 40, 'active': true },\n     *   { 'user': 'pebbles', 'age': 1,  'active': false }\n     * ];\n     *\n     * _.partition(users, function(o) { return o.active; });\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.partition(users, { 'age': 1, 'active': false });\n     * // => objects for [['pebbles'], ['barney', 'fred']]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.partition(users, ['active', false]);\n     * // => objects for [['barney', 'pebbles'], ['fred']]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.partition(users, 'active');\n     * // => objects for [['fred'], ['barney', 'pebbles']]\n     */\n    var partition = createAggregator(function(result, value, key) {\n      result[key ? 0 : 1].push(value);\n    }, function() { return [[], []]; });\n\n    /**\n     * Reduces `collection` to a value which is the accumulated result of running\n     * each element in `collection` thru `iteratee`, where each successive\n     * invocation is supplied the return value of the previous. If `accumulator`\n     * is not given, the first element of `collection` is used as the initial\n     * value. The iteratee is invoked with four arguments:\n     * (accumulator, value, index|key, collection).\n     *\n     * Many lodash methods are guarded to work as iteratees for methods like\n     * `_.reduce`, `_.reduceRight`, and `_.transform`.\n     *\n     * The guarded methods are:\n     * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n     * and `sortBy`\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduceRight\n     * @example\n     *\n     * _.reduce([1, 2], function(sum, n) {\n     *   return sum + n;\n     * }, 0);\n     * // => 3\n     *\n     * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     *   return result;\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n     */\n    function reduce(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduce : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n    }\n\n    /**\n     * This method is like `_.reduce` except that it iterates over elements of\n     * `collection` from right to left.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The initial value.\n     * @returns {*} Returns the accumulated value.\n     * @see _.reduce\n     * @example\n     *\n     * var array = [[0, 1], [2, 3], [4, 5]];\n     *\n     * _.reduceRight(array, function(flattened, other) {\n     *   return flattened.concat(other);\n     * }, []);\n     * // => [4, 5, 2, 3, 0, 1]\n     */\n    function reduceRight(collection, iteratee, accumulator) {\n      var func = isArray(collection) ? arrayReduceRight : baseReduce,\n          initAccum = arguments.length < 3;\n\n      return func(collection, getIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n    }\n\n    /**\n     * The opposite of `_.filter`; this method returns the elements of `collection`\n     * that `predicate` does **not** return truthy for.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the new filtered array.\n     * @see _.filter\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': false },\n     *   { 'user': 'fred',   'age': 40, 'active': true }\n     * ];\n     *\n     * _.reject(users, function(o) { return !o.active; });\n     * // => objects for ['fred']\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.reject(users, { 'age': 40, 'active': true });\n     * // => objects for ['barney']\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.reject(users, ['active', false]);\n     * // => objects for ['fred']\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.reject(users, 'active');\n     * // => objects for ['barney']\n     */\n    function reject(collection, predicate) {\n      var func = isArray(collection) ? arrayFilter : baseFilter;\n      return func(collection, negate(getIteratee(predicate, 3)));\n    }\n\n    /**\n     * Gets a random element from `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @returns {*} Returns the random element.\n     * @example\n     *\n     * _.sample([1, 2, 3, 4]);\n     * // => 2\n     */\n    function sample(collection) {\n      var func = isArray(collection) ? arraySample : baseSample;\n      return func(collection);\n    }\n\n    /**\n     * Gets `n` random elements at unique keys from `collection` up to the\n     * size of `collection`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to sample.\n     * @param {number} [n=1] The number of elements to sample.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the random elements.\n     * @example\n     *\n     * _.sampleSize([1, 2, 3], 2);\n     * // => [3, 1]\n     *\n     * _.sampleSize([1, 2, 3], 4);\n     * // => [2, 3, 1]\n     */\n    function sampleSize(collection, n, guard) {\n      if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n      return func(collection, n);\n    }\n\n    /**\n     * Creates an array of shuffled values, using a version of the\n     * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to shuffle.\n     * @returns {Array} Returns the new shuffled array.\n     * @example\n     *\n     * _.shuffle([1, 2, 3, 4]);\n     * // => [4, 1, 3, 2]\n     */\n    function shuffle(collection) {\n      var func = isArray(collection) ? arrayShuffle : baseShuffle;\n      return func(collection);\n    }\n\n    /**\n     * Gets the size of `collection` by returning its length for array-like\n     * values or the number of own enumerable string keyed properties for objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object|string} collection The collection to inspect.\n     * @returns {number} Returns the collection size.\n     * @example\n     *\n     * _.size([1, 2, 3]);\n     * // => 3\n     *\n     * _.size({ 'a': 1, 'b': 2 });\n     * // => 2\n     *\n     * _.size('pebbles');\n     * // => 7\n     */\n    function size(collection) {\n      if (collection == null) {\n        return 0;\n      }\n      if (isArrayLike(collection)) {\n        return isString(collection) ? stringSize(collection) : collection.length;\n      }\n      var tag = getTag(collection);\n      if (tag == mapTag || tag == setTag) {\n        return collection.size;\n      }\n      return baseKeys(collection).length;\n    }\n\n    /**\n     * Checks if `predicate` returns truthy for **any** element of `collection`.\n     * Iteration is stopped once `predicate` returns truthy. The predicate is\n     * invoked with three arguments: (value, index|key, collection).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {boolean} Returns `true` if any element passes the predicate check,\n     *  else `false`.\n     * @example\n     *\n     * _.some([null, 0, 'yes', false], Boolean);\n     * // => true\n     *\n     * var users = [\n     *   { 'user': 'barney', 'active': true },\n     *   { 'user': 'fred',   'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.some(users, { 'user': 'barney', 'active': false });\n     * // => false\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.some(users, ['active', false]);\n     * // => true\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.some(users, 'active');\n     * // => true\n     */\n    function some(collection, predicate, guard) {\n      var func = isArray(collection) ? arraySome : baseSome;\n      if (guard && isIterateeCall(collection, predicate, guard)) {\n        predicate = undefined;\n      }\n      return func(collection, getIteratee(predicate, 3));\n    }\n\n    /**\n     * Creates an array of elements, sorted in ascending order by the results of\n     * running each element in a collection thru each iteratee. This method\n     * performs a stable sort, that is, it preserves the original sort order of\n     * equal elements. The iteratees are invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Collection\n     * @param {Array|Object} collection The collection to iterate over.\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to sort by.\n     * @returns {Array} Returns the new sorted array.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'fred',   'age': 48 },\n     *   { 'user': 'barney', 'age': 36 },\n     *   { 'user': 'fred',   'age': 40 },\n     *   { 'user': 'barney', 'age': 34 }\n     * ];\n     *\n     * _.sortBy(users, [function(o) { return o.user; }]);\n     * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n     *\n     * _.sortBy(users, ['user', 'age']);\n     * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n     */\n    var sortBy = baseRest(function(collection, iteratees) {\n      if (collection == null) {\n        return [];\n      }\n      var length = iteratees.length;\n      if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n        iteratees = [];\n      } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n        iteratees = [iteratees[0]];\n      }\n      return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n    });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Gets the timestamp of the number of milliseconds that have elapsed since\n     * the Unix epoch (1 January 1970 00:00:00 UTC).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Date\n     * @returns {number} Returns the timestamp.\n     * @example\n     *\n     * _.defer(function(stamp) {\n     *   console.log(_.now() - stamp);\n     * }, _.now());\n     * // => Logs the number of milliseconds it took for the deferred invocation.\n     */\n    var now = ctxNow || function() {\n      return root.Date.now();\n    };\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The opposite of `_.before`; this method creates a function that invokes\n     * `func` once it's called `n` or more times.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {number} n The number of calls before `func` is invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var saves = ['profile', 'settings'];\n     *\n     * var done = _.after(saves.length, function() {\n     *   console.log('done saving!');\n     * });\n     *\n     * _.forEach(saves, function(type) {\n     *   asyncSave({ 'type': type, 'complete': done });\n     * });\n     * // => Logs 'done saving!' after the two async saves have completed.\n     */\n    function after(n, func) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n < 1) {\n          return func.apply(this, arguments);\n        }\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func`, with up to `n` arguments,\n     * ignoring any additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @param {number} [n=func.length] The arity cap.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n     * // => [6, 8, 10]\n     */\n    function ary(func, n, guard) {\n      n = guard ? undefined : n;\n      n = (func && n == null) ? func.length : n;\n      return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n    }\n\n    /**\n     * Creates a function that invokes `func`, with the `this` binding and arguments\n     * of the created function, while it's called less than `n` times. Subsequent\n     * calls to the created function return the result of the last `func` invocation.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {number} n The number of calls at which `func` is no longer invoked.\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * jQuery(element).on('click', _.before(5, addContactToList));\n     * // => Allows adding up to 4 contacts to the list.\n     */\n    function before(n, func) {\n      var result;\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      n = toInteger(n);\n      return function() {\n        if (--n > 0) {\n          result = func.apply(this, arguments);\n        }\n        if (n <= 1) {\n          func = undefined;\n        }\n        return result;\n      };\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of `thisArg`\n     * and `partials` prepended to the arguments it receives.\n     *\n     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n     * property of bound functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to bind.\n     * @param {*} thisArg The `this` binding of `func`.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * function greet(greeting, punctuation) {\n     *   return greeting + ' ' + this.user + punctuation;\n     * }\n     *\n     * var object = { 'user': 'fred' };\n     *\n     * var bound = _.bind(greet, object, 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bind(greet, object, _, '!');\n     * bound('hi');\n     * // => 'hi fred!'\n     */\n    var bind = baseRest(function(func, thisArg, partials) {\n      var bitmask = WRAP_BIND_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bind));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(func, bitmask, thisArg, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes the method at `object[key]` with `partials`\n     * prepended to the arguments it receives.\n     *\n     * This method differs from `_.bind` by allowing bound functions to reference\n     * methods that may be redefined or don't yet exist. See\n     * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n     * for more details.\n     *\n     * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Function\n     * @param {Object} object The object to invoke the method on.\n     * @param {string} key The key of the method.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new bound function.\n     * @example\n     *\n     * var object = {\n     *   'user': 'fred',\n     *   'greet': function(greeting, punctuation) {\n     *     return greeting + ' ' + this.user + punctuation;\n     *   }\n     * };\n     *\n     * var bound = _.bindKey(object, 'greet', 'hi');\n     * bound('!');\n     * // => 'hi fred!'\n     *\n     * object.greet = function(greeting, punctuation) {\n     *   return greeting + 'ya ' + this.user + punctuation;\n     * };\n     *\n     * bound('!');\n     * // => 'hiya fred!'\n     *\n     * // Bound with placeholders.\n     * var bound = _.bindKey(object, 'greet', _, '!');\n     * bound('hi');\n     * // => 'hiya fred!'\n     */\n    var bindKey = baseRest(function(object, key, partials) {\n      var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n      if (partials.length) {\n        var holders = replaceHolders(partials, getHolder(bindKey));\n        bitmask |= WRAP_PARTIAL_FLAG;\n      }\n      return createWrap(key, bitmask, object, partials, holders);\n    });\n\n    /**\n     * Creates a function that accepts arguments of `func` and either invokes\n     * `func` returning its result, if at least `arity` number of arguments have\n     * been provided, or returns a function that accepts the remaining `func`\n     * arguments, and so on. The arity of `func` may be specified if `func.length`\n     * is not sufficient.\n     *\n     * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n     * may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curry(abc);\n     *\n     * curried(1)(2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2)(3);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(1)(_, 3)(2);\n     * // => [1, 2, 3]\n     */\n    function curry(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curry.placeholder;\n      return result;\n    }\n\n    /**\n     * This method is like `_.curry` except that arguments are applied to `func`\n     * in the manner of `_.partialRight` instead of `_.partial`.\n     *\n     * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for provided arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of curried functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to curry.\n     * @param {number} [arity=func.length] The arity of `func`.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the new curried function.\n     * @example\n     *\n     * var abc = function(a, b, c) {\n     *   return [a, b, c];\n     * };\n     *\n     * var curried = _.curryRight(abc);\n     *\n     * curried(3)(2)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(2, 3)(1);\n     * // => [1, 2, 3]\n     *\n     * curried(1, 2, 3);\n     * // => [1, 2, 3]\n     *\n     * // Curried with placeholders.\n     * curried(3)(1, _)(2);\n     * // => [1, 2, 3]\n     */\n    function curryRight(func, arity, guard) {\n      arity = guard ? undefined : arity;\n      var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n      result.placeholder = curryRight.placeholder;\n      return result;\n    }\n\n    /**\n     * Creates a debounced function that delays invoking `func` until after `wait`\n     * milliseconds have elapsed since the last time the debounced function was\n     * invoked. The debounced function comes with a `cancel` method to cancel\n     * delayed `func` invocations and a `flush` method to immediately invoke them.\n     * Provide `options` to indicate whether `func` should be invoked on the\n     * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n     * with the last arguments provided to the debounced function. Subsequent\n     * calls to the debounced function return the result of the last `func`\n     * invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the debounced function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.debounce` and `_.throttle`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to debounce.\n     * @param {number} [wait=0] The number of milliseconds to delay.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=false]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {number} [options.maxWait]\n     *  The maximum time `func` is allowed to be delayed before it's invoked.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new debounced function.\n     * @example\n     *\n     * // Avoid costly calculations while the window size is in flux.\n     * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n     *\n     * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n     * jQuery(element).on('click', _.debounce(sendMail, 300, {\n     *   'leading': true,\n     *   'trailing': false\n     * }));\n     *\n     * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n     * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n     * var source = new EventSource('/stream');\n     * jQuery(source).on('message', debounced);\n     *\n     * // Cancel the trailing debounced invocation.\n     * jQuery(window).on('popstate', debounced.cancel);\n     */\n    function debounce(func, wait, options) {\n      var lastArgs,\n          lastThis,\n          maxWait,\n          result,\n          timerId,\n          lastCallTime,\n          lastInvokeTime = 0,\n          leading = false,\n          maxing = false,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      wait = toNumber(wait) || 0;\n      if (isObject(options)) {\n        leading = !!options.leading;\n        maxing = 'maxWait' in options;\n        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n\n      function invokeFunc(time) {\n        var args = lastArgs,\n            thisArg = lastThis;\n\n        lastArgs = lastThis = undefined;\n        lastInvokeTime = time;\n        result = func.apply(thisArg, args);\n        return result;\n      }\n\n      function leadingEdge(time) {\n        // Reset any `maxWait` timer.\n        lastInvokeTime = time;\n        // Start the timer for the trailing edge.\n        timerId = setTimeout(timerExpired, wait);\n        // Invoke the leading edge.\n        return leading ? invokeFunc(time) : result;\n      }\n\n      function remainingWait(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime,\n            result = wait - timeSinceLastCall;\n\n        return maxing ? nativeMin(result, maxWait - timeSinceLastInvoke) : result;\n      }\n\n      function shouldInvoke(time) {\n        var timeSinceLastCall = time - lastCallTime,\n            timeSinceLastInvoke = time - lastInvokeTime;\n\n        // Either this is the first call, activity has stopped and we're at the\n        // trailing edge, the system time has gone backwards and we're treating\n        // it as the trailing edge, or we've hit the `maxWait` limit.\n        return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n          (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n      }\n\n      function timerExpired() {\n        var time = now();\n        if (shouldInvoke(time)) {\n          return trailingEdge(time);\n        }\n        // Restart the timer.\n        timerId = setTimeout(timerExpired, remainingWait(time));\n      }\n\n      function trailingEdge(time) {\n        timerId = undefined;\n\n        // Only invoke if we have `lastArgs` which means `func` has been\n        // debounced at least once.\n        if (trailing && lastArgs) {\n          return invokeFunc(time);\n        }\n        lastArgs = lastThis = undefined;\n        return result;\n      }\n\n      function cancel() {\n        if (timerId !== undefined) {\n          clearTimeout(timerId);\n        }\n        lastInvokeTime = 0;\n        lastArgs = lastCallTime = lastThis = timerId = undefined;\n      }\n\n      function flush() {\n        return timerId === undefined ? result : trailingEdge(now());\n      }\n\n      function debounced() {\n        var time = now(),\n            isInvoking = shouldInvoke(time);\n\n        lastArgs = arguments;\n        lastThis = this;\n        lastCallTime = time;\n\n        if (isInvoking) {\n          if (timerId === undefined) {\n            return leadingEdge(lastCallTime);\n          }\n          if (maxing) {\n            // Handle invocations in a tight loop.\n            timerId = setTimeout(timerExpired, wait);\n            return invokeFunc(lastCallTime);\n          }\n        }\n        if (timerId === undefined) {\n          timerId = setTimeout(timerExpired, wait);\n        }\n        return result;\n      }\n      debounced.cancel = cancel;\n      debounced.flush = flush;\n      return debounced;\n    }\n\n    /**\n     * Defers invoking the `func` until the current call stack has cleared. Any\n     * additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to defer.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.defer(function(text) {\n     *   console.log(text);\n     * }, 'deferred');\n     * // => Logs 'deferred' after one millisecond.\n     */\n    var defer = baseRest(function(func, args) {\n      return baseDelay(func, 1, args);\n    });\n\n    /**\n     * Invokes `func` after `wait` milliseconds. Any additional arguments are\n     * provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to delay.\n     * @param {number} wait The number of milliseconds to delay invocation.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {number} Returns the timer id.\n     * @example\n     *\n     * _.delay(function(text) {\n     *   console.log(text);\n     * }, 1000, 'later');\n     * // => Logs 'later' after one second.\n     */\n    var delay = baseRest(function(func, wait, args) {\n      return baseDelay(func, toNumber(wait) || 0, args);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments reversed.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to flip arguments for.\n     * @returns {Function} Returns the new flipped function.\n     * @example\n     *\n     * var flipped = _.flip(function() {\n     *   return _.toArray(arguments);\n     * });\n     *\n     * flipped('a', 'b', 'c', 'd');\n     * // => ['d', 'c', 'b', 'a']\n     */\n    function flip(func) {\n      return createWrap(func, WRAP_FLIP_FLAG);\n    }\n\n    /**\n     * Creates a function that memoizes the result of `func`. If `resolver` is\n     * provided, it determines the cache key for storing the result based on the\n     * arguments provided to the memoized function. By default, the first argument\n     * provided to the memoized function is used as the map cache key. The `func`\n     * is invoked with the `this` binding of the memoized function.\n     *\n     * **Note:** The cache is exposed as the `cache` property on the memoized\n     * function. Its creation may be customized by replacing the `_.memoize.Cache`\n     * constructor with one whose instances implement the\n     * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n     * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to have its output memoized.\n     * @param {Function} [resolver] The function to resolve the cache key.\n     * @returns {Function} Returns the new memoized function.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     * var other = { 'c': 3, 'd': 4 };\n     *\n     * var values = _.memoize(_.values);\n     * values(object);\n     * // => [1, 2]\n     *\n     * values(other);\n     * // => [3, 4]\n     *\n     * object.a = 2;\n     * values(object);\n     * // => [1, 2]\n     *\n     * // Modify the result cache.\n     * values.cache.set(object, ['a', 'b']);\n     * values(object);\n     * // => ['a', 'b']\n     *\n     * // Replace `_.memoize.Cache`.\n     * _.memoize.Cache = WeakMap;\n     */\n    function memoize(func, resolver) {\n      if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      var memoized = function() {\n        var args = arguments,\n            key = resolver ? resolver.apply(this, args) : args[0],\n            cache = memoized.cache;\n\n        if (cache.has(key)) {\n          return cache.get(key);\n        }\n        var result = func.apply(this, args);\n        memoized.cache = cache.set(key, result) || cache;\n        return result;\n      };\n      memoized.cache = new (memoize.Cache || MapCache);\n      return memoized;\n    }\n\n    // Expose `MapCache`.\n    memoize.Cache = MapCache;\n\n    /**\n     * Creates a function that negates the result of the predicate `func`. The\n     * `func` predicate is invoked with the `this` binding and arguments of the\n     * created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} predicate The predicate to negate.\n     * @returns {Function} Returns the new negated function.\n     * @example\n     *\n     * function isEven(n) {\n     *   return n % 2 == 0;\n     * }\n     *\n     * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n     * // => [1, 3, 5]\n     */\n    function negate(predicate) {\n      if (typeof predicate != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      return function() {\n        var args = arguments;\n        switch (args.length) {\n          case 0: return !predicate.call(this);\n          case 1: return !predicate.call(this, args[0]);\n          case 2: return !predicate.call(this, args[0], args[1]);\n          case 3: return !predicate.call(this, args[0], args[1], args[2]);\n        }\n        return !predicate.apply(this, args);\n      };\n    }\n\n    /**\n     * Creates a function that is restricted to invoking `func` once. Repeat calls\n     * to the function return the value of the first invocation. The `func` is\n     * invoked with the `this` binding and arguments of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to restrict.\n     * @returns {Function} Returns the new restricted function.\n     * @example\n     *\n     * var initialize = _.once(createApplication);\n     * initialize();\n     * initialize();\n     * // => `createApplication` is invoked once\n     */\n    function once(func) {\n      return before(2, func);\n    }\n\n    /**\n     * Creates a function that invokes `func` with its arguments transformed.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Function\n     * @param {Function} func The function to wrap.\n     * @param {...(Function|Function[])} [transforms=[_.identity]]\n     *  The argument transforms.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * function doubled(n) {\n     *   return n * 2;\n     * }\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var func = _.overArgs(function(x, y) {\n     *   return [x, y];\n     * }, [square, doubled]);\n     *\n     * func(9, 3);\n     * // => [81, 6]\n     *\n     * func(10, 5);\n     * // => [100, 10]\n     */\n    var overArgs = castRest(function(func, transforms) {\n      transforms = (transforms.length == 1 && isArray(transforms[0]))\n        ? arrayMap(transforms[0], baseUnary(getIteratee()))\n        : arrayMap(baseFlatten(transforms, 1), baseUnary(getIteratee()));\n\n      var funcsLength = transforms.length;\n      return baseRest(function(args) {\n        var index = -1,\n            length = nativeMin(args.length, funcsLength);\n\n        while (++index < length) {\n          args[index] = transforms[index].call(this, args[index]);\n        }\n        return apply(func, this, args);\n      });\n    });\n\n    /**\n     * Creates a function that invokes `func` with `partials` prepended to the\n     * arguments it receives. This method is like `_.bind` except it does **not**\n     * alter the `this` binding.\n     *\n     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.2.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var sayHelloTo = _.partial(greet, 'hello');\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     *\n     * // Partially applied with placeholders.\n     * var greetFred = _.partial(greet, _, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     */\n    var partial = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partial));\n      return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * This method is like `_.partial` except that partially applied arguments\n     * are appended to the arguments it receives.\n     *\n     * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n     * builds, may be used as a placeholder for partially applied arguments.\n     *\n     * **Note:** This method doesn't set the \"length\" property of partially\n     * applied functions.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Function\n     * @param {Function} func The function to partially apply arguments to.\n     * @param {...*} [partials] The arguments to be partially applied.\n     * @returns {Function} Returns the new partially applied function.\n     * @example\n     *\n     * function greet(greeting, name) {\n     *   return greeting + ' ' + name;\n     * }\n     *\n     * var greetFred = _.partialRight(greet, 'fred');\n     * greetFred('hi');\n     * // => 'hi fred'\n     *\n     * // Partially applied with placeholders.\n     * var sayHelloTo = _.partialRight(greet, 'hello', _);\n     * sayHelloTo('fred');\n     * // => 'hello fred'\n     */\n    var partialRight = baseRest(function(func, partials) {\n      var holders = replaceHolders(partials, getHolder(partialRight));\n      return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n    });\n\n    /**\n     * Creates a function that invokes `func` with arguments arranged according\n     * to the specified `indexes` where the argument value at the first index is\n     * provided as the first argument, the argument value at the second index is\n     * provided as the second argument, and so on.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Function\n     * @param {Function} func The function to rearrange arguments for.\n     * @param {...(number|number[])} indexes The arranged argument indexes.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var rearged = _.rearg(function(a, b, c) {\n     *   return [a, b, c];\n     * }, [2, 0, 1]);\n     *\n     * rearged('b', 'c', 'a')\n     * // => ['a', 'b', 'c']\n     */\n    var rearg = flatRest(function(func, indexes) {\n      return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n    });\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * created function and arguments from `start` and beyond provided as\n     * an array.\n     *\n     * **Note:** This method is based on the\n     * [rest parameter](https://mdn.io/rest_parameters).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to apply a rest parameter to.\n     * @param {number} [start=func.length-1] The start position of the rest parameter.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.rest(function(what, names) {\n     *   return what + ' ' + _.initial(names).join(', ') +\n     *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n     * });\n     *\n     * say('hello', 'fred', 'barney', 'pebbles');\n     * // => 'hello fred, barney, & pebbles'\n     */\n    function rest(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start === undefined ? start : toInteger(start);\n      return baseRest(func, start);\n    }\n\n    /**\n     * Creates a function that invokes `func` with the `this` binding of the\n     * create function and an array of arguments much like\n     * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n     *\n     * **Note:** This method is based on the\n     * [spread operator](https://mdn.io/spread_operator).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Function\n     * @param {Function} func The function to spread arguments over.\n     * @param {number} [start=0] The start position of the spread.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var say = _.spread(function(who, what) {\n     *   return who + ' says ' + what;\n     * });\n     *\n     * say(['fred', 'hello']);\n     * // => 'fred says hello'\n     *\n     * var numbers = Promise.all([\n     *   Promise.resolve(40),\n     *   Promise.resolve(36)\n     * ]);\n     *\n     * numbers.then(_.spread(function(x, y) {\n     *   return x + y;\n     * }));\n     * // => a Promise of 76\n     */\n    function spread(func, start) {\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      start = start == null ? 0 : nativeMax(toInteger(start), 0);\n      return baseRest(function(args) {\n        var array = args[start],\n            otherArgs = castSlice(args, 0, start);\n\n        if (array) {\n          arrayPush(otherArgs, array);\n        }\n        return apply(func, this, otherArgs);\n      });\n    }\n\n    /**\n     * Creates a throttled function that only invokes `func` at most once per\n     * every `wait` milliseconds. The throttled function comes with a `cancel`\n     * method to cancel delayed `func` invocations and a `flush` method to\n     * immediately invoke them. Provide `options` to indicate whether `func`\n     * should be invoked on the leading and/or trailing edge of the `wait`\n     * timeout. The `func` is invoked with the last arguments provided to the\n     * throttled function. Subsequent calls to the throttled function return the\n     * result of the last `func` invocation.\n     *\n     * **Note:** If `leading` and `trailing` options are `true`, `func` is\n     * invoked on the trailing edge of the timeout only if the throttled function\n     * is invoked more than once during the `wait` timeout.\n     *\n     * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n     * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n     *\n     * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n     * for details over the differences between `_.throttle` and `_.debounce`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {Function} func The function to throttle.\n     * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.leading=true]\n     *  Specify invoking on the leading edge of the timeout.\n     * @param {boolean} [options.trailing=true]\n     *  Specify invoking on the trailing edge of the timeout.\n     * @returns {Function} Returns the new throttled function.\n     * @example\n     *\n     * // Avoid excessively updating the position while scrolling.\n     * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n     *\n     * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n     * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n     * jQuery(element).on('click', throttled);\n     *\n     * // Cancel the trailing throttled invocation.\n     * jQuery(window).on('popstate', throttled.cancel);\n     */\n    function throttle(func, wait, options) {\n      var leading = true,\n          trailing = true;\n\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (isObject(options)) {\n        leading = 'leading' in options ? !!options.leading : leading;\n        trailing = 'trailing' in options ? !!options.trailing : trailing;\n      }\n      return debounce(func, wait, {\n        'leading': leading,\n        'maxWait': wait,\n        'trailing': trailing\n      });\n    }\n\n    /**\n     * Creates a function that accepts up to one argument, ignoring any\n     * additional arguments.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Function\n     * @param {Function} func The function to cap arguments for.\n     * @returns {Function} Returns the new capped function.\n     * @example\n     *\n     * _.map(['6', '8', '10'], _.unary(parseInt));\n     * // => [6, 8, 10]\n     */\n    function unary(func) {\n      return ary(func, 1);\n    }\n\n    /**\n     * Creates a function that provides `value` to `wrapper` as its first\n     * argument. Any additional arguments provided to the function are appended\n     * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n     * binding of the created function.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Function\n     * @param {*} value The value to wrap.\n     * @param {Function} [wrapper=identity] The wrapper function.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var p = _.wrap(_.escape, function(func, text) {\n     *   return '<p>' + func(text) + '</p>';\n     * });\n     *\n     * p('fred, barney, & pebbles');\n     * // => '<p>fred, barney, &amp; pebbles</p>'\n     */\n    function wrap(value, wrapper) {\n      return partial(castFunction(wrapper), value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Casts `value` as an array if it's not one.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.4.0\n     * @category Lang\n     * @param {*} value The value to inspect.\n     * @returns {Array} Returns the cast array.\n     * @example\n     *\n     * _.castArray(1);\n     * // => [1]\n     *\n     * _.castArray({ 'a': 1 });\n     * // => [{ 'a': 1 }]\n     *\n     * _.castArray('abc');\n     * // => ['abc']\n     *\n     * _.castArray(null);\n     * // => [null]\n     *\n     * _.castArray(undefined);\n     * // => [undefined]\n     *\n     * _.castArray();\n     * // => []\n     *\n     * var array = [1, 2, 3];\n     * console.log(_.castArray(array) === array);\n     * // => true\n     */\n    function castArray() {\n      if (!arguments.length) {\n        return [];\n      }\n      var value = arguments[0];\n      return isArray(value) ? value : [value];\n    }\n\n    /**\n     * Creates a shallow clone of `value`.\n     *\n     * **Note:** This method is loosely based on the\n     * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n     * and supports cloning arrays, array buffers, booleans, date objects, maps,\n     * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n     * arrays. The own enumerable properties of `arguments` objects are cloned\n     * as plain objects. An empty object is returned for uncloneable values such\n     * as error objects, functions, DOM nodes, and WeakMaps.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeep\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var shallow = _.clone(objects);\n     * console.log(shallow[0] === objects[0]);\n     * // => true\n     */\n    function clone(value) {\n      return baseClone(value, CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.clone` except that it accepts `customizer` which\n     * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n     * cloning is handled by the method instead. The `customizer` is invoked with\n     * up to four arguments; (value [, index|key, object, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the cloned value.\n     * @see _.cloneDeepWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(false);\n     *   }\n     * }\n     *\n     * var el = _.cloneWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 0\n     */\n    function cloneWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * This method is like `_.clone` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.clone\n     * @example\n     *\n     * var objects = [{ 'a': 1 }, { 'b': 2 }];\n     *\n     * var deep = _.cloneDeep(objects);\n     * console.log(deep[0] === objects[0]);\n     * // => false\n     */\n    function cloneDeep(value) {\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n    }\n\n    /**\n     * This method is like `_.cloneWith` except that it recursively clones `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to recursively clone.\n     * @param {Function} [customizer] The function to customize cloning.\n     * @returns {*} Returns the deep cloned value.\n     * @see _.cloneWith\n     * @example\n     *\n     * function customizer(value) {\n     *   if (_.isElement(value)) {\n     *     return value.cloneNode(true);\n     *   }\n     * }\n     *\n     * var el = _.cloneDeepWith(document.body, customizer);\n     *\n     * console.log(el === document.body);\n     * // => false\n     * console.log(el.nodeName);\n     * // => 'BODY'\n     * console.log(el.childNodes.length);\n     * // => 20\n     */\n    function cloneDeepWith(value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n    }\n\n    /**\n     * Checks if `object` conforms to `source` by invoking the predicate\n     * properties of `source` with the corresponding property values of `object`.\n     *\n     * **Note:** This method is equivalent to `_.conforms` when `source` is\n     * partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n     * // => true\n     *\n     * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n     * // => false\n     */\n    function conformsTo(object, source) {\n      return source == null || baseConformsTo(object, source, keys(source));\n    }\n\n    /**\n     * Performs a\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n     * comparison between two values to determine if they are equivalent.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.eq(object, object);\n     * // => true\n     *\n     * _.eq(object, other);\n     * // => false\n     *\n     * _.eq('a', 'a');\n     * // => true\n     *\n     * _.eq('a', Object('a'));\n     * // => false\n     *\n     * _.eq(NaN, NaN);\n     * // => true\n     */\n    function eq(value, other) {\n      return value === other || (value !== value && other !== other);\n    }\n\n    /**\n     * Checks if `value` is greater than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than `other`,\n     *  else `false`.\n     * @see _.lt\n     * @example\n     *\n     * _.gt(3, 1);\n     * // => true\n     *\n     * _.gt(3, 3);\n     * // => false\n     *\n     * _.gt(1, 3);\n     * // => false\n     */\n    var gt = createRelationalOperation(baseGt);\n\n    /**\n     * Checks if `value` is greater than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is greater than or equal to\n     *  `other`, else `false`.\n     * @see _.lte\n     * @example\n     *\n     * _.gte(3, 1);\n     * // => true\n     *\n     * _.gte(3, 3);\n     * // => true\n     *\n     * _.gte(1, 3);\n     * // => false\n     */\n    var gte = createRelationalOperation(function(value, other) {\n      return value >= other;\n    });\n\n    /**\n     * Checks if `value` is likely an `arguments` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArguments(function() { return arguments; }());\n     * // => true\n     *\n     * _.isArguments([1, 2, 3]);\n     * // => false\n     */\n    var isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n      return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n        !propertyIsEnumerable.call(value, 'callee');\n    };\n\n    /**\n     * Checks if `value` is classified as an `Array` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n     * @example\n     *\n     * _.isArray([1, 2, 3]);\n     * // => true\n     *\n     * _.isArray(document.body.children);\n     * // => false\n     *\n     * _.isArray('abc');\n     * // => false\n     *\n     * _.isArray(_.noop);\n     * // => false\n     */\n    var isArray = Array.isArray;\n\n    /**\n     * Checks if `value` is classified as an `ArrayBuffer` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n     * @example\n     *\n     * _.isArrayBuffer(new ArrayBuffer(2));\n     * // => true\n     *\n     * _.isArrayBuffer(new Array(2));\n     * // => false\n     */\n    var isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\n    /**\n     * Checks if `value` is array-like. A value is considered array-like if it's\n     * not a function and has a `value.length` that's an integer greater than or\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n     * @example\n     *\n     * _.isArrayLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLike(document.body.children);\n     * // => true\n     *\n     * _.isArrayLike('abc');\n     * // => true\n     *\n     * _.isArrayLike(_.noop);\n     * // => false\n     */\n    function isArrayLike(value) {\n      return value != null && isLength(value.length) && !isFunction(value);\n    }\n\n    /**\n     * This method is like `_.isArrayLike` except that it also checks if `value`\n     * is an object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an array-like object,\n     *  else `false`.\n     * @example\n     *\n     * _.isArrayLikeObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isArrayLikeObject(document.body.children);\n     * // => true\n     *\n     * _.isArrayLikeObject('abc');\n     * // => false\n     *\n     * _.isArrayLikeObject(_.noop);\n     * // => false\n     */\n    function isArrayLikeObject(value) {\n      return isObjectLike(value) && isArrayLike(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a boolean primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n     * @example\n     *\n     * _.isBoolean(false);\n     * // => true\n     *\n     * _.isBoolean(null);\n     * // => false\n     */\n    function isBoolean(value) {\n      return value === true || value === false ||\n        (isObjectLike(value) && baseGetTag(value) == boolTag);\n    }\n\n    /**\n     * Checks if `value` is a buffer.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n     * @example\n     *\n     * _.isBuffer(new Buffer(2));\n     * // => true\n     *\n     * _.isBuffer(new Uint8Array(2));\n     * // => false\n     */\n    var isBuffer = nativeIsBuffer || stubFalse;\n\n    /**\n     * Checks if `value` is classified as a `Date` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n     * @example\n     *\n     * _.isDate(new Date);\n     * // => true\n     *\n     * _.isDate('Mon April 23 2012');\n     * // => false\n     */\n    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\n    /**\n     * Checks if `value` is likely a DOM element.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n     * @example\n     *\n     * _.isElement(document.body);\n     * // => true\n     *\n     * _.isElement('<body>');\n     * // => false\n     */\n    function isElement(value) {\n      return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n    }\n\n    /**\n     * Checks if `value` is an empty object, collection, map, or set.\n     *\n     * Objects are considered empty if they have no own enumerable string keyed\n     * properties.\n     *\n     * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n     * jQuery-like collections are considered empty if they have a `length` of `0`.\n     * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n     * @example\n     *\n     * _.isEmpty(null);\n     * // => true\n     *\n     * _.isEmpty(true);\n     * // => true\n     *\n     * _.isEmpty(1);\n     * // => true\n     *\n     * _.isEmpty([1, 2, 3]);\n     * // => false\n     *\n     * _.isEmpty({ 'a': 1 });\n     * // => false\n     */\n    function isEmpty(value) {\n      if (value == null) {\n        return true;\n      }\n      if (isArrayLike(value) &&\n          (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n            isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n        return !value.length;\n      }\n      var tag = getTag(value);\n      if (tag == mapTag || tag == setTag) {\n        return !value.size;\n      }\n      if (isPrototype(value)) {\n        return !baseKeys(value).length;\n      }\n      for (var key in value) {\n        if (hasOwnProperty.call(value, key)) {\n          return false;\n        }\n      }\n      return true;\n    }\n\n    /**\n     * Performs a deep comparison between two values to determine if they are\n     * equivalent.\n     *\n     * **Note:** This method supports comparing arrays, array buffers, booleans,\n     * date objects, error objects, maps, numbers, `Object` objects, regexes,\n     * sets, strings, symbols, and typed arrays. `Object` objects are compared\n     * by their own, not inherited, enumerable properties. Functions and DOM\n     * nodes are compared by strict equality, i.e. `===`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     * var other = { 'a': 1 };\n     *\n     * _.isEqual(object, other);\n     * // => true\n     *\n     * object === other;\n     * // => false\n     */\n    function isEqual(value, other) {\n      return baseIsEqual(value, other);\n    }\n\n    /**\n     * This method is like `_.isEqual` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with up to\n     * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, othValue) {\n     *   if (isGreeting(objValue) && isGreeting(othValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var array = ['hello', 'goodbye'];\n     * var other = ['hi', 'goodbye'];\n     *\n     * _.isEqualWith(array, other, customizer);\n     * // => true\n     */\n    function isEqualWith(value, other, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      var result = customizer ? customizer(value, other) : undefined;\n      return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n    }\n\n    /**\n     * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n     * `SyntaxError`, `TypeError`, or `URIError` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n     * @example\n     *\n     * _.isError(new Error);\n     * // => true\n     *\n     * _.isError(Error);\n     * // => false\n     */\n    function isError(value) {\n      if (!isObjectLike(value)) {\n        return false;\n      }\n      var tag = baseGetTag(value);\n      return tag == errorTag || tag == domExcTag ||\n        (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n    }\n\n    /**\n     * Checks if `value` is a finite primitive number.\n     *\n     * **Note:** This method is based on\n     * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n     * @example\n     *\n     * _.isFinite(3);\n     * // => true\n     *\n     * _.isFinite(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isFinite(Infinity);\n     * // => false\n     *\n     * _.isFinite('3');\n     * // => false\n     */\n    function isFinite(value) {\n      return typeof value == 'number' && nativeIsFinite(value);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Function` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n     * @example\n     *\n     * _.isFunction(_);\n     * // => true\n     *\n     * _.isFunction(/abc/);\n     * // => false\n     */\n    function isFunction(value) {\n      if (!isObject(value)) {\n        return false;\n      }\n      // The use of `Object#toString` avoids issues with the `typeof` operator\n      // in Safari 9 which returns 'object' for typed arrays and other constructors.\n      var tag = baseGetTag(value);\n      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n    }\n\n    /**\n     * Checks if `value` is an integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n     * @example\n     *\n     * _.isInteger(3);\n     * // => true\n     *\n     * _.isInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isInteger(Infinity);\n     * // => false\n     *\n     * _.isInteger('3');\n     * // => false\n     */\n    function isInteger(value) {\n      return typeof value == 'number' && value == toInteger(value);\n    }\n\n    /**\n     * Checks if `value` is a valid array-like length.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n     * @example\n     *\n     * _.isLength(3);\n     * // => true\n     *\n     * _.isLength(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isLength(Infinity);\n     * // => false\n     *\n     * _.isLength('3');\n     * // => false\n     */\n    function isLength(value) {\n      return typeof value == 'number' &&\n        value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is the\n     * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n     * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n     * @example\n     *\n     * _.isObject({});\n     * // => true\n     *\n     * _.isObject([1, 2, 3]);\n     * // => true\n     *\n     * _.isObject(_.noop);\n     * // => true\n     *\n     * _.isObject(null);\n     * // => false\n     */\n    function isObject(value) {\n      var type = typeof value;\n      return value != null && (type == 'object' || type == 'function');\n    }\n\n    /**\n     * Checks if `value` is object-like. A value is object-like if it's not `null`\n     * and has a `typeof` result of \"object\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n     * @example\n     *\n     * _.isObjectLike({});\n     * // => true\n     *\n     * _.isObjectLike([1, 2, 3]);\n     * // => true\n     *\n     * _.isObjectLike(_.noop);\n     * // => false\n     *\n     * _.isObjectLike(null);\n     * // => false\n     */\n    function isObjectLike(value) {\n      return value != null && typeof value == 'object';\n    }\n\n    /**\n     * Checks if `value` is classified as a `Map` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n     * @example\n     *\n     * _.isMap(new Map);\n     * // => true\n     *\n     * _.isMap(new WeakMap);\n     * // => false\n     */\n    var isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\n    /**\n     * Performs a partial deep comparison between `object` and `source` to\n     * determine if `object` contains equivalent property values.\n     *\n     * **Note:** This method is equivalent to `_.matches` when `source` is\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2 };\n     *\n     * _.isMatch(object, { 'b': 2 });\n     * // => true\n     *\n     * _.isMatch(object, { 'b': 1 });\n     * // => false\n     */\n    function isMatch(object, source) {\n      return object === source || baseIsMatch(object, source, getMatchData(source));\n    }\n\n    /**\n     * This method is like `_.isMatch` except that it accepts `customizer` which\n     * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n     * are handled by the method instead. The `customizer` is invoked with five\n     * arguments: (objValue, srcValue, index|key, object, source).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {Object} object The object to inspect.\n     * @param {Object} source The object of property values to match.\n     * @param {Function} [customizer] The function to customize comparisons.\n     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n     * @example\n     *\n     * function isGreeting(value) {\n     *   return /^h(?:i|ello)$/.test(value);\n     * }\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n     *     return true;\n     *   }\n     * }\n     *\n     * var object = { 'greeting': 'hello' };\n     * var source = { 'greeting': 'hi' };\n     *\n     * _.isMatchWith(object, source, customizer);\n     * // => true\n     */\n    function isMatchWith(object, source, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return baseIsMatch(object, source, getMatchData(source), customizer);\n    }\n\n    /**\n     * Checks if `value` is `NaN`.\n     *\n     * **Note:** This method is based on\n     * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n     * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n     * `undefined` and other non-number values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n     * @example\n     *\n     * _.isNaN(NaN);\n     * // => true\n     *\n     * _.isNaN(new Number(NaN));\n     * // => true\n     *\n     * isNaN(undefined);\n     * // => true\n     *\n     * _.isNaN(undefined);\n     * // => false\n     */\n    function isNaN(value) {\n      // An `NaN` primitive is the only value that is not equal to itself.\n      // Perform the `toStringTag` check first to avoid errors with some\n      // ActiveX objects in IE.\n      return isNumber(value) && value != +value;\n    }\n\n    /**\n     * Checks if `value` is a pristine native function.\n     *\n     * **Note:** This method can't reliably detect native functions in the presence\n     * of the core-js package because core-js circumvents this kind of detection.\n     * Despite multiple requests, the core-js maintainer has made it clear: any\n     * attempt to fix the detection will be obstructed. As a result, we're left\n     * with little choice but to throw an error. Unfortunately, this also affects\n     * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n     * which rely on core-js.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a native function,\n     *  else `false`.\n     * @example\n     *\n     * _.isNative(Array.prototype.push);\n     * // => true\n     *\n     * _.isNative(_);\n     * // => false\n     */\n    function isNative(value) {\n      if (isMaskable(value)) {\n        throw new Error(CORE_ERROR_TEXT);\n      }\n      return baseIsNative(value);\n    }\n\n    /**\n     * Checks if `value` is `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n     * @example\n     *\n     * _.isNull(null);\n     * // => true\n     *\n     * _.isNull(void 0);\n     * // => false\n     */\n    function isNull(value) {\n      return value === null;\n    }\n\n    /**\n     * Checks if `value` is `null` or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n     * @example\n     *\n     * _.isNil(null);\n     * // => true\n     *\n     * _.isNil(void 0);\n     * // => true\n     *\n     * _.isNil(NaN);\n     * // => false\n     */\n    function isNil(value) {\n      return value == null;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Number` primitive or object.\n     *\n     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n     * classified as numbers, use the `_.isFinite` method.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n     * @example\n     *\n     * _.isNumber(3);\n     * // => true\n     *\n     * _.isNumber(Number.MIN_VALUE);\n     * // => true\n     *\n     * _.isNumber(Infinity);\n     * // => true\n     *\n     * _.isNumber('3');\n     * // => false\n     */\n    function isNumber(value) {\n      return typeof value == 'number' ||\n        (isObjectLike(value) && baseGetTag(value) == numberTag);\n    }\n\n    /**\n     * Checks if `value` is a plain object, that is, an object created by the\n     * `Object` constructor or one with a `[[Prototype]]` of `null`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.8.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * _.isPlainObject(new Foo);\n     * // => false\n     *\n     * _.isPlainObject([1, 2, 3]);\n     * // => false\n     *\n     * _.isPlainObject({ 'x': 0, 'y': 0 });\n     * // => true\n     *\n     * _.isPlainObject(Object.create(null));\n     * // => true\n     */\n    function isPlainObject(value) {\n      if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n        return false;\n      }\n      var proto = getPrototype(value);\n      if (proto === null) {\n        return true;\n      }\n      var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n      return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n        funcToString.call(Ctor) == objectCtorString;\n    }\n\n    /**\n     * Checks if `value` is classified as a `RegExp` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.1.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n     * @example\n     *\n     * _.isRegExp(/abc/);\n     * // => true\n     *\n     * _.isRegExp('/abc/');\n     * // => false\n     */\n    var isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\n    /**\n     * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n     * double precision number which isn't the result of a rounded unsafe integer.\n     *\n     * **Note:** This method is based on\n     * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n     * @example\n     *\n     * _.isSafeInteger(3);\n     * // => true\n     *\n     * _.isSafeInteger(Number.MIN_VALUE);\n     * // => false\n     *\n     * _.isSafeInteger(Infinity);\n     * // => false\n     *\n     * _.isSafeInteger('3');\n     * // => false\n     */\n    function isSafeInteger(value) {\n      return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n    }\n\n    /**\n     * Checks if `value` is classified as a `Set` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n     * @example\n     *\n     * _.isSet(new Set);\n     * // => true\n     *\n     * _.isSet(new WeakSet);\n     * // => false\n     */\n    var isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\n    /**\n     * Checks if `value` is classified as a `String` primitive or object.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n     * @example\n     *\n     * _.isString('abc');\n     * // => true\n     *\n     * _.isString(1);\n     * // => false\n     */\n    function isString(value) {\n      return typeof value == 'string' ||\n        (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a `Symbol` primitive or object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n     * @example\n     *\n     * _.isSymbol(Symbol.iterator);\n     * // => true\n     *\n     * _.isSymbol('abc');\n     * // => false\n     */\n    function isSymbol(value) {\n      return typeof value == 'symbol' ||\n        (isObjectLike(value) && baseGetTag(value) == symbolTag);\n    }\n\n    /**\n     * Checks if `value` is classified as a typed array.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n     * @example\n     *\n     * _.isTypedArray(new Uint8Array);\n     * // => true\n     *\n     * _.isTypedArray([]);\n     * // => false\n     */\n    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\n    /**\n     * Checks if `value` is `undefined`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n     * @example\n     *\n     * _.isUndefined(void 0);\n     * // => true\n     *\n     * _.isUndefined(null);\n     * // => false\n     */\n    function isUndefined(value) {\n      return value === undefined;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakMap` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n     * @example\n     *\n     * _.isWeakMap(new WeakMap);\n     * // => true\n     *\n     * _.isWeakMap(new Map);\n     * // => false\n     */\n    function isWeakMap(value) {\n      return isObjectLike(value) && getTag(value) == weakMapTag;\n    }\n\n    /**\n     * Checks if `value` is classified as a `WeakSet` object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.3.0\n     * @category Lang\n     * @param {*} value The value to check.\n     * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n     * @example\n     *\n     * _.isWeakSet(new WeakSet);\n     * // => true\n     *\n     * _.isWeakSet(new Set);\n     * // => false\n     */\n    function isWeakSet(value) {\n      return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n    }\n\n    /**\n     * Checks if `value` is less than `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than `other`,\n     *  else `false`.\n     * @see _.gt\n     * @example\n     *\n     * _.lt(1, 3);\n     * // => true\n     *\n     * _.lt(3, 3);\n     * // => false\n     *\n     * _.lt(3, 1);\n     * // => false\n     */\n    var lt = createRelationalOperation(baseLt);\n\n    /**\n     * Checks if `value` is less than or equal to `other`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.9.0\n     * @category Lang\n     * @param {*} value The value to compare.\n     * @param {*} other The other value to compare.\n     * @returns {boolean} Returns `true` if `value` is less than or equal to\n     *  `other`, else `false`.\n     * @see _.gte\n     * @example\n     *\n     * _.lte(1, 3);\n     * // => true\n     *\n     * _.lte(3, 3);\n     * // => true\n     *\n     * _.lte(3, 1);\n     * // => false\n     */\n    var lte = createRelationalOperation(function(value, other) {\n      return value <= other;\n    });\n\n    /**\n     * Converts `value` to an array.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the converted array.\n     * @example\n     *\n     * _.toArray({ 'a': 1, 'b': 2 });\n     * // => [1, 2]\n     *\n     * _.toArray('abc');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toArray(1);\n     * // => []\n     *\n     * _.toArray(null);\n     * // => []\n     */\n    function toArray(value) {\n      if (!value) {\n        return [];\n      }\n      if (isArrayLike(value)) {\n        return isString(value) ? stringToArray(value) : copyArray(value);\n      }\n      if (symIterator && value[symIterator]) {\n        return iteratorToArray(value[symIterator]());\n      }\n      var tag = getTag(value),\n          func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n      return func(value);\n    }\n\n    /**\n     * Converts `value` to a finite number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.12.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted number.\n     * @example\n     *\n     * _.toFinite(3.2);\n     * // => 3.2\n     *\n     * _.toFinite(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toFinite(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toFinite('3.2');\n     * // => 3.2\n     */\n    function toFinite(value) {\n      if (!value) {\n        return value === 0 ? value : 0;\n      }\n      value = toNumber(value);\n      if (value === INFINITY || value === -INFINITY) {\n        var sign = (value < 0 ? -1 : 1);\n        return sign * MAX_INTEGER;\n      }\n      return value === value ? value : 0;\n    }\n\n    /**\n     * Converts `value` to an integer.\n     *\n     * **Note:** This method is loosely based on\n     * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toInteger(3.2);\n     * // => 3\n     *\n     * _.toInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toInteger(Infinity);\n     * // => 1.7976931348623157e+308\n     *\n     * _.toInteger('3.2');\n     * // => 3\n     */\n    function toInteger(value) {\n      var result = toFinite(value),\n          remainder = result % 1;\n\n      return result === result ? (remainder ? result - remainder : result) : 0;\n    }\n\n    /**\n     * Converts `value` to an integer suitable for use as the length of an\n     * array-like object.\n     *\n     * **Note:** This method is based on\n     * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toLength(3.2);\n     * // => 3\n     *\n     * _.toLength(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toLength(Infinity);\n     * // => 4294967295\n     *\n     * _.toLength('3.2');\n     * // => 3\n     */\n    function toLength(value) {\n      return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n    }\n\n    /**\n     * Converts `value` to a number.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to process.\n     * @returns {number} Returns the number.\n     * @example\n     *\n     * _.toNumber(3.2);\n     * // => 3.2\n     *\n     * _.toNumber(Number.MIN_VALUE);\n     * // => 5e-324\n     *\n     * _.toNumber(Infinity);\n     * // => Infinity\n     *\n     * _.toNumber('3.2');\n     * // => 3.2\n     */\n    function toNumber(value) {\n      if (typeof value == 'number') {\n        return value;\n      }\n      if (isSymbol(value)) {\n        return NAN;\n      }\n      if (isObject(value)) {\n        var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n        value = isObject(other) ? (other + '') : other;\n      }\n      if (typeof value != 'string') {\n        return value === 0 ? value : +value;\n      }\n      value = value.replace(reTrim, '');\n      var isBinary = reIsBinary.test(value);\n      return (isBinary || reIsOctal.test(value))\n        ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n        : (reIsBadHex.test(value) ? NAN : +value);\n    }\n\n    /**\n     * Converts `value` to a plain object flattening inherited enumerable string\n     * keyed properties of `value` to own properties of the plain object.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {Object} Returns the converted plain object.\n     * @example\n     *\n     * function Foo() {\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.assign({ 'a': 1 }, new Foo);\n     * // => { 'a': 1, 'b': 2 }\n     *\n     * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n     * // => { 'a': 1, 'b': 2, 'c': 3 }\n     */\n    function toPlainObject(value) {\n      return copyObject(value, keysIn(value));\n    }\n\n    /**\n     * Converts `value` to a safe integer. A safe integer can be compared and\n     * represented correctly.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.toSafeInteger(3.2);\n     * // => 3\n     *\n     * _.toSafeInteger(Number.MIN_VALUE);\n     * // => 0\n     *\n     * _.toSafeInteger(Infinity);\n     * // => 9007199254740991\n     *\n     * _.toSafeInteger('3.2');\n     * // => 3\n     */\n    function toSafeInteger(value) {\n      return value\n        ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n        : (value === 0 ? value : 0);\n    }\n\n    /**\n     * Converts `value` to a string. An empty string is returned for `null`\n     * and `undefined` values. The sign of `-0` is preserved.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Lang\n     * @param {*} value The value to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.toString(null);\n     * // => ''\n     *\n     * _.toString(-0);\n     * // => '-0'\n     *\n     * _.toString([1, 2, 3]);\n     * // => '1,2,3'\n     */\n    function toString(value) {\n      return value == null ? '' : baseToString(value);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Assigns own enumerable string keyed properties of source objects to the\n     * destination object. Source objects are applied from left to right.\n     * Subsequent sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object` and is loosely based on\n     * [`Object.assign`](https://mdn.io/Object/assign).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assignIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assign({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var assign = createAssigner(function(object, source) {\n      if (isPrototype(source) || isArrayLike(source)) {\n        copyObject(source, keys(source), object);\n        return;\n      }\n      for (var key in source) {\n        if (hasOwnProperty.call(source, key)) {\n          assignValue(object, key, source[key]);\n        }\n      }\n    });\n\n    /**\n     * This method is like `_.assign` except that it iterates over own and\n     * inherited source properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extend\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.assign\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     * }\n     *\n     * function Bar() {\n     *   this.c = 3;\n     * }\n     *\n     * Foo.prototype.b = 2;\n     * Bar.prototype.d = 4;\n     *\n     * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n     * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n     */\n    var assignIn = createAssigner(function(object, source) {\n      copyObject(source, keysIn(source), object);\n    });\n\n    /**\n     * This method is like `_.assignIn` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias extendWith\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignInWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keysIn(source), object, customizer);\n    });\n\n    /**\n     * This method is like `_.assign` except that it accepts `customizer`\n     * which is invoked to produce the assigned values. If `customizer` returns\n     * `undefined`, assignment is handled by the method instead. The `customizer`\n     * is invoked with five arguments: (objValue, srcValue, key, object, source).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @see _.assignInWith\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   return _.isUndefined(objValue) ? srcValue : objValue;\n     * }\n     *\n     * var defaults = _.partialRight(_.assignWith, customizer);\n     *\n     * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n      copyObject(source, keys(source), object, customizer);\n    });\n\n    /**\n     * Creates an array of values corresponding to `paths` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Array} Returns the picked values.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n     *\n     * _.at(object, ['a[0].b.c', 'a[1]']);\n     * // => [3, 4]\n     */\n    var at = flatRest(baseAt);\n\n    /**\n     * Creates an object that inherits from the `prototype` object. If a\n     * `properties` object is given, its own enumerable string keyed properties\n     * are assigned to the created object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Object\n     * @param {Object} prototype The object to inherit from.\n     * @param {Object} [properties] The properties to assign to the object.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * function Shape() {\n     *   this.x = 0;\n     *   this.y = 0;\n     * }\n     *\n     * function Circle() {\n     *   Shape.call(this);\n     * }\n     *\n     * Circle.prototype = _.create(Shape.prototype, {\n     *   'constructor': Circle\n     * });\n     *\n     * var circle = new Circle;\n     * circle instanceof Circle;\n     * // => true\n     *\n     * circle instanceof Shape;\n     * // => true\n     */\n    function create(prototype, properties) {\n      var result = baseCreate(prototype);\n      return properties == null ? result : baseAssign(result, properties);\n    }\n\n    /**\n     * Assigns own and inherited enumerable string keyed properties of source\n     * objects to the destination object for all destination properties that\n     * resolve to `undefined`. Source objects are applied from left to right.\n     * Once a property is set, additional values of the same property are ignored.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaultsDeep\n     * @example\n     *\n     * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n     * // => { 'a': 1, 'b': 2 }\n     */\n    var defaults = baseRest(function(args) {\n      args.push(undefined, customDefaultsAssignIn);\n      return apply(assignInWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.defaults` except that it recursively assigns\n     * default properties.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @see _.defaults\n     * @example\n     *\n     * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n     * // => { 'a': { 'b': 2, 'c': 3 } }\n     */\n    var defaultsDeep = baseRest(function(args) {\n      args.push(undefined, customDefaultsMerge);\n      return apply(mergeWith, undefined, args);\n    });\n\n    /**\n     * This method is like `_.find` except that it returns the key of the first\n     * element `predicate` returns truthy for instead of the element itself.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findKey(users, function(o) { return o.age < 40; });\n     * // => 'barney' (iteration order is not guaranteed)\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findKey(users, { 'age': 1, 'active': true });\n     * // => 'pebbles'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findKey(users, 'active');\n     * // => 'barney'\n     */\n    function findKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwn);\n    }\n\n    /**\n     * This method is like `_.findKey` except that it iterates over elements of\n     * a collection in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @param {Function} [predicate=_.identity] The function invoked per iteration.\n     * @returns {string|undefined} Returns the key of the matched element,\n     *  else `undefined`.\n     * @example\n     *\n     * var users = {\n     *   'barney':  { 'age': 36, 'active': true },\n     *   'fred':    { 'age': 40, 'active': false },\n     *   'pebbles': { 'age': 1,  'active': true }\n     * };\n     *\n     * _.findLastKey(users, function(o) { return o.age < 40; });\n     * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.findLastKey(users, { 'age': 36, 'active': true });\n     * // => 'barney'\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.findLastKey(users, ['active', false]);\n     * // => 'fred'\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.findLastKey(users, 'active');\n     * // => 'pebbles'\n     */\n    function findLastKey(object, predicate) {\n      return baseFindKey(object, getIteratee(predicate, 3), baseForOwnRight);\n    }\n\n    /**\n     * Iterates over own and inherited enumerable string keyed properties of an\n     * object and invokes `iteratee` for each property. The iteratee is invoked\n     * with three arguments: (value, key, object). Iteratee functions may exit\n     * iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forInRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forIn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n     */\n    function forIn(object, iteratee) {\n      return object == null\n        ? object\n        : baseFor(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * This method is like `_.forIn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forInRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n     */\n    function forInRight(object, iteratee) {\n      return object == null\n        ? object\n        : baseForRight(object, getIteratee(iteratee, 3), keysIn);\n    }\n\n    /**\n     * Iterates over own enumerable string keyed properties of an object and\n     * invokes `iteratee` for each property. The iteratee is invoked with three\n     * arguments: (value, key, object). Iteratee functions may exit iteration\n     * early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwnRight\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwn(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n     */\n    function forOwn(object, iteratee) {\n      return object && baseForOwn(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * This method is like `_.forOwn` except that it iterates over properties of\n     * `object` in the opposite order.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.0.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns `object`.\n     * @see _.forOwn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.forOwnRight(new Foo, function(value, key) {\n     *   console.log(key);\n     * });\n     * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n     */\n    function forOwnRight(object, iteratee) {\n      return object && baseForOwnRight(object, getIteratee(iteratee, 3));\n    }\n\n    /**\n     * Creates an array of function property names from own enumerable properties\n     * of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functionsIn\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functions(new Foo);\n     * // => ['a', 'b']\n     */\n    function functions(object) {\n      return object == null ? [] : baseFunctions(object, keys(object));\n    }\n\n    /**\n     * Creates an array of function property names from own and inherited\n     * enumerable properties of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to inspect.\n     * @returns {Array} Returns the function names.\n     * @see _.functions\n     * @example\n     *\n     * function Foo() {\n     *   this.a = _.constant('a');\n     *   this.b = _.constant('b');\n     * }\n     *\n     * Foo.prototype.c = _.constant('c');\n     *\n     * _.functionsIn(new Foo);\n     * // => ['a', 'b', 'c']\n     */\n    function functionsIn(object) {\n      return object == null ? [] : baseFunctions(object, keysIn(object));\n    }\n\n    /**\n     * Gets the value at `path` of `object`. If the resolved value is\n     * `undefined`, the `defaultValue` is returned in its place.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.get(object, 'a[0].b.c');\n     * // => 3\n     *\n     * _.get(object, ['a', '0', 'b', 'c']);\n     * // => 3\n     *\n     * _.get(object, 'a.b.c', 'default');\n     * // => 'default'\n     */\n    function get(object, path, defaultValue) {\n      var result = object == null ? undefined : baseGet(object, path);\n      return result === undefined ? defaultValue : result;\n    }\n\n    /**\n     * Checks if `path` is a direct property of `object`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = { 'a': { 'b': 2 } };\n     * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.has(object, 'a');\n     * // => true\n     *\n     * _.has(object, 'a.b');\n     * // => true\n     *\n     * _.has(object, ['a', 'b']);\n     * // => true\n     *\n     * _.has(other, 'a');\n     * // => false\n     */\n    function has(object, path) {\n      return object != null && hasPath(object, path, baseHas);\n    }\n\n    /**\n     * Checks if `path` is a direct or inherited property of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path to check.\n     * @returns {boolean} Returns `true` if `path` exists, else `false`.\n     * @example\n     *\n     * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n     *\n     * _.hasIn(object, 'a');\n     * // => true\n     *\n     * _.hasIn(object, 'a.b');\n     * // => true\n     *\n     * _.hasIn(object, ['a', 'b']);\n     * // => true\n     *\n     * _.hasIn(object, 'b');\n     * // => false\n     */\n    function hasIn(object, path) {\n      return object != null && hasPath(object, path, baseHasIn);\n    }\n\n    /**\n     * Creates an object composed of the inverted keys and values of `object`.\n     * If `object` contains duplicate values, subsequent values overwrite\n     * property assignments of previous values.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invert(object);\n     * // => { '1': 'c', '2': 'b' }\n     */\n    var invert = createInverter(function(result, value, key) {\n      result[value] = key;\n    }, constant(identity));\n\n    /**\n     * This method is like `_.invert` except that the inverted object is generated\n     * from the results of running each element of `object` thru `iteratee`. The\n     * corresponding inverted value of each inverted key is an array of keys\n     * responsible for generating the inverted value. The iteratee is invoked\n     * with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.1.0\n     * @category Object\n     * @param {Object} object The object to invert.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {Object} Returns the new inverted object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': 2, 'c': 1 };\n     *\n     * _.invertBy(object);\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     *\n     * _.invertBy(object, function(value) {\n     *   return 'group' + value;\n     * });\n     * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n     */\n    var invertBy = createInverter(function(result, value, key) {\n      if (hasOwnProperty.call(result, value)) {\n        result[value].push(key);\n      } else {\n        result[value] = [key];\n      }\n    }, getIteratee);\n\n    /**\n     * Invokes the method at `path` of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {*} Returns the result of the invoked method.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n     *\n     * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n     * // => [2, 3]\n     */\n    var invoke = baseRest(baseInvoke);\n\n    /**\n     * Creates an array of the own enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects. See the\n     * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n     * for more details.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keys(new Foo);\n     * // => ['a', 'b'] (iteration order is not guaranteed)\n     *\n     * _.keys('hi');\n     * // => ['0', '1']\n     */\n    function keys(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable property names of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property names.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.keysIn(new Foo);\n     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n     */\n    function keysIn(object) {\n      return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n    }\n\n    /**\n     * The opposite of `_.mapValues`; this method creates an object with the\n     * same values as `object` and keys generated by running each own enumerable\n     * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n     * with three arguments: (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.8.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapValues\n     * @example\n     *\n     * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n     *   return key + value;\n     * });\n     * // => { 'a1': 1, 'b2': 2 }\n     */\n    function mapKeys(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, iteratee(value, key, object), value);\n      });\n      return result;\n    }\n\n    /**\n     * Creates an object with the same keys as `object` and values generated\n     * by running each own enumerable string keyed property of `object` thru\n     * `iteratee`. The iteratee is invoked with three arguments:\n     * (value, key, object).\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Object} Returns the new mapped object.\n     * @see _.mapKeys\n     * @example\n     *\n     * var users = {\n     *   'fred':    { 'user': 'fred',    'age': 40 },\n     *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n     * };\n     *\n     * _.mapValues(users, function(o) { return o.age; });\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.mapValues(users, 'age');\n     * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n     */\n    function mapValues(object, iteratee) {\n      var result = {};\n      iteratee = getIteratee(iteratee, 3);\n\n      baseForOwn(object, function(value, key, object) {\n        baseAssignValue(result, key, iteratee(value, key, object));\n      });\n      return result;\n    }\n\n    /**\n     * This method is like `_.assign` except that it recursively merges own and\n     * inherited enumerable string keyed properties of source objects into the\n     * destination object. Source properties that resolve to `undefined` are\n     * skipped if a destination value exists. Array and plain object properties\n     * are merged recursively. Other objects and value types are overridden by\n     * assignment. Source objects are applied from left to right. Subsequent\n     * sources overwrite property assignments of previous sources.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.5.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} [sources] The source objects.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {\n     *   'a': [{ 'b': 2 }, { 'd': 4 }]\n     * };\n     *\n     * var other = {\n     *   'a': [{ 'c': 3 }, { 'e': 5 }]\n     * };\n     *\n     * _.merge(object, other);\n     * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n     */\n    var merge = createAssigner(function(object, source, srcIndex) {\n      baseMerge(object, source, srcIndex);\n    });\n\n    /**\n     * This method is like `_.merge` except that it accepts `customizer` which\n     * is invoked to produce the merged values of the destination and source\n     * properties. If `customizer` returns `undefined`, merging is handled by the\n     * method instead. The `customizer` is invoked with six arguments:\n     * (objValue, srcValue, key, object, source, stack).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The destination object.\n     * @param {...Object} sources The source objects.\n     * @param {Function} customizer The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * function customizer(objValue, srcValue) {\n     *   if (_.isArray(objValue)) {\n     *     return objValue.concat(srcValue);\n     *   }\n     * }\n     *\n     * var object = { 'a': [1], 'b': [2] };\n     * var other = { 'a': [3], 'b': [4] };\n     *\n     * _.mergeWith(object, other, customizer);\n     * // => { 'a': [1, 3], 'b': [2, 4] }\n     */\n    var mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n      baseMerge(object, source, srcIndex, customizer);\n    });\n\n    /**\n     * The opposite of `_.pick`; this method creates an object composed of the\n     * own and inherited enumerable property paths of `object` that are not omitted.\n     *\n     * **Note:** This method is considerably slower than `_.pick`.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to omit.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omit(object, ['a', 'c']);\n     * // => { 'b': '2' }\n     */\n    var omit = flatRest(function(object, paths) {\n      var result = {};\n      if (object == null) {\n        return result;\n      }\n      var isDeep = false;\n      paths = arrayMap(paths, function(path) {\n        path = castPath(path, object);\n        isDeep || (isDeep = path.length > 1);\n        return path;\n      });\n      copyObject(object, getAllKeysIn(object), result);\n      if (isDeep) {\n        result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n      }\n      var length = paths.length;\n      while (length--) {\n        baseUnset(result, paths[length]);\n      }\n      return result;\n    });\n\n    /**\n     * The opposite of `_.pickBy`; this method creates an object composed of\n     * the own and inherited enumerable string keyed properties of `object` that\n     * `predicate` doesn't return truthy for. The predicate is invoked with two\n     * arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.omitBy(object, _.isNumber);\n     * // => { 'b': '2' }\n     */\n    function omitBy(object, predicate) {\n      return pickBy(object, negate(getIteratee(predicate)));\n    }\n\n    /**\n     * Creates an object composed of the picked `object` properties.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {...(string|string[])} [paths] The property paths to pick.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pick(object, ['a', 'c']);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    var pick = flatRest(function(object, paths) {\n      return object == null ? {} : basePick(object, paths);\n    });\n\n    /**\n     * Creates an object composed of the `object` properties `predicate` returns\n     * truthy for. The predicate is invoked with two arguments: (value, key).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The source object.\n     * @param {Function} [predicate=_.identity] The function invoked per property.\n     * @returns {Object} Returns the new object.\n     * @example\n     *\n     * var object = { 'a': 1, 'b': '2', 'c': 3 };\n     *\n     * _.pickBy(object, _.isNumber);\n     * // => { 'a': 1, 'c': 3 }\n     */\n    function pickBy(object, predicate) {\n      if (object == null) {\n        return {};\n      }\n      var props = arrayMap(getAllKeysIn(object), function(prop) {\n        return [prop];\n      });\n      predicate = getIteratee(predicate);\n      return basePickBy(object, props, function(value, path) {\n        return predicate(value, path[0]);\n      });\n    }\n\n    /**\n     * This method is like `_.get` except that if the resolved value is a\n     * function it's invoked with the `this` binding of its parent object and\n     * its result is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @param {Array|string} path The path of the property to resolve.\n     * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n     *\n     * _.result(object, 'a[0].b.c1');\n     * // => 3\n     *\n     * _.result(object, 'a[0].b.c2');\n     * // => 4\n     *\n     * _.result(object, 'a[0].b.c3', 'default');\n     * // => 'default'\n     *\n     * _.result(object, 'a[0].b.c3', _.constant('default'));\n     * // => 'default'\n     */\n    function result(object, path, defaultValue) {\n      path = castPath(path, object);\n\n      var index = -1,\n          length = path.length;\n\n      // Ensure the loop is entered when path is empty.\n      if (!length) {\n        length = 1;\n        object = undefined;\n      }\n      while (++index < length) {\n        var value = object == null ? undefined : object[toKey(path[index])];\n        if (value === undefined) {\n          index = length;\n          value = defaultValue;\n        }\n        object = isFunction(value) ? value.call(object) : value;\n      }\n      return object;\n    }\n\n    /**\n     * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n     * it's created. Arrays are created for missing index properties while objects\n     * are created for all other missing properties. Use `_.setWith` to customize\n     * `path` creation.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.set(object, 'a[0].b.c', 4);\n     * console.log(object.a[0].b.c);\n     * // => 4\n     *\n     * _.set(object, ['x', '0', 'y', 'z'], 5);\n     * console.log(object.x[0].y.z);\n     * // => 5\n     */\n    function set(object, path, value) {\n      return object == null ? object : baseSet(object, path, value);\n    }\n\n    /**\n     * This method is like `_.set` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {*} value The value to set.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.setWith(object, '[0][1]', 'a', Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function setWith(object, path, value, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseSet(object, path, value, customizer);\n    }\n\n    /**\n     * Creates an array of own enumerable string keyed-value pairs for `object`\n     * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n     * entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entries\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairs(new Foo);\n     * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n     */\n    var toPairs = createToPairs(keys);\n\n    /**\n     * Creates an array of own and inherited enumerable string keyed-value pairs\n     * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n     * or set, its entries are returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @alias entriesIn\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the key-value pairs.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.toPairsIn(new Foo);\n     * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n     */\n    var toPairsIn = createToPairs(keysIn);\n\n    /**\n     * An alternative to `_.reduce`; this method transforms `object` to a new\n     * `accumulator` object which is the result of running each of its own\n     * enumerable string keyed properties thru `iteratee`, with each invocation\n     * potentially mutating the `accumulator` object. If `accumulator` is not\n     * provided, a new object with the same `[[Prototype]]` will be used. The\n     * iteratee is invoked with four arguments: (accumulator, value, key, object).\n     * Iteratee functions may exit iteration early by explicitly returning `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.3.0\n     * @category Object\n     * @param {Object} object The object to iterate over.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @param {*} [accumulator] The custom accumulator value.\n     * @returns {*} Returns the accumulated value.\n     * @example\n     *\n     * _.transform([2, 3, 4], function(result, n) {\n     *   result.push(n *= n);\n     *   return n % 2 == 0;\n     * }, []);\n     * // => [4, 9]\n     *\n     * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n     *   (result[value] || (result[value] = [])).push(key);\n     * }, {});\n     * // => { '1': ['a', 'c'], '2': ['b'] }\n     */\n    function transform(object, iteratee, accumulator) {\n      var isArr = isArray(object),\n          isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n      iteratee = getIteratee(iteratee, 4);\n      if (accumulator == null) {\n        var Ctor = object && object.constructor;\n        if (isArrLike) {\n          accumulator = isArr ? new Ctor : [];\n        }\n        else if (isObject(object)) {\n          accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n        }\n        else {\n          accumulator = {};\n        }\n      }\n      (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n        return iteratee(accumulator, value, index, object);\n      });\n      return accumulator;\n    }\n\n    /**\n     * Removes the property at `path` of `object`.\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to unset.\n     * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n     * _.unset(object, 'a[0].b.c');\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     *\n     * _.unset(object, ['a', '0', 'b', 'c']);\n     * // => true\n     *\n     * console.log(object);\n     * // => { 'a': [{ 'b': {} }] };\n     */\n    function unset(object, path) {\n      return object == null ? true : baseUnset(object, path);\n    }\n\n    /**\n     * This method is like `_.set` except that accepts `updater` to produce the\n     * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n     * is invoked with one argument: (value).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n     *\n     * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n     * console.log(object.a[0].b.c);\n     * // => 9\n     *\n     * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n     * console.log(object.x[0].y.z);\n     * // => 0\n     */\n    function update(object, path, updater) {\n      return object == null ? object : baseUpdate(object, path, castFunction(updater));\n    }\n\n    /**\n     * This method is like `_.update` except that it accepts `customizer` which is\n     * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n     * path creation is handled by the method instead. The `customizer` is invoked\n     * with three arguments: (nsValue, key, nsObject).\n     *\n     * **Note:** This method mutates `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.6.0\n     * @category Object\n     * @param {Object} object The object to modify.\n     * @param {Array|string} path The path of the property to set.\n     * @param {Function} updater The function to produce the updated value.\n     * @param {Function} [customizer] The function to customize assigned values.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var object = {};\n     *\n     * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n     * // => { '0': { '1': 'a' } }\n     */\n    function updateWith(object, path, updater, customizer) {\n      customizer = typeof customizer == 'function' ? customizer : undefined;\n      return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n    }\n\n    /**\n     * Creates an array of the own enumerable string keyed property values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.values(new Foo);\n     * // => [1, 2] (iteration order is not guaranteed)\n     *\n     * _.values('hi');\n     * // => ['h', 'i']\n     */\n    function values(object) {\n      return object == null ? [] : baseValues(object, keys(object));\n    }\n\n    /**\n     * Creates an array of the own and inherited enumerable string keyed property\n     * values of `object`.\n     *\n     * **Note:** Non-object values are coerced to objects.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Object\n     * @param {Object} object The object to query.\n     * @returns {Array} Returns the array of property values.\n     * @example\n     *\n     * function Foo() {\n     *   this.a = 1;\n     *   this.b = 2;\n     * }\n     *\n     * Foo.prototype.c = 3;\n     *\n     * _.valuesIn(new Foo);\n     * // => [1, 2, 3] (iteration order is not guaranteed)\n     */\n    function valuesIn(object) {\n      return object == null ? [] : baseValues(object, keysIn(object));\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Clamps `number` within the inclusive `lower` and `upper` bounds.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Number\n     * @param {number} number The number to clamp.\n     * @param {number} [lower] The lower bound.\n     * @param {number} upper The upper bound.\n     * @returns {number} Returns the clamped number.\n     * @example\n     *\n     * _.clamp(-10, -5, 5);\n     * // => -5\n     *\n     * _.clamp(10, -5, 5);\n     * // => 5\n     */\n    function clamp(number, lower, upper) {\n      if (upper === undefined) {\n        upper = lower;\n        lower = undefined;\n      }\n      if (upper !== undefined) {\n        upper = toNumber(upper);\n        upper = upper === upper ? upper : 0;\n      }\n      if (lower !== undefined) {\n        lower = toNumber(lower);\n        lower = lower === lower ? lower : 0;\n      }\n      return baseClamp(toNumber(number), lower, upper);\n    }\n\n    /**\n     * Checks if `n` is between `start` and up to, but not including, `end`. If\n     * `end` is not specified, it's set to `start` with `start` then set to `0`.\n     * If `start` is greater than `end` the params are swapped to support\n     * negative ranges.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.3.0\n     * @category Number\n     * @param {number} number The number to check.\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n     * @see _.range, _.rangeRight\n     * @example\n     *\n     * _.inRange(3, 2, 4);\n     * // => true\n     *\n     * _.inRange(4, 8);\n     * // => true\n     *\n     * _.inRange(4, 2);\n     * // => false\n     *\n     * _.inRange(2, 2);\n     * // => false\n     *\n     * _.inRange(1.2, 2);\n     * // => true\n     *\n     * _.inRange(5.2, 4);\n     * // => false\n     *\n     * _.inRange(-3, -2, -6);\n     * // => true\n     */\n    function inRange(number, start, end) {\n      start = toFinite(start);\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      } else {\n        end = toFinite(end);\n      }\n      number = toNumber(number);\n      return baseInRange(number, start, end);\n    }\n\n    /**\n     * Produces a random number between the inclusive `lower` and `upper` bounds.\n     * If only one argument is provided a number between `0` and the given number\n     * is returned. If `floating` is `true`, or either `lower` or `upper` are\n     * floats, a floating-point number is returned instead of an integer.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @memberOf _\n     * @since 0.7.0\n     * @category Number\n     * @param {number} [lower=0] The lower bound.\n     * @param {number} [upper=1] The upper bound.\n     * @param {boolean} [floating] Specify returning a floating-point number.\n     * @returns {number} Returns the random number.\n     * @example\n     *\n     * _.random(0, 5);\n     * // => an integer between 0 and 5\n     *\n     * _.random(5);\n     * // => also an integer between 0 and 5\n     *\n     * _.random(5, true);\n     * // => a floating-point number between 0 and 5\n     *\n     * _.random(1.2, 5.2);\n     * // => a floating-point number between 1.2 and 5.2\n     */\n    function random(lower, upper, floating) {\n      if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n        upper = floating = undefined;\n      }\n      if (floating === undefined) {\n        if (typeof upper == 'boolean') {\n          floating = upper;\n          upper = undefined;\n        }\n        else if (typeof lower == 'boolean') {\n          floating = lower;\n          lower = undefined;\n        }\n      }\n      if (lower === undefined && upper === undefined) {\n        lower = 0;\n        upper = 1;\n      }\n      else {\n        lower = toFinite(lower);\n        if (upper === undefined) {\n          upper = lower;\n          lower = 0;\n        } else {\n          upper = toFinite(upper);\n        }\n      }\n      if (lower > upper) {\n        var temp = lower;\n        lower = upper;\n        upper = temp;\n      }\n      if (floating || lower % 1 || upper % 1) {\n        var rand = nativeRandom();\n        return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n      }\n      return baseRandom(lower, upper);\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the camel cased string.\n     * @example\n     *\n     * _.camelCase('Foo Bar');\n     * // => 'fooBar'\n     *\n     * _.camelCase('--foo-bar--');\n     * // => 'fooBar'\n     *\n     * _.camelCase('__FOO_BAR__');\n     * // => 'fooBar'\n     */\n    var camelCase = createCompounder(function(result, word, index) {\n      word = word.toLowerCase();\n      return result + (index ? capitalize(word) : word);\n    });\n\n    /**\n     * Converts the first character of `string` to upper case and the remaining\n     * to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to capitalize.\n     * @returns {string} Returns the capitalized string.\n     * @example\n     *\n     * _.capitalize('FRED');\n     * // => 'Fred'\n     */\n    function capitalize(string) {\n      return upperFirst(toString(string).toLowerCase());\n    }\n\n    /**\n     * Deburrs `string` by converting\n     * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n     * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n     * letters to basic Latin letters and removing\n     * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to deburr.\n     * @returns {string} Returns the deburred string.\n     * @example\n     *\n     * _.deburr('déjà vu');\n     * // => 'deja vu'\n     */\n    function deburr(string) {\n      string = toString(string);\n      return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n    }\n\n    /**\n     * Checks if `string` ends with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=string.length] The position to search up to.\n     * @returns {boolean} Returns `true` if `string` ends with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.endsWith('abc', 'c');\n     * // => true\n     *\n     * _.endsWith('abc', 'b');\n     * // => false\n     *\n     * _.endsWith('abc', 'b', 2);\n     * // => true\n     */\n    function endsWith(string, target, position) {\n      string = toString(string);\n      target = baseToString(target);\n\n      var length = string.length;\n      position = position === undefined\n        ? length\n        : baseClamp(toInteger(position), 0, length);\n\n      var end = position;\n      position -= target.length;\n      return position >= 0 && string.slice(position, end) == target;\n    }\n\n    /**\n     * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n     * corresponding HTML entities.\n     *\n     * **Note:** No other characters are escaped. To escape additional\n     * characters use a third-party library like [_he_](https://mths.be/he).\n     *\n     * Though the \">\" character is escaped for symmetry, characters like\n     * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n     * unless they're part of a tag or unquoted attribute value. See\n     * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n     * (under \"semi-related fun fact\") for more details.\n     *\n     * When working with HTML you should always\n     * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n     * XSS vectors.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escape('fred, barney, & pebbles');\n     * // => 'fred, barney, &amp; pebbles'\n     */\n    function escape(string) {\n      string = toString(string);\n      return (string && reHasUnescapedHtml.test(string))\n        ? string.replace(reUnescapedHtml, escapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n     * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to escape.\n     * @returns {string} Returns the escaped string.\n     * @example\n     *\n     * _.escapeRegExp('[lodash](https://lodash.com/)');\n     * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n     */\n    function escapeRegExp(string) {\n      string = toString(string);\n      return (string && reHasRegExpChar.test(string))\n        ? string.replace(reRegExpChar, '\\\\$&')\n        : string;\n    }\n\n    /**\n     * Converts `string` to\n     * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the kebab cased string.\n     * @example\n     *\n     * _.kebabCase('Foo Bar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('fooBar');\n     * // => 'foo-bar'\n     *\n     * _.kebabCase('__FOO_BAR__');\n     * // => 'foo-bar'\n     */\n    var kebabCase = createCompounder(function(result, word, index) {\n      return result + (index ? '-' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts `string`, as space separated words, to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.lowerCase('--Foo-Bar--');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('fooBar');\n     * // => 'foo bar'\n     *\n     * _.lowerCase('__FOO_BAR__');\n     * // => 'foo bar'\n     */\n    var lowerCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Converts the first character of `string` to lower case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.lowerFirst('Fred');\n     * // => 'fred'\n     *\n     * _.lowerFirst('FRED');\n     * // => 'fRED'\n     */\n    var lowerFirst = createCaseFirst('toLowerCase');\n\n    /**\n     * Pads `string` on the left and right sides if it's shorter than `length`.\n     * Padding characters are truncated if they can't be evenly divided by `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.pad('abc', 8);\n     * // => '  abc   '\n     *\n     * _.pad('abc', 8, '_-');\n     * // => '_-abc_-_'\n     *\n     * _.pad('abc', 3);\n     * // => 'abc'\n     */\n    function pad(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      if (!length || strLength >= length) {\n        return string;\n      }\n      var mid = (length - strLength) / 2;\n      return (\n        createPadding(nativeFloor(mid), chars) +\n        string +\n        createPadding(nativeCeil(mid), chars)\n      );\n    }\n\n    /**\n     * Pads `string` on the right side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padEnd('abc', 6);\n     * // => 'abc   '\n     *\n     * _.padEnd('abc', 6, '_-');\n     * // => 'abc_-_'\n     *\n     * _.padEnd('abc', 3);\n     * // => 'abc'\n     */\n    function padEnd(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (string + createPadding(length - strLength, chars))\n        : string;\n    }\n\n    /**\n     * Pads `string` on the left side if it's shorter than `length`. Padding\n     * characters are truncated if they exceed `length`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to pad.\n     * @param {number} [length=0] The padding length.\n     * @param {string} [chars=' '] The string used as padding.\n     * @returns {string} Returns the padded string.\n     * @example\n     *\n     * _.padStart('abc', 6);\n     * // => '   abc'\n     *\n     * _.padStart('abc', 6, '_-');\n     * // => '_-_abc'\n     *\n     * _.padStart('abc', 3);\n     * // => 'abc'\n     */\n    function padStart(string, length, chars) {\n      string = toString(string);\n      length = toInteger(length);\n\n      var strLength = length ? stringSize(string) : 0;\n      return (length && strLength < length)\n        ? (createPadding(length - strLength, chars) + string)\n        : string;\n    }\n\n    /**\n     * Converts `string` to an integer of the specified radix. If `radix` is\n     * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n     * hexadecimal, in which case a `radix` of `16` is used.\n     *\n     * **Note:** This method aligns with the\n     * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n     *\n     * @static\n     * @memberOf _\n     * @since 1.1.0\n     * @category String\n     * @param {string} string The string to convert.\n     * @param {number} [radix=10] The radix to interpret `value` by.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {number} Returns the converted integer.\n     * @example\n     *\n     * _.parseInt('08');\n     * // => 8\n     *\n     * _.map(['6', '08', '10'], _.parseInt);\n     * // => [6, 8, 10]\n     */\n    function parseInt(string, radix, guard) {\n      if (guard || radix == null) {\n        radix = 0;\n      } else if (radix) {\n        radix = +radix;\n      }\n      return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n    }\n\n    /**\n     * Repeats the given string `n` times.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to repeat.\n     * @param {number} [n=1] The number of times to repeat the string.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the repeated string.\n     * @example\n     *\n     * _.repeat('*', 3);\n     * // => '***'\n     *\n     * _.repeat('abc', 2);\n     * // => 'abcabc'\n     *\n     * _.repeat('abc', 0);\n     * // => ''\n     */\n    function repeat(string, n, guard) {\n      if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n        n = 1;\n      } else {\n        n = toInteger(n);\n      }\n      return baseRepeat(toString(string), n);\n    }\n\n    /**\n     * Replaces matches for `pattern` in `string` with `replacement`.\n     *\n     * **Note:** This method is based on\n     * [`String#replace`](https://mdn.io/String/replace).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to modify.\n     * @param {RegExp|string} pattern The pattern to replace.\n     * @param {Function|string} replacement The match replacement.\n     * @returns {string} Returns the modified string.\n     * @example\n     *\n     * _.replace('Hi Fred', 'Fred', 'Barney');\n     * // => 'Hi Barney'\n     */\n    function replace() {\n      var args = arguments,\n          string = toString(args[0]);\n\n      return args.length < 3 ? string : string.replace(args[1], args[2]);\n    }\n\n    /**\n     * Converts `string` to\n     * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the snake cased string.\n     * @example\n     *\n     * _.snakeCase('Foo Bar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('fooBar');\n     * // => 'foo_bar'\n     *\n     * _.snakeCase('--FOO-BAR--');\n     * // => 'foo_bar'\n     */\n    var snakeCase = createCompounder(function(result, word, index) {\n      return result + (index ? '_' : '') + word.toLowerCase();\n    });\n\n    /**\n     * Splits `string` by `separator`.\n     *\n     * **Note:** This method is based on\n     * [`String#split`](https://mdn.io/String/split).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to split.\n     * @param {RegExp|string} separator The separator pattern to split by.\n     * @param {number} [limit] The length to truncate results to.\n     * @returns {Array} Returns the string segments.\n     * @example\n     *\n     * _.split('a-b-c', '-', 2);\n     * // => ['a', 'b']\n     */\n    function split(string, separator, limit) {\n      if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n        separator = limit = undefined;\n      }\n      limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n      if (!limit) {\n        return [];\n      }\n      string = toString(string);\n      if (string && (\n            typeof separator == 'string' ||\n            (separator != null && !isRegExp(separator))\n          )) {\n        separator = baseToString(separator);\n        if (!separator && hasUnicode(string)) {\n          return castSlice(stringToArray(string), 0, limit);\n        }\n      }\n      return string.split(separator, limit);\n    }\n\n    /**\n     * Converts `string` to\n     * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n     *\n     * @static\n     * @memberOf _\n     * @since 3.1.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the start cased string.\n     * @example\n     *\n     * _.startCase('--foo-bar--');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('fooBar');\n     * // => 'Foo Bar'\n     *\n     * _.startCase('__FOO_BAR__');\n     * // => 'FOO BAR'\n     */\n    var startCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + upperFirst(word);\n    });\n\n    /**\n     * Checks if `string` starts with the given target string.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {string} [target] The string to search for.\n     * @param {number} [position=0] The position to search from.\n     * @returns {boolean} Returns `true` if `string` starts with `target`,\n     *  else `false`.\n     * @example\n     *\n     * _.startsWith('abc', 'a');\n     * // => true\n     *\n     * _.startsWith('abc', 'b');\n     * // => false\n     *\n     * _.startsWith('abc', 'b', 1);\n     * // => true\n     */\n    function startsWith(string, target, position) {\n      string = toString(string);\n      position = position == null\n        ? 0\n        : baseClamp(toInteger(position), 0, string.length);\n\n      target = baseToString(target);\n      return string.slice(position, position + target.length) == target;\n    }\n\n    /**\n     * Creates a compiled template function that can interpolate data properties\n     * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n     * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n     * properties may be accessed as free variables in the template. If a setting\n     * object is given, it takes precedence over `_.templateSettings` values.\n     *\n     * **Note:** In the development build `_.template` utilizes\n     * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n     * for easier debugging.\n     *\n     * For more information on precompiling templates see\n     * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n     *\n     * For more information on Chrome extension sandboxes see\n     * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category String\n     * @param {string} [string=''] The template string.\n     * @param {Object} [options={}] The options object.\n     * @param {RegExp} [options.escape=_.templateSettings.escape]\n     *  The HTML \"escape\" delimiter.\n     * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n     *  The \"evaluate\" delimiter.\n     * @param {Object} [options.imports=_.templateSettings.imports]\n     *  An object to import into the template as free variables.\n     * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n     *  The \"interpolate\" delimiter.\n     * @param {string} [options.sourceURL='lodash.templateSources[n]']\n     *  The sourceURL of the compiled template.\n     * @param {string} [options.variable='obj']\n     *  The data object variable name.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Function} Returns the compiled template function.\n     * @example\n     *\n     * // Use the \"interpolate\" delimiter to create a compiled template.\n     * var compiled = _.template('hello <%= user %>!');\n     * compiled({ 'user': 'fred' });\n     * // => 'hello fred!'\n     *\n     * // Use the HTML \"escape\" delimiter to escape data property values.\n     * var compiled = _.template('<b><%- value %></b>');\n     * compiled({ 'value': '<script>' });\n     * // => '<b>&lt;script&gt;</b>'\n     *\n     * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n     * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the internal `print` function in \"evaluate\" delimiters.\n     * var compiled = _.template('<% print(\"hello \" + user); %>!');\n     * compiled({ 'user': 'barney' });\n     * // => 'hello barney!'\n     *\n     * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n     * // Disable support by replacing the \"interpolate\" delimiter.\n     * var compiled = _.template('hello ${ user }!');\n     * compiled({ 'user': 'pebbles' });\n     * // => 'hello pebbles!'\n     *\n     * // Use backslashes to treat delimiters as plain text.\n     * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n     * compiled({ 'value': 'ignored' });\n     * // => '<%- value %>'\n     *\n     * // Use the `imports` option to import `jQuery` as `jq`.\n     * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n     * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n     * compiled({ 'users': ['fred', 'barney'] });\n     * // => '<li>fred</li><li>barney</li>'\n     *\n     * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n     * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n     * compiled(data);\n     * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n     *\n     * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n     * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n     * compiled.source;\n     * // => function(data) {\n     * //   var __t, __p = '';\n     * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n     * //   return __p;\n     * // }\n     *\n     * // Use custom template delimiters.\n     * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n     * var compiled = _.template('hello {{ user }}!');\n     * compiled({ 'user': 'mustache' });\n     * // => 'hello mustache!'\n     *\n     * // Use the `source` property to inline compiled templates for meaningful\n     * // line numbers in error messages and stack traces.\n     * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n     *   var JST = {\\\n     *     \"main\": ' + _.template(mainText).source + '\\\n     *   };\\\n     * ');\n     */\n    function template(string, options, guard) {\n      // Based on John Resig's `tmpl` implementation\n      // (http://ejohn.org/blog/javascript-micro-templating/)\n      // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n      var settings = lodash.templateSettings;\n\n      if (guard && isIterateeCall(string, options, guard)) {\n        options = undefined;\n      }\n      string = toString(string);\n      options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n      var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n          importsKeys = keys(imports),\n          importsValues = baseValues(imports, importsKeys);\n\n      var isEscaping,\n          isEvaluating,\n          index = 0,\n          interpolate = options.interpolate || reNoMatch,\n          source = \"__p += '\";\n\n      // Compile the regexp to match each delimiter.\n      var reDelimiters = RegExp(\n        (options.escape || reNoMatch).source + '|' +\n        interpolate.source + '|' +\n        (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n        (options.evaluate || reNoMatch).source + '|$'\n      , 'g');\n\n      // Use a sourceURL for easier debugging.\n      var sourceURL = '//# sourceURL=' +\n        ('sourceURL' in options\n          ? options.sourceURL\n          : ('lodash.templateSources[' + (++templateCounter) + ']')\n        ) + '\\n';\n\n      string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n        interpolateValue || (interpolateValue = esTemplateValue);\n\n        // Escape characters that can't be included in string literals.\n        source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n        // Replace delimiters with snippets.\n        if (escapeValue) {\n          isEscaping = true;\n          source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n        }\n        if (evaluateValue) {\n          isEvaluating = true;\n          source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n        }\n        if (interpolateValue) {\n          source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n        }\n        index = offset + match.length;\n\n        // The JS engine embedded in Adobe products needs `match` returned in\n        // order to produce the correct `offset` value.\n        return match;\n      });\n\n      source += \"';\\n\";\n\n      // If `variable` is not specified wrap a with-statement around the generated\n      // code to add the data object to the top of the scope chain.\n      var variable = options.variable;\n      if (!variable) {\n        source = 'with (obj) {\\n' + source + '\\n}\\n';\n      }\n      // Cleanup code by stripping empty strings.\n      source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n        .replace(reEmptyStringMiddle, '$1')\n        .replace(reEmptyStringTrailing, '$1;');\n\n      // Frame code as the function body.\n      source = 'function(' + (variable || 'obj') + ') {\\n' +\n        (variable\n          ? ''\n          : 'obj || (obj = {});\\n'\n        ) +\n        \"var __t, __p = ''\" +\n        (isEscaping\n           ? ', __e = _.escape'\n           : ''\n        ) +\n        (isEvaluating\n          ? ', __j = Array.prototype.join;\\n' +\n            \"function print() { __p += __j.call(arguments, '') }\\n\"\n          : ';\\n'\n        ) +\n        source +\n        'return __p\\n}';\n\n      var result = attempt(function() {\n        return Function(importsKeys, sourceURL + 'return ' + source)\n          .apply(undefined, importsValues);\n      });\n\n      // Provide the compiled function's source by its `toString` method or\n      // the `source` property as a convenience for inlining compiled templates.\n      result.source = source;\n      if (isError(result)) {\n        throw result;\n      }\n      return result;\n    }\n\n    /**\n     * Converts `string`, as a whole, to lower case just like\n     * [String#toLowerCase](https://mdn.io/toLowerCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the lower cased string.\n     * @example\n     *\n     * _.toLower('--Foo-Bar--');\n     * // => '--foo-bar--'\n     *\n     * _.toLower('fooBar');\n     * // => 'foobar'\n     *\n     * _.toLower('__FOO_BAR__');\n     * // => '__foo_bar__'\n     */\n    function toLower(value) {\n      return toString(value).toLowerCase();\n    }\n\n    /**\n     * Converts `string`, as a whole, to upper case just like\n     * [String#toUpperCase](https://mdn.io/toUpperCase).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.toUpper('--foo-bar--');\n     * // => '--FOO-BAR--'\n     *\n     * _.toUpper('fooBar');\n     * // => 'FOOBAR'\n     *\n     * _.toUpper('__foo_bar__');\n     * // => '__FOO_BAR__'\n     */\n    function toUpper(value) {\n      return toString(value).toUpperCase();\n    }\n\n    /**\n     * Removes leading and trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trim('  abc  ');\n     * // => 'abc'\n     *\n     * _.trim('-_-abc-_-', '_-');\n     * // => 'abc'\n     *\n     * _.map(['  foo  ', '  bar  '], _.trim);\n     * // => ['foo', 'bar']\n     */\n    function trim(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrim, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          chrSymbols = stringToArray(chars),\n          start = charsStartIndex(strSymbols, chrSymbols),\n          end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n      return castSlice(strSymbols, start, end).join('');\n    }\n\n    /**\n     * Removes trailing whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimEnd('  abc  ');\n     * // => '  abc'\n     *\n     * _.trimEnd('-_-abc-_-', '_-');\n     * // => '-_-abc'\n     */\n    function trimEnd(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimEnd, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n      return castSlice(strSymbols, 0, end).join('');\n    }\n\n    /**\n     * Removes leading whitespace or specified characters from `string`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to trim.\n     * @param {string} [chars=whitespace] The characters to trim.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {string} Returns the trimmed string.\n     * @example\n     *\n     * _.trimStart('  abc  ');\n     * // => 'abc  '\n     *\n     * _.trimStart('-_-abc-_-', '_-');\n     * // => 'abc-_-'\n     */\n    function trimStart(string, chars, guard) {\n      string = toString(string);\n      if (string && (guard || chars === undefined)) {\n        return string.replace(reTrimStart, '');\n      }\n      if (!string || !(chars = baseToString(chars))) {\n        return string;\n      }\n      var strSymbols = stringToArray(string),\n          start = charsStartIndex(strSymbols, stringToArray(chars));\n\n      return castSlice(strSymbols, start).join('');\n    }\n\n    /**\n     * Truncates `string` if it's longer than the given maximum string length.\n     * The last characters of the truncated string are replaced with the omission\n     * string which defaults to \"...\".\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to truncate.\n     * @param {Object} [options={}] The options object.\n     * @param {number} [options.length=30] The maximum string length.\n     * @param {string} [options.omission='...'] The string to indicate text is omitted.\n     * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n     * @returns {string} Returns the truncated string.\n     * @example\n     *\n     * _.truncate('hi-diddly-ho there, neighborino');\n     * // => 'hi-diddly-ho there, neighbo...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': ' '\n     * });\n     * // => 'hi-diddly-ho there,...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'length': 24,\n     *   'separator': /,? +/\n     * });\n     * // => 'hi-diddly-ho there...'\n     *\n     * _.truncate('hi-diddly-ho there, neighborino', {\n     *   'omission': ' [...]'\n     * });\n     * // => 'hi-diddly-ho there, neig [...]'\n     */\n    function truncate(string, options) {\n      var length = DEFAULT_TRUNC_LENGTH,\n          omission = DEFAULT_TRUNC_OMISSION;\n\n      if (isObject(options)) {\n        var separator = 'separator' in options ? options.separator : separator;\n        length = 'length' in options ? toInteger(options.length) : length;\n        omission = 'omission' in options ? baseToString(options.omission) : omission;\n      }\n      string = toString(string);\n\n      var strLength = string.length;\n      if (hasUnicode(string)) {\n        var strSymbols = stringToArray(string);\n        strLength = strSymbols.length;\n      }\n      if (length >= strLength) {\n        return string;\n      }\n      var end = length - stringSize(omission);\n      if (end < 1) {\n        return omission;\n      }\n      var result = strSymbols\n        ? castSlice(strSymbols, 0, end).join('')\n        : string.slice(0, end);\n\n      if (separator === undefined) {\n        return result + omission;\n      }\n      if (strSymbols) {\n        end += (result.length - end);\n      }\n      if (isRegExp(separator)) {\n        if (string.slice(end).search(separator)) {\n          var match,\n              substring = result;\n\n          if (!separator.global) {\n            separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n          }\n          separator.lastIndex = 0;\n          while ((match = separator.exec(substring))) {\n            var newEnd = match.index;\n          }\n          result = result.slice(0, newEnd === undefined ? end : newEnd);\n        }\n      } else if (string.indexOf(baseToString(separator), end) != end) {\n        var index = result.lastIndexOf(separator);\n        if (index > -1) {\n          result = result.slice(0, index);\n        }\n      }\n      return result + omission;\n    }\n\n    /**\n     * The inverse of `_.escape`; this method converts the HTML entities\n     * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n     * their corresponding characters.\n     *\n     * **Note:** No other HTML entities are unescaped. To unescape additional\n     * HTML entities use a third-party library like [_he_](https://mths.be/he).\n     *\n     * @static\n     * @memberOf _\n     * @since 0.6.0\n     * @category String\n     * @param {string} [string=''] The string to unescape.\n     * @returns {string} Returns the unescaped string.\n     * @example\n     *\n     * _.unescape('fred, barney, &amp; pebbles');\n     * // => 'fred, barney, & pebbles'\n     */\n    function unescape(string) {\n      string = toString(string);\n      return (string && reHasEscapedHtml.test(string))\n        ? string.replace(reEscapedHtml, unescapeHtmlChar)\n        : string;\n    }\n\n    /**\n     * Converts `string`, as space separated words, to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the upper cased string.\n     * @example\n     *\n     * _.upperCase('--foo-bar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('fooBar');\n     * // => 'FOO BAR'\n     *\n     * _.upperCase('__foo_bar__');\n     * // => 'FOO BAR'\n     */\n    var upperCase = createCompounder(function(result, word, index) {\n      return result + (index ? ' ' : '') + word.toUpperCase();\n    });\n\n    /**\n     * Converts the first character of `string` to upper case.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category String\n     * @param {string} [string=''] The string to convert.\n     * @returns {string} Returns the converted string.\n     * @example\n     *\n     * _.upperFirst('fred');\n     * // => 'Fred'\n     *\n     * _.upperFirst('FRED');\n     * // => 'FRED'\n     */\n    var upperFirst = createCaseFirst('toUpperCase');\n\n    /**\n     * Splits `string` into an array of its words.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category String\n     * @param {string} [string=''] The string to inspect.\n     * @param {RegExp|string} [pattern] The pattern to match words.\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n     * @returns {Array} Returns the words of `string`.\n     * @example\n     *\n     * _.words('fred, barney, & pebbles');\n     * // => ['fred', 'barney', 'pebbles']\n     *\n     * _.words('fred, barney, & pebbles', /[^, ]+/g);\n     * // => ['fred', 'barney', '&', 'pebbles']\n     */\n    function words(string, pattern, guard) {\n      string = toString(string);\n      pattern = guard ? undefined : pattern;\n\n      if (pattern === undefined) {\n        return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n      }\n      return string.match(pattern) || [];\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Attempts to invoke `func`, returning either the result or the caught error\n     * object. Any additional arguments are provided to `func` when it's invoked.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Function} func The function to attempt.\n     * @param {...*} [args] The arguments to invoke `func` with.\n     * @returns {*} Returns the `func` result or error object.\n     * @example\n     *\n     * // Avoid throwing errors for invalid selectors.\n     * var elements = _.attempt(function(selector) {\n     *   return document.querySelectorAll(selector);\n     * }, '>_>');\n     *\n     * if (_.isError(elements)) {\n     *   elements = [];\n     * }\n     */\n    var attempt = baseRest(function(func, args) {\n      try {\n        return apply(func, undefined, args);\n      } catch (e) {\n        return isError(e) ? e : new Error(e);\n      }\n    });\n\n    /**\n     * Binds methods of an object to the object itself, overwriting the existing\n     * method.\n     *\n     * **Note:** This method doesn't set the \"length\" property of bound functions.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Object} object The object to bind and assign the bound methods to.\n     * @param {...(string|string[])} methodNames The object method names to bind.\n     * @returns {Object} Returns `object`.\n     * @example\n     *\n     * var view = {\n     *   'label': 'docs',\n     *   'click': function() {\n     *     console.log('clicked ' + this.label);\n     *   }\n     * };\n     *\n     * _.bindAll(view, ['click']);\n     * jQuery(element).on('click', view.click);\n     * // => Logs 'clicked docs' when clicked.\n     */\n    var bindAll = flatRest(function(object, methodNames) {\n      arrayEach(methodNames, function(key) {\n        key = toKey(key);\n        baseAssignValue(object, key, bind(object[key], object));\n      });\n      return object;\n    });\n\n    /**\n     * Creates a function that iterates over `pairs` and invokes the corresponding\n     * function of the first predicate to return truthy. The predicate-function\n     * pairs are invoked with the `this` binding and arguments of the created\n     * function.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Array} pairs The predicate-function pairs.\n     * @returns {Function} Returns the new composite function.\n     * @example\n     *\n     * var func = _.cond([\n     *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n     *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n     *   [_.stubTrue,                      _.constant('no match')]\n     * ]);\n     *\n     * func({ 'a': 1, 'b': 2 });\n     * // => 'matches A'\n     *\n     * func({ 'a': 0, 'b': 1 });\n     * // => 'matches B'\n     *\n     * func({ 'a': '1', 'b': '2' });\n     * // => 'no match'\n     */\n    function cond(pairs) {\n      var length = pairs == null ? 0 : pairs.length,\n          toIteratee = getIteratee();\n\n      pairs = !length ? [] : arrayMap(pairs, function(pair) {\n        if (typeof pair[1] != 'function') {\n          throw new TypeError(FUNC_ERROR_TEXT);\n        }\n        return [toIteratee(pair[0]), pair[1]];\n      });\n\n      return baseRest(function(args) {\n        var index = -1;\n        while (++index < length) {\n          var pair = pairs[index];\n          if (apply(pair[0], this, args)) {\n            return apply(pair[1], this, args);\n          }\n        }\n      });\n    }\n\n    /**\n     * Creates a function that invokes the predicate properties of `source` with\n     * the corresponding property values of a given object, returning `true` if\n     * all predicates return truthy, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.conformsTo` with\n     * `source` partially applied.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {Object} source The object of property predicates to conform to.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 2, 'b': 1 },\n     *   { 'a': 1, 'b': 2 }\n     * ];\n     *\n     * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n     * // => [{ 'a': 1, 'b': 2 }]\n     */\n    function conforms(source) {\n      return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that returns `value`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {*} value The value to return from the new function.\n     * @returns {Function} Returns the new constant function.\n     * @example\n     *\n     * var objects = _.times(2, _.constant({ 'a': 1 }));\n     *\n     * console.log(objects);\n     * // => [{ 'a': 1 }, { 'a': 1 }]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => true\n     */\n    function constant(value) {\n      return function() {\n        return value;\n      };\n    }\n\n    /**\n     * Checks `value` to determine whether a default value should be returned in\n     * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n     * or `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.14.0\n     * @category Util\n     * @param {*} value The value to check.\n     * @param {*} defaultValue The default value.\n     * @returns {*} Returns the resolved value.\n     * @example\n     *\n     * _.defaultTo(1, 10);\n     * // => 1\n     *\n     * _.defaultTo(undefined, 10);\n     * // => 10\n     */\n    function defaultTo(value, defaultValue) {\n      return (value == null || value !== value) ? defaultValue : value;\n    }\n\n    /**\n     * Creates a function that returns the result of invoking the given functions\n     * with the `this` binding of the created function, where each successive\n     * invocation is supplied the return value of the previous.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flowRight\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flow([_.add, square]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flow = createFlow();\n\n    /**\n     * This method is like `_.flow` except that it creates a function that\n     * invokes the given functions from right to left.\n     *\n     * @static\n     * @since 3.0.0\n     * @memberOf _\n     * @category Util\n     * @param {...(Function|Function[])} [funcs] The functions to invoke.\n     * @returns {Function} Returns the new composite function.\n     * @see _.flow\n     * @example\n     *\n     * function square(n) {\n     *   return n * n;\n     * }\n     *\n     * var addSquare = _.flowRight([square, _.add]);\n     * addSquare(1, 2);\n     * // => 9\n     */\n    var flowRight = createFlow(true);\n\n    /**\n     * This method returns the first argument it receives.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {*} value Any value.\n     * @returns {*} Returns `value`.\n     * @example\n     *\n     * var object = { 'a': 1 };\n     *\n     * console.log(_.identity(object) === object);\n     * // => true\n     */\n    function identity(value) {\n      return value;\n    }\n\n    /**\n     * Creates a function that invokes `func` with the arguments of the created\n     * function. If `func` is a property name, the created function returns the\n     * property value for a given element. If `func` is an array or object, the\n     * created function returns `true` for elements that contain the equivalent\n     * source properties, otherwise it returns `false`.\n     *\n     * @static\n     * @since 4.0.0\n     * @memberOf _\n     * @category Util\n     * @param {*} [func=_.identity] The value to convert to a callback.\n     * @returns {Function} Returns the callback.\n     * @example\n     *\n     * var users = [\n     *   { 'user': 'barney', 'age': 36, 'active': true },\n     *   { 'user': 'fred',   'age': 40, 'active': false }\n     * ];\n     *\n     * // The `_.matches` iteratee shorthand.\n     * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n     * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n     *\n     * // The `_.matchesProperty` iteratee shorthand.\n     * _.filter(users, _.iteratee(['user', 'fred']));\n     * // => [{ 'user': 'fred', 'age': 40 }]\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.map(users, _.iteratee('user'));\n     * // => ['barney', 'fred']\n     *\n     * // Create custom iteratee shorthands.\n     * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n     *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n     *     return func.test(string);\n     *   };\n     * });\n     *\n     * _.filter(['abc', 'def'], /ef/);\n     * // => ['def']\n     */\n    function iteratee(func) {\n      return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between a given\n     * object and `source`, returning `true` if the given object has equivalent\n     * property values, else `false`.\n     *\n     * **Note:** The created function is equivalent to `_.isMatch` with `source`\n     * partially applied.\n     *\n     * Partial comparisons will match empty array and empty object `source`\n     * values against any array or object value, respectively. See `_.isEqual`\n     * for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} source The object of property values to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n     * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n     */\n    function matches(source) {\n      return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that performs a partial deep comparison between the\n     * value at `path` of a given object to `srcValue`, returning `true` if the\n     * object value is equivalent, else `false`.\n     *\n     * **Note:** Partial comparisons will match empty array and empty object\n     * `srcValue` values against any array or object value, respectively. See\n     * `_.isEqual` for a list of supported value comparisons.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.2.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @param {*} srcValue The value to match.\n     * @returns {Function} Returns the new spec function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': 1, 'b': 2, 'c': 3 },\n     *   { 'a': 4, 'b': 5, 'c': 6 }\n     * ];\n     *\n     * _.find(objects, _.matchesProperty('a', 4));\n     * // => { 'a': 4, 'b': 5, 'c': 6 }\n     */\n    function matchesProperty(path, srcValue) {\n      return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n    }\n\n    /**\n     * Creates a function that invokes the method at `path` of a given object.\n     * Any additional arguments are provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Array|string} path The path of the method to invoke.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': _.constant(2) } },\n     *   { 'a': { 'b': _.constant(1) } }\n     * ];\n     *\n     * _.map(objects, _.method('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(objects, _.method(['a', 'b']));\n     * // => [2, 1]\n     */\n    var method = baseRest(function(path, args) {\n      return function(object) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * The opposite of `_.method`; this method creates a function that invokes\n     * the method at a given path of `object`. Any additional arguments are\n     * provided to the invoked method.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.7.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @param {...*} [args] The arguments to invoke the method with.\n     * @returns {Function} Returns the new invoker function.\n     * @example\n     *\n     * var array = _.times(3, _.constant),\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n     * // => [2, 0]\n     */\n    var methodOf = baseRest(function(object, args) {\n      return function(path) {\n        return baseInvoke(object, path, args);\n      };\n    });\n\n    /**\n     * Adds all own enumerable string keyed function properties of a source\n     * object to the destination object. If `object` is a function, then methods\n     * are added to its prototype as well.\n     *\n     * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n     * avoid conflicts caused by modifying the original.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {Function|Object} [object=lodash] The destination object.\n     * @param {Object} source The object of functions to add.\n     * @param {Object} [options={}] The options object.\n     * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n     * @returns {Function|Object} Returns `object`.\n     * @example\n     *\n     * function vowels(string) {\n     *   return _.filter(string, function(v) {\n     *     return /[aeiou]/i.test(v);\n     *   });\n     * }\n     *\n     * _.mixin({ 'vowels': vowels });\n     * _.vowels('fred');\n     * // => ['e']\n     *\n     * _('fred').vowels().value();\n     * // => ['e']\n     *\n     * _.mixin({ 'vowels': vowels }, { 'chain': false });\n     * _('fred').vowels();\n     * // => ['e']\n     */\n    function mixin(object, source, options) {\n      var props = keys(source),\n          methodNames = baseFunctions(source, props);\n\n      if (options == null &&\n          !(isObject(source) && (methodNames.length || !props.length))) {\n        options = source;\n        source = object;\n        object = this;\n        methodNames = baseFunctions(source, keys(source));\n      }\n      var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n          isFunc = isFunction(object);\n\n      arrayEach(methodNames, function(methodName) {\n        var func = source[methodName];\n        object[methodName] = func;\n        if (isFunc) {\n          object.prototype[methodName] = function() {\n            var chainAll = this.__chain__;\n            if (chain || chainAll) {\n              var result = object(this.__wrapped__),\n                  actions = result.__actions__ = copyArray(this.__actions__);\n\n              actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n              result.__chain__ = chainAll;\n              return result;\n            }\n            return func.apply(object, arrayPush([this.value()], arguments));\n          };\n        }\n      });\n\n      return object;\n    }\n\n    /**\n     * Reverts the `_` variable to its previous value and returns a reference to\n     * the `lodash` function.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @returns {Function} Returns the `lodash` function.\n     * @example\n     *\n     * var lodash = _.noConflict();\n     */\n    function noConflict() {\n      if (root._ === this) {\n        root._ = oldDash;\n      }\n      return this;\n    }\n\n    /**\n     * This method returns `undefined`.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.3.0\n     * @category Util\n     * @example\n     *\n     * _.times(2, _.noop);\n     * // => [undefined, undefined]\n     */\n    function noop() {\n      // No operation performed.\n    }\n\n    /**\n     * Creates a function that gets the argument at index `n`. If `n` is negative,\n     * the nth argument from the end is returned.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [n=0] The index of the argument to return.\n     * @returns {Function} Returns the new pass-thru function.\n     * @example\n     *\n     * var func = _.nthArg(1);\n     * func('a', 'b', 'c', 'd');\n     * // => 'b'\n     *\n     * var func = _.nthArg(-2);\n     * func('a', 'b', 'c', 'd');\n     * // => 'c'\n     */\n    function nthArg(n) {\n      n = toInteger(n);\n      return baseRest(function(args) {\n        return baseNth(args, n);\n      });\n    }\n\n    /**\n     * Creates a function that invokes `iteratees` with the arguments it receives\n     * and returns their results.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [iteratees=[_.identity]]\n     *  The iteratees to invoke.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.over([Math.max, Math.min]);\n     *\n     * func(1, 2, 3, 4);\n     * // => [4, 1]\n     */\n    var over = createOver(arrayMap);\n\n    /**\n     * Creates a function that checks if **all** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overEvery([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => false\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overEvery = createOver(arrayEvery);\n\n    /**\n     * Creates a function that checks if **any** of the `predicates` return\n     * truthy when invoked with the arguments it receives.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {...(Function|Function[])} [predicates=[_.identity]]\n     *  The predicates to check.\n     * @returns {Function} Returns the new function.\n     * @example\n     *\n     * var func = _.overSome([Boolean, isFinite]);\n     *\n     * func('1');\n     * // => true\n     *\n     * func(null);\n     * // => true\n     *\n     * func(NaN);\n     * // => false\n     */\n    var overSome = createOver(arraySome);\n\n    /**\n     * Creates a function that returns the value at `path` of a given object.\n     *\n     * @static\n     * @memberOf _\n     * @since 2.4.0\n     * @category Util\n     * @param {Array|string} path The path of the property to get.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var objects = [\n     *   { 'a': { 'b': 2 } },\n     *   { 'a': { 'b': 1 } }\n     * ];\n     *\n     * _.map(objects, _.property('a.b'));\n     * // => [2, 1]\n     *\n     * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n     * // => [1, 2]\n     */\n    function property(path) {\n      return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n    }\n\n    /**\n     * The opposite of `_.property`; this method creates a function that returns\n     * the value at a given path of `object`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.0.0\n     * @category Util\n     * @param {Object} object The object to query.\n     * @returns {Function} Returns the new accessor function.\n     * @example\n     *\n     * var array = [0, 1, 2],\n     *     object = { 'a': array, 'b': array, 'c': array };\n     *\n     * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n     * // => [2, 0]\n     *\n     * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n     * // => [2, 0]\n     */\n    function propertyOf(object) {\n      return function(path) {\n        return object == null ? undefined : baseGet(object, path);\n      };\n    }\n\n    /**\n     * Creates an array of numbers (positive and/or negative) progressing from\n     * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n     * `start` is specified without an `end` or `step`. If `end` is not specified,\n     * it's set to `start` with `start` then set to `0`.\n     *\n     * **Note:** JavaScript follows the IEEE-754 standard for resolving\n     * floating-point values which can produce unexpected results.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.rangeRight\n     * @example\n     *\n     * _.range(4);\n     * // => [0, 1, 2, 3]\n     *\n     * _.range(-4);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 5);\n     * // => [1, 2, 3, 4]\n     *\n     * _.range(0, 20, 5);\n     * // => [0, 5, 10, 15]\n     *\n     * _.range(0, -4, -1);\n     * // => [0, -1, -2, -3]\n     *\n     * _.range(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.range(0);\n     * // => []\n     */\n    var range = createRange();\n\n    /**\n     * This method is like `_.range` except that it populates values in\n     * descending order.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {number} [start=0] The start of the range.\n     * @param {number} end The end of the range.\n     * @param {number} [step=1] The value to increment or decrement by.\n     * @returns {Array} Returns the range of numbers.\n     * @see _.inRange, _.range\n     * @example\n     *\n     * _.rangeRight(4);\n     * // => [3, 2, 1, 0]\n     *\n     * _.rangeRight(-4);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 5);\n     * // => [4, 3, 2, 1]\n     *\n     * _.rangeRight(0, 20, 5);\n     * // => [15, 10, 5, 0]\n     *\n     * _.rangeRight(0, -4, -1);\n     * // => [-3, -2, -1, 0]\n     *\n     * _.rangeRight(1, 4, 0);\n     * // => [1, 1, 1]\n     *\n     * _.rangeRight(0);\n     * // => []\n     */\n    var rangeRight = createRange(true);\n\n    /**\n     * This method returns a new empty array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Array} Returns the new empty array.\n     * @example\n     *\n     * var arrays = _.times(2, _.stubArray);\n     *\n     * console.log(arrays);\n     * // => [[], []]\n     *\n     * console.log(arrays[0] === arrays[1]);\n     * // => false\n     */\n    function stubArray() {\n      return [];\n    }\n\n    /**\n     * This method returns `false`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `false`.\n     * @example\n     *\n     * _.times(2, _.stubFalse);\n     * // => [false, false]\n     */\n    function stubFalse() {\n      return false;\n    }\n\n    /**\n     * This method returns a new empty object.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {Object} Returns the new empty object.\n     * @example\n     *\n     * var objects = _.times(2, _.stubObject);\n     *\n     * console.log(objects);\n     * // => [{}, {}]\n     *\n     * console.log(objects[0] === objects[1]);\n     * // => false\n     */\n    function stubObject() {\n      return {};\n    }\n\n    /**\n     * This method returns an empty string.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {string} Returns the empty string.\n     * @example\n     *\n     * _.times(2, _.stubString);\n     * // => ['', '']\n     */\n    function stubString() {\n      return '';\n    }\n\n    /**\n     * This method returns `true`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.13.0\n     * @category Util\n     * @returns {boolean} Returns `true`.\n     * @example\n     *\n     * _.times(2, _.stubTrue);\n     * // => [true, true]\n     */\n    function stubTrue() {\n      return true;\n    }\n\n    /**\n     * Invokes the iteratee `n` times, returning an array of the results of\n     * each invocation. The iteratee is invoked with one argument; (index).\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {number} n The number of times to invoke `iteratee`.\n     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n     * @returns {Array} Returns the array of results.\n     * @example\n     *\n     * _.times(3, String);\n     * // => ['0', '1', '2']\n     *\n     *  _.times(4, _.constant(0));\n     * // => [0, 0, 0, 0]\n     */\n    function times(n, iteratee) {\n      n = toInteger(n);\n      if (n < 1 || n > MAX_SAFE_INTEGER) {\n        return [];\n      }\n      var index = MAX_ARRAY_LENGTH,\n          length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n      iteratee = getIteratee(iteratee);\n      n -= MAX_ARRAY_LENGTH;\n\n      var result = baseTimes(length, iteratee);\n      while (++index < n) {\n        iteratee(index);\n      }\n      return result;\n    }\n\n    /**\n     * Converts `value` to a property path array.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Util\n     * @param {*} value The value to convert.\n     * @returns {Array} Returns the new property path array.\n     * @example\n     *\n     * _.toPath('a.b.c');\n     * // => ['a', 'b', 'c']\n     *\n     * _.toPath('a[0].b.c');\n     * // => ['a', '0', 'b', 'c']\n     */\n    function toPath(value) {\n      if (isArray(value)) {\n        return arrayMap(value, toKey);\n      }\n      return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n    }\n\n    /**\n     * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Util\n     * @param {string} [prefix=''] The value to prefix the ID with.\n     * @returns {string} Returns the unique ID.\n     * @example\n     *\n     * _.uniqueId('contact_');\n     * // => 'contact_104'\n     *\n     * _.uniqueId();\n     * // => '105'\n     */\n    function uniqueId(prefix) {\n      var id = ++idCounter;\n      return toString(prefix) + id;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * Adds two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {number} augend The first number in an addition.\n     * @param {number} addend The second number in an addition.\n     * @returns {number} Returns the total.\n     * @example\n     *\n     * _.add(6, 4);\n     * // => 10\n     */\n    var add = createMathOperation(function(augend, addend) {\n      return augend + addend;\n    }, 0);\n\n    /**\n     * Computes `number` rounded up to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round up.\n     * @param {number} [precision=0] The precision to round up to.\n     * @returns {number} Returns the rounded up number.\n     * @example\n     *\n     * _.ceil(4.006);\n     * // => 5\n     *\n     * _.ceil(6.004, 2);\n     * // => 6.01\n     *\n     * _.ceil(6040, -2);\n     * // => 6100\n     */\n    var ceil = createRound('ceil');\n\n    /**\n     * Divide two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} dividend The first number in a division.\n     * @param {number} divisor The second number in a division.\n     * @returns {number} Returns the quotient.\n     * @example\n     *\n     * _.divide(6, 4);\n     * // => 1.5\n     */\n    var divide = createMathOperation(function(dividend, divisor) {\n      return dividend / divisor;\n    }, 1);\n\n    /**\n     * Computes `number` rounded down to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round down.\n     * @param {number} [precision=0] The precision to round down to.\n     * @returns {number} Returns the rounded down number.\n     * @example\n     *\n     * _.floor(4.006);\n     * // => 4\n     *\n     * _.floor(0.046, 2);\n     * // => 0.04\n     *\n     * _.floor(4060, -2);\n     * // => 4000\n     */\n    var floor = createRound('floor');\n\n    /**\n     * Computes the maximum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * _.max([4, 2, 8, 6]);\n     * // => 8\n     *\n     * _.max([]);\n     * // => undefined\n     */\n    function max(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseGt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.max` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the maximum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.maxBy(objects, function(o) { return o.n; });\n     * // => { 'n': 2 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.maxBy(objects, 'n');\n     * // => { 'n': 2 }\n     */\n    function maxBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseGt)\n        : undefined;\n    }\n\n    /**\n     * Computes the mean of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * _.mean([4, 2, 8, 6]);\n     * // => 5\n     */\n    function mean(array) {\n      return baseMean(array, identity);\n    }\n\n    /**\n     * This method is like `_.mean` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be averaged.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the mean.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.meanBy(objects, function(o) { return o.n; });\n     * // => 5\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.meanBy(objects, 'n');\n     * // => 5\n     */\n    function meanBy(array, iteratee) {\n      return baseMean(array, getIteratee(iteratee, 2));\n    }\n\n    /**\n     * Computes the minimum value of `array`. If `array` is empty or falsey,\n     * `undefined` is returned.\n     *\n     * @static\n     * @since 0.1.0\n     * @memberOf _\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * _.min([4, 2, 8, 6]);\n     * // => 2\n     *\n     * _.min([]);\n     * // => undefined\n     */\n    function min(array) {\n      return (array && array.length)\n        ? baseExtremum(array, identity, baseLt)\n        : undefined;\n    }\n\n    /**\n     * This method is like `_.min` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the criterion by which\n     * the value is ranked. The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {*} Returns the minimum value.\n     * @example\n     *\n     * var objects = [{ 'n': 1 }, { 'n': 2 }];\n     *\n     * _.minBy(objects, function(o) { return o.n; });\n     * // => { 'n': 1 }\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.minBy(objects, 'n');\n     * // => { 'n': 1 }\n     */\n    function minBy(array, iteratee) {\n      return (array && array.length)\n        ? baseExtremum(array, getIteratee(iteratee, 2), baseLt)\n        : undefined;\n    }\n\n    /**\n     * Multiply two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.7.0\n     * @category Math\n     * @param {number} multiplier The first number in a multiplication.\n     * @param {number} multiplicand The second number in a multiplication.\n     * @returns {number} Returns the product.\n     * @example\n     *\n     * _.multiply(6, 4);\n     * // => 24\n     */\n    var multiply = createMathOperation(function(multiplier, multiplicand) {\n      return multiplier * multiplicand;\n    }, 1);\n\n    /**\n     * Computes `number` rounded to `precision`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.10.0\n     * @category Math\n     * @param {number} number The number to round.\n     * @param {number} [precision=0] The precision to round to.\n     * @returns {number} Returns the rounded number.\n     * @example\n     *\n     * _.round(4.006);\n     * // => 4\n     *\n     * _.round(4.006, 2);\n     * // => 4.01\n     *\n     * _.round(4060, -2);\n     * // => 4100\n     */\n    var round = createRound('round');\n\n    /**\n     * Subtract two numbers.\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {number} minuend The first number in a subtraction.\n     * @param {number} subtrahend The second number in a subtraction.\n     * @returns {number} Returns the difference.\n     * @example\n     *\n     * _.subtract(6, 4);\n     * // => 2\n     */\n    var subtract = createMathOperation(function(minuend, subtrahend) {\n      return minuend - subtrahend;\n    }, 0);\n\n    /**\n     * Computes the sum of the values in `array`.\n     *\n     * @static\n     * @memberOf _\n     * @since 3.4.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * _.sum([4, 2, 8, 6]);\n     * // => 20\n     */\n    function sum(array) {\n      return (array && array.length)\n        ? baseSum(array, identity)\n        : 0;\n    }\n\n    /**\n     * This method is like `_.sum` except that it accepts `iteratee` which is\n     * invoked for each element in `array` to generate the value to be summed.\n     * The iteratee is invoked with one argument: (value).\n     *\n     * @static\n     * @memberOf _\n     * @since 4.0.0\n     * @category Math\n     * @param {Array} array The array to iterate over.\n     * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n     * @returns {number} Returns the sum.\n     * @example\n     *\n     * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n     *\n     * _.sumBy(objects, function(o) { return o.n; });\n     * // => 20\n     *\n     * // The `_.property` iteratee shorthand.\n     * _.sumBy(objects, 'n');\n     * // => 20\n     */\n    function sumBy(array, iteratee) {\n      return (array && array.length)\n        ? baseSum(array, getIteratee(iteratee, 2))\n        : 0;\n    }\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return wrapped values in chain sequences.\n    lodash.after = after;\n    lodash.ary = ary;\n    lodash.assign = assign;\n    lodash.assignIn = assignIn;\n    lodash.assignInWith = assignInWith;\n    lodash.assignWith = assignWith;\n    lodash.at = at;\n    lodash.before = before;\n    lodash.bind = bind;\n    lodash.bindAll = bindAll;\n    lodash.bindKey = bindKey;\n    lodash.castArray = castArray;\n    lodash.chain = chain;\n    lodash.chunk = chunk;\n    lodash.compact = compact;\n    lodash.concat = concat;\n    lodash.cond = cond;\n    lodash.conforms = conforms;\n    lodash.constant = constant;\n    lodash.countBy = countBy;\n    lodash.create = create;\n    lodash.curry = curry;\n    lodash.curryRight = curryRight;\n    lodash.debounce = debounce;\n    lodash.defaults = defaults;\n    lodash.defaultsDeep = defaultsDeep;\n    lodash.defer = defer;\n    lodash.delay = delay;\n    lodash.difference = difference;\n    lodash.differenceBy = differenceBy;\n    lodash.differenceWith = differenceWith;\n    lodash.drop = drop;\n    lodash.dropRight = dropRight;\n    lodash.dropRightWhile = dropRightWhile;\n    lodash.dropWhile = dropWhile;\n    lodash.fill = fill;\n    lodash.filter = filter;\n    lodash.flatMap = flatMap;\n    lodash.flatMapDeep = flatMapDeep;\n    lodash.flatMapDepth = flatMapDepth;\n    lodash.flatten = flatten;\n    lodash.flattenDeep = flattenDeep;\n    lodash.flattenDepth = flattenDepth;\n    lodash.flip = flip;\n    lodash.flow = flow;\n    lodash.flowRight = flowRight;\n    lodash.fromPairs = fromPairs;\n    lodash.functions = functions;\n    lodash.functionsIn = functionsIn;\n    lodash.groupBy = groupBy;\n    lodash.initial = initial;\n    lodash.intersection = intersection;\n    lodash.intersectionBy = intersectionBy;\n    lodash.intersectionWith = intersectionWith;\n    lodash.invert = invert;\n    lodash.invertBy = invertBy;\n    lodash.invokeMap = invokeMap;\n    lodash.iteratee = iteratee;\n    lodash.keyBy = keyBy;\n    lodash.keys = keys;\n    lodash.keysIn = keysIn;\n    lodash.map = map;\n    lodash.mapKeys = mapKeys;\n    lodash.mapValues = mapValues;\n    lodash.matches = matches;\n    lodash.matchesProperty = matchesProperty;\n    lodash.memoize = memoize;\n    lodash.merge = merge;\n    lodash.mergeWith = mergeWith;\n    lodash.method = method;\n    lodash.methodOf = methodOf;\n    lodash.mixin = mixin;\n    lodash.negate = negate;\n    lodash.nthArg = nthArg;\n    lodash.omit = omit;\n    lodash.omitBy = omitBy;\n    lodash.once = once;\n    lodash.orderBy = orderBy;\n    lodash.over = over;\n    lodash.overArgs = overArgs;\n    lodash.overEvery = overEvery;\n    lodash.overSome = overSome;\n    lodash.partial = partial;\n    lodash.partialRight = partialRight;\n    lodash.partition = partition;\n    lodash.pick = pick;\n    lodash.pickBy = pickBy;\n    lodash.property = property;\n    lodash.propertyOf = propertyOf;\n    lodash.pull = pull;\n    lodash.pullAll = pullAll;\n    lodash.pullAllBy = pullAllBy;\n    lodash.pullAllWith = pullAllWith;\n    lodash.pullAt = pullAt;\n    lodash.range = range;\n    lodash.rangeRight = rangeRight;\n    lodash.rearg = rearg;\n    lodash.reject = reject;\n    lodash.remove = remove;\n    lodash.rest = rest;\n    lodash.reverse = reverse;\n    lodash.sampleSize = sampleSize;\n    lodash.set = set;\n    lodash.setWith = setWith;\n    lodash.shuffle = shuffle;\n    lodash.slice = slice;\n    lodash.sortBy = sortBy;\n    lodash.sortedUniq = sortedUniq;\n    lodash.sortedUniqBy = sortedUniqBy;\n    lodash.split = split;\n    lodash.spread = spread;\n    lodash.tail = tail;\n    lodash.take = take;\n    lodash.takeRight = takeRight;\n    lodash.takeRightWhile = takeRightWhile;\n    lodash.takeWhile = takeWhile;\n    lodash.tap = tap;\n    lodash.throttle = throttle;\n    lodash.thru = thru;\n    lodash.toArray = toArray;\n    lodash.toPairs = toPairs;\n    lodash.toPairsIn = toPairsIn;\n    lodash.toPath = toPath;\n    lodash.toPlainObject = toPlainObject;\n    lodash.transform = transform;\n    lodash.unary = unary;\n    lodash.union = union;\n    lodash.unionBy = unionBy;\n    lodash.unionWith = unionWith;\n    lodash.uniq = uniq;\n    lodash.uniqBy = uniqBy;\n    lodash.uniqWith = uniqWith;\n    lodash.unset = unset;\n    lodash.unzip = unzip;\n    lodash.unzipWith = unzipWith;\n    lodash.update = update;\n    lodash.updateWith = updateWith;\n    lodash.values = values;\n    lodash.valuesIn = valuesIn;\n    lodash.without = without;\n    lodash.words = words;\n    lodash.wrap = wrap;\n    lodash.xor = xor;\n    lodash.xorBy = xorBy;\n    lodash.xorWith = xorWith;\n    lodash.zip = zip;\n    lodash.zipObject = zipObject;\n    lodash.zipObjectDeep = zipObjectDeep;\n    lodash.zipWith = zipWith;\n\n    // Add aliases.\n    lodash.entries = toPairs;\n    lodash.entriesIn = toPairsIn;\n    lodash.extend = assignIn;\n    lodash.extendWith = assignInWith;\n\n    // Add methods to `lodash.prototype`.\n    mixin(lodash, lodash);\n\n    /*------------------------------------------------------------------------*/\n\n    // Add methods that return unwrapped values in chain sequences.\n    lodash.add = add;\n    lodash.attempt = attempt;\n    lodash.camelCase = camelCase;\n    lodash.capitalize = capitalize;\n    lodash.ceil = ceil;\n    lodash.clamp = clamp;\n    lodash.clone = clone;\n    lodash.cloneDeep = cloneDeep;\n    lodash.cloneDeepWith = cloneDeepWith;\n    lodash.cloneWith = cloneWith;\n    lodash.conformsTo = conformsTo;\n    lodash.deburr = deburr;\n    lodash.defaultTo = defaultTo;\n    lodash.divide = divide;\n    lodash.endsWith = endsWith;\n    lodash.eq = eq;\n    lodash.escape = escape;\n    lodash.escapeRegExp = escapeRegExp;\n    lodash.every = every;\n    lodash.find = find;\n    lodash.findIndex = findIndex;\n    lodash.findKey = findKey;\n    lodash.findLast = findLast;\n    lodash.findLastIndex = findLastIndex;\n    lodash.findLastKey = findLastKey;\n    lodash.floor = floor;\n    lodash.forEach = forEach;\n    lodash.forEachRight = forEachRight;\n    lodash.forIn = forIn;\n    lodash.forInRight = forInRight;\n    lodash.forOwn = forOwn;\n    lodash.forOwnRight = forOwnRight;\n    lodash.get = get;\n    lodash.gt = gt;\n    lodash.gte = gte;\n    lodash.has = has;\n    lodash.hasIn = hasIn;\n    lodash.head = head;\n    lodash.identity = identity;\n    lodash.includes = includes;\n    lodash.indexOf = indexOf;\n    lodash.inRange = inRange;\n    lodash.invoke = invoke;\n    lodash.isArguments = isArguments;\n    lodash.isArray = isArray;\n    lodash.isArrayBuffer = isArrayBuffer;\n    lodash.isArrayLike = isArrayLike;\n    lodash.isArrayLikeObject = isArrayLikeObject;\n    lodash.isBoolean = isBoolean;\n    lodash.isBuffer = isBuffer;\n    lodash.isDate = isDate;\n    lodash.isElement = isElement;\n    lodash.isEmpty = isEmpty;\n    lodash.isEqual = isEqual;\n    lodash.isEqualWith = isEqualWith;\n    lodash.isError = isError;\n    lodash.isFinite = isFinite;\n    lodash.isFunction = isFunction;\n    lodash.isInteger = isInteger;\n    lodash.isLength = isLength;\n    lodash.isMap = isMap;\n    lodash.isMatch = isMatch;\n    lodash.isMatchWith = isMatchWith;\n    lodash.isNaN = isNaN;\n    lodash.isNative = isNative;\n    lodash.isNil = isNil;\n    lodash.isNull = isNull;\n    lodash.isNumber = isNumber;\n    lodash.isObject = isObject;\n    lodash.isObjectLike = isObjectLike;\n    lodash.isPlainObject = isPlainObject;\n    lodash.isRegExp = isRegExp;\n    lodash.isSafeInteger = isSafeInteger;\n    lodash.isSet = isSet;\n    lodash.isString = isString;\n    lodash.isSymbol = isSymbol;\n    lodash.isTypedArray = isTypedArray;\n    lodash.isUndefined = isUndefined;\n    lodash.isWeakMap = isWeakMap;\n    lodash.isWeakSet = isWeakSet;\n    lodash.join = join;\n    lodash.kebabCase = kebabCase;\n    lodash.last = last;\n    lodash.lastIndexOf = lastIndexOf;\n    lodash.lowerCase = lowerCase;\n    lodash.lowerFirst = lowerFirst;\n    lodash.lt = lt;\n    lodash.lte = lte;\n    lodash.max = max;\n    lodash.maxBy = maxBy;\n    lodash.mean = mean;\n    lodash.meanBy = meanBy;\n    lodash.min = min;\n    lodash.minBy = minBy;\n    lodash.stubArray = stubArray;\n    lodash.stubFalse = stubFalse;\n    lodash.stubObject = stubObject;\n    lodash.stubString = stubString;\n    lodash.stubTrue = stubTrue;\n    lodash.multiply = multiply;\n    lodash.nth = nth;\n    lodash.noConflict = noConflict;\n    lodash.noop = noop;\n    lodash.now = now;\n    lodash.pad = pad;\n    lodash.padEnd = padEnd;\n    lodash.padStart = padStart;\n    lodash.parseInt = parseInt;\n    lodash.random = random;\n    lodash.reduce = reduce;\n    lodash.reduceRight = reduceRight;\n    lodash.repeat = repeat;\n    lodash.replace = replace;\n    lodash.result = result;\n    lodash.round = round;\n    lodash.runInContext = runInContext;\n    lodash.sample = sample;\n    lodash.size = size;\n    lodash.snakeCase = snakeCase;\n    lodash.some = some;\n    lodash.sortedIndex = sortedIndex;\n    lodash.sortedIndexBy = sortedIndexBy;\n    lodash.sortedIndexOf = sortedIndexOf;\n    lodash.sortedLastIndex = sortedLastIndex;\n    lodash.sortedLastIndexBy = sortedLastIndexBy;\n    lodash.sortedLastIndexOf = sortedLastIndexOf;\n    lodash.startCase = startCase;\n    lodash.startsWith = startsWith;\n    lodash.subtract = subtract;\n    lodash.sum = sum;\n    lodash.sumBy = sumBy;\n    lodash.template = template;\n    lodash.times = times;\n    lodash.toFinite = toFinite;\n    lodash.toInteger = toInteger;\n    lodash.toLength = toLength;\n    lodash.toLower = toLower;\n    lodash.toNumber = toNumber;\n    lodash.toSafeInteger = toSafeInteger;\n    lodash.toString = toString;\n    lodash.toUpper = toUpper;\n    lodash.trim = trim;\n    lodash.trimEnd = trimEnd;\n    lodash.trimStart = trimStart;\n    lodash.truncate = truncate;\n    lodash.unescape = unescape;\n    lodash.uniqueId = uniqueId;\n    lodash.upperCase = upperCase;\n    lodash.upperFirst = upperFirst;\n\n    // Add aliases.\n    lodash.each = forEach;\n    lodash.eachRight = forEachRight;\n    lodash.first = head;\n\n    mixin(lodash, (function() {\n      var source = {};\n      baseForOwn(lodash, function(func, methodName) {\n        if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n          source[methodName] = func;\n        }\n      });\n      return source;\n    }()), { 'chain': false });\n\n    /*------------------------------------------------------------------------*/\n\n    /**\n     * The semantic version number.\n     *\n     * @static\n     * @memberOf _\n     * @type {string}\n     */\n    lodash.VERSION = VERSION;\n\n    // Assign default placeholders.\n    arrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n      lodash[methodName].placeholder = lodash;\n    });\n\n    // Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\n    arrayEach(['drop', 'take'], function(methodName, index) {\n      LazyWrapper.prototype[methodName] = function(n) {\n        n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n        var result = (this.__filtered__ && !index)\n          ? new LazyWrapper(this)\n          : this.clone();\n\n        if (result.__filtered__) {\n          result.__takeCount__ = nativeMin(n, result.__takeCount__);\n        } else {\n          result.__views__.push({\n            'size': nativeMin(n, MAX_ARRAY_LENGTH),\n            'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n          });\n        }\n        return result;\n      };\n\n      LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n        return this.reverse()[methodName](n).reverse();\n      };\n    });\n\n    // Add `LazyWrapper` methods that accept an `iteratee` value.\n    arrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n      var type = index + 1,\n          isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n      LazyWrapper.prototype[methodName] = function(iteratee) {\n        var result = this.clone();\n        result.__iteratees__.push({\n          'iteratee': getIteratee(iteratee, 3),\n          'type': type\n        });\n        result.__filtered__ = result.__filtered__ || isFilter;\n        return result;\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.head` and `_.last`.\n    arrayEach(['head', 'last'], function(methodName, index) {\n      var takeName = 'take' + (index ? 'Right' : '');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this[takeName](1).value()[0];\n      };\n    });\n\n    // Add `LazyWrapper` methods for `_.initial` and `_.tail`.\n    arrayEach(['initial', 'tail'], function(methodName, index) {\n      var dropName = 'drop' + (index ? '' : 'Right');\n\n      LazyWrapper.prototype[methodName] = function() {\n        return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n      };\n    });\n\n    LazyWrapper.prototype.compact = function() {\n      return this.filter(identity);\n    };\n\n    LazyWrapper.prototype.find = function(predicate) {\n      return this.filter(predicate).head();\n    };\n\n    LazyWrapper.prototype.findLast = function(predicate) {\n      return this.reverse().find(predicate);\n    };\n\n    LazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n      if (typeof path == 'function') {\n        return new LazyWrapper(this);\n      }\n      return this.map(function(value) {\n        return baseInvoke(value, path, args);\n      });\n    });\n\n    LazyWrapper.prototype.reject = function(predicate) {\n      return this.filter(negate(getIteratee(predicate)));\n    };\n\n    LazyWrapper.prototype.slice = function(start, end) {\n      start = toInteger(start);\n\n      var result = this;\n      if (result.__filtered__ && (start > 0 || end < 0)) {\n        return new LazyWrapper(result);\n      }\n      if (start < 0) {\n        result = result.takeRight(-start);\n      } else if (start) {\n        result = result.drop(start);\n      }\n      if (end !== undefined) {\n        end = toInteger(end);\n        result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n      }\n      return result;\n    };\n\n    LazyWrapper.prototype.takeRightWhile = function(predicate) {\n      return this.reverse().takeWhile(predicate).reverse();\n    };\n\n    LazyWrapper.prototype.toArray = function() {\n      return this.take(MAX_ARRAY_LENGTH);\n    };\n\n    // Add `LazyWrapper` methods to `lodash.prototype`.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n          isTaker = /^(?:head|last)$/.test(methodName),\n          lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n          retUnwrapped = isTaker || /^find/.test(methodName);\n\n      if (!lodashFunc) {\n        return;\n      }\n      lodash.prototype[methodName] = function() {\n        var value = this.__wrapped__,\n            args = isTaker ? [1] : arguments,\n            isLazy = value instanceof LazyWrapper,\n            iteratee = args[0],\n            useLazy = isLazy || isArray(value);\n\n        var interceptor = function(value) {\n          var result = lodashFunc.apply(lodash, arrayPush([value], args));\n          return (isTaker && chainAll) ? result[0] : result;\n        };\n\n        if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n          // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n          isLazy = useLazy = false;\n        }\n        var chainAll = this.__chain__,\n            isHybrid = !!this.__actions__.length,\n            isUnwrapped = retUnwrapped && !chainAll,\n            onlyLazy = isLazy && !isHybrid;\n\n        if (!retUnwrapped && useLazy) {\n          value = onlyLazy ? value : new LazyWrapper(this);\n          var result = func.apply(value, args);\n          result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n          return new LodashWrapper(result, chainAll);\n        }\n        if (isUnwrapped && onlyLazy) {\n          return func.apply(this, args);\n        }\n        result = this.thru(interceptor);\n        return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n      };\n    });\n\n    // Add `Array` methods to `lodash.prototype`.\n    arrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n      var func = arrayProto[methodName],\n          chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n          retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n      lodash.prototype[methodName] = function() {\n        var args = arguments;\n        if (retUnwrapped && !this.__chain__) {\n          var value = this.value();\n          return func.apply(isArray(value) ? value : [], args);\n        }\n        return this[chainName](function(value) {\n          return func.apply(isArray(value) ? value : [], args);\n        });\n      };\n    });\n\n    // Map minified method names to their real names.\n    baseForOwn(LazyWrapper.prototype, function(func, methodName) {\n      var lodashFunc = lodash[methodName];\n      if (lodashFunc) {\n        var key = (lodashFunc.name + ''),\n            names = realNames[key] || (realNames[key] = []);\n\n        names.push({ 'name': methodName, 'func': lodashFunc });\n      }\n    });\n\n    realNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n      'name': 'wrapper',\n      'func': undefined\n    }];\n\n    // Add methods to `LazyWrapper`.\n    LazyWrapper.prototype.clone = lazyClone;\n    LazyWrapper.prototype.reverse = lazyReverse;\n    LazyWrapper.prototype.value = lazyValue;\n\n    // Add chain sequence methods to the `lodash` wrapper.\n    lodash.prototype.at = wrapperAt;\n    lodash.prototype.chain = wrapperChain;\n    lodash.prototype.commit = wrapperCommit;\n    lodash.prototype.next = wrapperNext;\n    lodash.prototype.plant = wrapperPlant;\n    lodash.prototype.reverse = wrapperReverse;\n    lodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = wrapperValue;\n\n    // Add lazy aliases.\n    lodash.prototype.first = lodash.prototype.head;\n\n    if (symIterator) {\n      lodash.prototype[symIterator] = wrapperToIterator;\n    }\n    return lodash;\n  });\n\n  /*--------------------------------------------------------------------------*/\n\n  // Export lodash.\n  var _ = runInContext();\n\n  // Some AMD build optimizers, like r.js, check for condition patterns like:\n  if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\n    // Expose Lodash on the global object to prevent errors when Lodash is\n    // loaded by a script tag in the presence of an AMD loader.\n    // See http://requirejs.org/docs/errors.html#mismatch for more details.\n    // Use `_.noConflict` to remove Lodash from the global object.\n    root._ = _;\n\n    // Define as an anonymous module so, through path mapping, it can be\n    // referenced as the \"underscore\" module.\n    define(function() {\n      return _;\n    });\n  }\n  // Check for `exports` after `define` in case a build optimizer adds it.\n  else if (freeModule) {\n    // Export for Node.js.\n    (freeModule.exports = _)._ = _;\n    // Export for CommonJS support.\n    freeExports._ = _;\n  }\n  else {\n    // Export to the global object.\n    root._ = _;\n  }\n}.call(this));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/lodash/lodash.js\n// module id = 106\n// module chunks = 0","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/module.js\n// module id = 107\n// module chunks = 0","module.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-danger\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a>\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Preserver </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Recycle Bin</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-bars' : 'fa fa-th'}}\\\"></i>\\n            </a>\\n          </li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\">\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div class=\\\"panel-body my-note module line-clamp\\\">\\n        <p><strong>{{text.doc?.title}}</strong></p>\\n        <p>{{text.doc?.note}}</p>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <li class=\\\"dropup\\\">\\n            <a class=\\\"btn btn-link btn-raised\\\"\\n              title=\\\"Delete forever\\\" data-target=\\\"#deleteNote\\\" data-toggle=\\\"modal\\\" (click)=\\\"setDeleteNote(text, noteRow)\\\">\\n              <i class=\\\"fa fa-trash\\\"></i>\\n            </a>\\n          </li>\\n          <li>\\n            <a class=\\\"btn btn-link btn-raised\\\"\\n              title=\\\"Restore\\\" (click)=\\\"restoreNote(text, noteRow)\\\">\\n              <i class=\\\"fa fa-undo\\\"></i>\\n            </a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"modal fade\\\" id=\\\"{{'note' + text.doc._id}}\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n        <div class=\\\"modal-dialog\\\">\\n          <div class=\\\"{{'modal-content ' + text.doc.color}}\\\">\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title\\\">\\n                <p class=\\\"\\\"><strong>{{text.doc.title}}</strong></p>\\n              </h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              <p class=\\\"edit-saved-textera\\\">{{text.doc.note}}</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"deleteNote\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Delete note forever?</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <p></p>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm delete-model-btn\\\" data-dismiss=\\\"modal\\\" (click)=\\\"deleteNote()\\\">DELETE</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <div class=\\\"empty-notes-icon empty-bin\\\"></div>\\n    <div class=\\\"empty-notes\\\">No notes in Recycle Bin</div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/bin/bin.component.html\n// module id = 108\n// module chunks = 0","import { Component, OnInit }    from '@angular/core';\nimport { NotificationsService } from \"angular2-notifications\";\nimport { Subscription }         from 'rxjs/Subscription';\n\nimport { NotesTable,\n         DragulaService,\n         NotesTableService }    from '../../services';\nimport * as _                   from 'lodash';\n\n@Component({\n  selector: 'Home',\n  template: require('./home.component.html')\n})\nexport class HomeComponent implements OnInit {\n\n  public order:any;\n  public notes: any;\n  public draft: any;\n  public orderNotes: any;\n  public editNoteDraft: any;\n  public toEditNote: any;\n  public remindMe: any;\n  public notificationOptions: any;\n  public spinner: boolean = true;\n  public displayList: boolean = false;\n  public inputFocusClass: boolean = false;\n\n  public notes_table = NOTES_TABLE;\n  public subscription:Subscription;\n  public emptyHtmlMsg: boolean = false;\n  public date2MinDate: any;\n\n  constructor (\n      private _dragulaService: DragulaService,\n      private _notesService: NotesTableService,\n      private _notificationsService: NotificationsService\n    ) {\n    this.notes = [];\n    this.draft = {};\n    this.editNoteDraft = {};\n    this.toEditNote = null;\n    this.remindMe = {\n      date: null,\n      repeat: 'doesnotrepeat',\n      noteToSet: null\n    };\n    this.order = [];\n    this.orderNotes = [];\n    this.notificationOptions = {\n      timeOut: 2000,\n      lastOnBottom: true,\n      clickToClose: true,\n      showProgressBar: false,\n      pauseOnHover: true,\n      preventDuplicates: false,\n      theClass: \"notes-notifications notes\",\n      rtl: false\n    };\n    let yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    this.date2MinDate = yesterday;\n    _dragulaService.dropModel.subscribe((value: any) => {\n      this.onDropModel(value.slice(1));\n    });\n    this.displayList = localStorage.getItem(\"displayNotesTypeList\") == 'true' ? true : false;\n  }\n\n  ngOnInit() {\n    this.subscription = this._notesService.notes_tables$.subscribe(\n      notes_table => this.notes_table = notes_table\n    );\n    this.refreshNotesTables();\n  }\n\n  _setInputFocus(isFocus:boolean) {\n    this.inputFocusClass = isFocus;\n  }\n\n  private onDropModel(args: any) {\n    let [el, target, source] = args;\n    let order = [];\n    this.notes.forEach(row => {\n      order.push(row.doc._id);\n    });\n    localStorage.setItem(\"order\", JSON.stringify(order));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  refreshNotesTables() {\n    this._notesService.getNotes('notes').then(\n      alldoc => {\n        this.notes_table = alldoc.rows;\n        let testNotes = [];\n        testNotes = this.notes_table;\n        if (localStorage.getItem('order')) {\n          this.order = JSON.parse(localStorage.getItem(\"order\"));\n        }\n        this.notes = [];\n        this.order.forEach(el => {\n          testNotes.forEach(row => {\n            if (String(row.doc._id) === String(el)) {\n              this.notes.push(row);\n            }\n          });\n        });\n        if (_.isEmpty(this.notes)) {\n          this.emptyHtmlMsg = true;\n        } else {\n          this.emptyHtmlMsg = false;\n        }\n        this.spinner = false;\n      },\n      err => {\n        this.spinner = false;\n      }\n    );\n  }\n\n  saveNote(e: Event, notetextarea: any) {\n    if (_.trim(this.draft.title) || _.trim(this.draft.note)) {\n      this.draft._id = 'note_' + Math.floor(Date.now() / 1000);\n      this.draft.color = \"label-default\";\n      this.draft.time = new Date().toISOString();\n      this.draft.label = \"\";\n      this.draft.reminder = null;\n      this.draft.restore = \"note\";\n      this._notesService.saveNote('notes', this.draft)\n        .then(res => {\n          notetextarea.placeholder = \"Write a note\";\n          notetextarea.style.height = \"auto\";\n          notetextarea.style.height = \"48px\";\n          this.updateOrder(this.draft);\n          this.inputFocusClass = false;\n          this.draft = {};\n          this.refreshNotesTables();\n        }, err => {\n          this.draft = {};\n          notetextarea.placeholder = \"Write a note\";\n          notetextarea.style.height = \"auto\";\n          notetextarea.style.height = \"48px\";\n        });\n    } else {\n      notetextarea.placeholder = \"Write a note\";\n      notetextarea.style.height = \"auto\";\n      notetextarea.style.height = \"48px\";\n      notetextarea.value = null;\n      this.inputFocusClass = false;\n    }\n  }\n\n  deleteNote(note, noteRow) {\n    noteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n    setTimeout(() => {\n      this._notesService.deleteNote('notes', note.doc)\n        .then(res => {\n          this._notificationsService.success(\"Done\", \"Note moved to Recycle Bin\");\n          this.deleteFromOrder(note);\n          this.refreshNotesTables();\n        });\n      let binNote = note.doc;\n      delete binNote._rev;\n      this._notesService.saveNote('binNotes', binNote);\n    }, 200);\n  }\n\n  setNoteColor(color, note) {\n    if (note.doc.color != color) {\n      note.doc.color = color;\n      this._notesService.updateNote('notes', note.doc)\n        .then(res => {\n          this.refreshNotesTables();\n        });\n    }\n  }\n\n  setRemindMeNote(note) {\n    this.remindMe.noteToSet = note;\n  }\n\n  setReminderClick() {\n    if (this.remindMe.date) {\n      this.remindMe.noteToSet.doc.reminder = {\n        date: this.remindMe.date.toString(),\n        repeat: this.remindMe.repeat\n      };\n      this._notesService.updateNote('notes', this.remindMe.noteToSet.doc)\n        .then(res => {\n          this.remindMe.date = null;\n          this.remindMe.repeat = 'doesnotrepeat';\n          this.remindMe.noteToSet = null;\n          this._notesService.updateReminderTable('notes');\n          this.refreshNotesTables();\n          this._notificationsService.alert(\"Done\", \"Reminder set\");\n        }, err => {\n          this.editNoteDraft = {};\n        });\n    }\n  }\n\n  removeReminder(note) {\n    note.doc.reminder = null;\n    this._notesService.updateNote('notes', note.doc);\n    this._notesService.updateReminderTable('notes');\n    this.refreshNotesTables();\n  }\n\n  updateModalNote(note) {\n    note.doc.note = this.editNoteDraft.note;\n    note.doc.title = this.editNoteDraft.title;\n    this._notesService.updateNote('notes', note.doc)\n      .then(res => {\n        this.editNoteDraft = {};\n        this.refreshNotesTables();\n      }, err => {\n        this.editNoteDraft = {};\n      });\n  }\n\n  editModalNoteClick(note) {\n    this.toEditNote = note;\n    this.editNoteDraft.title = note.doc.title;\n    this.editNoteDraft.note = note.doc.note;\n  }\n\n  makeArchive(note, noteRow) {\n    noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n    setTimeout(() => {\n      this._notesService.deleteNote('notes', note.doc)\n        .then(res => {\n          this._notificationsService.success(\"Done\", \"Note archived\");\n          this.deleteFromOrder(note);\n          this.refreshNotesTables();\n        });\n      let archive_note = note;\n      delete archive_note.doc._rev;\n      archive_note.doc.restore = \"archive\";\n      this._notesService.saveNote('archiveNotes', archive_note.doc)\n        .then(res => {\n          this.updateArchiveOrder(archive_note.doc);\n        });\n    }, 200);\n  }\n\n  displayTypeChange() {\n    this.displayList = this.displayList ? false : true;\n    localStorage.setItem(\"displayNotesTypeList\", String(this.displayList));\n  }\n\n  deleteFromOrder(note) {\n    let index = this.order.indexOf(this.order.filter(row => {\n      return String(row) === String(note.doc._id);\n    })[0]);\n    if (index !== -1) {\n      this.order.splice(index, 1);\n      localStorage.setItem(\"order\", JSON.stringify(this.order));\n    }\n  }\n\n  updateOrder(draft) {\n    let newOrder: any = [];\n    if (localStorage.getItem('order')) {\n      newOrder = JSON.parse(localStorage.getItem('order'));\n      newOrder.unshift(draft._id);\n    } else {\n      newOrder.push(draft._id);\n    }\n    localStorage.setItem(\"order\", JSON.stringify(newOrder));\n  }\n\n  updateArchiveOrder(draft: any) {\n    let newArchiveOrder: any = [];\n    if (localStorage.getItem('archiveOrder')) {\n      newArchiveOrder = JSON.parse(localStorage.getItem('archiveOrder'));\n      newArchiveOrder.unshift(draft._id);\n    } else {\n      newArchiveOrder.push(draft._id);\n    }\n    localStorage.setItem(\"archiveOrder\", JSON.stringify(newArchiveOrder));\n  }\n}\n\nlet NOTES_TABLE: NotesTable[] = []\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/home/home.component.ts","module.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <!-- <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a> -->\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Keeper </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Notes</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-th' : 'fa fa-bars'}}\\\"></i>\\n            </a>\\n          </li>\\n          <!-- <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/about']\\\">About</a></li>\\n            </ul>\\n          </li> -->\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"container\\\">\\n      <div class=\\\"panel panel-default note-editor animated bounceInDown\\\">\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"form-group label-floating\\\" *ngIf=\\\"inputFocusClass\\\">\\n             <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"draft.title\\\" >\\n          </div>\\n          <div class=\\\"form-group label-floating\\\">\\n             <textarea class=\\\"form-control\\\" #textarea autosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"draft.note\\\" (focus)=\\\"_setInputFocus(true)\\\"></textarea>\\n          </div>\\n          <div class=\\\"form-group\\\" *ngIf=\\\"inputFocusClass\\\">\\n            <button class=\\\"btn btn-primary btn-sm pull-right\\\" (click)=\\\"saveNote($event, textarea)\\\">Save</button>\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\" [dragula]='\\\"another-bag\\\"' [dragulaModel]='notes'>\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div data-toggle=\\\"modal\\\" data-target=\\\"#note_edit_modal\\\" (click)=\\\"editModalNoteClick(text)\\\">\\n        <div class=\\\"panel-body my-note module line-clamp\\\">\\n          <p><strong>{{text.doc.title}}</strong></p>\\n          <p>{{text.doc.note}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <!-- <li><a data-toggle=\\\"modal\\\"\\n                 data-target=\\\"#remind_me_modal\\\"\\n                 (click)=\\\"setRemindMeNote(text)\\\"\\n                 class=\\\"btn btn-link btn-raised\\\"\\n                 title=\\\"Remind\\\">\\n                <i class=\\\"fa fa-bell\\\"></i>\\n              </a>\\n          </li> -->\\n          <!-- <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Archive\\\" (click)=\\\"makeArchive(text, noteRow)\\\">\\n            <i class=\\\"fa fa-download\\\"></i>\\n          </a></li> -->\\n          <li class=\\\"dropup\\\">\\n            <a data-target=\\\"#\\\" class=\\\"btn btn-link btn-raised dropup\\\"\\n              title=\\\"Color\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-th-large\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-default', text)\\\" class=\\\"btn btn-default btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary', text)\\\" class=\\\"btn btn-primary btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-success', text)\\\" class=\\\"btn btn-success btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-info', text)\\\" class=\\\"btn btn-info btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-warning', text)\\\" class=\\\"btn btn-warning btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-danger', text)\\\" class=\\\"btn btn-danger btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-darkgray', text)\\\" class=\\\"btn btn-darkgray btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary-old', text)\\\" class=\\\"btn btn-primary-old btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n            </ul>\\n          </li>\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n                title=\\\"Delete\\\" (click)=\\\"deleteNote(text, noteRow)\\\">\\n                <i class=\\\"fa fa-trash\\\"></i>\\n              </a>\\n          </li>\\n        </ul>\\n      </div>\\n      <div class=\\\"{{text.doc.color + ' reminder-info'}}\\\" *ngIf=\\\"text.doc.reminder\\\">\\n        <i class=\\\"fa fa-clock-o\\\"></i> {{text.doc.reminder?.date}}<span class=\\\"pull-right\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"removeReminder(text)\\\"><i class=\\\"fa fa-times-circle\\\"></i></a></span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"note_edit_modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\" *ngIf=\\\"toEditNote\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"{{'modal-content edit-saved ' + toEditNote?.doc?.color}}\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">\\n            <div class=\\\"form-group label-floating\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control edit-saved-input\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"editNoteDraft.title\\\" [value]=\\\"toEditNote?.doc?.title\\\" >\\n            </div>\\n          </h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <textarea class=\\\"form-control edit-saved-textera\\\" #editSavedTextarea modaleditorautosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"editNoteDraft.note\\\" [value]=\\\"editNoteDraft?.doc?.note\\\"></textarea>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateModalNote(toEditNote)\\\">Done</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"remind_me_modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Remind Me</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <label><i class=\\\"fa fa-clock-o\\\"></i> Set date and time</label>\\n          <div class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"\\n                    readonly=\\\"readonly\\\"\\n                    required\\n                    placeholder=\\\"Set your schedule here\\\"\\n                    [(ngModel)]=\\\"remindMe.date\\\"\\n                    [min-date]=\\\"date2MinDate\\\"\\n                    ngui-datetime-picker>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <select id=\\\"s1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"remindMe.repeat\\\">\\n              <option value=\\\"doesnotrepeat\\\">Doesn't repeat</option>\\n              <option value=\\\"daily\\\">Daily</option>\\n              <option value=\\\"weekly\\\">Weekly</option>\\n              <option value=\\\"monthly\\\">Monthly</option>\\n              <option value=\\\"yearly\\\">Yearly</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"remindMe.date = null\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"setReminderClick()\\\">SET</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <h3 class=\\\"empty-notes-icon empty-notes-main\\\"><i class=\\\"fa fa-file-text-o fa-5x\\\"></i></h3>\\n    <div class=\\\"empty-notes\\\">Notes that you add appear here</div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/home/home.component.html\n// module id = 110\n// module chunks = 0","import { Component } from '@angular/core';\n@Component({\n  selector: 'about',\n  template: require('./about.component.html'),\n  styles: [ require('./about.component.css') ]\n})\nexport class AboutComponent { }\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/about/about.component.ts","module.exports = \"<div class=\\\"about\\\">\\n\\n  <div class=\\\"profile-card\\\">\\n\\n    <div class=\\\"header\\\">\\n\\n      <a href=\\\"#\\\" [routerLink]=\\\"['/notes']\\\">\\n        <img [src]=\\\"'/public/images/logo.png'\\\" />\\n      </a>\\n\\n      <h1>Keeper</h1>\\n\\n    </div>\\n\\n    <div class=\\\"profile-bio\\\">\\n\\n      <p>Organize your life with preserver application for keeping track of notes, tasks, and to-do lists.</p>\\n\\n    </div>\\n\\n    <ul class=\\\"profile-social-links\\\">\\n\\n      <li>\\n        <a href=\\\"#\\\" [routerLink]=\\\"['/notes']\\\">\\n          <i class=\\\"fa fa-arrow-left\\\"></i>\\n        </a>\\n      </li>\\n\\n      <!-- <li>\\n        <a href=\\\"https://github.com/hsbalar/Preserver\\\" target=\\\"_blank\\\">\\n          <i class=\\\"fa fa-github\\\"></i>\\n        </a>\\n      </li>\\n\\n      <li>\\n        <a href=\\\"https://twitter.com/Hsbalar\\\" target=\\\"_blank\\\">\\n          <i class=\\\"fa fa-twitter\\\"></i>\\n        </a>\\n      </li> -->\\n\\n    </ul>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.html\n// module id = 112\n// module chunks = 0","module.exports = \".about {\\n\\tbackground: #bcdee7 url(\\\"/public/images/bg.png\\\") no-repeat center center fixed;\\n    background-size: 120% auto;\\n    position: fixed;\\n\\tpadding: 0px;\\n\\tmargin: 0px;\\n\\twidth: 100%;\\n\\theight: 100%;\\n\\tfont: normal 14px/1.618em \\\"Hind\\\", sans-serif;\\n\\t-webkit-font-smoothing: antialiased;\\n}\\n\\nh1, h2 {\\n    font-weight: 400;\\n    margin: 0px 0px 5px 0px;\\n}\\nh1 {\\n    font-size: 24px;\\n}\\nh2 {\\n    font-size: 16px;\\n}\\np {\\n    margin: 0px;\\n}\\n\\n.back {\\n    bottom: 0;\\n    padding: 40px 0px 0px 20px;\\n}\\n\\n.profile-card {\\n\\tbackground: #FFB300;\\n\\twidth: 56px;\\n\\theight: 56px;\\n\\tposition: absolute;\\n\\tleft: 50%;\\n\\ttop: 50%;\\n    z-index: 2;\\n\\toverflow: hidden;\\n    opacity: 0;\\n    margin-top: 70px;\\n\\t-webkit-transform: translate(-50%, -50%);\\n\\ttransform: translate(-50%, -50%);\\n\\t-webkit-border-radius: 50%;\\n\\tborder-radius: 50%;\\n\\t-webkit-box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\\n\\tbox-shadow: 0px 3px 6px rgba(0 ,0, 0, 0.16), 0px 3px 6px rgba(0, 0, 0, 0.23);\\n    -webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 1.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_landscape 0.5s 1.2s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n    animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 1.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_landscape 0.5s 1.2s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n}\\n.profile-card .header {\\n    padding: 40px 20px 30px 20px;\\n    display: inline-block;\\n\\tbackground: #FFFFFF;\\n    color: #000000;\\n    margin-top: 50px;\\n    opacity: 0;\\n    text-align: center;\\n    -webkit-animation: moveIn 1s 1.1s ease forwards;\\n    animation: moveIn 1s 1.1s ease forwards;\\n}\\n.profile-card .header h1 {\\n    color: #FF5722;\\n}\\n.profile-card .header a {\\n    display: inline-block;\\n    text-align: center;\\n    position: relative;\\n    margin: 25px 30px;\\n}\\n\\n.profile-card .header a > img {\\n    width: 120px;\\n    max-width: 100%;\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n    -webkit-transition: -webkit-box-shadow 0.3s ease;\\n    transition: box-shadow 0.3s ease;\\n}\\n.profile-card .header a:hover > img {\\n    -webkit-box-shadow: 0px 0px 0px 12px rgba(0, 0, 0, 0.1);\\n    box-shadow: 0px 0px 0px 12px rgba(0, 0, 0, 0.1);\\n}\\n.profile-card .profile-bio {\\n    width: 175px;\\n    height: 180px;\\n    display: inline-block;\\n    padding: 50px 20px 30px 20px;\\n\\tbackground: #FFFFFF;\\n    color: #333333;\\n    margin-top: 50px;\\n    text-align: center;\\n    opacity: 0;\\n    -webkit-animation: moveIn 1s 1s ease forwards;\\n    animation: moveIn 1s 1s ease forwards;\\n}\\n.profile-social-links {\\n    width: 218px;\\n    display: inline-block;\\n    margin: 0px;\\n    padding: 15px 20px;\\n\\tbackground: #FFFFFF;\\n    margin-top: 50px;\\n    text-align: center;\\n    opacity: 0;\\n    -webkit-box-sizing: border-box;\\n    box-sizing: border-box;\\n    -webkit-animation: moveIn 1s 1.1s ease forwards;\\n    animation: moveIn 1s 1.1s ease forwards;\\n}\\n.profile-social-links li {\\n    list-style: none;\\n    margin: -5px 0px 0px 0px;\\n    padding: 0px;\\n    float: left;\\n    width: 33.3%;\\n    text-align: center;\\n}\\n.profile-social-links li a {\\n    display: inline-block;\\n    width: 24px;\\n    height: 24px;\\n    padding: 6px;\\n    position: relative;\\n    overflow: hidden!important;\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n}\\n.profile-social-links li a {\\n    position: relative;\\n    z-index: 1;\\n}\\n.profile-social-links li a:before {\\n    display: block;\\n    content: \\\"\\\";\\n    background: rgba(0, 0, 0, 0.3);\\n    position: absolute;\\n    left: 0px;\\n    top: 0px;\\n    width: 36px;\\n    height: 36px;\\n    opacity: 1;\\n    -webkit-transition: transform 0.4s ease, opacity 1s ease-out;\\n    transition: transform 0.4s ease, opacity 1s ease-out;\\n    -webkit-transform: scale3d(0, 0, 1);\\n    transform: scale3d(0, 0, 1);\\n    -webkit-border-radius: 50%;\\n    border-radius: 50%;\\n}\\n.profile-social-links li a:hover:before {\\n    -webkit-animation: ripple 1s ease forwards;\\n    animation: ripple 1s ease forwards;\\n}\\n.profile-social-links li a,\\n.profile-social-links li a {\\n    width: 24px;\\n}\\n\\n\\n@media screen and (min-aspect-ratio: 4/3) {\\n    body {\\n        background-size: 100% auto;\\n    }\\n    body:before {\\n        width: 0px;\\n    }\\n    @-webkit-keyframes puff {\\n        0% {\\n            top: 100%;\\n            width: 0px;\\n            padding-bottom: 0px;\\n        }\\n    \\t100% {\\n            top: 50%;\\n            width: 100%;\\n            padding-bottom: 100%;\\n        }\\n    }\\n    @keyframes puff {\\n        0% {\\n            top: 100%;\\n            width: 0px;\\n            padding-bottom: 0px;\\n        }\\n    \\t100% {\\n            top: 50%;\\n            width: 100%;\\n            padding-bottom: 100%;\\n        }\\n    }\\n}\\n@media screen and (min-height: 480px) {\\n\\t.profile-card {\\n\\t\\t-webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 1s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t\\tanimation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 1s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t}\\n\\t.profile-card header {\\n        width: auto;\\n        height: auto;\\n        padding: 30px 20px;\\n        display: block;\\n        float: none;\\n        border-right: none;\\n    }\\n    .profile-card .profile-bio {\\n        width: auto;\\n        height: auto;\\n        padding: 15px 20px 30px 20px;\\n        display: block;\\n        float: none;\\n    }\\n    .profile-social-links {\\n        width: 100%;\\n        display: block;\\n        float: none;\\n    }\\n}\\n@media screen and (min-aspect-ratio: 4/3) {\\n    body {\\n        background-size: 100% auto;\\n    }\\n    body:before {\\n        width: 0px;\\n\\t\\t-webkit-animation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 2.7s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t\\tanimation: init 0.1s 0.2s cubic-bezier(0.55, 0.055, 0.675, 0.19) forwards, moveDown 0.3s 0.8s cubic-bezier(0.6, -0.28, 0.735, 0.045) forwards, moveUp 0.5s 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards, materia_portrait 0.5s 2.7s cubic-bezier(0.86, 0, 0.07, 1) forwards;\\n\\t}\\n}\\n@-webkit-keyframes init {\\n    0% {\\n    \\twidth: 0px;\\n    \\theight: 0px;\\n    }\\n\\t100% {\\n        width: 56px;\\n        height: 56px;\\n        margin-top: 0px;\\n        opacity: 1;\\n    }\\n}\\n@keyframes init {\\n    0% {\\n    \\twidth: 0px;\\n    \\theight: 0px;\\n    }\\n\\t100% {\\n        width: 56px;\\n        height: 56px;\\n        margin-top: 0px;\\n        opacity: 1;\\n    }\\n}\\n@-webkit-keyframes puff_portrait {\\n    0% {\\n        top: 100%;\\n        height: 0px;\\n        padding: 0px;\\n    }\\n\\t100% {\\n        top: 50%;\\n        height: 100%;\\n        padding: 0px 100%;\\n    }\\n}\\n@keyframes puff_portrait {\\n    0% {\\n        top: 100%;\\n        height: 0px;\\n        padding: 0px;\\n    }\\n\\t100% {\\n        top: 50%;\\n        height: 100%;\\n        padding: 0px 100%;\\n    }\\n}\\n@-webkit-keyframes puff_landscape {\\n\\t0% {\\n\\t\\ttop: 100%;\\n\\t\\twidth: 0px;\\n\\t\\tpadding-bottom: 0px;\\n\\t}\\n\\t100% {\\n\\t\\ttop: 50%;\\n\\t\\twidth: 100%;\\n\\t\\tpadding-bottom: 100%;\\n\\t}\\n}\\n@keyframes puff_landscape {\\n\\t0% {\\n\\t\\ttop: 100%;\\n\\t\\twidth: 0px;\\n\\t\\tpadding-bottom: 0px;\\n\\t}\\n\\t100% {\\n\\t\\ttop: 50%;\\n\\t\\twidth: 100%;\\n\\t\\tpadding-bottom: 100%;\\n\\t}\\n}\\n@-webkit-keyframes borderRadius {\\n    0% {\\n        -webkit-border-radius: 50%;\\n    }\\n\\t100% {\\n        -webkit-border-radius: 0px;\\n    }\\n}\\n@keyframes borderRadius {\\n    0% {\\n        -webkit-border-radius: 50%;\\n    }\\n\\t100% {\\n        border-radius: 0px;\\n    }\\n}\\n@-webkit-keyframes moveDown {\\n    0% {\\n   \\t    top: 50%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 100%;\\n    }\\n}\\n@keyframes moveDown {\\n    0% {\\n   \\t    top: 50%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 100%;\\n    }\\n}\\n@-webkit-keyframes moveUp {\\n    0% {\\n        background: #FFB300;\\n        top: 100%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 50%;\\n       background: #E0E0E0;\\n    }\\n}\\n@keyframes moveUp {\\n    0% {\\n        background: #FFB300;\\n        top: 100%;\\n    }\\n\\t50% {\\n\\t   top: 40%;\\n    }\\n    100% {\\n       top: 50%;\\n       background: #E0E0E0;\\n    }\\n}\\n@-webkit-keyframes materia_landscape {\\n    0% {\\n        background: #E0E0E0;\\n    }\\n    50% {\\n        -webkit-border-radius: 4px;\\n    }\\n    100% {\\n        width: 440px;\\n        height: 280px;\\n        background: #FFFFFF;\\n        -webkit-border-radius: 4px;\\n    }\\n}\\n@keyframes materia_landscape {\\n    0% {\\n        background: #E0E0E0;\\n    }\\n    50% {\\n        border-radius: 4px;\\n    }\\n    100% {\\n        width: 440px;\\n        height: 280px;\\n        background: #FFFFFF;\\n        border-radius: 4px;\\n    }\\n}\\n@-webkit-keyframes materia_portrait {\\n\\t0% {\\n\\t\\tbackground: #E0E0E0;\\n\\t}\\n\\t50% {\\n\\t\\t-webkit-border-radius: 4px;\\n\\t}\\n\\t100% {\\n\\t\\twidth: 280px;\\n\\t\\theight: 440px;\\n\\t\\tbackground: #FFFFFF;\\n\\t\\t-webkit-border-radius: 4px;\\n\\t}\\n}\\n@keyframes materia_portrait {\\n\\t0% {\\n\\t\\tbackground: #E0E0E0;\\n\\t}\\n\\t50% {\\n\\t\\tborder-radius: 4px;\\n\\t}\\n\\t100% {\\n\\t\\twidth: 280px;\\n\\t\\theight: 440px;\\n\\t\\tbackground: #FFFFFF;\\n\\t\\tborder-radius: 4px;\\n\\t}\\n}\\n@-webkit-keyframes moveIn {\\n    0% {\\n        margin-top: 50px;\\n        opacity: 0;\\n    }\\n\\t100% {\\n        opacity: 1;\\n        margin-top: -20px;\\n    }\\n}\\n@keyframes moveIn {\\n    0% {\\n        margin-top: 50px;\\n        opacity: 0;\\n    }\\n\\t100% {\\n        opacity: 1;\\n        margin-top: -20px;\\n    }\\n}\\n@-webkit-keyframes scaleIn {\\n    0% {\\n        -webkit-transform: scale(0);\\n    }\\n\\t100% {\\n        -webkit-transform: scale(1);\\n    }\\n}\\n@keyframes scaleIn {\\n    0% {\\n        transform: scale(0);\\n    }\\n\\t100% {\\n        transform: scale(1);\\n    }\\n}\\n@-webkit-keyframes ripple {\\n    0% {\\n        transform: scale3d(0, 0, 0);\\n    }\\n    50%, 100% {\\n        -webkit-transform: scale3d(1, 1, 1);\\n    }\\n    100% {\\n        opacity: 0;\\n    }\\n}\\n@keyframes ripple {\\n    0% {\\n        transform: scale3d(0, 0, 0);\\n    }\\n    50%, 100% {\\n        transform: scale3d(1, 1, 1);\\n    }\\n    100% {\\n        opacity: 0;\\n    }\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/about/about.component.css\n// module id = 113\n// module chunks = 0","import { Component, OnInit }    from '@angular/core';\nimport { NotificationsService } from 'angular2-notifications';\nimport { Subscription }         from 'rxjs/Subscription';\n\nimport { NotesTable,\n         DragulaService,\n         NotesTableService }    from '../../services';\nimport * as _                   from 'lodash';\n\n@Component({\n  selector: 'archive',\n  template: require('./archive.component.html')\n})\nexport class ArchiveComponent {\n\n  public order:any;\n  public notes: any;\n  public orderNotes: any;\n  public editNoteDraft: any;\n  public toEditNote: any;\n  public remindMe: any;\n  public notificationOptions: any;\n  public spinner: boolean = true;\n  public displayList: boolean = false;\n  public emptyHtmlMsg: boolean = false;\n\n  public notes_table = NOTES_TABLE;\n  public subscription: Subscription;\n  public date2MinDate: any;\n\n  constructor (\n      private _dragulaService: DragulaService,\n      private _notesService: NotesTableService,\n      private _notificationsService: NotificationsService\n    ) {\n    this.notes = [];\n    this.editNoteDraft = {};\n    this.toEditNote = null;\n    this.remindMe = {\n      date: null,\n      repeat: 'doesnotrepeat',\n      noteToSet: null\n    };\n    this.order = [];\n    this.orderNotes = [];\n    this.notificationOptions = {\n      timeOut: 2000,\n      lastOnBottom: true,\n      clickToClose: true,\n      showProgressBar: false,\n      pauseOnHover: true,\n      preventDuplicates: false,\n      theClass: \"notes-notifications archive\",\n      rtl: false\n    };\n    let yesterday = new Date();\n    yesterday.setDate(yesterday.getDate() - 1);\n    this.date2MinDate = yesterday;\n    _dragulaService.dropModel.subscribe((value) => {\n      this.onDropModel(value.slice(1));\n    });\n    this.displayList = localStorage.getItem(\"displayArchiveTypeList\") == 'true' ? true : false;\n  }\n\n  ngOnInit() {\n    this.subscription = this._notesService.notes_tables$.subscribe(\n      notes_table => this.notes_table = notes_table\n    );\n    this.refreshNotesTables();\n  }\n\n  private onDropModel(args) {\n    let [el, target, source] = args;\n    let order = [];\n    this.notes.forEach(row => {\n      order.push(row.doc._id);\n    });\n    localStorage.setItem('archiveOrder', JSON.stringify(order));\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  refreshNotesTables() {\n    this._notesService.getNotes('archiveNotes').then(\n      alldoc => {\n        this.notes_table = alldoc.rows;\n        let testNotes = [];\n        testNotes = this.notes_table;\n        if (localStorage.getItem('archiveOrder')) {\n          this.order = JSON.parse(localStorage.getItem('archiveOrder'));\n        }\n        this.notes = [];\n        this.order.forEach(el => {\n          testNotes.forEach(row => {\n            if (String(row.doc._id) === String(el)) {\n              this.notes.push(row);\n            }\n          });\n        });\n        if (_.isEmpty(this.notes)) {\n          this.emptyHtmlMsg = true;\n        } else {\n          this.emptyHtmlMsg = false;\n        }\n        this.spinner = false;\n      },\n      err => {\n        this.spinner = false;\n      }\n    );\n  }\n\n  deleteNote(note, noteRow) {\n    noteRow.className += this.displayList ? \" animated bounceOutRight\" : \" animated zoomOut\";\n    setTimeout(() => {\n      this._notesService.deleteNote('archiveNotes', note.doc)\n        .then(res => {\n          this._notificationsService.success(\"Done\", \"Note moved to Recycle Bin\");\n          this.deleteFromOrder(note);\n          this.refreshNotesTables();\n        }, err => {\n          console.log(\"Error\", err);\n        });\n      let binNote = note.doc;\n      delete binNote._rev;\n      this._notesService.saveNote('binNotes', binNote);\n    }, 150);\n  }\n\n  setNoteColor(color, note) {\n    if (note.doc.color != color) {\n      note.doc.color = color;\n      this._notesService.updateNote('archiveNotes', note.doc)\n        .then(res => {\n          this.refreshNotesTables();\n        });\n    }\n  }\n\n  setRemindMeNote(note) {\n    this.remindMe.noteToSet = note;\n  }\n\n  setReminderClick() {\n    if (this.remindMe.date) {\n      this.remindMe.noteToSet.doc.reminder = {\n        date: this.remindMe.date.toString(),\n        repeat: this.remindMe.repeat\n      };\n      this._notesService.updateNote('archiveNotes', this.remindMe.noteToSet.doc)\n        .then(res => {\n          this.remindMe.date = null;\n          this.remindMe.repeat = 'doesnotrepeat';\n          this.remindMe.noteToSet = null;\n          this._notesService.updateReminderTable('archiveNotes');\n          this.refreshNotesTables();\n          this._notificationsService.alert(\"Done\", \"Reminder set\");\n        }, err => {\n          this.editNoteDraft = {};\n        });\n    }\n  }\n\n  removeReminder(note) {\n    note.doc.reminder = null;\n    this._notesService.updateNote('archiveNotes', note.doc);\n    this._notesService.updateReminderTable('archiveNotes');\n    this.refreshNotesTables();\n  }\n\n  updateModalNote(note) {\n    note.doc.note = this.editNoteDraft.note;\n    note.doc.title = this.editNoteDraft.title;\n    this._notesService.updateNote('archiveNotes', note.doc)\n      .then(res => {\n        this.editNoteDraft = {};\n        this.refreshNotesTables();\n      }, err => {\n        this.editNoteDraft = {};\n      });\n  }\n\n  editModalNoteClick(note) {\n    this.toEditNote = note;\n    this.editNoteDraft.title = note.doc.title;\n    this.editNoteDraft.note = note.doc.note;\n  }\n\n  unArchive(note, noteRow) {\n    noteRow.className += this.displayList ? \" animated bounceOutLeft\" : \" animated flipOutY\";\n    setTimeout(() => {\n      this._notesService.deleteNote('archiveNotes', note.doc)\n        .then(res => {\n          this._notificationsService.success(\"Done\", \"Note unarchived\");\n          this.deleteFromOrder(note);\n          this.refreshNotesTables();\n        });\n      let archive_note = note;\n      delete archive_note.doc._rev;\n      archive_note.doc.restore = \"note\";\n      this._notesService.saveNote('notes', archive_note.doc)\n        .then(res => {\n          this.updateNotesOrder(archive_note.doc);\n        });\n    }, 100);\n  }\n\n  displayTypeChange() {\n    this.displayList = this.displayList ? false : true;\n    localStorage.setItem(\"displayArchiveTypeList\", String(this.displayList));\n  }\n\n  deleteFromOrder(note) {\n    let index = this.order.indexOf(this.order.filter(row => {\n      return String(row) === String(note.doc._id);\n    })[0]);\n    if (index !== -1) {\n      this.order.splice(index, 1);\n      localStorage.setItem('archiveOrder', JSON.stringify(this.order));\n    }\n  }\n\n  updateNotesOrder(draft) {\n    let newOrder: any = [];\n    if (localStorage.getItem('order')) {\n      newOrder = JSON.parse(localStorage.getItem('order'));\n      newOrder.unshift(draft._id);\n    } else {\n      newOrder.push(draft._id);\n    }\n    localStorage.setItem(\"order\", JSON.stringify(newOrder));\n  }\n}\n\nlet NOTES_TABLE: NotesTable[] = []\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/components/archive/archive.component.ts","module.exports = \"<div class=\\\"\\\">\\n  <div class=\\\"navbar navbar-info\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <div class=\\\"navbar-header\\\">\\n        <ul class=\\\"navbar-toggle\\\">\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\"> <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i></a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li role=\\\"separator\\\" class=\\\"divider\\\"></li>\\n              <li>\\n                <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n                  {{displayList ? 'Grid View' : 'List View'}}\\n                </a>\\n              </li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/About']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n        <a href=\\\"javascript:void(0)\\\" class=\\\"navbar-brand\\\" [routerLink]=\\\"['/notes']\\\">Preserver </a>\\n        <span class=\\\"navbar-brand\\\"><i class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></i>&nbsp;&nbsp;Archive</span>\\n      </div>\\n      <div id=\\\"navbar\\\" class=\\\"collapse navbar-collapse\\\">\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\n          <li>\\n            <a href=\\\"javascript:void(0)\\\" (click)=\\\"displayTypeChange()\\\">\\n              <i class=\\\"{{displayList ? 'fa fa-th' : 'fa fa-bars'}}\\\"></i>\\n            </a>\\n          </li>\\n          <li class=\\\"dropdown\\\">\\n            <a href=\\\"javascript:void(0)\\\" data-target=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"glyphicon glyphicon-option-vertical\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li class=\\\"dropdown-header\\\">Preferences</li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/notes']\\\">My Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/archive-notes']\\\">Archive Notes</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/recycle-bin']\\\">Recycle Bin</a></li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a href=\\\"javascript:void(0)\\\">Settings</a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" [routerLink]=\\\"['/About']\\\">About</a></li>\\n            </ul>\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n  </div>\\n  <spinner *ngIf=\\\"spinner\\\"></spinner>\\n  <div class=\\\"{{ displayList ? 'container note animate' : 'container note grid-container animate'}}\\\" [dragula]='\\\"another-bag\\\"' [dragulaModel]='notes'>\\n    <div *ngFor='let text of notes' class=\\\"{{ displayList ? 'panel panel-default ' + text.doc.color : 'panel panel-default grid-item ' + text.doc.color}}\\\" #noteRow [attr.id]=\\\"text.doc._id\\\">\\n      <div data-toggle=\\\"modal\\\" data-target=\\\"#note_edit_modal\\\" (click)=\\\"editModalNoteClick(text)\\\">\\n        <div class=\\\"panel-body my-note module line-clamp\\\">\\n          <p><strong>{{text.doc.title}}</strong></p>\\n          <p>{{text.doc.note}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"{{ 'panel-footer ' + text.doc.color}}\\\">\\n        <ul class=\\\"note-footer\\\">\\n          <li>\\n            <a data-toggle=\\\"modal\\\"\\n               data-target=\\\"#remind_me_modal\\\"\\n               (click)=\\\"setRemindMeNote(text)\\\"\\n               class=\\\"btn btn-link btn-raised\\\"\\n               title=\\\"Remind\\\">\\n               <i class=\\\"fa fa-bell\\\"></i>\\n            </a>\\n          </li>\\n          <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Unarchive\\\" (click)=\\\"unArchive(text, noteRow)\\\">\\n            <i class=\\\"fa fa-upload\\\"></i>\\n          </a></li>\\n          <li class=\\\"dropup\\\">\\n            <a data-target=\\\"#\\\" class=\\\"btn btn-link btn-raised dropup\\\"\\n              title=\\\"Color\\\" data-toggle=\\\"dropdown\\\">\\n              <i class=\\\"fa fa-th-large\\\"></i>\\n            </a>\\n            <ul class=\\\"dropdown-menu\\\">\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-default', text)\\\" class=\\\"btn btn-default btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary', text)\\\" class=\\\"btn btn-primary btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-success', text)\\\" class=\\\"btn btn-success btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-info', text)\\\" class=\\\"btn btn-info btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-warning', text)\\\" class=\\\"btn btn-warning btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-danger', text)\\\" class=\\\"btn btn-danger btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-darkgray', text)\\\" class=\\\"btn btn-darkgray btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n              <li><a href=\\\"javascript:void(0)\\\" (click)=\\\"setNoteColor('label-primary-old', text)\\\" class=\\\"btn btn-primary-old btn-fab-mini\\\"><i class=\\\"\\\"></i></a></li>\\n            </ul>\\n          </li>\\n          <li><a href=\\\"javascript:void(0)\\\" class=\\\"btn btn-link btn-raised\\\"\\n             title=\\\"Delete\\\" (click)=\\\"deleteNote(text, noteRow)\\\">\\n            <i class=\\\"fa fa-trash\\\"></i>\\n          </a></li>\\n        </ul>\\n      </div>\\n      <div class=\\\"{{text.doc.color + ' reminder-info'}}\\\" *ngIf=\\\"text.doc.reminder\\\">\\n        <i class=\\\"fa fa-clock-o\\\"></i> {{text.doc.reminder?.date}}<span class=\\\"pull-right\\\"><a href=\\\"javascript:void(0)\\\" (click)=\\\"removeReminder(text)\\\"><i class=\\\"fa fa-times-circle\\\"></i></a></span>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"note_edit_modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"{{'modal-content edit-saved ' + toEditNote?.doc?.color}}\\\">\\n        <div class=\\\"modal-header\\\">\\n          <h4 class=\\\"modal-title\\\">\\n            <div class=\\\"form-group label-floating\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control edit-saved-input\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"editNoteDraft.title\\\" [value]=\\\"toEditNote?.doc.title\\\" >\\n            </div>\\n          </h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <textarea class=\\\"form-control edit-saved-textera\\\" #editSavedTextarea modaleditorautosize placeholder=\\\"Write a note\\\" [(ngModel)]=\\\"editNoteDraft.note\\\" [value]=\\\"toEditNote?.doc.note\\\"></textarea>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"updateModalNote(toEditNote)\\\">Done</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal fade\\\" id=\\\"remind_me_modal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\">\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-hidden=\\\"true\\\">×</button>\\n          <h4 class=\\\"modal-title\\\">Remind Me</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <label><i class=\\\"fa fa-clock-o\\\"></i> Set date and time</label>\\n          <div class=\\\"form-group\\\">\\n              <input class=\\\"form-control\\\"\\n                    readonly=\\\"readonly\\\"\\n                    required\\n                    placeholder=\\\"Set your schedule here\\\"\\n                    [(ngModel)]=\\\"remindMe.date\\\"\\n                    [min-date]=\\\"date2MinDate\\\"\\n                    ngui-datetime-picker>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <select id=\\\"s1\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"remindMe.repeat\\\">\\n              <option value=\\\"doesnotrepeat\\\">Doesn't repeat</option>\\n              <option value=\\\"daily\\\">Daily</option>\\n              <option value=\\\"weekly\\\">Weekly</option>\\n              <option value=\\\"monthly\\\">Monthly</option>\\n              <option value=\\\"yearly\\\">Yearly</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"remindMe.date = null\\\">CANCEL</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\" data-dismiss=\\\"modal\\\" (click)=\\\"setReminderClick()\\\">SET</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <simple-notifications [options]=\\\"notificationOptions\\\"></simple-notifications>\\n  <div class=\\\"container empty-notes-container\\\" *ngIf=\\\"emptyHtmlMsg\\\">\\n    <div class=\\\"empty-notes-icon empty-archive\\\"></div>\\n    <div class=\\\"empty-notes\\\">Your archived notes appear here</div>\\n  </div>\\n</div>\\n\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/archive/archive.component.html\n// module id = 115\n// module chunks = 0","import { Component, AfterViewInit } from '@angular/core';\nimport { NotesTableService }        from './services';\n\n@Component({\n  selector: 'my-app',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent implements AfterViewInit {\n\n  constructor(private _notesService: NotesTableService,) {\n    this._notesService.updateReminderTable('notes');\n    this._notesService.updateReminderTable('archiveNotes');\n    this._notesService.reminderTickStart();\n  }\n\n  ngAfterViewInit() {\n    $.material.init();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/app.component.ts","import { Directive,\n         Input,\n         ElementRef,\n         OnInit,\n         OnChanges,\n         SimpleChange }   from '@angular/core';\nimport * as dragula       from 'dragula';\n\nimport { DragulaService } from '../services';\n\n@Directive({\n  selector: '[dragula]'\n})\nexport class Dragula implements OnInit, OnChanges {\n  @Input('dragula') bag: string;\n  @Input() dragulaModel: any;\n  private container: any;\n  private drake: any;\n\n  constructor(private el: ElementRef, private dragulaService: DragulaService) {\n    this.container = el.nativeElement;\n  }\n\n  ngOnInit() {\n    let bag = this.dragulaService.find(this.bag);\n    let checkModel = () => {\n      if (this.dragulaModel) {\n        if (this.drake.models) {\n          this.drake.models.push(this.dragulaModel);\n        } else {\n          this.drake.models = [this.dragulaModel];\n        }\n      }\n    };\n    if (bag) {\n      this.drake = bag.drake;\n      checkModel();\n      this.drake.containers.push(this.container);\n    } else {\n      this.drake = dragula({\n        containers: [this.container]\n      });\n      checkModel();\n      this.dragulaService.add(this.bag, this.drake);\n    }\n  }\n\n  ngOnChanges(changes: {[propName: string]: SimpleChange}) {\n    if (changes && changes['dragulaModel']) {\n      if (this.drake) {\n        if (this.drake.models) {\n          let modelIndex = this.drake.models.indexOf(changes['dragulaModel'].previousValue);\n          this.drake.models.splice(modelIndex, 1, changes['dragulaModel'].currentValue);\n        } else {\n          this.drake.models = [changes['dragulaModel'].currentValue];\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/directives/dragula.ts","import { ElementRef, HostListener, Directive} from '@angular/core';\n\n@Directive({\n    selector: 'textarea[autosize]'\n})\n\nexport class FluidHeightDirective {\n @HostListener('input',['$event.target'])\n  onInput(textArea: HTMLTextAreaElement): void {\n    this.adjust();\n  }\n  constructor(public element: ElementRef){\n  }\n  ngOnInit(): void{\n    this.adjust();\n  }\n  adjust(): void{\n    this.element.nativeElement.style.overflow = 'hidden';\n    this.element.nativeElement.style.height = 'auto';\n    this.element.nativeElement.style.height = this.element.nativeElement.scrollHeight + \"px\";\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-template-loader!./src/app/directives/fluid-height.ts"],"sourceRoot":""}