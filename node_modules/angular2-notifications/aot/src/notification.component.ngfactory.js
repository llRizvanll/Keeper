/**
 * @fileoverview This file is generated by the Angular 2 template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var import0 = require('../../src/notification.component');
var import1 = require('@angular/core/src/change_detection/change_detection_util');
var import2 = require('@angular/core/src/linker/view');
var import3 = require('@angular/core/src/linker/view_utils');
var import5 = require('@angular/core/src/metadata/view');
var import6 = require('@angular/core/src/linker/view_type');
var import7 = require('@angular/core/src/change_detection/constants');
var import8 = require('@angular/core/src/linker/component_factory');
var import9 = require('../../src/notifications.service');
var import10 = require('@angular/platform-browser/src/security/dom_sanitization_service');
var import11 = require('@angular/core/src/zone/ng_zone');
var import12 = require('@angular/core/src/animation/animation_transition');
var import13 = require('@angular/core/src/animation/animation_sequence_player');
var import14 = require('@angular/core/src/animation/animation_styles');
var import15 = require('@angular/core/src/animation/animation_style_util');
var import16 = require('@angular/core/src/animation/animation_keyframe');
var import17 = require('@angular/core/src/animation/animation_player');
var import18 = require('../node_modules/@angular/common/src/directives/ng_class.ngfactory');
var import19 = require('@angular/core/src/linker/view_container');
var import20 = require('../node_modules/@angular/common/src/directives/ng_if.ngfactory');
var import21 = require('../../src/max.pipe');
var import22 = require('@angular/core/src/change_detection/differs/iterable_differs');
var import23 = require('@angular/core/src/change_detection/differs/keyvalue_differs');
var import24 = require('@angular/core/src/linker/element_ref');
var import25 = require('@angular/core/src/linker/template_ref');
var import26 = require('@angular/common/src/directives/ng_if');
var import27 = require('@angular/common/src/directives/ng_class');
var import28 = require('@angular/core/src/security');
var import29 = require('../node_modules/@angular/common/src/directives/ng_style.ngfactory');
var import30 = require('@angular/common/src/directives/ng_style');
var Wrapper_NotificationComponent = (function () {
    function Wrapper_NotificationComponent(p0, p1, p2) {
        this._changed = false;
        this.context = new import0.NotificationComponent(p0, p1, p2);
        this._expr_0 = import1.UNINITIALIZED;
        this._expr_1 = import1.UNINITIALIZED;
        this._expr_2 = import1.UNINITIALIZED;
        this._expr_3 = import1.UNINITIALIZED;
        this._expr_4 = import1.UNINITIALIZED;
        this._expr_5 = import1.UNINITIALIZED;
        this._expr_6 = import1.UNINITIALIZED;
        this._expr_7 = import1.UNINITIALIZED;
        this._expr_8 = import1.UNINITIALIZED;
        this._expr_9 = import1.UNINITIALIZED;
    }
    Wrapper_NotificationComponent.prototype.ngOnDetach = function (view, componentView, el) {
    };
    Wrapper_NotificationComponent.prototype.ngOnDestroy = function () {
        this.context.ngOnDestroy();
    };
    Wrapper_NotificationComponent.prototype.check_timeOut = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_0, currValue))) {
            this._changed = true;
            this.context.timeOut = currValue;
            this._expr_0 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_showProgressBar = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_1, currValue))) {
            this._changed = true;
            this.context.showProgressBar = currValue;
            this._expr_1 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_pauseOnHover = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_2, currValue))) {
            this._changed = true;
            this.context.pauseOnHover = currValue;
            this._expr_2 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_clickToClose = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_3, currValue))) {
            this._changed = true;
            this.context.clickToClose = currValue;
            this._expr_3 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_maxLength = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_4, currValue))) {
            this._changed = true;
            this.context.maxLength = currValue;
            this._expr_4 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_theClass = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_5, currValue))) {
            this._changed = true;
            this.context.theClass = currValue;
            this._expr_5 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_rtl = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_6, currValue))) {
            this._changed = true;
            this.context.rtl = currValue;
            this._expr_6 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_animate = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_7, currValue))) {
            this._changed = true;
            this.context.animate = currValue;
            this._expr_7 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_position = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_8, currValue))) {
            this._changed = true;
            this.context.position = currValue;
            this._expr_8 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.check_item = function (currValue, throwOnChange, forceUpdate) {
        if ((forceUpdate || import3.checkBinding(throwOnChange, this._expr_9, currValue))) {
            this._changed = true;
            this.context.item = currValue;
            this._expr_9 = currValue;
        }
    };
    Wrapper_NotificationComponent.prototype.ngDoCheck = function (view, el, throwOnChange) {
        var changed = this._changed;
        this._changed = false;
        if (!throwOnChange) {
            if ((view.numberOfChecks === 0)) {
                this.context.ngOnInit();
            }
        }
        return changed;
    };
    Wrapper_NotificationComponent.prototype.checkHost = function (view, componentView, el, throwOnChange) {
    };
    Wrapper_NotificationComponent.prototype.handleEvent = function (eventName, $event) {
        var result = true;
        return result;
    };
    Wrapper_NotificationComponent.prototype.subscribe = function (view, _eventHandler) {
        this._eventHandler = _eventHandler;
    };
    return Wrapper_NotificationComponent;
}());
exports.Wrapper_NotificationComponent = Wrapper_NotificationComponent;
var renderType_NotificationComponent_Host = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, [], {});
var View_NotificationComponent_Host0 = (function (_super) {
    __extends(View_NotificationComponent_Host0, _super);
    function View_NotificationComponent_Host0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NotificationComponent_Host0, renderType_NotificationComponent_Host, import6.ViewType.HOST, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
    }
    View_NotificationComponent_Host0.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.selectOrCreateRenderHostElement(this.renderer, 'simple-notification', import3.EMPTY_INLINE_ARRAY, rootSelector, null);
        this.compView_0 = new View_NotificationComponent0(this.viewUtils, this, 0, this._el_0);
        this._NotificationComponent_0_3 = new Wrapper_NotificationComponent(this.injectorGet(import9.NotificationsService, this.parentIndex), this.injectorGet(import10.DomSanitizer, this.parentIndex), this.injectorGet(import11.NgZone, this.parentIndex));
        this.compView_0.create(this._NotificationComponent_0_3.context);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return new import8.ComponentRef_(0, this, this._el_0, this._NotificationComponent_0_3.context);
    };
    View_NotificationComponent_Host0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import0.NotificationComponent) && (0 === requestNodeIndex))) {
            return this._NotificationComponent_0_3.context;
        }
        return notFoundResult;
    };
    View_NotificationComponent_Host0.prototype.detectChangesInternal = function (throwOnChange) {
        this._NotificationComponent_0_3.ngDoCheck(this, this._el_0, throwOnChange);
        this.compView_0.internalDetectChanges(throwOnChange);
    };
    View_NotificationComponent_Host0.prototype.destroyInternal = function () {
        this.compView_0.destroy();
        this._NotificationComponent_0_3.ngOnDestroy();
    };
    View_NotificationComponent_Host0.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NotificationComponent_Host0;
}(import2.AppView));
exports.NotificationComponentNgFactory = new import8.ComponentFactory('simple-notification', View_NotificationComponent_Host0, import0.NotificationComponent);
var styles_NotificationComponent = ['\n        .simple-notification {\n            width: 100%;\n            padding: 10px 20px;\n            box-sizing: border-box;\n            position: relative;\n            float: left;\n            margin-bottom: 10px;\n            color: #fff;\n            cursor: pointer;\n            transition: all 0.5s;\n        }\n\n        .simple-notification .sn-title {\n            margin: 0;\n            padding: 0 50px 0 0;\n            line-height: 30px;\n            font-size: 20px;\n        }\n\n        .simple-notification .sn-content {\n            margin: 0;\n            font-size: 16px;\n            padding: 0 50px 0 0;\n            line-height: 20px;\n        }\n\n        .simple-notification svg {\n            position: absolute;\n            box-sizing: border-box;\n            top: 0;\n            right: 0;\n            width: 70px;\n            height: 70px;\n            padding: 10px;\n            fill: #fff;\n        }\n\n        .simple-notification.rtl-mode {\n            direction: rtl;\n        }\n\n        .simple-notification.rtl-mode .sn-content {\n            padding: 0 0 0 50px;\n        }\n\n        .simple-notification.rtl-mode svg {\n            left: 0;\n            right: auto;\n        }\n\n        .simple-notification.error { background: #F44336; }\n        .simple-notification.success { background: #8BC34A; }\n        .simple-notification.alert { background: #ffdb5b; }\n        .simple-notification.info { background: #03A9F4; }\n\n        .simple-notification .sn-progress-loader {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 5px;\n        }\n\n        .simple-notification .sn-progress-loader span {\n            float: left;\n            height: 100%;\n        }\n\n        .simple-notification.success .sn-progress-loader span { background: #689F38; }\n        .simple-notification.error .sn-progress-loader span { background: #D32F2F; }\n        .simple-notification.alert .sn-progress-loader span { background: #edc242; }\n        .simple-notification.info .sn-progress-loader span { background: #0288D1; }\n        .simple-notification.bare .sn-progress-loader span { background: #ccc; }\n    '];
var NotificationComponent_enterLeave_states = {
    fromRight: {
        opacity: '1',
        transform: 'translateX(0)'
    },
    fromRightOut: {
        opacity: '0',
        transform: 'translateX(-5%)'
    },
    fromLeft: {
        opacity: '1',
        transform: 'translateX(0)'
    },
    fromLeftOut: {
        opacity: '0',
        transform: 'translateX(5%)'
    },
    scale: {
        opacity: '1',
        transform: 'scale(1)'
    },
    scaleOut: {
        opacity: '0',
        transform: 'scale(0)'
    },
    rotate: {
        opacity: '1',
        transform: 'rotate(0deg)'
    },
    rotateOut: {
        opacity: '0',
        transform: 'rotate(-5deg)'
    },
    '*': {}
};
function NotificationComponent_enterLeave_factory(view, element, currentState, nextState) {
    var previousPlayers = view.animationContext.getAnimationPlayers(element, ((nextState == 'void') ? null : 'enterLeave'));
    var collectedStyles = {};
    var player = null;
    var totalTime = 0;
    var defaultStateStyles = NotificationComponent_enterLeave_states['*'];
    var startStateStyles = NotificationComponent_enterLeave_states[currentState];
    if ((startStateStyles == null)) {
        (startStateStyles = defaultStateStyles);
    }
    var endStateStyles = NotificationComponent_enterLeave_states[nextState];
    if ((endStateStyles == null)) {
        (endStateStyles = defaultStateStyles);
    }
    if (((player == null) && (true && (nextState == 'fromRight')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateX(5%)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if (((player == null) && ((currentState == 'fromRight') && (nextState == 'fromRightOut')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '1',
                    transform: 'translateX(0)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 300, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 300;
    }
    if (((player == null) && (true && (nextState == 'fromLeft')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'translateX(-5%)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if (((player == null) && ((currentState == 'fromLeft') && (nextState == 'fromLeftOut')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '1',
                    transform: 'translateX(0)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 300, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 300;
    }
    if (((player == null) && (true && (nextState == 'scale')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'scale(0)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if (((player == null) && ((currentState == 'scale') && (nextState == 'scaleOut')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '1',
                    transform: 'scale(1)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if (((player == null) && (true && (nextState == 'rotate')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '0',
                    transform: 'rotate(5deg)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if (((player == null) && ((currentState == 'rotate') && (nextState == 'rotateOut')))) {
        player = new import13.AnimationSequencePlayer([view.renderer.animate(element, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [
                startStateStyles,
                {
                    opacity: '1',
                    transform: 'rotate(0deg)'
                }
            ])), import15.balanceAnimationKeyframes(collectedStyles, endStateStyles, [
                new import16.AnimationKeyframe(0, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}]))),
                new import16.AnimationKeyframe(1, new import14.AnimationStyles(import15.collectAndResolveStyles(collectedStyles, [{}])))
            ]), 400, 0, 'ease-in-out', previousPlayers)]);
        totalTime = 400;
    }
    if ((player == null)) {
        (player = new import17.NoOpAnimationPlayer());
    }
    player.onDone(function () {
        player.destroy();
        import15.renderStyles(element, view.renderer, import15.prepareFinalAnimationStyles(startStateStyles, endStateStyles));
    });
    new import13.AnimationSequencePlayer(previousPlayers).destroy();
    import15.renderStyles(element, view.renderer, import15.clearStyles(startStateStyles));
    view.animationContext.queueAnimation(element, 'enterLeave', player);
    return new import12.AnimationTransition(player, currentState, nextState, totalTime);
}
var renderType_NotificationComponent = import3.createRenderComponentType('', 0, import5.ViewEncapsulation.None, styles_NotificationComponent, { enterLeave: NotificationComponent_enterLeave_factory });
var View_NotificationComponent0 = (function (_super) {
    __extends(View_NotificationComponent0, _super);
    function View_NotificationComponent0(viewUtils, parentView, parentIndex, parentElement) {
        _super.call(this, View_NotificationComponent0, renderType_NotificationComponent, import6.ViewType.COMPONENT, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways);
        this._expr_20 = import1.UNINITIALIZED;
        this._map_21 = import3.pureProxy6(function (p0, p1, p2, p3, p4, p5) {
            return {
                alert: p0,
                error: p1,
                success: p2,
                info: p3,
                bare: p4,
                'rtl-mode': p5
            };
        });
    }
    View_NotificationComponent0.prototype.createInternal = function (rootSelector) {
        var parentRenderNode = this.renderer.createViewRoot(this.parentElement);
        this._text_0 = this.renderer.createText(parentRenderNode, '\n        ', null);
        this._el_1 = import3.createRenderElement(this.renderer, parentRenderNode, 'div', new import3.InlineArray2(2, 'class', 'simple-notification'), null);
        this._NgClass_1_3 = new import18.Wrapper_NgClass(this.parentView.injectorGet(import22.IterableDiffers, this.parentIndex), this.parentView.injectorGet(import23.KeyValueDiffers, this.parentIndex), new import24.ElementRef(this._el_1), this.renderer);
        this._text_2 = this.renderer.createText(this._el_1, '\n\n            ', null);
        this._anchor_3 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_3 = new import19.ViewContainer(3, 1, this, this._anchor_3);
        this._TemplateRef_3_5 = new import25.TemplateRef_(this, 3, this._anchor_3);
        this._NgIf_3_6 = new import20.Wrapper_NgIf(this._vc_3.vcRef, this._TemplateRef_3_5);
        this._text_4 = this.renderer.createText(this._el_1, '\n            ', null);
        this._anchor_5 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_5 = new import19.ViewContainer(5, 1, this, this._anchor_5);
        this._TemplateRef_5_5 = new import25.TemplateRef_(this, 5, this._anchor_5);
        this._NgIf_5_6 = new import20.Wrapper_NgIf(this._vc_5.vcRef, this._TemplateRef_5_5);
        this._text_6 = this.renderer.createText(this._el_1, '\n\n            ', null);
        this._anchor_7 = this.renderer.createTemplateAnchor(this._el_1, null);
        this._vc_7 = new import19.ViewContainer(7, 1, this, this._anchor_7);
        this._TemplateRef_7_5 = new import25.TemplateRef_(this, 7, this._anchor_7);
        this._NgIf_7_6 = new import20.Wrapper_NgIf(this._vc_7.vcRef, this._TemplateRef_7_5);
        this._text_8 = this.renderer.createText(this._el_1, '\n\n        ', null);
        this._text_9 = this.renderer.createText(parentRenderNode, '\n    ', null);
        var disposable_0 = import3.subscribeToRenderElement(this, this._el_1, new import3.InlineArray8(6, 'click', null, 'mouseenter', null, 'mouseleave', null), this.eventHandler(this.handleEvent_1));
        this._pipe_max_0 = new import21.MaxPipe();
        this.init(null, (this.renderer.directRenderer ? null : [
            this._text_0,
            this._el_1,
            this._text_2,
            this._anchor_3,
            this._text_4,
            this._anchor_5,
            this._text_6,
            this._anchor_7,
            this._text_8,
            this._text_9
        ]), [disposable_0]);
        return null;
    };
    View_NotificationComponent0.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import25.TemplateRef) && (3 === requestNodeIndex))) {
            return this._TemplateRef_3_5;
        }
        if (((token === import26.NgIf) && (3 === requestNodeIndex))) {
            return this._NgIf_3_6.context;
        }
        if (((token === import25.TemplateRef) && (5 === requestNodeIndex))) {
            return this._TemplateRef_5_5;
        }
        if (((token === import26.NgIf) && (5 === requestNodeIndex))) {
            return this._NgIf_5_6.context;
        }
        if (((token === import25.TemplateRef) && (7 === requestNodeIndex))) {
            return this._TemplateRef_7_5;
        }
        if (((token === import26.NgIf) && (7 === requestNodeIndex))) {
            return this._NgIf_7_6.context;
        }
        if (((token === import27.NgClass) && ((1 <= requestNodeIndex) && (requestNodeIndex <= 8)))) {
            return this._NgClass_1_3.context;
        }
        return notFoundResult;
    };
    View_NotificationComponent0.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_20 = this.context.item.state;
        if (import3.checkBinding(throwOnChange, this._expr_20, currVal_20)) {
            var animationTransition_enterLeave = this.componentType.animations['enterLeave'](this, this._el_1, ((this._expr_20 == import1.UNINITIALIZED) ? 'void' : this._expr_20), ((currVal_20 == import1.UNINITIALIZED) ? 'void' : currVal_20));
            this._expr_20 = currVal_20;
        }
        var currVal_1_0_0 = this.context.theClass;
        this._NgClass_1_3.check_klass(currVal_1_0_0, throwOnChange, false);
        var currVal_1_0_1 = this._map_21((this.context.item.type === 'alert'), (this.context.item.type === 'error'), (this.context.item.type === 'success'), (this.context.item.type === 'info'), (this.context.item.type === 'bare'), this.context.rtl);
        this._NgClass_1_3.check_ngClass(currVal_1_0_1, throwOnChange, false);
        this._NgClass_1_3.ngDoCheck(this, this._el_1, throwOnChange);
        var currVal_3_0_0 = !this.context.item.html;
        this._NgIf_3_6.check_ngIf(currVal_3_0_0, throwOnChange, false);
        this._NgIf_3_6.ngDoCheck(this, this._anchor_3, throwOnChange);
        var currVal_5_0_0 = this.context.item.html;
        this._NgIf_5_6.check_ngIf(currVal_5_0_0, throwOnChange, false);
        this._NgIf_5_6.ngDoCheck(this, this._anchor_5, throwOnChange);
        var currVal_7_0_0 = this.context.showProgressBar;
        this._NgIf_7_6.check_ngIf(currVal_7_0_0, throwOnChange, false);
        this._NgIf_7_6.ngDoCheck(this, this._anchor_7, throwOnChange);
        this._vc_3.detectChangesInNestedViews(throwOnChange);
        this._vc_5.detectChangesInNestedViews(throwOnChange);
        this._vc_7.detectChangesInNestedViews(throwOnChange);
    };
    View_NotificationComponent0.prototype.destroyInternal = function () {
        this._vc_3.destroyNestedViews();
        this._vc_5.destroyNestedViews();
        this._vc_7.destroyNestedViews();
    };
    View_NotificationComponent0.prototype.detachInternal = function () {
        var animationTransition_enterLeave = this.componentType.animations['enterLeave'](this, this._el_1, this._expr_20, 'void');
    };
    View_NotificationComponent0.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 3)) {
            return new View_NotificationComponent1(this.viewUtils, this, 3, this._anchor_3, this._vc_3);
        }
        if ((nodeIndex == 5)) {
            return new View_NotificationComponent3(this.viewUtils, this, 5, this._anchor_5, this._vc_5);
        }
        if ((nodeIndex == 7)) {
            return new View_NotificationComponent4(this.viewUtils, this, 7, this._anchor_7, this._vc_7);
        }
        return null;
    };
    View_NotificationComponent0.prototype.handleEvent_1 = function (eventName, $event) {
        this.markPathToRootAsCheckOnce();
        var result = true;
        if ((eventName == 'click')) {
            var pd_sub_0 = (this.context.onClick($event) !== false);
            result = (pd_sub_0 && result);
        }
        if ((eventName == 'mouseenter')) {
            var pd_sub_1 = (this.context.onEnter() !== false);
            result = (pd_sub_1 && result);
        }
        if ((eventName == 'mouseleave')) {
            var pd_sub_2 = (this.context.onLeave() !== false);
            result = (pd_sub_2 && result);
        }
        return result;
    };
    return View_NotificationComponent0;
}(import2.AppView));
exports.View_NotificationComponent0 = View_NotificationComponent0;
var View_NotificationComponent1 = (function (_super) {
    __extends(View_NotificationComponent1, _super);
    function View_NotificationComponent1(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NotificationComponent1, renderType_NotificationComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_13 = import1.UNINITIALIZED;
        this._expr_14 = import1.UNINITIALIZED;
    }
    View_NotificationComponent1.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this._text_1 = this.renderer.createText(this._el_0, '\n                ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'sn-title'), null);
        this._text_3 = this.renderer.createText(this._el_2, '', null);
        this._text_4 = this.renderer.createText(this._el_0, '\n                ', null);
        this._el_5 = import3.createRenderElement(this.renderer, this._el_0, 'div', new import3.InlineArray2(2, 'class', 'sn-content'), null);
        this._text_6 = this.renderer.createText(this._el_5, '', null);
        this._text_7 = this.renderer.createText(this._el_0, '\n\n                ', null);
        this._anchor_8 = this.renderer.createTemplateAnchor(this._el_0, null);
        this._vc_8 = new import19.ViewContainer(8, 0, this, this._anchor_8);
        this._TemplateRef_8_5 = new import25.TemplateRef_(this, 8, this._anchor_8);
        this._NgIf_8_6 = new import20.Wrapper_NgIf(this._vc_8.vcRef, this._TemplateRef_8_5);
        this._text_9 = this.renderer.createText(this._el_0, '\n            ', null);
        this._pipe_max_0_0 = import3.pureProxy2(this.parentView._pipe_max_0.transform.bind(this.parentView._pipe_max_0));
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3,
            this._text_4,
            this._el_5,
            this._text_6,
            this._text_7,
            this._anchor_8,
            this._text_9
        ]), null);
        return null;
    };
    View_NotificationComponent1.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import25.TemplateRef) && (8 === requestNodeIndex))) {
            return this._TemplateRef_8_5;
        }
        if (((token === import26.NgIf) && (8 === requestNodeIndex))) {
            return this._NgIf_8_6.context;
        }
        return notFoundResult;
    };
    View_NotificationComponent1.prototype.detectChangesInternal = function (throwOnChange) {
        var valUnwrapper = new import1.ValueUnwrapper();
        var currVal_8_0_0 = (this.parentView.context.item.type !== 'bare');
        this._NgIf_8_6.check_ngIf(currVal_8_0_0, throwOnChange, false);
        this._NgIf_8_6.ngDoCheck(this, this._anchor_8, throwOnChange);
        this._vc_8.detectChangesInNestedViews(throwOnChange);
        var currVal_13 = import3.inlineInterpolate(1, '', this.parentView.context.item.title, '');
        if (import3.checkBinding(throwOnChange, this._expr_13, currVal_13)) {
            this.renderer.setText(this._text_3, currVal_13);
            this._expr_13 = currVal_13;
        }
        valUnwrapper.reset();
        var currVal_14 = import3.inlineInterpolate(1, '', valUnwrapper.unwrap(import3.castByValue(this._pipe_max_0_0, this.parentView._pipe_max_0.transform)(this.parentView.context.item.content, this.parentView.context.maxLength)), '');
        if ((valUnwrapper.hasWrappedValue || import3.checkBinding(throwOnChange, this._expr_14, currVal_14))) {
            this.renderer.setText(this._text_6, currVal_14);
            this._expr_14 = currVal_14;
        }
    };
    View_NotificationComponent1.prototype.destroyInternal = function () {
        this._vc_8.destroyNestedViews();
    };
    View_NotificationComponent1.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    View_NotificationComponent1.prototype.createEmbeddedViewInternal = function (nodeIndex) {
        if ((nodeIndex == 8)) {
            return new View_NotificationComponent2(this.viewUtils, this, 8, this._anchor_8, this._vc_8);
        }
        return null;
    };
    return View_NotificationComponent1;
}(import2.AppView));
var View_NotificationComponent2 = (function (_super) {
    __extends(View_NotificationComponent2, _super);
    function View_NotificationComponent2(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NotificationComponent2, renderType_NotificationComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import1.UNINITIALIZED;
    }
    View_NotificationComponent2.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_NotificationComponent2.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.parentView.parentView.context.safeSvg;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import28.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
    };
    View_NotificationComponent2.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NotificationComponent2;
}(import2.AppView));
var View_NotificationComponent3 = (function (_super) {
    __extends(View_NotificationComponent3, _super);
    function View_NotificationComponent3(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NotificationComponent3, renderType_NotificationComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._expr_1 = import1.UNINITIALIZED;
    }
    View_NotificationComponent3.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', import3.EMPTY_INLINE_ARRAY, null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [this._el_0]), null);
        return null;
    };
    View_NotificationComponent3.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_1 = this.parentView.context.item.html;
        if (import3.checkBinding(throwOnChange, this._expr_1, currVal_1)) {
            this.renderer.setElementProperty(this._el_0, 'innerHTML', this.viewUtils.sanitizer.sanitize(import28.SecurityContext.HTML, currVal_1));
            this._expr_1 = currVal_1;
        }
    };
    View_NotificationComponent3.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NotificationComponent3;
}(import2.AppView));
var View_NotificationComponent4 = (function (_super) {
    __extends(View_NotificationComponent4, _super);
    function View_NotificationComponent4(viewUtils, parentView, parentIndex, parentElement, declaredViewContainer) {
        _super.call(this, View_NotificationComponent4, renderType_NotificationComponent, import6.ViewType.EMBEDDED, viewUtils, parentView, parentIndex, parentElement, import7.ChangeDetectorStatus.CheckAlways, declaredViewContainer);
        this._map_5 = import3.pureProxy1(function (p0) {
            return { width: p0 };
        });
    }
    View_NotificationComponent4.prototype.createInternal = function (rootSelector) {
        this._el_0 = import3.createRenderElement(this.renderer, null, 'div', new import3.InlineArray2(2, 'class', 'sn-progress-loader'), null);
        this._text_1 = this.renderer.createText(this._el_0, '\n                ', null);
        this._el_2 = import3.createRenderElement(this.renderer, this._el_0, 'span', import3.EMPTY_INLINE_ARRAY, null);
        this._NgStyle_2_3 = new import29.Wrapper_NgStyle(this.parentView.parentView.injectorGet(import23.KeyValueDiffers, this.parentView.parentIndex), new import24.ElementRef(this._el_2), this.renderer);
        this._text_3 = this.renderer.createText(this._el_0, '\n            ', null);
        this.init(this._el_0, (this.renderer.directRenderer ? null : [
            this._el_0,
            this._text_1,
            this._el_2,
            this._text_3
        ]), null);
        return null;
    };
    View_NotificationComponent4.prototype.injectorGetInternal = function (token, requestNodeIndex, notFoundResult) {
        if (((token === import30.NgStyle) && (2 === requestNodeIndex))) {
            return this._NgStyle_2_3.context;
        }
        return notFoundResult;
    };
    View_NotificationComponent4.prototype.detectChangesInternal = function (throwOnChange) {
        var currVal_2_0_0 = this._map_5((this.parentView.context.progressWidth + '%'));
        this._NgStyle_2_3.check_ngStyle(currVal_2_0_0, throwOnChange, false);
        this._NgStyle_2_3.ngDoCheck(this, this._el_2, throwOnChange);
    };
    View_NotificationComponent4.prototype.visitRootNodesInternal = function (cb, ctx) {
        cb(this._el_0, ctx);
    };
    return View_NotificationComponent4;
}(import2.AppView));
